@model Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Models.DynamicContentListViewModel

@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.RelatedData
@using System;
@using Newtonsoft.Json;
@using Telerik.Sitefinity.DynamicModules;
@using Telerik.Sitefinity.DynamicModules.Model;

@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Security.Model;
@using Telerik.Sitefinity.Taxonomies;
@using Telerik.Sitefinity.Taxonomies.Model;
@using Telerik.Sitefinity.Model;
@using Telerik.OpenAccess;
@using Telerik.Sitefinity.Web;

@*Needed for custom thumbnail*@
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Modules.Libraries;


<section class="g-section latest-news bg-grey">
    <div class="container">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="pb-30">Latest Articles</h2>
            </div>
        </div>
        <!-- .row/ -->
        <div class="md-row hide-mobile">
            @foreach (var item in Model.Items)
            {
                if (item.Fields.articles != null)
                {
                    var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);
                    List<string> filterValues = new List<string>();
                    var articleIds = item.Fields.articles;
                    foreach (var taxonItem in articleIds)
                    {
                        Guid articleID = new Guid(taxonItem.ToString());
                        var taxonManager = TaxonomyManager.GetManager();
                        var taxon = taxonManager.GetTaxa<HierarchicalTaxon>().Where(t => t.Id == articleID).ToList().FirstOrDefault();
                        filterValues.Add(taxon.Title);
                    }
                    if (item.Fields.HeaderImage != null)
                    {
                        var imageUrl = MediaContentExtensions.ResolveThumbnailUrl(item.Fields.HeaderImage.DataItem, "thumbartic");
                    }

                    <div class="news-list col-12 col-sm-6 col-md-4">
                        <div class="bg-image-wrap"><img class="bg-image" alt="@item.Fields.HeaderImage.Fields.Title" src="@MediaContentExtensions.ResolveThumbnailUrl(item.Fields.HeaderImage.DataItem, " thumbartic")" /></div>
                        <div class="news-date"> @item.GetDateTime("PublicationDate", "MMM d, yyyy")</div>
                        <p class="news-desc">@item.Fields.Title</p>

                        <div class="list-footer">
                            Category :<a href="" class="btn-link">@(string.Join(", ", filterValues))</a>
                        </div>
                        <a href="@navigateUrl" class="btn btn-link">Read more</a>
                    </div>
                }
            }
        </div>
        <!-- .row/ -->



    </div>
</section>
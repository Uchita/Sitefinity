@using JXTNext.Sitefinity.Widgets.Job.Mvc.Models
@model JobDetailsViewModel
@using Telerik.Sitefinity.Frontend.SocialShare.SocialShareHelpers

@using System.Collections.Specialized;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Web;

@using JXTNext.Sitefinity.Common.Helpers

@{
    var isUserLoggedIn = JXTNext.Sitefinity.Common.Helpers.SitefinityHelper.IsUserLoggedIn();
    var isMemberUser = false;
    if (isUserLoggedIn)
    {
        isMemberUser = JXTNext.Sitefinity.Common.Helpers.SitefinityHelper.IsUserLoggedIn("Member");
    }

    TempData["JobTitleTemp"] = Model.JobDetails.Title;

}

@if (Model != null)
{

    List<string>
    classificationsDisplay = new List<string>
    ();
    foreach (var item in @Model.Classifications.Keys)
    {
        string hrefLink = "/jobs/advancedsearch/search-result" + string.Format("{0}?Filters[0].rootId={1}&Filters[0].values={2}", @ViewBag.JobResultsPageUrl, @Model.ClassificationsRootName, @item.ToString());

        classificationsDisplay.Add(@"<a href="" " + hrefLink + @" "" title="" " + Model.Classifications[item] + @" "">" + Model.Classifications[item] + @"</a>");
    }


    <div class="col-12 mt-5 ">

        <p class="new-serch">
            <a href="/jobs/advancedsearch">New Search  </a>
            <a href="#" id="back-to-results" role="button" title="Back to Results">Back To Results</a>
        </p>

        @*<nav class="mt-5" aria-label="breadcrumb">
                <ul>
                    <li><a href="#"> > New Search</a></li>
                    <li><a href="#"> > Back to results</a></li>
                </ul>
            </nav>*@
        <!-- breadcrumb/ -->
    </div>

    @*<p>@Newtonsoft.Json.JsonConvert.SerializeObject(Model)</p>*@
    <div class="job-detail col-12 col-sm-12 col-md-8">
        <div class="border rounded p-4">

            <img src="http://192.168.0.174:3000/assets/images/brand/logo/4-BaysidePersonnel.svg" class="float-right"
                 alt="">
            <h2 class="mt-2">@Model.JobDetails.Title</h2>


            <ul class="border border-top-0 border-right-0 border-left-0 pb-4">
                @if (!string.IsNullOrEmpty(Model.JobDetails.CustomData["Bulletpoints.BulletPoint1"]))
                {
                    <li>@Model.JobDetails.CustomData["Bulletpoints.BulletPoint1"]</li>
                }
                @if (!string.IsNullOrEmpty(Model.JobDetails.CustomData["Bulletpoints.BulletPoint2"]))
                {
                    <li>@Model.JobDetails.CustomData["Bulletpoints.BulletPoint2"]</li>
                }
                @if (!string.IsNullOrEmpty(Model.JobDetails.CustomData["Bulletpoints.BulletPoint3"]))
                {
                    <li>@Model.JobDetails.CustomData["Bulletpoints.BulletPoint3"]</li>
                }
            </ul>

            <ul class="inline-list p-0 mb-4 location-hover">


                @*Sydney*@

                @{
                    var location = "";
                }
                @foreach (var item in @Model.Locations.Keys)
                {
                    location = (string)@Model.Locations[item];
                }
                <li class="mr-5"><img src="/ResourcePackages/BaySide/assets/images/location.png"><div>LOCATION</div></li>

                <li class="mr-5"> <img src="/ResourcePackages/BaySide/assets/images/doller.png"> <div>Annual</div></li>
                <li class="mr-5 clock-icon"><i class="fa fa-clock-o"></i><div> @Model.JobDetails.CustomData["WorkType.Filters[0].Value"]</div></li>
            </ul>



            @{
                string cleanContent = GeneralHelper.RemoveInlineStyling((string)Model.JobDetails.Description);
            }
            <p>
                @Html.HtmlSanitize((string)cleanContent)
            </p>

            <div class="sm-text">
                @Html.Raw(String.Join("<span>&gt;</span>&nbsp;", classificationsDisplay))
            </div>

        </div>

        <a href="@ViewBag.JobApplicationPageUrl/@Model.ClassificationsSEORouteName/@Model.JobDetails.JobID" class="btn btn-outline-primary btn-block mt-4">Apply now</a>
    </div>
    <!--END: job_details -->

    <aside class="job-sidebar col-12 col-sm-12 col-md-4 pl-lg-4">

        <a href="@ViewBag.JobApplicationPageUrl/@Model.ClassificationsSEORouteName/@Model.JobDetails.JobID" class="btn btn-outline-primary d-md-block d-none">Apply now</a>

        <h3 class="mt-4 h3-heading">Interested in this job?</h3>

        <ul class="inline-list p-0 mb-4">
            @*<li class="mr-3"><a class="action-link save-job" data-jobid="@Model.JobDetails.JobID" href="#"><i class="fa fa-save"></i> <span>Save</span></a></li>*@
            @*
                <li><a href="#" class="save-job" data-jobid="@Model.JobDetails.JobID"><em class="far fa-save"></em><span class="save-status-txt">Save this job</span></a></li>*@

            <li class="mr-3"><a class="action-link" href="javascript:window.print();"><i class="fa fa-print"></i> <span>Print</span></a></li>
            @*
                <li><a href="javascript:window.print();"><em class="fas fa-print"></em>Print this job</a></li>*@

            <li class="mr-3"><a class="action-link" href="/jobs/email-job?JobId=@Model.JobDetails.JobID"><i class="fa fa-envelope"></i> <span>Email</span></a></li>
            @*
                <li>
                    <a href="@ViewBag.EmailJobPageUrl?JobId=@Model.JobDetails.JobID" title="Tell a friend">
                        <em class="fas fa-envelope"></em>Email this job
                    </a>
                </li>*@
        </ul>

    </aside>


}

<script type="text/javascript">
        $(document).ready(function () {
            //$('h1.fadeInUp, div.hero-title').html('Apply for Job @Model.JobDetails.Title');
            document.title = '@Model.JobDetails.Title';
            var isLoggedIn = '@isUserLoggedIn';

            //checking user logged in is member role
            $('#job-application-lnk').click(function (e) {
                if (isLoggedIn.toLocaleLowerCase() == "true") {
                    var isMember = '@isMemberUser';

                    if (isMember.toLocaleLowerCase() != "true") {
                        e.preventDefault();
                        alert('Please login as Member to apply for this job.');
                    }
                }
            });

            processSavedJobs();

            function processSavedJobs() {
                var parm = {};
                var urlPath = $(location).attr('pathname') + "/GetAllSavedJobs";
                var self = $(this);
                $.ajax({
                    type: 'POST',
                    cache: false,
                    url: urlPath,
                    data: parm,
                    dataType: 'Json',
                    success: function (response) {

                        if (response.Success == true) { // Getting the all saved jobs
                            $('.save-job').each(function () {
                                var jobid = $(this).data('jobid');
                                var selfJob = $(this);

                                $.each(response.SavedJobs, function (index, saveJobInfo) {

                                    if (saveJobInfo.JobId == jobid) {

                                        $(selfJob).addClass("saved");
                                        $(selfJob).find('.save-status-txt').text("Job saved");
                                        $(selfJob).attr('data-savedjobid', saveJobInfo.SavedJobId);
                                    }
                                });
                            });
                        }
                        else { // Job failed to save

                        }
                    },
                    error: function (response) { // Error
                    }
                });


            };


            $(document).on('click', '.save-job', function (e) {
                e.preventDefault();
                var unSaveJob = false;
                var ajaxActionName = "/SaveJob";
                var jobid = $(this).data('jobid');
                if ($(this).hasClass('saved')) {
                    unSaveJob = true;
                    ajaxActionName = "/RemoveSavedJob";
                    jobid = $(this).data('savedjobid');
                }

                var parm = { JobId: jobid };
                var urlPath = $(location).attr('pathname') + ajaxActionName;
                var self = $(this);
                $.ajax({
                    type: 'POST',
                    cache: false,
                    url: urlPath,
                    data: parm,
                    dataType: 'Json',
                    success: function (response) {

                        if (response.Success == true) { // Job Saved or unsaved
                            if (unSaveJob) { // Unsave job
                                self.removeClass("saved");
                                self.find('.save-status-txt').text("Save job");
                            }
                            else { // Save job
                                self.addClass("saved");
                                self.find('.save-status-txt').text("Job saved");
                            }
                        }
                        else { // Job failed to save or unsave
                            if ((response.Errors[0].indexOf("(401)") > -1) || (response.Errors[0].indexOf("(403)") > -1))
                                alert("Please login as a member to save a job.");
                            else
                                alert(response.Errors[0]);
                        }
                    },
                    error: function (response) { // Error
                    }
                });
            });

            if (document.referrer != "") {
                var previousUrl = new URL(document.referrer);
                var urlPath = previousUrl.pathname + previousUrl.search
                $("#back-to-results").attr("href", urlPath);
            }
        });
</script>

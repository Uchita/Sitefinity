@model Telerik.Sitefinity.Frontend.Taxonomies.Mvc.Models.TaxonomyViewModel

<div class="jxt-news-filter-refinements @Model.CssClass">
    @*<div class="jxt-news-filter jxt-news-filter-keywords">
            <h3 id="jxt-news-filter-keywords-heading">
                <label for="tbKeywords">Keywords</label>
            </h3>
            <div class="jxt-news-filter-options">
                <div class="jxt-news-filter-input">
                    <input name="tbKeywords" type="text" id="tbKeywords" class="form-control" aria-describedby="jxt-news-filter-keywords-heading" placeholder="Search keywords">
                </div>
            </div>
        </div>*@
    <div class="jxt-news-filter jxt-news-filter-category">
        <h3 id="jxt-news-filter-category-heading">
            Categories
        </h3>
        <div class="jxt-news-filter-options">
            <div class="jxt-news-filter-dropdown active">
                <ul class="jxt-news-filter-multiple" aria-describedby="jxt-news-filter-category-heading">
                    @foreach (var taxon in Model.Taxa)
                    {
                        <li>
                            <a href="@taxon.Url">@taxon.Title</a>

                            @if (Model.ShowItemCount)
                            {

                                <span class="text-muted">@Html.Raw(string.Format("({0})", taxon.Count))</span>

                            }
                        </li>

                    }

                </ul>
            </div>
        </div>
    </div>



    @*<div class="jxt-news-filter jxt-news-filter-sort-by">
            <h3 id="jxt-news-filter-sort-by-heading">
                Sort by
            </h3>
            <div class="jxt-news-filter-options">
                <div class="jxt-news-filter-summary" role="list" aria-expanded="false" aria-controls="jxt-collapsible-0" data-default-summary=""></div>
                <div id="jxt-collapsible-0" class="jxt-news-filter-dropdown" aria-hidden="true" role="list">
                    <ul class="jxt-news-filter-single" aria-describedby="jxt-news-filter-sort-by-heading">
                        <li><a id="SortRelevance" data-item="Relevance">Relevance</a></li>
                        <li><a id="SortNewest" data-item="Newest">Newest first</a></li>
                        <li><a id="SortOldest" data-item="Oldest">Oldest first</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="jxt-news-search">
            <div class="button">
                <a id="Refine" class="btn btn-default" href="javascript:void(0)">
                    <i class="fa fa-search" tabindex="5"></i>
                    Refine
                </a>
            </div>
        </div>*@
</div>

<script>

    !(function () {
        $(function () {

            function doPostBack(e) {
                e.preventDefault();
                // postback here
            }

            // detects if there is a thumbnail. If possible this functionality
            // should be done in the back end.
            $(".jxt-news-item").each(function () {
                if ($(this).find(".jxt-news-item-image").length) {
                    $(this).addClass("jxt-has-image");
                }
            });

            // Remove extra url in News category
            $(".jxt-news-filter-category .jxt-news-filter-multiple a").each(function () {
                var $this = $(this);
                var thisHref = $this.attr("href").replace("/search/", "/");
                $this.attr("href", thisHref);
                if (window.location.href == thisHref) {
                    $this.addClass("active");
                }
            });

            //$(".jxt-news-filter-category .jxt-news-filter-multiple a").on("click", function (e) {
            //    if ($(this).hasClass("active")) {
            //        e.preventDefault();
            //        var hrefLoc = "/" + window.location.pathname.split("/")[1];
            //        window.location.href = hrefLoc;
            //    }
            //});


            // refreshes the summary div to show which filters have been added.
            //function refreshFilterSummary() {
            //    $(".jxt-news-filter-summary").each(function () {
            //        var myActiveOptions = $(this)
            //            .next(".jxt-news-filter-dropdown")
            //            .find("a.active");
            //        switch (myActiveOptions.length) {
            //            case 0:
            //                $(this).text($(this).data('default-summary'));
            //                break;
            //            case 1:
            //                $(this).text(myActiveOptions.text());
            //                break;
            //            default:
            //                var myTotalOptions = "";
            //                myActiveOptions.each(function () {
            //                    myTotalOptions += ", " + $(this).text()
            //                });
            //                $(this).text(myTotalOptions.substring(2));
            //                break;
            //        }
            //    });
            //}

            ////News Filter
            //var $keywordInput = $("#tbKeywords");
            //var $sortByInput = $(".jxt-news-filter-single");

            //$("#Refine").on("click", function () {
            //    var sortBy = "";
            //    var keyword = "";
            //    if ($keywordInput.val() != "") {
            //        keyword = $keywordInput.val();
            //    }
            //    sortBy = $sortByInput.find("a.active").data("item");
            //    redirectHref(sortBy, keyword);
            //});

            //function redirectHref(sortBy, keyword) {
            //    var url = "";
            //    if (window.location.href.indexOf("?") > -1) {
            //        url = window.location.href.split("?")[0];
            //    }
            //    else {
            //        url = window.location.href;
            //    }
            //    window.location.href = url + "?sortby=" + sortBy + "&keyword=" + keyword;
            //}

            //function getParameterByName(name, url) {
            //    if (!url) url = window.location.href;
            //    name = name.replace(/[\[\]]/g, "\\$&");
            //    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            //        results = regex.exec(url);
            //    if (!results) return null;
            //    if (!results[2]) return '';
            //    return decodeURIComponent(results[2].replace(/\+/g, " "));
            //}
            //var sortBy = getParameterByName("sortby", location.href);
            //if (sortBy != "") {
            //    $(".jxt-news-filter-single a").removeClass("active");
            //    $(".jxt-news-filter-single a[data-item=" + getParameterByName("sortby", location.href) + "]").addClass("active");
            //}

            //var keyword = getParameterByName("keyword", location.href);
            //if (keyword != "") {
            //    $keywordInput.val(keyword);
            //}

            //refreshFilterSummary();

            //$(".jxt-news-filter-summary").click(function () {
            //    var ariaVal = $(this).next(".jxt-news-filter-dropdown").attr("aria-hidden");
            //    ariaVal = "false" == ariaVal ? false : true;
            //    $(this).attr("aria-expanded", ariaVal);
            //    $(this).next(".jxt-news-filter-dropdown").attr("aria-hidden", !ariaVal);
            //});

            //$(".jxt-news-filter-multiple a").click(function () {
            //    $(this).toggleClass("active");
            //    refreshFilterSummary();
            //});
            //$(".jxt-news-filter-single a").click(function () {
            //    $(this).parent().siblings().children("a").removeClass("active");
            //    $(this).addClass("active");
            //    refreshFilterSummary();
            //});

            //var currentUrl = window.location.href.split("?")[0];
            //$(".jxt-news-filter-multiple a").each(function () {
            //    if (currentUrl == $(this).attr("href")) {
            //        $(this).addClass("active");
            //    }
            //});

        });
    })();
</script>
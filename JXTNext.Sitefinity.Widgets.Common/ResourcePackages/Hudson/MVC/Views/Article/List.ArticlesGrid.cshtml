@model Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Models.DynamicContentListViewModel

@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.RelatedData;
@using Telerik.Sitefinity.Web.DataResolving;
@using System;
@using Newtonsoft.Json;
@using Telerik.Sitefinity.DynamicModules;
@using Telerik.Sitefinity.DynamicModules.Model;

@Html.StyleSheet(Url.WidgetContent("/Mvc/Styles/kendo.common.min.css"), "bottom")
@Html.StyleSheet(Url.WidgetContent("/Mvc/Styles/kendo.default.min.css"), "bottom")
@Html.StyleSheet(Url.WidgetContent("/Mvc/Styles/kendo.default.mobile.min.css"), "bottom")

@Html.Script(ScriptRef.KendoAll, "top", false)

@functions{

    public class ArticlesModel
    {
        public string Title { get; set; }
        public string NavigateUrl { get; set; }
        public string TaxonTitle { get; set; }
        public string DatePublished { get; set; }
        public string Summary { get; set; }
        public string HeaderImagePath { get; set; }
        public string HeaderImageTitle { get; set; }
        public bool IsHeaderImage { get; set; }
    }
}

@{

    List<ArticlesModel> articlesModel = new List<ArticlesModel>();

    foreach (var item in Model.Items)
    {
        var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);
        var publishedDate = item.GetDateTime("PublicationDate", "MMM d, yyyy, HH:mm tt");
        string taxonTitle = "";
        bool isHeaderImage = false;

        foreach (var taxon in item.GetHierarchicalTaxons("Category"))
        {
            taxonTitle = @Html.HtmlSanitize(taxon.Title.ToString()).ToString();
            break;
        }

        var summary = Html.HtmlSanitize((string)item.Fields.Summary).ToString();
        string trimSummary = !String.IsNullOrWhiteSpace(summary) && summary.Length >= 150 ? summary.Substring(0, 120) + "..." : summary;
        string headerImagePath = "";
        string headerImageTitle = "";
        if (item.Fields.HeaderImage != null)
        {
            headerImagePath = item.Fields.HeaderImage.Fields.ThumbnailUrl;
            headerImageTitle = item.Fields.HeaderImage.Fields.Title;
            isHeaderImage = true;
        }

        articlesModel.Add(new ArticlesModel()
        {
            Title = @Html.HtmlSanitize((string)item.Fields.Title).ToString(),
            NavigateUrl = navigateUrl,
            TaxonTitle = taxonTitle,
            DatePublished = publishedDate,
            Summary = trimSummary,
            HeaderImagePath = headerImagePath,
            HeaderImageTitle = headerImageTitle,
            IsHeaderImage = isHeaderImage
        });
    }
    string articlesJson = JsonConvert.SerializeObject(articlesModel);

    var manager = DynamicModuleManager.GetManager(Model.ProviderName);
    var articleTotalItemsCount = manager.GetDataItems(Model.ContentType).Where(x => x.Status == Telerik.Sitefinity.GenericContent.Model.ContentLifecycleStatus.Live).ToList().Count;
    int articleCurrentItemsCount = 0;
    if (Model != null && Model.Items != null)
    {
        articleCurrentItemsCount = Model.Items.Count();
    }
}

<div class="@Model.CssClass">

    <div class="articles-top">
        <div class="press-release-filter">
            <ul class="list-unstyled clearfix">
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        career advice

                        <span class="fas fa-angle-down"></span>
                    </a>
                    <ul class="dropdown-menu"><li><a href="">Resumes &amp; cover letters</a></li><li><a href="">Jobs interviews</a></li><li><a href="">Job search</a></li><li><a href="">Personal branding</a></li><li><a href="">Career progression</a></li></ul>
                </li>

                <li><a href="/insights/articles/">show all</a></li>
            </ul>
        </div>
        <div class="text-right">
            <div id="data-holder" data-model="@articlesJson" style="display:none"></div>
            <span class="articles-top-displaying">@articleCurrentItemsCount of @articleTotalItemsCount articles</span>
            <select id="sortOrder" class="default-select">
                <option selected="selected" value="">Recently posted</option>
                <option value="Old">Old</option>
                <option value="AZ">A-Z</option>
                <option value="ZA">Z-A</option>
            </select>
        </div>
    </div>

    @if (Model.ShowPager)
    {
        @Html.Action("Index", "ContentPager", new { currentPage = Model.CurrentPage,
                        totalPagesCount = Model.TotalPagesCount.Value,
                        redirectUrlTemplate = ViewBag.RedirectPageUrlTemplate })
    }


    <div class="demo-section k-content wide">
        <div id="listView" class="row long-card-basic-list flex"></div>
        <div id="pager" class="k-pager-wrap"></div>
    </div>
</div>

    <script type="text/x-kendo-template" id="template">
        
        <div class="col-md-4">
            <div class="thumbnail card-basic small-caption">
                # if(data.IsHeaderImage == true){#
                <a href="#:NavigateUrl#" class="img-wrap"><img alt="" src="#:HeaderImagePath#" title="#:HeaderImageTitle#" /></a>
                #}#
                <div class="caption">
                    <p class="color-light text-uppercase font-medium ">
                        <small>#:TaxonTitle#</small>
                    </p>
                    <h4>#:Title#</h4>
                    <p>#:Summary#</p>
                    <a class="btn btn-more" href="#:NavigateUrl#"></a>
                </div>

            </div>
        </div>
        
    </script>

    <script type="text/javascript">

    $(document).ready(function () {
        var dataModel = $("#data-holder").data('model');
        renderData();

        $("#sortOrder").change(function () {
            renderData();
        });

        function renderData() {
            var dataSource = new kendo.data.DataSource({
                data: dataModel,
                total: 3
            });

            var sorttext = getSortOrder();
            var token = sorttext.split(':');

            dataSource.sort({ field: token[0], dir: token[1] });

            $("#listView").kendoListView({
                dataSource: dataSource,
                template: kendo.template($("#template").html())
            });
        }

        function getSortOrder() {
            var sortValue = $("#sortOrder").val();
            switch (sortValue) {
                case 'Old':
                    return 'DatePublished:asc';
                    break;
                case 'AZ':
                    return 'Title:asc';
                    break;
                case 'ZA':
                    return 'Title:desc';
                    break;

                default:
                    return 'DatePublished:desc';
                    break;
            }
        };
    });
    </script>

<style>
    #listView {
        border: none;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
    }
    #listView div {
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
    }
</style>

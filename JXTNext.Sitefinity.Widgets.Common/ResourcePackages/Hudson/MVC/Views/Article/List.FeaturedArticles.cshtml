@model Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Models.DynamicContentListViewModel

@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.RelatedData
@using System;
@using Newtonsoft.Json;
@using Telerik.Sitefinity.DynamicModules;
@using Telerik.Sitefinity.DynamicModules.Model;

@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Security.Model;
@using Telerik.Sitefinity.Taxonomies;
@using Telerik.Sitefinity.Taxonomies.Model;
@using Telerik.Sitefinity.Model;
@using Telerik.OpenAccess;
@using Telerik.Sitefinity.Web;

@*Needed for custom thumbnail*@
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Modules.Libraries;


<div class="@Model.CssClass">
    <ul class="list-unstyled list-featured-articles">
        @foreach (var item in Model.Items)
        {
            var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);
            var imageThumbUrl = "";
            var noImageCls = "";
        <li>
            <div class="featured-article">

                @if (item.Fields.articles != null)
                {
                    List<string> filterValues = new List<string>();
                    var articleIds = item.Fields.articles;
                    foreach (var taxonItem in articleIds)
                    {
                        Guid articleID = new Guid(taxonItem.ToString());
                        var taxonManager = TaxonomyManager.GetManager();
                        var taxon = taxonManager.GetTaxa<HierarchicalTaxon>().Where(t => t.Id == articleID).ToList().FirstOrDefault();
                        filterValues.Add(taxon.Title);
                    }
                    <div class="text-muted">
                        @(string.Join(", ", filterValues))
                    </div>
                }

                <h3>
                    <a href="@navigateUrl" title="@item.Fields.Title">

                        @Html.HtmlSanitize((string)item.Fields.Title)
                    </a>
                </h3>
                <div class="desc">
                    @{
                        var summary = Html.HtmlSanitize((string)item.Fields.Summary).ToString();
                        string trimSummary = !String.IsNullOrWhiteSpace(summary) && summary.Length >= 180 ? summary.Substring(0, 180) + "..." : summary;
                    }
                   @trimSummary
                </div>

                <a class="btn btn-more" href="@navigateUrl" title="Read more"></a>
            </div>

            @if (item.Fields.HeaderImage != null)
            {
                imageThumbUrl = MediaContentExtensions.ResolveThumbnailUrl(item.Fields.HeaderImage.DataItem, "thumbartic");
            }
            else
            {
                imageThumbUrl = "/ResourcePackages/Hudson/assets/dist/images/placeholder-image.jpg";
                noImageCls = "no-image";
            }
            <div class="featured-article-image"><a href="@navigateUrl" title="@item.Fields.Title"><img alt="@item.Fields.Title" src="@imageThumbUrl" /></a></div>

        </li>

        }
    </ul>

</div>
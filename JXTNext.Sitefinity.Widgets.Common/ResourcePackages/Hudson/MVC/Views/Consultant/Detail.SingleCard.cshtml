@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel

@using System.Collections;
@using System.Linq;
@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Libraries.Model;
@using Telerik.Sitefinity.Localization;
@using Telerik.Sitefinity.Model;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Pages.Model;
@using Telerik.Sitefinity.Modules.Libraries;
<div class="single-card">

    @{ 
        
        //var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(Model.Item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);
    }

    @if (Model.Item.Fields.Office != null)
    {
        var OfficeLocationName = "";
        var OfficeLocationUrl = "";
        var imageThumbUrl = "";

        <div class="consultant">
            @if (Model.Item.Fields.Pic != null)
            {
                imageThumbUrl = MediaContentExtensions.ResolveThumbnailUrl(Model.Item.Fields.Pic.DataItem, "thumb350");
            }
            else
            {
                imageThumbUrl = "/ResourcePackages/Hudson/assets/dist/images/placeholder-image.jpg";
            }
            <a href="" title="@Model.Item.Fields.ConsultantName" class="consultant-photo">
                <img src="@imageThumbUrl" alt="@Model.Item.Fields.ConsultantName">
            </a>
            <a href="" class="caption">
                <h3 class="consultant-name">@Model.Item.Fields.ConsultantName</h3>
                <p class="consultant-sum">
                    @Html.HtmlSanitize((string)Model.Item.Fields.Position)
                </p>

                @if (Model.Item.Fields.Office.GetType().ToString() == "Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel")
                {
                    OfficeLocationName = Html.HtmlSanitize((string)Model.Item.Fields.Office.Fields.Name).ToString();
                    OfficeLocationUrl = Model.Item.Fields.Office.Fields.UrlName.ToString();
                }
                else
                {
                    List<string> OfficeLocationNameList = new List<string>();
                    List<string> OfficeLocationUrlList = new List<string>();

                    foreach (var office in Model.Item.Fields.Office)
                    {
                        if (!OfficeLocationNameList.Contains((string)office.Fields.Name))
                        {
                            OfficeLocationNameList.Add((string)office.Fields.Name);
                            OfficeLocationUrlList.Add(office.Fields.UrlName.ToString());
                        }
                    }

                    OfficeLocationName = string.Join(", ", OfficeLocationNameList.ToArray());
                    OfficeLocationUrl = string.Join(",", OfficeLocationUrlList.ToArray());
                }
                @if (Model.Item.Fields.Office != null)
                {
                    <span class="consultant-btn">@OfficeLocationName</span>
                }
            </a>

        </div>

    }

</div>



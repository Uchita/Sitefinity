@model dynamic
@using Telerik.Sitefinity.Frontend.Mvc.Helpers

@Html.StyleSheet(Url.EmbeddedResource("JXTNext.Sitefinity.Widgets.Job.Mvc.Controllers.JobSearchController", "JXTNext.Sitefinity.Widgets.Job.Mvc.Scripts.JobSearch.dropdowntree.css"), "bottom")
@Html.Script(Url.EmbeddedResource("JXTNext.Sitefinity.Widgets.Job.Mvc.Controllers.JobSearchController", "JXTNext.Sitefinity.Widgets.Job.Mvc.Scripts.JobSearch.dropdowntree.js"), "bottom")

@Html.Script(Url.WidgetContent("/Mvc/Scripts/jquery.nstSlider.js"))
@Html.StyleSheet(Url.WidgetContent("/Mvc/Styles/rangeSlider.css"))

<div id="createalert-widget">
@if (!ViewBag.IsMemberUser)
{
    <div class="alert alert-info">Please login as Member to create job alert.</div>
}

@if (Model != null)
{
    <h2><span class="alert-icon far fa-bell"></span>Create job alert</h2>
    <h3>Alert details</h3>
    <form method="post" enctype="multipart/form-data" onsubmit="return preventSubmit();">
        @{
            int counter = 0;
            var privacyErrMsg = "Please agree to Hudson\'s privacy policy";
        }
        <div class="field-wrapper basic-form no-marg-top">
            <div class="alert alert-warning filter-madatory-message hidden">@Html.Resource("nofilterselectedmessage", "Labels")</div>
            <div class="row form-group">
                <div class="col-md-4 text-right">
                    <label for="name">Job alert name*</label>
                </div>
                <div class="col-md-8">
                    <input type="text" name="Name" id="name" required class="form-control" />
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-4 text-right">
                    <label for="keywords">Keywords</label>
                </div>
                <div class="col-md-8">
                    <input type="text" name="Keywords" id="keywords" class="form-control" value="@Model.Keywords" />
                </div>
            </div>


            @foreach (var item in Model.Filters)
            {
                if (item.Name != "Salary" && item.Name != "CompanyName")
                {
                    <div class="row form-group">
                        <div class="col-md-4 text-right">
                            @{
                                var displayTitle = item.Name;
                                if (displayTitle == "CountryLocationArea")
                                {
                                    displayTitle = "Location";
                                }
                                else if (displayTitle == "WorkType")
                                {
                                    displayTitle = "Work Type";
                                }
                                else if (displayTitle == "CompanyName")
                                {
                                    displayTitle = "Company Name";
                                }
                            }
                            <label>@displayTitle</label>
                        </div>
                        <div class="col-md-8">
                            <input type="hidden" name="Filters[@counter].RootId" value='@item.Name' />
                            <select id=@string.Format("selected-{0}", item.Name) name="Filters[@counter].Values" style="display:none" multiple class="form-control"></select>
                            <div class="dropdown dropdown-tree" id=@item.Name></div>
                        </div>
                    </div>
                    counter++;
                }
                else if (item.Name == "Salary")
                {
                    <div class="row form-group">
                        <div class="col-md-4 text-right">
                            <label>@item.Name</label>
                        </div>
                        <div class="col-md-8">
                            <input type="hidden" name="SalaryStringify" id="salary-model-bind-hidden" />
                            <select class="SalaryRangeSelect form-control">
                                <option value="-1" selected>Choose Salary</option>
                                @foreach (var salaryItem in item.Filters)
                                {
                                    <option value="@salaryItem.ID">@salaryItem.Label</option>
                                }
                            </select>
                            @foreach (var salaryItem in item.Filters)
                            {
                                var lower = 15000;
                                var upper = 200000;
                                if (salaryItem.Label == "Hourly Rate")
                                {
                                    lower = 18;
                                    upper = 200;
                                }
                                <div class="salaryrangewrapper visible-hidden" id="@salaryItem.ID">

                                    <div class="nstSlider" data-range_min="@lower" data-range_max="@upper"
                                         data-cur_min="@lower" data-cur_max="@upper">

                                        <div class="bar"></div>
                                        <div class="leftGrip"></div>
                                        <div class="rightGrip"></div>
                                    </div>
                                    <div class="leftLabel">$<span>@lower</span></div>
                                    <div class="rightLabel">$<span>@upper</span></div>

                                </div>

                            } @*end of for each*@
                        </div>
                    </div>
                }
            }

            <div class="row form-group">
                <div class="col-md-4 text-right"></div>
                <div class="col-md-8">
                    <div class="checkbox clearfix">
                        <input id="privacypolicy" name="privacypolicy" type="checkbox" value="agree" required title="@privacyErrMsg" onclick="this.setCustomValidity('');" oninput="this.setCustomValidity('');" oninvalid='this.setCustomValidity("@privacyErrMsg")'>
                        <span class="checkbox-icon fas fa-check"></span>
                        I agree to Hudson's <a href="/privacy-policy" target="_blank">Privacy Policy</a>
                    </div>
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-4 text-right"></div>
                <div class="col-md-8">
                    <input id="create-job-alert-submit-btn" type="submit" value="SAVE" class="btn btn-primary" />
                    <a href="/user-dashboard" class="btn">Cancel</a>
                </div>
            </div>
        </div>
</form>
}


<script type="text/javascript">
    var optionsArray = {};
    var isSalaryExists = false;
    var isSlarySelected = false;
    var salary = { RootName: 'Salary', TargetValue: '', LowerRange: 15000, UpperRange: 200000 };

    function preventSubmit() {
        $.each(optionsArray, function (id, item) {
            $($("#" + id).GetSelectedElementIds()).each(function (index, value) {
                $("#selected-" + id).append('<option value="' + value + '" selected="true">' + value + '</option>')
            });
        });

        if ($('#keywords').val() == "" && $('#selected-Classifications').val() == null && $('#selected-CountryLocationArea').val() == null && $('#selected-WorkType').val() == null) {
            $('.filter-madatory-message').removeClass('hidden');
            return false;
        } else {
            $('.filter-madatory-message').addClass('hidden');
        }

        if (isSlarySelected) {
            salary.RootName = 'Salary';
            $('#salary-model-bind-hidden').val(JSON.stringify(salary));
            console.log($('#salary-model-bind-hidden').val());
        }

        return true;
    }

    $(document).ready(function () {
          @{
                var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
                var json = serializer.Serialize(Model);
          }

        var model = @Html.Raw(json);
        var modelSalary = null;
        $.each(model, function (index, value) {
            if (value.Key == 'Salary') {
                modelSalary = value.Value;
            }
        });
        
        if (modelSalary != null && modelSalary != 'undefined') {
            salary = modelSalary;
            isSlarySelected = true;
            $('.SalaryRangeSelect').val(modelSalary.TargetValue);
            $('#' + modelSalary.TargetValue).removeClass('visible-hidden');
            $('.SalaryRangeSelect').addClass('changed');

            var salarySliderEle = $('#' + modelSalary.TargetValue).parent().find('.nstSlider');
            if (salarySliderEle != null) {
                $(salarySliderEle).data("cur_min", modelSalary.LowerRange);
                $(salarySliderEle).data("cur_max", modelSalary.UpperRange);
            }
        }
   

        $('select').on('change', function () {
            isSlarySelected = false;
            $('.salaryrangewrapper').each(function (i, obj) {
                $(this).addClass('visible-hidden');
            });
            if (this.value != -1) {
                $(this).addClass('changed');
                isSlarySelected = true;
                $('#' + this.value).removeClass('visible-hidden');
                salary.TargetValue = this.value;
                salary.LowerRange = $("#" + $(this).val()).find('.leftLabel span').text();
                salary.UpperRange = $("#" + $(this).val()).find('.rightLabel span').text();
            } else if ($(this).hasClass('changed') && this.value == -1) {
                isSlarySelected = false;
            }

        });

        $('.nstSlider').each(function (i, obj) {
            $(this).nstSlider({
                "rounding": {
                    "1": "600",
                    "1000": "200000"
                },
                "crossable_handles": false,
                "left_grip_selector": ".leftGrip",
                "right_grip_selector": ".rightGrip",
                "value_bar_selector": ".bar",
                "user_mouseup_callback": function (leftValue, rightValue, isLeftGripMoved) {
                    salary.LowerRange = leftValue;
                    salary.UpperRange = rightValue;
                    $(this).parent().find('.leftLabel span').text(leftValue);
                    $(this).parent().find('.rightLabel span').text(rightValue);
                },
                "value_changed_callback": function (cause, leftValue, rightValue) {
                    $(this).parent().find('.leftLabel span').text(leftValue);
                    $(this).parent().find('.rightLabel span').text(rightValue);
                }
            });
        });

        var isUserMember = false;
        isUserMember = '@ViewBag.IsMemberUser';
    
        if (isUserMember == false || isUserMember == 'False' ) {
             $('#create-job-alert-submit-btn').prop('disabled', true);
        }
        
        var filterData = JSON.parse('@Html.Raw(Json.Encode(Model.Filters))');
        if (model != null && model != "undefined" && filterData != null && filterData != "undefined") {
           
            $.each(filterData, function (index, item) {
                var displayTitle = item.Name;
                if (displayTitle == 'CountryLocationArea')
                    displayTitle = 'Location';
                else if (displayTitle == 'WorkType')
                    displayTitle = 'Work Type';
                else if (displayTitle == 'CompanyName')
                    displayTitle = 'Company Name';

                optionsArray[item.Name] = {
                    title: displayTitle,
                    data: item.Filters,
                    maxHeight: 500,
                    closedArrow: '<i class="fa fa-caret-right" aria-hidden="true"></i>',
                    openedArrow: '<i class="fa fa-caret-down" aria-hidden="true"></i>',
                    multiSelect: true,
                    selectChildren: true,
                    expandChildren: true,
                    enableSearch: false,
                    prefixIdText: ''
                };
                $("#" + item.Name).DropDownTree(optionsArray[item.Name]);
            });
        }

    });
</script>

</div>

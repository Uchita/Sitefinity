@model List<JobAlertViewModel>
@using JXTNext.Sitefinity.Services.Intefaces.Models.JobAlert

<div id="createalert-widget">
    <h2><span class="alert-icon far fa-bell"></span>Job alerts</h2>

    @if (Model != null && Model.Count > 0)
    {

        <table class="table table-bordered">
            <tr>
                <th>Name</th>
                <th>Action</th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @item.Name
                    </td>

                    <td>
                        @Html.ActionLink("Edit", "Edit", "JobAlert", new { id = item.Id }, new { @class = "btn btn-sm btn-tag" })
                        @Html.ActionLink("Search", "ViewResults", "JobAlert", new { id = item.Id }, new { @class = "btn btn-sm btn-tag" })
                        @Html.ActionLink("Delete", "Delete", "JobAlert", new { id = item.Id }, new { onclick = "return confirmAlertDelete();", @class = "btn btn-sm btn-tag btn-danger" })
                    </td>
                </tr>
            }

        </table>
    }

    else
    {
        <div class="alert alert-info">You currently don't have any job alerts.</div>
    }


    @if (ViewBag.StatusMessage != null)
    {
        <div class="job-alert-message-wrapper">
            @if (ViewBag.Status == JobAlertStatus.SUCCESS)
            {
                <div class="alert alert-success">@ViewBag.StatusMessage</div>
            }
            else
            {
                <div class="alert alert-danger">@ViewBag.StatusMessage</div>
            }
        </div>
    }
    <div class="button-wrapper">
        @Html.ActionLink("Create New Job Alert", "Create", "JobAlert", new { @class = "btn jobalert-btn" })
        <a href="/advancedsearch" class="btn" title="New job search">New search</a>
    </div>

    <div class="popup-overlay">
        <div class="container">
            <div class="popup-box">
                <p class="info">Please sign-in or register as a member to <span>create job alert</span>.</p>
                <div class="button-wrapper">
                    <a href="/register" class="btn btn-primary">Register</a>
                    <a href="/sign-in" class="btn btn-primary">Sign in</a>
                </div>
                <a href="javascript:void(0)" class="fa fa-times"></a>
            </div>
        </div>
    </div>

    <script type="text/javascript">

    function confirmAlertDelete() {
          if (confirm("Are you sure you want to delete this Job Alert?")) {
            return true;
        }
        else {
            return false;
        }
    };

    $(document).ready(function () {
         @{
                var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
                var json = serializer.Serialize(Model);


          }

        var memberStatus = '@ViewBag.IsMemberUser';

        //checking user logged in is member role
        $('.jobalert-btn').click(function (e) {

            if (memberStatus.toLocaleLowerCase() != "true") {
                e.preventDefault();
                //alert('Please login as Member to create job alert.');
                if ($('.popup-overlay').length) {
                    $('.popup-overlay .info span').text('save a job');
                    $('.popup-overlay').fadeIn('fast');
                }
            }
        });

        $('.popup-overlay .fa-times').click(function () {
            $('.popup-overlay').fadeOut('fast');
        });


        var model = @Html.Raw(json);
        if (model != null && model != "undefined") {
            for (var item of model) {
                var dateTime = EpochToDate(item.LastModifiedTime);
                var formattedTime = formattedDate(dateTime);
                $('#' + item.Id).html(formattedTime);
            }
        }

        // Epoch To Date
        function EpochToDate(epoch) {
            // why we are not converting it to Milliseconds?
            // Here we are getting the time in Milliseconds from backend
            // We are storing epoch time in Milliseconds to our database
            var epoch = epoch + (new Date().getTimezoneOffset() * -1); //for timeZone
            return new Date(epoch);
        };

        // Form date to DD/MM/YYYY
        function formattedDate(date) {
            var month = String(date.getMonth() + 1);
            var day = String(date.getDate());
            var year = String(date.getFullYear());

            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

            return `${day}/${month}/${year}`;
        };

        //
        function checkMemberStatus() {

        }
    });

    </script>

</div>
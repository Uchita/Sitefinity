@model dynamic
@using JXTNext.Sitefinity.Widgets.JobApplication.Mvc.Models.JobApplication

@using JXTNext.Sitefinity.Common.Helpers

@if (Model != null && Model.ApplyWithSocialMediaInfo != null)
{
    var siteSettingsHelper = new SiteSettingsHelper();
    <div class="ext-provider-form">
        <h2>Apply with</h2>
        <div class="apply-with">
            <ul class="list-inline">
                @foreach (var item in Model.ApplyWithSocialMediaInfo)
                {
                    switch (item.Title)
                    {
                        case "LinkedIn":
                            <li><a href="#" class="btn-linkedin" target="_blank" title="@item.Title">@item.Title</a></li>
                            break;

                        case "Indeed":
                            @*<li><a href="#" target="_blank" title=@item.Title role="button">Apply With @item.Title</a></li>*@
                            var redirectUriSocial = siteSettingsHelper.GetCurrentSiteSeekRedirectUri();
                            var indeedAPIToken = siteSettingsHelper.GetCurrentSiteIndeedClientAPIToken();
                            <li id="indeed-btnwrapper">
                                <span class="indeed-apply-widget"
                                      data-indeed-apply-apiToken=@indeedAPIToken
                                      data-indeed-apply-jobId=@Model.JobId
                                      data-indeed-apply-jobLocation="Australia"
                                      data-indeed-apply-jobCompanyName="JXT"
                                      data-indeed-apply-jobTitle="Test Engineer"
                                      data-indeed-apply-jobUrl=""
                                      data-indeed-apply-postUrl=@redirectUriSocial
                                      data-indeed-apply-jobMeta="right-rail-apply-button"></span>
                                <script>
                                    (function (d, s, id) {
                                        var js, iajs = d.getElementsByTagName(s)[0];
                                        if (d.getElementById(id)) { return; }
                                        js = d.createElement(s); js.id = id; js.async = true;
                                        js.src = "https://apply.indeed.com/indeedapply/static/scripts/app/bootstrap.js";
                                        iajs.parentNode.insertBefore(js, iajs);
                                    }(document, 'script', 'indeed-apply-js'));
                                </script>
                            </li>
                            break;
                        case "Seek":

                            var clientId = siteSettingsHelper.GetCurrentSiteSeekClientId();
                            var advertiserId = siteSettingsHelper.GetCurrentSiteSeekClientAdvertiserId();
                            var redirectUri = siteSettingsHelper.GetCurrentSiteSeekRedirectUri();
                            var jobId = Model.JobId;

                            string hrefLink = String.Format("https://www.seek.com.au/api/iam/oauth2/authorize?client_id={0}&redirect_uri={1}&state={2}&scope=r_profile_apply&response_type=code&advertiser_id={3}", clientId, redirectUri, jobId, advertiserId);

                            <li> <a href=@hrefLink title=@item.Title role="button" class="btn btn-seek">@item.Title</a></li>
                            break;


                        default:
                            break;
                    }
                }

            </ul>
        </div>
    </div>
}
@model Telerik.Sitefinity.Frontend.Identity.Mvc.Models.LoginForm.LoginFormViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Services;

@*Add scripts and stylesheets*@
@Html.Script(ScriptRef.JQuery, "top")
@Html.Script("//ajax.aspnetcdn.com/ajax/jquery.validate/1.8.1/jquery.validate.js", "top")
@Html.Script("//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js", "top")

@{
    var isTwoCols = (Model.ExternalProviders != null && Model.ExternalProviders.Count() > 0) ? "col-md-12" : "";
}

<div class="@Model.CssClass">
    @if (Telerik.Sitefinity.Security.SecurityManager.GetCurrentUserId() == Guid.Empty || SystemManager.IsInlineEditingMode || SystemManager.IsDesignMode)
    {
        using (Html.BeginFormSitefinity(@Request.Url.Query, null, null, FormMethod.Post, null, true))
        {
            <div class="@isTwoCols">
                @Html.ValidationSummary(true)

                <h3>@Html.Resource("LoginFormLogInLegendHeader")</h3>
                <div class="row">
                    @if (Request.Url.Query.Contains("err=true") || Model.LoginError)
                    {
                        <div class="col-md-12">
                            <div class="alert alert-danger">
                                <small>@Html.Resource("IncorrectCredentialsMessage")</small>
                            </div>
                        </div>
                    }

                    <div class="form-group col-md-6">
                        <label>
                            @Html.Resource("UserName")
                        </label>

                        @Html.TextBoxFor(u => u.UserName, new { @class = "form-control" })
                        @if (Html.ValidationMessage("UserName") != null)
                        {
                            <div class="has-error">
                                <span class="help-block">@Html.ValidationMessage("UserName")</span>
                            </div>
                        }

                    </div>

                    <div class="form-group col-md-6">
                        <label>
                            @Html.Resource("Password")
                        </label>

                        @Html.PasswordFor(u => u.Password, new { @class = "form-control" })
                        @if (Html.ValidationMessage("Password") != null)
                        {
                            <div class="has-error">
                                <span class="help-block">@Html.ValidationMessage("Password")</span>
                            </div>
                        }

                    </div>

                </div>

                @if (Model.ShowRememberMe || Model.ShowForgotPasswordLink)
                {
                    var isPulledRight = Model.ShowRememberMe ? "" : "pull-right";

                <div class="form-group row @isPulledRight">
                    @if (Model.ShowRememberMe)
                    {
                        <div class="checkbox col-md-6 sf-m-xxs">
                            <label>
                                @Html.CheckBoxFor(u => u.RememberMe)
                                @Html.Resource("RememberMe")
                            </label>
                        </div>
                    }
                    @if (Model.ShowForgotPasswordLink)
                    {
                        <div class="col-md-6 text-right sf-pr-l">
                            <label>@Html.ActionLink(Html.Resource("ForgottenPasword"), "ForgotPassword")</label>
                        </div>
                    }

                    </div>
                }

                <div class="form-group button-wrapper">
                    <button type="submit" class="btn">@Html.Resource("LoginFormLogInButton")</button>
                </div>

                @if (Model.ShowRegistrationLink)
                {
                    <div class="sf-registration-link">
                        <div class="section-header"><strong>@Html.Resource("NotRegisteredYet")</strong></div>
                        <div class="form-group button-wrapper"><a class="btn btn-1" href="@Model.RegisterPageUrl">@Html.Resource("LoginFormRegisterNow")</a></div>
                    </div>
                }
            </div>

            if (Model.ExternalProviders != null && Model.ExternalProviders.Count() > 0)
            {
                <div class="col-md-12">
                    <h3>@Html.Resource("UseAccountIn")</h3>
                    <div class="form-group button-wrapper">
                        @foreach (var provider in Model.ExternalProviders)
                        {
                            var classToBeAdd = "btn btn-default " + @provider.Value;
                            <span>
                                @Html.ActionLink(provider.Key, "LoginExternalProvider", new { model = provider.Key }, new { @class = classToBeAdd })
                            </span>
                        }
                    </div>
                </div>
            }

        }
    }

    else
    {
        <div class="col-md-12">
            <div class="alert alert-info">
                <p>@Html.Resource("AlreadyLoggedIn")</p>    
            </div>
        </div>
        
    }
</div>

@Html.Script(Url.WidgetContent("Mvc/Scripts/LoginForm/login-form.js"), "bottom")

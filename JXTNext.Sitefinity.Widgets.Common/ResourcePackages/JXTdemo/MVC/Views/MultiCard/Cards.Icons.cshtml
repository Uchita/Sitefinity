@model SitefinityWebApp.Mvc.Models.MultiCard.MultiCardViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;

<div class="jn_multiCard multi-card @Model.CssClass" style="background-color: @Model.BackgroundColor">
    <div class="container">
    @if (!string.IsNullOrEmpty(Model.GroupHeader))
    {
        <div class="row content-padding">
            <div class="col-md-12">
                <h2 class="heading">@Model.GroupHeader</h2>
            </div>
        </div>
    }

    <div class="card-wrapper">
        <div class="jn_cards row">
        @for (int i = 0; i < Model.Cards.Count; i++)
        {
            string itemClass = "";
            if (!string.IsNullOrEmpty(Model.CssClass))
            {
                if ( (Model.CssClass).IndexOf("multicard-2") > -1)
                {
                    itemClass = "col";
                }
                else
                {
                    itemClass = "col-sm-6 col-lg";
                }
            }

            <a class="@itemClass card-copy" title="@Model.Cards[i].ActionName" href="@Html.UrlSanitize(Model.Cards[i].ActionUrl)">

                @if (!string.IsNullOrEmpty(Model.Cards[i].SelectedSizeUrl))
                {
                    if (i == (Model.Cards.Count - 1))
                    {
                        <div class="last-icon-height">
                            <img class="icons" src="@Model.Cards[i].SelectedSizeUrl" title="@Model.Cards[i].ImageTitle" alt="@Model.Cards[i].ImageAlternativeText">
                        </div>
                    }
                    else
                    {
                        <div class="icon-border">
                            <img class="icons" src="@Model.Cards[i].SelectedSizeUrl" title="@Model.Cards[i].ImageTitle" alt="@Model.Cards[i].ImageAlternativeText">
                        </div>
                    }

                }
                else
                {
                    <div>@Html.Raw(Model.Cards[i].Description)</div>
                }

                @if (!string.IsNullOrEmpty(Model.Cards[i].Heading))
                {
                <p class="card-title">@Model.Cards[i].Heading</p>
                }

            </a>
        }
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.GroupActionName) && !string.IsNullOrEmpty(Model.GroupActionUrl))
    {
        
        <a class="btn btn-lg action-btn" href="@Html.UrlSanitize(Model.GroupActionUrl)" role="button">
            <span class="action-text">@Model.GroupActionName</span>
        </a>
            
    }
    </div>
</div>

@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Web.DataResolving;
@using JXTNext.Sitefinity.Common.Helpers;
@using Telerik.Sitefinity.Web;
@using SitefinityWebApp.Mvc.Attributes


@{
    string imageURL = ((Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel)Model.Item).GetItemImageUrl("Image", 0);
}

@*<article class="@Model.CssClass post-single article" @Html.InlineEditingAttributes(Model.ProviderName, Model.ContentType.FullName, (Guid)Model.Item.Fields.Id)>*@
@if (String.IsNullOrEmpty(imageURL) == false)
{
    <figure>
        <img src="@imageURL" alt="@Model.Item.Fields.Title" />
    </figure>
}

<div class="col-md-3">
    <div class="blog-metadata">
        <div class="meta-data">
            <div class="data-date">
                <span class="jn_ico icon-calendar"></span>
                <span class="data-dateValue"><span class="data-month">@Model.Item.GetDateTime("PublicationDate", "MMM")</span> <span class="data-day">@Model.Item.GetDateTime("PublicationDate", "dd")</span></span>
            </div>
                
            @{
                if (Model.EnableSocialSharing)
                {
                    var item = Model.Item.DataItem as Telerik.Sitefinity.Model.IHasTitle;
                    @Html.SocialShareOptions(item, "SocialShareInCode");
                }
            }
          
            
            <div class="bio-pick">
                <figure>
                    <img src="~/ResourcePackages/JXTdemo/assets/dist/images/apple-touch-icon-72x72.png" alt="Avatar AvatarImageUrl" />
                </figure>
                <div class="bio-desc">
                    <small>About the author</small>
                    <p><strong>@DataResolver.Resolve(Model.Item.DataItem, "Author", null)</strong></p>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="col-md-9">
    <div class="h-section">
        <div class="section-header">
            <h3 @Html.InlineEditingFieldAttributes("Title", "ShortText")>@Model.Item.Fields.Title</h3>

            @if (Model.Item.Fields.Tags != null && Model.Item.Fields.Tags.Count > 0)
            {
                <div class="tags">
                    @foreach (var taxon in Model.Item.GetFlatTaxons("Tags"))
                    {
                        <a href="/@SiteMapBase.GetActualCurrentNode().UrlName/-in-tags/tags/@taxon.UrlName.ToString()">@taxon.Title.ToString()</a>
                    }
                </div>
            }
        </div>
        <div class="post-content">
            <div class="post-summary" @Html.InlineEditingFieldAttributes("Summary", "LongText")>@Html.HtmlSanitize((string)Model.Item.Fields.Summary)</div>

            <div class="full-desc" @Html.InlineEditingFieldAttributes("Content", "LongText")>@Html.HtmlSanitize((string)Model.Item.Fields.Content)</div>

        </div>

    </div>
    @if (Model.Item.Fields.AllowComments)
    {
    <div class="comment-wrapper">
        
        @Html.CommentsList(@Model.Item.DataItem)
        
    </div>
    }
</div>


@*</article>*@


@model Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Models.DynamicContentListViewModel
@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.RelatedData;
@using System;
@using Newtonsoft.Json;
@using Telerik.Sitefinity.DynamicModules;
@using Telerik.Sitefinity.DynamicModules.Model;
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Security.Model;
@using Telerik.Sitefinity.Taxonomies;
@using Telerik.Sitefinity.Taxonomies.Model;
@using Telerik.Sitefinity.Model;
@using Telerik.OpenAccess;
@using Telerik.Sitefinity.Web;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Modules.Libraries;

@*Recursive function to get the classification "Article" list as a Filter*@
@helper ProcessCategories(HierarchicalTaxon taxon, string articlesUrl, string sortExpression)
    {
        if (taxon != null)
        {
            var title = taxon.Title;
            var hierarchicalParentTaxon = taxon.Parent as HierarchicalTaxon;
            var parentUrlName = "";
            if (hierarchicalParentTaxon != null)
            {
                parentUrlName = hierarchicalParentTaxon.UrlName.ToString() + "/";
            }

            var categoryPageUrl = string.Format("{0}{1}{2}{3}", articlesUrl, parentUrlName, taxon.UrlName.ToString(), sortExpression);

            <li><a href="@categoryPageUrl" data-filter="@taxon.Title">@taxon.Title</a></li>

            if (taxon.Subtaxa != null && taxon.Subtaxa.Count > 0)
            {
                foreach (var subTaxon in taxon.Subtaxa)
                {
                    //Recursive call
                    ProcessCategories(subTaxon, articlesUrl, sortExpression);
                }
            }
        }
}
<div class="@Model.CssClass">
    <div class="articles-top">
        <div class="press-release-filter">
            <ul class="list-unstyled clearfix">
                @{
                    var managerArticle = TaxonomyManager.GetManager();
                    var articleTaxonomy = managerArticle.GetTaxonomies<HierarchicalTaxonomy>().Where(t => t.Name == "Articles").SingleOrDefault();
                    List<Taxon> topLovelTaxa = new List<Taxon>();


                    var sortExpression = string.Empty;
                    var sortParam = SitefinityWebApp.Helpers.ContentHelper.GetSortParameter();


                    var baseArticlesUrl = "/insights/articles";
                    var articlesUrl = baseArticlesUrl + "/";
                    var allArticlesUrl = baseArticlesUrl;

                    if (sortParam != null)
                    {
                        sortExpression = "?orderby=" + sortParam;
                        allArticlesUrl += sortExpression;
                    }

                    if (articleTaxonomy != null)
                    {
                        foreach (var taxon in articleTaxonomy.Taxa)
                        {
                            if (taxon.Parent == null)
                            {
                                topLovelTaxa.Add(taxon);
                            }
                        }

                        foreach (var taxon in topLovelTaxa)
                        {

                            var hierarchicalTaxon = taxon as HierarchicalTaxon;

                            var dropCls = "";
                            if (hierarchicalTaxon.Subtaxa != null && hierarchicalTaxon.Subtaxa.Count > 0)
                            {
                                dropCls = "dropdown";
                            }

                            var taxonPageUrl = string.Format("{0}{1}{2}", articlesUrl, taxon.UrlName.ToString(), sortExpression);

                            <li class="@dropCls" data-itemid="@taxon.Id.ToString()">
                                <a href="@taxonPageUrl" data-filter="@taxon.Title">@taxon.Title</a>
                                @if (hierarchicalTaxon != null)
                                {
                                    if (hierarchicalTaxon.Subtaxa != null && hierarchicalTaxon.Subtaxa.Count > 0)
                                    {
                                        <ul class="dropdown-menu">
                                            @foreach (var childTaxon in hierarchicalTaxon.Subtaxa)
                                            {
                                                @ProcessCategories(childTaxon, articlesUrl, sortExpression)
                                            }
                                        </ul>
                                    }
                                }
                            </li>
                        }
                    }

                    <li><a href="@allArticlesUrl">show all</a></li>
                }
            </ul>
        </div>
    </div>
    @if (Model != null)
    {
        if (Model.Items.Count() > 0)
        {
            
    <div class="article-sorting-wrapper">
                    
    <span class="page-num-status">@SitefinityWebApp.Helpers.ContentHelper.GetItemsPagingInfo(Model)</span>
        <select class="articles-order">
            <option value="date-asc">Sort by - Recent Posts</option>
            <option value="date-desc">Sort by - Oldest Posts</option>
            <option value="title-asc">Sort by - Alphabetical A-Z</option>
            <option value="title-desc">Sort by - Alphabetical Z-A</option>
        </select>
    </div>

            <div class="row long-card-basic-list flex">
                @foreach (var item in Model.Items)
                {
                    var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);

                    <div class="col-md-4">
                        <div class="thumbnail card-basic small-caption">
                            @if (item.Fields.HeaderImage.DataItem != null)
                            {
                                <a href="@navigateUrl" class="img-wrap" title="@item.Fields.HeaderImage.Fields.Title"><img alt="@item.Fields.HeaderImage.Fields.Title" src="@MediaContentExtensions.ResolveThumbnailUrl(item.Fields.HeaderImage.DataItem, "thumbartic")" /></a>
                            }
                            <div class="caption">
                                <p class="color-light text-uppercase font-medium ">
                                    @{
                                        List<string> filterValues = new List<string>();
                                        var articleIds = item.Fields.articles;
                                        foreach (var taxonItem in articleIds)
                                        {
                                            Guid articleID = new Guid(taxonItem.ToString());
                                            var taxonManager = TaxonomyManager.GetManager();
                                            var taxon = taxonManager.GetTaxa<HierarchicalTaxon>().Where(t => t.Id == articleID).ToList().FirstOrDefault();
                                            filterValues.Add(taxon.Title);
                                        }
                                    }
                                    <small>
                                        @(string.Join(", ", filterValues))
                                    </small>
                                </p>
                                <h4><a href="@navigateUrl" title="@item.Fields.HeaderImage.Fields.Title">@Html.HtmlSanitize((string)item.Fields.Title)</a></h4>
                                @{
                                    var summary = Html.HtmlSanitize((string)item.Fields.Summary).ToString();
                                    string trimSummary = !String.IsNullOrWhiteSpace(summary) && summary.Length >= 90 ? summary.Substring(0, 90) + "..." : summary;
                                }
                                <p>@trimSummary</p>
                                <a class="btn btn-more" href="@navigateUrl"></a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <small>There are no articles posted for this category yet!</small>
            </div>
        }
    }
    @if (Model.ShowPager)
    {
        @Html.Action("Index", "ContentPager", new
        {
            currentPage = Model.CurrentPage,
            totalPagesCount = Model.TotalPagesCount.Value,
            redirectUrlTemplate = ViewBag.RedirectPageUrlTemplate
        })
    }
</div>
<script>
    jQuery(function ($) {
        if ($('.press-release-filter').length) {
            var pagePath = window.location.pathname;
            var stripPath = pagePath.split('/');
            var curTaxonName = '';
            var parentTaxon = '';
            if (stripPath.length) {
                if (stripPath[stripPath.length - 1] == "") {
                    stripPath.pop();
                }
                curTaxonName = stripPath[stripPath.length - 1];
                //console.log(curTaxonName);
                if (stripPath.length > 2 && stripPath[stripPath.length - 2] == "career-advice") {
                    parentTaxon = stripPath[stripPath.length - 2];
                    $('.press-release-filter > ul > li > a[href*="' + parentTaxon + '"]').first().parent('li').addClass('filter-active');
                    $('.press-release-filter li a[href*="' + curTaxonName + '"]').first().parent('li').addClass('filter-active');
                } else {
                    $('.press-release-filter > ul > li > a[href*="' + curTaxonName + '"]').first().parent('li').addClass('filter-active');
                }
            }
        }

        function updateQueryStringParameter(uri, key, value) {
            var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
            var separator = uri.indexOf('?') !== -1 ? "&" : "?";
            if (uri.match(re)) {
                return uri.replace(re, '$1' + key + "=" + value + '$2');
            }
            else {
                return uri + separator + key + "=" + value;
            }
        }

        function getURLParameter(name) {
            return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search) || [null, ''])[1].replace(/\+/g, '%20')) || null;
        }

        function getURLParameter(name) {
            return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search) || [null, ''])[1].replace(/\+/g, '%20')) || null;
        }

        var orderByElementSelector = '.articles-order';
        var orderByParam = 'orderby';
        var orderByValue = getURLParameter(orderByParam);

        if (orderByValue !== null) {
            $(orderByElementSelector).val(orderByValue);
        }

        $(orderByElementSelector).change(function () {
            window.location.href = updateQueryStringParameter(window.location.href, orderByParam, $(this).val());
        });


    });
</script>

@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel
@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Web.DataResolving;
@Html.Script(ScriptRef.JQuery, "top", false)
@using Newtonsoft.Json;
@using Telerik.Sitefinity.Blogs.Model;
@using Telerik.Sitefinity.Frontend.Search.Mvc.Models;
@using Telerik.Sitefinity.Modules.Libraries;
@using Telerik.Sitefinity.Libraries.Model;
@using Telerik.Sitefinity.Modules.Blogs;
@using Telerik.Sitefinity.RelatedData;
@using Telerik.Sitefinity.Model;
@using Telerik.Sitefinity.Taxonomies;
@using Telerik.Sitefinity.Taxonomies.Model;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.DynamicModules.Model;
@{
    BlogsManager blogsManager = BlogsManager.GetManager();
    int counter = 0;
    var volval = Request.QueryString["vol"].ToString();
    var issueval = Request.QueryString["issue"].ToString();
}

<div class="magazine-cover @Model.CssClass">
    <div class="bg-corner">
        <div class="bg-corner-inner">

            @foreach (var item in Model.Items)
            {
                if (@item.Fields.ItemDefaultUrl.Contains("magazine"))
                {
                    if (item.Fields.volume != null)
                    {
                        var imageurl = "";
                        var coverimageurl = "";
                        var issue = "";
                        var volume = "";
                        var issuetext = "";
                        var volumetext = "";
                        foreach (var relatedItem in item.Fields.BlogImage)
                        {
                            imageurl = (string)relatedItem.Fields.ItemDefaultUrl;
                        }
                        foreach (var relatedItem in item.Fields.CoverImage)
                        {
                            coverimageurl = (string)relatedItem.Fields.MediaUrl;
                        }
                        if (item.Fields.issue != null)
                        {
                            foreach (var taxonissue in item.GetFlatTaxons("issue"))
                            {
                                issue = @taxonissue.Title.ToString().ToLower().Replace(" ", "-");
                                issuetext = @taxonissue.Title.ToString();
                            }
                        }
                        if (item.Fields.volume != null)
                        {
                            foreach (var taxonvolume in item.GetFlatTaxons("volume"))
                            {
                                volume = @taxonvolume.Title.ToString().ToLower().Replace(" ", "-");
                                volumetext = @taxonvolume.Title.ToString();
                            }
                        }

                        if (@volval == @volume && @issueval == @issue)
                        {
                            var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);


                            if (@counter == 0)
                            {

                                <div class="magazine-cover-img">
                                    <a title="@item.Fields.Title" href="@navigateUrl"><img src="@coverimageurl" alt="@item.Fields.Title" /></a>
                                </div>
                                @:<div class="magazine-cover-content">
                                    <div class="magazine-vol-name">@volumetext - @issuetext</div>
                                    <div class="magazine-vol-date">@item.GetDateTime("PublicationDate", "MMM, yyyy")</div>
                                    @:<ul class="magazine-headlines">
                                        <li class="magazine-headline"><a class="magazine-headline" href="@navigateUrl">@item.Fields.Title</a></li>
                                    }
                                    else if (@counter < 5)
                                    {
                                        <li class="magazine-sub-headline"><a class="magazine-sub-headline" href="@navigateUrl">@item.Fields.Title</a></li>
                                    }

                                }
                                counter++;
                            }
                        }
                    }

        </ul>
    </div>
</div>
</div>
</div>
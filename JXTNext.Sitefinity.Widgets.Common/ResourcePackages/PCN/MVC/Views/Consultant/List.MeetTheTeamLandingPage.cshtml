@model Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Models.DynamicContentListViewModel
@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Modules.Libraries;
@* Used for getting category list *@
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Security.Model;
@using Telerik.Sitefinity.Taxonomies;
@using Telerik.Sitefinity.Taxonomies.Model;
@using Telerik.Sitefinity.Model;
@using Telerik.OpenAccess;
@* For Dynamic content: Module builder [Office] *@
@using Telerik.Sitefinity.DynamicModules;
@using Telerik.Sitefinity.DynamicModules.Model;
@using Telerik.Sitefinity.Utilities.TypeConverters;

<div id="team-tabing">
    <div class="container team-member-area">
        <ul class="nav nav-tabs hidden">
            <li class="active">
                <a data-toggle="tab" href="#all">All</a>
            </li>
            @{
                List
                <Taxon>
                    cates = JXTNext.Sitefinity.Common.Helpers.SitefinityHelper.GetTopLevelCategories();

                Taxon sectorTaxon = cates.Where(c => c.Title.ToUpper() == "CLASSIFICATIONS").FirstOrDefault();

                var dd = sectorTaxon as HierarchicalTaxon;

                foreach (var item in dd.Subtaxa)
                {
                    <li>
                        <a data-toggle="tab" href="#@item.Id">@item.Title </a>
                    </li>
                }
            }
        </ul>
        <div class="tab-content clearfix">

            <div class="tab-pane active" id="all">
                <div class="teamProfiles">
                    <div class="portfolio clearfix">


                        <ul class="list clearfix no-bullet consultants row">

                            @foreach (var item4 in Model.Items)
                            {
                                string Specialisation = "";

                                foreach (var categoryall in item4.Fields.Category)
                                {
                                    Guid GUcollectionid = categoryall;
                                    TaxonomyManager manager = TaxonomyManager.GetManager();
                                    var taxonTitle = manager.GetTaxa
                                    <HierarchicalTaxon>
                                        ()
                                        .Where(t => t.Id == GUcollectionid)
                                        .SingleOrDefault()
                                        .Title;

                                    if (taxonTitle != "")
                                    {
                                        if (Specialisation == "")
                                        {
                                            Specialisation = Specialisation + @taxonTitle;
                                        }
                                        else
                                        {
                                            Specialisation = Specialisation + ", " + @taxonTitle;
                                        }
                                    }

                                }

                                var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item4, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);

                                var imagePath = @MediaContentExtensions.ResolveThumbnailUrl(item4.Fields.Pic.DataItem, "thumb350");

                                <li class="col-xs-12 col-sm-4 col-md-3 colio-item">
                                    <div class="thumb">
                                        <img src="@imagePath" alt="@item4.Fields.ConsultantName" class="img-responsive">
                                        <div class="view">
                                            <a href="@navigateUrl" title="VIEW FULL PROFILE" class="btn subscribe-btn">VIEW FULL PROFILE</a>
                                        </div>
                                    </div>
                                    <h3>@Html.HtmlSanitize((string)item4.Fields.ConsultantName)</h3>

                                    <p class="job-title">@Html.HtmlSanitize((string)item4.Fields.Position)</p>
                                    <div class="short-description">
                                        <p>
                                            @Specialisation
                                        </p>
                                    </div>
                                </li>



                            }


                        </ul>

                    </div>
                </div>
            </div>

            @{
                List
                <Taxon>
                    cates1 = JXTNext.Sitefinity.Common.Helpers.SitefinityHelper.GetTopLevelCategories();

                Taxon sectorTaxon1 = cates1.Where(c => c.Title.ToUpper() == "CLASSIFICATIONS").FirstOrDefault();

                var dd1 = sectorTaxon1 as HierarchicalTaxon;

                foreach (var item1 in dd1.Subtaxa)
                {

                    <div class="tab-pane" id="@item1.Id">
                        <div class="teamProfiles">
                            <div class="portfolio clearfix">
                                <ul class="list clearfix no-bullet consultants row">

                                    @foreach (var item2 in Model.Items)
                                    {
                                        var collectionid = "";
                                        string Specialisation = "";
                                        List
                                        <String>
                                            list = new List<String>
                                                ();
                                        foreach (var item3 in item2.Fields.Category)
                                        {
                                            collectionid = Convert.ToString(@item3);
                                            list.Add(Convert.ToString(@item3));
                                            Guid GUcollectionid = item3;
                                            TaxonomyManager manager = TaxonomyManager.GetManager();
                                            var taxonTitle = manager.GetTaxa<HierarchicalTaxon>
                                                ()
                                                .Where(t => t.Id == GUcollectionid)
                                                .SingleOrDefault()
                                                .Title;

                                            if (taxonTitle != "")
                                            {

                                                if (Specialisation == "")
                                                {
                                                    Specialisation = Specialisation + @taxonTitle;
                                                }
                                                else
                                                {
                                                    Specialisation = Specialisation + ", " + @taxonTitle;
                                                }
                                            }
                                        }

                                        var id = Convert.ToString(item1.Id);
                                        if (list.Contains(id))
                                        {

                                            var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item2, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);

                                            var imagePath = @MediaContentExtensions.ResolveThumbnailUrl(item2.Fields.Pic.DataItem, "thumb350");

                                            <li class="col-xs-12 col-sm-4 col-md-3 colio-item">
                                                <div class="thumb">
                                                    <img src="@imagePath" class="img-responsive">
                                                    <div class="view">
                                                        <a href="@navigateUrl" title="VIEW FULL PROFILE" class="btn subscribe-btn">VIEW FULL PROFILE</a>
                                                    </div>
                                                </div>
                                                <h3>@Html.HtmlSanitize((string)item2.Fields.ConsultantName)</h3>

                                                <p class="job-title">@Html.HtmlSanitize((string)item2.Fields.Position)</p>
                                                <div class="short-description">
                                                    <p>
                                                        @Specialisation
                                                    </p>
                                                </div>
                                            </li>

                                        }

                                    }


                                </ul>
                            </div>
                        </div>
                    </div>
                }
            }

        </div>
    </div>
</div>

@model dynamic
@using Telerik.Sitefinity.Frontend.Mvc.Helpers
@using JXTNext.Sitefinity.Services.Intefaces.Models.JobAlert

@Html.StyleSheet(Url.EmbeddedResource("JXTNext.Sitefinity.Widgets.Job.Mvc.Controllers.JobSearchController", "JXTNext.Sitefinity.Widgets.Job.Mvc.Scripts.JobSearch.dropdowntree.css"), "bottom")
@Html.Script(Url.EmbeddedResource("JXTNext.Sitefinity.Widgets.Job.Mvc.Controllers.JobSearchController", "JXTNext.Sitefinity.Widgets.Job.Mvc.Scripts.JobSearch.dropdowntree.js"), "bottom")

@Html.Script(Url.WidgetContent("/Mvc/Scripts/jquery.nstSlider.js"))
@Html.StyleSheet(Url.WidgetContent("/Mvc/Styles/rangeSlider.css"))

<h2><span class="alert-icon far fa-bell"></span>Edit job alert</h2>

<h3>Alert details</h3>

@if (Model != null)
{
    <form method="post" action="@Url.Action("Edit","JobAlert")" onsubmit="return preventSubmit();" class="jn_search">
        @{
            int counter = 0;
            var privacyErrMsg = "Please agree to PCN\'s privacy policy";
        }

        <div class="field-wrapper basic-form no-marg-top">
            <div class="alert alert-warning filter-madatory-message hidden">@Html.Resource("nofilterselectedmessage", "Labels")</div>

            <div class="row form-group">
                <div class="col-md-4 text-right">
                    <label for="name">Job alert name*</label>
                </div>
                <div class="col-md-8">
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <input type="text" name="Name" id="name" required value="@Model.Name" class="form-control" />
                </div>
            </div>

            <div class="row form-group">
                <div class="col-md-4 text-right">
                    <label for="keywords">Keywords</label>
                </div>
                <div class="col-md-8">
                    <input type="text" name="Keywords" id="keywords" value="@Model.Keywords" class="form-control" />
                </div>
            </div>


            @foreach (var item in Model.Data)
            {
                if (item.Name != "Salary" && item.Name != "CompanyName")
                {
                    <div class="row form-group">
                        <div class="col-md-4 text-right">
                            @{
                                var displayTitle = item.Name;
                                if (displayTitle == "CountryLocationArea")
                                {
                                    displayTitle = "Location";
                                }
                                else if (displayTitle == "WorkType")
                                {
                                    displayTitle = "Work Type";
                                }
                                else if (displayTitle == "CompanyName")
                                {
                                    displayTitle = "Company Name";
                                }
                            }
                            <label>@displayTitle</label>
                        </div>
                        <div class="col-md-8">
                            <input type="hidden" name="Filters[@counter].RootId" value='@item.Name' />
                            <select id=@string.Format("selected-{0}", item.Name) name="Filters[@counter].Values" style="display:none" multiple class="form-control"></select>
                            <div class="dropdown dropdown-tree" id=@item.Name></div>
                        </div>
                    </div>
                    counter++;
                }
            }
            <div class="row form-group">
                <div class="col-md-4 text-right"></div>
                <div class="col-md-8">
                    <div class="checkbox clearfix">
                        <input id="privacypolicy" name="privacypolicy" type="checkbox" value="agree" required title="@privacyErrMsg" onclick="this.setCustomValidity('');" oninput="this.setCustomValidity('')" oninvalid='this.setCustomValidity("@privacyErrMsg")'>
                        <span class="checkbox-icon fas fa-check"></span>
                        I agree to PCN's <a href="/privacy-policy" target="_blank">Privacy Policy</a>
                    </div>
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-4 text-right"></div>
                <div class="col-md-8">
                    <span class="btn-style-corner mr-15"><button type="submit" value="SAVE" class="btn btn-primary"><span>SAVE</span></button></span>
                    <span class="btn-style-corner"><a href="/user-dashboard" class="btn btn-primary"><span>Cancel</span></a></span>
                </div>
            </div>


            @*@Html.ActionLink("SEARCH", "ViewResults", "JobAlert", new { id = Model.Id }, null)
                @Html.ActionLink("DELETE", "Delete", "JobAlert", new { id = Model.Id }, new { onclick = "return confirmDelete();" })*@
        </div>
    </form>
}


<script type="text/javascript">
    var optionsArray = {};
    var isSalaryExists = false;
    var isSlarySelected = false;
    var salary = { RootName: 'Salary', TargetValue: '', LowerRange: 15000, UpperRange: 200000 };

    function preventSubmit() {
        $.each(optionsArray, function (id, item) {
            $($("#" + id).GetSelectedElementIds()).each(function (index, value) {
                $("#selected-" + id).append('<option value="' + value + '" selected="true">' + value + '</option>')
            });
        });

        if ($('#keywords').val() == "" && $('#selected-Classifications').val() == null && $('#selected-CountryLocationArea').val() == null && $('#selected-WorkType').val() == null) {
            $('.filter-madatory-message').removeClass('hidden');
            return false;
        } else {
            $('.filter-madatory-message').addClass('hidden');
        }

        return true;
    };

    function confirmDelete() {
        if (confirm("Are you sure you want to delete this record?")) {
            return true;
        }
        else {
            return false;
        }
    };



    $(document).ready(function () {
          @{
                var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
                var json = serializer.Serialize(Model);
          }

        var model = @Html.Raw(json);
        var modelSalary = model.Salary;

        $('select').on('change', function () {
            isSlarySelected = false;
            $('.salaryrangewrapper').each(function (i, obj) {
                $(this).addClass('visible-hidden');
            });
            if (this.value != -1) {
                $(this).addClass('changed');
                isSlarySelected = true;
                $('#' + this.value).removeClass('visible-hidden');
                salary.TargetValue = this.value;
                salary.LowerRange = $("#" + $(this).val()).find('.leftLabel span').text();
                salary.UpperRange = $("#" + $(this).val()).find('.rightLabel span').text();
            } else if ($(this).hasClass('changed') && this.value == -1) {
                isSlarySelected = false;
            }

        });


        if (model != null && model != "undefined") {
            var filterData = JSON.parse('@Html.Raw(Json.Encode(Model))');
            $.each(filterData.Data, function (index, item) {
                var displayTitle = item.Name;
                if (displayTitle == 'CountryLocationArea')
                    displayTitle = 'Location';
                else if (displayTitle == 'WorkType')
                    displayTitle = 'Work Type';
                else if (displayTitle == 'CompanyName')
                    displayTitle = 'Company Name';

                optionsArray[item.Name] = {
                    title: displayTitle,
                    data: item.Filters,
                    maxHeight: 500,
                    closedArrow: '<i class="fa fa-caret-right" aria-hidden="true"></i>',
                    openedArrow: '<i class="fa fa-caret-down" aria-hidden="true"></i>',
                    multiSelect: true,
                    selectChildren: true,
                    expandChildren: true,
                    enableSearch: false,
                    prefixIdText: ''
                };
                $("#" + item.Name).DropDownTree(optionsArray[item.Name]);
            });
        }
    });
    $(window).load(function () {
        $("ul.dropdown-menu").each(function () {
            $(this).find("ul").hide();
        });
    });
</script>

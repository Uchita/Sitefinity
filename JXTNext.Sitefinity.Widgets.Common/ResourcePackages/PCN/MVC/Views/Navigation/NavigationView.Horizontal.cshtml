@model Telerik.Sitefinity.Frontend.Navigation.Mvc.Models.INavigationModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Navigation.Mvc.Models;
@using Telerik.Sitefinity.Modules.Pages;
@using SitefinityWebApp.Helpers;

@*For user login check*@
@using JXTNext.Sitefinity.Common.Helpers;

@using Telerik.Sitefinity.DynamicModules.Model;





<ul class="first-level">
    @foreach (var node in Model.Nodes)
    {
        @RenderRootLevelNode(node);
    }
</ul>

@*Here is specified the rendering for the root level*@
@helper RenderRootLevelNode(NodeViewModel node)
{
    <li class="@GetClass(node)">
        <a href="@node.Url" target="@node.LinkTarget">@node.Title</a>
        @if (node.ChildNodes.Count > 0)
        {
            <span class="fas fa-angle-down"></span>
            <span class="mobile-arrow fas fa-angle-right"></span>
            <ul class="second-level">
                @foreach (var childNode in node.ChildNodes)
                {
                    @RenderSubLevelsRecursive(childNode)
                }
            </ul>
        }
    </li>
}

@*Here is specified the rendering for the sub levels*@
@helper RenderSubLevelsRecursive(NodeViewModel node)
{
    <li class="@GetClass(node)">
        <a href="@node.Url" target="@node.LinkTarget">@node.Title</a>
        @if (node.ChildNodes.Count > 0)
        {
            <span class="fas fa-angle-down"></span>
            <span class="mobile-arrow fas fa-angle-right"></span>
            <ul class="third-level">
                @foreach (var childNode in node.ChildNodes)
                {
                    @RenderSubLevelsRecursive(childNode)
                }
            </ul>
        }
    </li>
}



@helper GetClass(NodeViewModel node)
{
    if (node.IsCurrentlyOpened)
    {
        @Html.Raw("active");
    }
    else if (node.HasChildOpen)
    {
        @Html.Raw("active");
    }
}
@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Web.DataResolving;
@using SitefinityWebApp.Mvc.Attributes;
@using SitefinityWebApp.Helpers;
@using Telerik.Sitefinity.Modules.News;
@using Telerik.Sitefinity.DynamicModules.Model;
@using Telerik.Sitefinity.GenericContent.Model;
@using Telerik.Sitefinity.Model;
@using Telerik.OpenAccess;
@using Telerik.Sitefinity.News.Model;
@using Newtonsoft.Json;

@{
    var imageurl = "";
    foreach (var relatedItem in Model.Item.Fields.NewsImage)
    {
        imageurl = (string)relatedItem.Fields.ItemDefaultUrl;
    }

    var CategoryIds = Model.Item.Fields.Category;
}

<div class="article-details @Model.CssClass" @Html.InlineEditingAttributes(Model.ProviderName, Model.ContentType.FullName, (Guid)Model.Item.Fields.Id)>

    @*<div class="post-nav">
            <div class="prev-post"><a href="#" rel="prev"><i class="fas fa-long-arrow-alt-left"></i> Previous Post</a></div>
            <div class="next-post"><a href="#" rel="next">Next Post <i class="fas fa-long-arrow-alt-right"></i></a></div>
        </div>*@

    <img src="@imageurl" alt="@Model.Item.Fields.Title" />

    <div class="entry-meta details">
        <span class="entry-cats">
            @if (Model.Item.Fields.Category != null)
            {
                foreach (var taxon in Model.Item.GetHierarchicalTaxons("Category"))
                {
                    <span class="main-color-bg cat6"><a href="#">@taxon.Title.ToString()</a></span>
                }
            }
        </span>
        <div class="clearfix"></div>
        <span class="author hidden">Posted by <a href="#" title="Posts by @DataResolver.Resolve(@Model.Item.DataItem, "Author", null)" rel="author">@DataResolver.Resolve(@Model.Item.DataItem, "Author", null)</a></span>
        <span class="sep hidden">-</span>
        <span class="date hidden">@Model.Item.GetDateTime("PublicationDate", "MMM d, yyyy")</span>
    </div>

    <h3>
        <span @Html.InlineEditingFieldAttributes("Title", "ShortText")>@Model.Item.Fields.Title</span>

    </h3>



    @*<div @Html.InlineEditingFieldAttributes("Summary", "LongText")>@Html.HtmlSanitize((string)Model.Item.Fields.Summary)</div>*@

    <div @Html.InlineEditingFieldAttributes("Content", "LongText")>@Html.HtmlSanitize((string)Model.Item.Fields.Content)</div>

    <hr class="space" />

    @{
        NewsManager newsManager = NewsManager.GetManager();
        var allItems = newsManager.GetNewsItems().Where(n => n.Status == ContentLifecycleStatus.Live && n.Visible == true).ToList();
        List<NewsItem> relatedItems = new List<NewsItem>();
        foreach (var item in allItems)
        {
            var articleTaxonIds = item.GetValue<TrackedList<Guid>>("Category");
            if (articleTaxonIds.Any(x => CategoryIds.Contains(x)))
            {

                // Skip the current loaded item in the details page
                if (item.Id != Model.Item.Fields.Id)
                {
                    relatedItems.Add(item);
                }
            }
        }
        var related = relatedItems.Take(3).ToList();
        if (related.Count > 0)
        {

            <div class="yarpp-related">
                <h3>Related news:</h3>
                <ul>
                    @foreach (var relatedItem in related)
                    {
                        var navigateUrl = "/news/news-details" + @relatedItem.ItemDefaultUrl;
                        <li>
                            <a href="@navigateUrl" rel="bookmark" title="@relatedItem.Title">
                                @relatedItem.Title
                            </a>
                        </li>
                    }
                </ul>
            </div>
        }
    }


    <hr class="space" />

    @{
        if (Model.EnableSocialSharing)
        {
            var item = Model.Item.DataItem as Telerik.Sitefinity.Model.IHasTitle;
            @Html.SocialShareOptions(item, "SocialShareArticleDetails");
        }
    }
    <hr class="space" />
    @Html.CommentsList(@Model.Item.DataItem)
</div>
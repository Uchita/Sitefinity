@model JXTNext.Sitefinity.Widgets.Content.Mvc.Models.MapsViewModel
@using Telerik.Sitefinity.Frontend.Mvc.Helpers
@using JXTNext.Sitefinity.Common.Helpers
@using System.Web;

@{
    var mapsAPIKey = new SiteSettingsHelper().GetCurrentSiteGoogleMapsAPIKey();
    var srcMap = "https://maps.googleapis.com/maps/api/js?key=" + mapsAPIKey;
    string domainName = HttpContext.Current.Request.Url.GetLeftPart(UriPartial.Authority);
    var srcPlugin = domainName + "/Frontend-Assembly/JXTNext.Sitefinity.Widgets.Content/Mvc/Scripts/Maps/jquery.googlemap.js";
}

@Html.Script(Url.Content(srcMap), "bottom")
@Html.Script(Url.Content(srcPlugin), "bottom")

<div class="map-placeholder" data-called=false style="width: 500px; height: 500px;">
    <span data-address="@Model.Address"></span>
</div>

<script type="text/javascript">

    // Initialize and add the map

    function initMap() {

        // Iterate throgh all the elemetns having class map-placeholder in the page
        // And it will place the map inside it
        $(".map-placeholder").each(function (index) {

            if ($(this).children().length > 0) {
                var markers = [];
                $(this).children().each(function (index) {
                    var addresslat = $(this).data('addresslat');
                    var addresslng = $(this).data('addresslng');
                    var address = $(this).data('address');

                    if (addresslat != 'undefined' && addresslng != 'undefined' && typeof addresslat != 'undefined' && typeof addresslng != 'undefined' && addresslat != '' && addresslng != '') {
                        markers.push({ isLatLng: true, lat: Number(addresslat), lng: Number(addresslng) });
                    }
                    else if (address != null && typeof address != 'undefined' && address != 'undefined' && address.length > 0) {
                        markers.push({ isLatLng: false, address: address });
                    }
                });

                if (markers.length > 0) {
                    $(this).googleMap({
                        zoom: 10 // Initial zoom level (optional)
                    });

                    for (var item of markers) {
                        if (item.isLatLng) {
                             $(this).addMarker({
                                coords: [item.lat, item.lng]
                            });
                        }
                        else {
                            $(this).addMarker({
                                address: item.address
                            });
                        }
                    }
                }
            }
        });
    }

    $(window).on('load', function () {
        var isLoaded = false;
        $(".map-placeholder").each(function (index) {
            var isCalled = $(this).data("called");
            if (isCalled == false || typeof isCalled == 'undefined') {
                $(this).data("called", true);
            }
            else {
                isLoaded = true;
                return false;
            }
        });

        if (!isLoaded) {
            initMap();
        }
    });

</script>



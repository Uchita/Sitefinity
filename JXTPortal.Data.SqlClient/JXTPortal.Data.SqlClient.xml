<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JXTPortal.Data.SqlClient</name>
    </assembly>
    <members>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewJobsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.ViewJobs"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the ViewJobs objects.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewJobs objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.Get(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewJobs objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of ViewJobs objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.GetByID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ViewJobs_GetByID' stored procedure. 
            </summary>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.GetViewCount(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ViewJobs_GetViewCount' stored procedure. 
            </summary>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'ViewJobs_Get_List' stored procedure. 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.Get(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wraps the 'ViewJobs_Get' stored procedure. 
            </summary>
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewJobsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewJobsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlWidgetContainersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.WidgetContainers"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.WidgetContainers"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_widgetId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WidgetContainers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.WidgetContainers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WidgetContainers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WidgetContainers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByDefaultProfessionId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__WidgetCon__Defau__53591940 key.
            	FK__WidgetCon__Defau__53591940 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_defaultProfessionId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WidgetContainers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByDefaultCountryId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__WidgetCon__Defau__544D3D79 key.
            	FK__WidgetCon__Defau__544D3D79 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_defaultCountryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WidgetContainers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByDefaultLocationId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__WidgetCon__Defau__554161B2 key.
            	FK__WidgetCon__Defau__554161B2 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_defaultLocationId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WidgetContainers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__WidgetCon__Langu__4DA03FEA key.
            	FK__WidgetCon__Langu__4DA03FEA Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_languageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WidgetContainers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__WidgetCon__SiteI__4CAC1BB1 key.
            	FK__WidgetCon__SiteI__4CAC1BB1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WidgetContainers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByWidgetId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__WidgetContainers__4BB7F778 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_widgetId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.WidgetContainers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.WidgetContainers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.WidgetContainers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.WidgetContainers)">
            <summary>
            	Inserts a JXTPortal.Entities.WidgetContainers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.WidgetContainers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.WidgetContainers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.WidgetContainers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.WidgetContainers object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.WidgetContainers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'WidgetContainers_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="widgetName"> A <c>System.String</c> instance.</param>
            <param name="widgetDomain"> A <c>System.String</c> instance.</param>
            <param name="widgetContainerClass"> A <c>System.String</c> instance.</param>
            <param name="widgetContainerHeaderClass"> A <c>System.String</c> instance.</param>
            <param name="widgetItemClass"> A <c>System.String</c> instance.</param>
            <param name="widgetJobLinkCss"> A <c>System.String</c> instance.</param>
            <param name="widgetItemLinkImageId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="showJobs"> A <c>System.Boolean?</c> instance.</param>
            <param name="showCompanies"> A <c>System.Boolean?</c> instance.</param>
            <param name="showSite"> A <c>System.Boolean?</c> instance.</param>
            <param name="showPeople"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobHtml"> A <c>System.String</c> instance.</param>
            <param name="companyHtml"> A <c>System.String</c> instance.</param>
            <param name="siteHtml"> A <c>System.String</c> instance.</param>
            <param name="peopleHtml"> A <c>System.String</c> instance.</param>
            <param name="javascript"> A <c>System.String</c> instance.</param>
            <param name="searchCss"> A <c>System.String</c> instance.</param>
            <param name="defaultProfessionId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="width"> A <c>System.Int32?</c> instance.</param>
            <param name="height"> A <c>System.Int32?</c> instance.</param>
            <param name="onAdvancedSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="widgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByDefaultLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WidgetContainers_GetByDefaultLocationId' stored procedure. 
            </summary>	
            <param name="defaultLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WidgetContainers_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'WidgetContainers_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByDefaultProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WidgetContainers_GetByDefaultProfessionId' stored procedure. 
            </summary>	
            <param name="defaultProfessionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByWidgetId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WidgetContainers_GetByWidgetId' stored procedure. 
            </summary>	
            <param name="widgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByDefaultCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WidgetContainers_GetByDefaultCountryId' stored procedure. 
            </summary>	
            <param name="defaultCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'WidgetContainers_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="widgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="widgetName"> A <c>System.String</c> instance.</param>
            <param name="widgetDomain"> A <c>System.String</c> instance.</param>
            <param name="widgetContainerClass"> A <c>System.String</c> instance.</param>
            <param name="widgetContainerHeaderClass"> A <c>System.String</c> instance.</param>
            <param name="widgetItemClass"> A <c>System.String</c> instance.</param>
            <param name="widgetJobLinkCss"> A <c>System.String</c> instance.</param>
            <param name="widgetItemLinkImageId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="showJobs"> A <c>System.Boolean?</c> instance.</param>
            <param name="showCompanies"> A <c>System.Boolean?</c> instance.</param>
            <param name="showSite"> A <c>System.Boolean?</c> instance.</param>
            <param name="showPeople"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobHtml"> A <c>System.String</c> instance.</param>
            <param name="companyHtml"> A <c>System.String</c> instance.</param>
            <param name="siteHtml"> A <c>System.String</c> instance.</param>
            <param name="peopleHtml"> A <c>System.String</c> instance.</param>
            <param name="javascript"> A <c>System.String</c> instance.</param>
            <param name="searchCss"> A <c>System.String</c> instance.</param>
            <param name="defaultProfessionId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="width"> A <c>System.Int32?</c> instance.</param>
            <param name="height"> A <c>System.Int32?</c> instance.</param>
            <param name="onAdvancedSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WidgetContainers_GetByLanguageId' stored procedure. 
            </summary>	
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WidgetContainers_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'WidgetContainers_Update' stored procedure. 
            </summary>	
            <param name="widgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="widgetName"> A <c>System.String</c> instance.</param>
            <param name="widgetDomain"> A <c>System.String</c> instance.</param>
            <param name="widgetContainerClass"> A <c>System.String</c> instance.</param>
            <param name="widgetContainerHeaderClass"> A <c>System.String</c> instance.</param>
            <param name="widgetItemClass"> A <c>System.String</c> instance.</param>
            <param name="widgetJobLinkCss"> A <c>System.String</c> instance.</param>
            <param name="widgetItemLinkImageId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="showJobs"> A <c>System.Boolean?</c> instance.</param>
            <param name="showCompanies"> A <c>System.Boolean?</c> instance.</param>
            <param name="showSite"> A <c>System.Boolean?</c> instance.</param>
            <param name="showPeople"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobHtml"> A <c>System.String</c> instance.</param>
            <param name="companyHtml"> A <c>System.String</c> instance.</param>
            <param name="siteHtml"> A <c>System.String</c> instance.</param>
            <param name="peopleHtml"> A <c>System.String</c> instance.</param>
            <param name="javascript"> A <c>System.String</c> instance.</param>
            <param name="searchCss"> A <c>System.String</c> instance.</param>
            <param name="defaultProfessionId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="width"> A <c>System.Int32?</c> instance.</param>
            <param name="height"> A <c>System.Int32?</c> instance.</param>
            <param name="onAdvancedSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WidgetContainers_Delete' stored procedure. 
            </summary>	
            <param name="widgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlWidgetContainersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWidgetContainersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlWidgetContainersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteWebParts"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteWebPartId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebParts objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebParts objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebParts objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebParts objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteWebPa__SiteI__1446FBA6 key.
            	FK__SiteWebPa__SiteI__1446FBA6 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebParts objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetBySiteWebPartTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteWebPa__SiteW__02FC7413 key.
            	FK__SiteWebPa__SiteW__02FC7413 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteWebPartTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebParts objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetBySiteWebPartId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteWebParts__33D4B598 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteWebPartId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteWebParts"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteWebParts})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteWebParts object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteWebParts)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteWebParts object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteWebParts object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteWebParts object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteWebParts)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteWebParts object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteWebParts object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteWebParts_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartName"> A <c>System.String</c> instance.</param>
            <param name="siteWebPartTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartHtml"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebParts_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteWebParts_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetByDynamicPageWebPartTemplatesLink(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebParts_GetByDynamicPageWebPartTemplatesLink' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetBySiteWebPartTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebParts_GetBySiteWebPartTypeId' stored procedure. 
            </summary>	
            <param name="siteWebPartTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetByDynamicPageContainerID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebParts_GetByDynamicPageContainerID' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebParts_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartName"> A <c>System.String</c> instance.</param>
            <param name="siteWebPartTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartHtml"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetBySiteWebPartId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebParts_GetBySiteWebPartId' stored procedure. 
            </summary>	
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebParts_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebParts_Update' stored procedure. 
            </summary>	
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartName"> A <c>System.String</c> instance.</param>
            <param name="siteWebPartTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartHtml"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebParts_Delete' stored procedure. 
            </summary>	
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteWebPartsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SalaryType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salaryTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SalaryType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SalaryType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SalaryType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SalaryType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SalaryType__2EFAF1E2 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_salaryTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SalaryType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SalaryType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SalaryType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SalaryType)">
            <summary>
            	Inserts a JXTPortal.Entities.SalaryType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SalaryType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SalaryType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SalaryType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SalaryType object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SalaryType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SalaryType_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SalaryType_Delete' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'SalaryType_Update' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SalaryType_Insert' stored procedure. 
            </summary>	
            <param name="salaryTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SalaryType_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SalaryType_GetBySalaryTypeId' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'SalaryType_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSalaryTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlRolesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Roles"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlRolesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Roles"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlRolesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlRolesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_roleId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Roles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Roles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Roles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Roles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetByProfessionIdRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the _dta_index_Roles_7_708197573__K2_K1 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_professionId"></param>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetByProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Roles index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_professionId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetByRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Roles__2B2A60FE index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Roles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Roles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Roles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Roles)">
            <summary>
            	Inserts a JXTPortal.Entities.Roles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Roles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Roles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Roles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Roles object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Roles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetSiteTree(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Roles_GetSiteTree' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Roles_Insert' stored procedure. 
            </summary>	
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetByProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Roles_GetByProfessionId' stored procedure. 
            </summary>	
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Roles_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Roles_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.CustomBulkInsert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Roles_CustomBulkInsert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="xmlText"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            This method wraps the 'Roles_Update' stored procedure. 
            </summary>	
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            This method wraps the 'Roles_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Roles_Delete' stored procedure. 
            </summary>	
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetDetailWithSite(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Roles_GetDetailWithSite' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetByRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Roles_GetByRoleId' stored procedure. 
            </summary>	
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProviderBase.GetByProfessionIdRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Roles_GetByProfessionIdRoleId' stored procedure. 
            </summary>	
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlRolesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlRolesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlRolesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRolesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlRolesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobsArchive"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsArchi__Adver__015F0FBB key.
            	FK__JobsArchi__Adver__015F0FBB Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsArchi__Curre__473D8CE8 key.
            	FK__JobsArchi__Curre__473D8CE8 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_currencyId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByJobTemplateId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsArchi__JobTe__052FA09F key.
            	FK__JobsArchi__JobTe__052FA09F Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobTemplateId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByLastModifiedByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsArchi__LastM__025333F4 key.
            	FK__JobsArchi__LastM__025333F4 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedByAdvertiserUserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByLastModifiedByAdminUserId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsArchi__LastM__0347582D key.
            	FK__JobsArchi__LastM__0347582D Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedByAdminUserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsArchi__Salar__4831B121 key.
            	FK__JobsArchi__Salar__4831B121 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_salaryTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsArchi__SiteI__79BDEDF3 key.
            	FK__JobsArchi__SiteI__79BDEDF3 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsArchi__WorkT__7AB2122C key.
            	FK__JobsArchi__WorkT__7AB2122C Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_workTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsArchive objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByAddressStatus(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobsArchive_AddressSearch index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_addressStatus"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandWorkTypeIdExpiredExpiryDate(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Nullable{System.Int32},System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobsArchive_Search index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="_currencyId"></param>
            <param name="_salaryTypeId"></param>
            <param name="_salaryLowerBand"></param>
            <param name="_salaryUpperBand"></param>
            <param name="_workTypeId"></param>
            <param name="_expired"></param>
            <param name="_expiryDate"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetBySiteIdBilledAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Boolean,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobsArchive_SiteID_Billed_AdvertiserID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_billed"></param>
            <param name="_advertiserId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetBySiteIdBilledAdvertiserIdDatePosted(JXTPortal.Data.TransactionManager,System.Int32,System.Boolean,System.Nullable{System.Int32},System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobsArchive_SiteID_Billed_AdvertiserID_DatePosted index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_billed"></param>
            <param name="_advertiserId"></param>
            <param name="_datePosted"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobsArchive__78C9C9BA index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobsArchive"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobsArchive})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobsArchive object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobsArchive)">
            <summary>
            	Inserts a JXTPortal.Entities.JobsArchive object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobsArchive object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobsArchive object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobsArchive)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobsArchive object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobsArchive object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetBySalaryTypeId' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetBySiteIdBilledAdvertiserIdDatePosted(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'JobsArchive_GetBySiteIdBilledAdvertiserIdDatePosted' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="datePosted"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_Update' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="originalJobId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobName"> A <c>System.String</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="fullDescription"> A <c>System.String</c> instance.</param>
            <param name="webServiceProcessed"> A <c>System.Boolean?</c> instance.</param>
            <param name="applicationEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="refNo"> A <c>System.String</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="datePosted"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemPrice"> A <c>System.Decimal?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="showSalaryDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryText"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationUrl"> A <c>System.String</c> instance.</param>
            <param name="uploadMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchFieldExtension"> A <c>System.String</c> instance.</param>
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="hashValue"> A <c>System.Byte[]</c> instance.</param>
            <param name="requireLogonForExternalApplications"> A <c>System.Boolean?</c> instance.</param>
            <param name="showLocationDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicTransport"> A <c>System.String</c> instance.</param>
            <param name="address"> A <c>System.String</c> instance.</param>
            <param name="contactDetails"> A <c>System.String</c> instance.</param>
            <param name="jobContactPhone"> A <c>System.String</c> instance.</param>
            <param name="jobContactName"> A <c>System.String</c> instance.</param>
            <param name="qualificationsRecognised"> A <c>System.Boolean?</c> instance.</param>
            <param name="residentOnly"> A <c>System.Boolean?</c> instance.</param>
            <param name="documentLink"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint1"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint2"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint3"> A <c>System.String</c> instance.</param>
            <param name="hotJob"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="showSalaryRange"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobLatitude"> A <c>System.Double?</c> instance.</param>
            <param name="jobLongitude"> A <c>System.Double?</c> instance.</param>
            <param name="addressStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobName"> A <c>System.String</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="fullDescription"> A <c>System.String</c> instance.</param>
            <param name="webServiceProcessed"> A <c>System.Boolean?</c> instance.</param>
            <param name="applicationEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="refNo"> A <c>System.String</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="datePosted"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemPrice"> A <c>System.Decimal?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="showSalaryDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryText"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationUrl"> A <c>System.String</c> instance.</param>
            <param name="uploadMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchFieldExtension"> A <c>System.String</c> instance.</param>
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="hashValue"> A <c>System.Byte[]</c> instance.</param>
            <param name="requireLogonForExternalApplications"> A <c>System.Boolean?</c> instance.</param>
            <param name="showLocationDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicTransport"> A <c>System.String</c> instance.</param>
            <param name="address"> A <c>System.String</c> instance.</param>
            <param name="contactDetails"> A <c>System.String</c> instance.</param>
            <param name="jobContactPhone"> A <c>System.String</c> instance.</param>
            <param name="jobContactName"> A <c>System.String</c> instance.</param>
            <param name="qualificationsRecognised"> A <c>System.Boolean?</c> instance.</param>
            <param name="residentOnly"> A <c>System.Boolean?</c> instance.</param>
            <param name="documentLink"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint1"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint2"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint3"> A <c>System.String</c> instance.</param>
            <param name="hotJob"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="showSalaryRange"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobLatitude"> A <c>System.Double?</c> instance.</param>
            <param name="jobLongitude"> A <c>System.Double?</c> instance.</param>
            <param name="addressStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByAddressStatus(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByAddressStatus' stored procedure. 
            </summary>	
            <param name="addressStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByJobId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobsArchive_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByProfessionId' stored procedure. 
            </summary>	
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_Delete' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByLocationId' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetBySiteIdBilledAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetBySiteIdBilledAdvertiserId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_Insert' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobName"> A <c>System.String</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="fullDescription"> A <c>System.String</c> instance.</param>
            <param name="webServiceProcessed"> A <c>System.Boolean?</c> instance.</param>
            <param name="applicationEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="refNo"> A <c>System.String</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="datePosted"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemPrice"> A <c>System.Decimal?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="showSalaryDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryText"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationUrl"> A <c>System.String</c> instance.</param>
            <param name="uploadMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchFieldExtension"> A <c>System.String</c> instance.</param>
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="hashValue"> A <c>System.Byte[]</c> instance.</param>
            <param name="requireLogonForExternalApplications"> A <c>System.Boolean?</c> instance.</param>
            <param name="showLocationDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicTransport"> A <c>System.String</c> instance.</param>
            <param name="address"> A <c>System.String</c> instance.</param>
            <param name="contactDetails"> A <c>System.String</c> instance.</param>
            <param name="jobContactPhone"> A <c>System.String</c> instance.</param>
            <param name="jobContactName"> A <c>System.String</c> instance.</param>
            <param name="qualificationsRecognised"> A <c>System.Boolean?</c> instance.</param>
            <param name="residentOnly"> A <c>System.Boolean?</c> instance.</param>
            <param name="documentLink"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint1"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint2"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint3"> A <c>System.String</c> instance.</param>
            <param name="hotJob"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="showSalaryRange"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobLatitude"> A <c>System.Double?</c> instance.</param>
            <param name="jobLongitude"> A <c>System.Double?</c> instance.</param>
            <param name="addressStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByLastModifiedByAdminUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByLastModifiedByAdminUserId' stored procedure. 
            </summary>	
            <param name="lastModifiedByAdminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandWorkTypeIdExpiredExpiryDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'JobsArchive_GetByAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandWorkTypeIdExpiredExpiryDate' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByExpiredExpiryDateAdvertiserIdCurrencyIdSalaryUpperBandSalaryLowerBandWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByExpiredExpiryDateAdvertiserIdCurrencyIdSalaryUpperBandSalaryLowerBandWorkTypeId' stored procedure. 
            </summary>	
            <param name="expired"> A <c>System.Boolean?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByWorkTypeId' stored procedure. 
            </summary>	
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByAreaId' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByJobItemTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByJobItemTypeId' stored procedure. 
            </summary>	
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByLastModifiedByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByLastModifiedByAdvertiserUserId' stored procedure. 
            </summary>	
            <param name="lastModifiedByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByJobTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByJobTemplateId' stored procedure. 
            </summary>	
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByCurrencyId' stored procedure. 
            </summary>	
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.GetByRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsArchive_GetByRoleId' stored procedure. 
            </summary>	
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobsArchiveProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Integrations"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_integrationId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Integrations objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Integrations objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Integrations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Integrations objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the fk_SiteID key.
            	fk_SiteID Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Integrations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.GetByIntegrationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Integrat__D89568553E4E0868 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_integrationId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Integrations"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Integrations})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Integrations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Integrations)">
            <summary>
            	Inserts a JXTPortal.Entities.Integrations object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Integrations object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Integrations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Integrations)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Integrations object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Integrations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Integrations_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="integrationType"> A <c>System.Int32?</c> instance.</param>
            <param name="jsonText"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="integrationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Integrations_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Integrations_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Integrations_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.GetByIntegrationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Integrations_GetByIntegrationId' stored procedure. 
            </summary>	
            <param name="integrationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Integrations_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="integrationId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="integrationType"> A <c>System.Int32?</c> instance.</param>
            <param name="jsonText"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Integrations_Delete' stored procedure. 
            </summary>	
            <param name="integrationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Integrations_Update' stored procedure. 
            </summary>	
            <param name="integrationId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="integrationType"> A <c>System.Int32?</c> instance.</param>
            <param name="jsonText"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlIntegrationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.EmailTemplates"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_emailTemplateId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailTemplates objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailTemplates objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailTemplates objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__EmailTemp__LastM__2E3BD7D3 key.
            	FK__EmailTemp__LastM__2E3BD7D3 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__EmailTemp__SiteI__08D548FA key.
            	FK__EmailTemp__SiteI__08D548FA Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmailTemplates_LanguageID key.
            	FK_EmailTemplates_LanguageID Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_languageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetBySiteIdEmailCodeGlobalTemplateLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Unique_EmailTemplates index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_emailCode"></param>
            <param name="_globalTemplate"></param>
            <param name="_languageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.EmailTemplates"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetByEmailTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__tmp_ms_xx_EmailT__2C538F61 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_emailTemplateId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.EmailTemplates"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.EmailTemplates})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.EmailTemplates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.EmailTemplates)">
            <summary>
            	Inserts a JXTPortal.Entities.EmailTemplates object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.EmailTemplates object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.EmailTemplates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.EmailTemplates)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.EmailTemplates object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.EmailTemplates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetBySiteIdEmailCodeGlobalTemplateLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailTemplates_GetBySiteIdEmailCodeGlobalTemplateLanguageId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailCode"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetBySiteIdEmailCode(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'EmailTemplates_GetBySiteIdEmailCode' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailCode"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetBySiteIdEmailCodeGlobalTemplate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'EmailTemplates_GetBySiteIdEmailCodeGlobalTemplate' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailCode"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailTemplates_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailTemplates_GetByLanguageId' stored procedure. 
            </summary>	
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailTemplates_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'EmailTemplates_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailTemplateParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailCode"> A <c>System.String</c> instance.</param>
            <param name="emailDescription"> A <c>System.String</c> instance.</param>
            <param name="emailSubject"> A <c>System.String</c> instance.</param>
            <param name="emailBodyText"> A <c>System.String</c> instance.</param>
            <param name="emailBodyHtml"> A <c>System.String</c> instance.</param>
            <param name="emailFields"> A <c>System.String</c> instance.</param>
            <param name="emailAddressName"> A <c>System.String</c> instance.</param>
            <param name="emailAddressFrom"> A <c>System.String</c> instance.</param>
            <param name="emailAddressCc"> A <c>System.String</c> instance.</param>
            <param name="emailAddressBcc"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="emailAddressTo"> A <c>System.String</c> instance.</param>
            <param name="emailAddressToName"> A <c>System.String</c> instance.</param>
            <param name="emailAddressToMandatory"> A <c>System.Boolean?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetByEmailTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailTemplates_GetByEmailTemplateId' stored procedure. 
            </summary>	
            <param name="emailTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'EmailTemplates_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailTemplates_Update' stored procedure. 
            </summary>	
            <param name="emailTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailTemplateParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailCode"> A <c>System.String</c> instance.</param>
            <param name="emailDescription"> A <c>System.String</c> instance.</param>
            <param name="emailSubject"> A <c>System.String</c> instance.</param>
            <param name="emailBodyText"> A <c>System.String</c> instance.</param>
            <param name="emailBodyHtml"> A <c>System.String</c> instance.</param>
            <param name="emailFields"> A <c>System.String</c> instance.</param>
            <param name="emailAddressName"> A <c>System.String</c> instance.</param>
            <param name="emailAddressFrom"> A <c>System.String</c> instance.</param>
            <param name="emailAddressCc"> A <c>System.String</c> instance.</param>
            <param name="emailAddressBcc"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="emailAddressTo"> A <c>System.String</c> instance.</param>
            <param name="emailAddressToName"> A <c>System.String</c> instance.</param>
            <param name="emailAddressToMandatory"> A <c>System.Boolean?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailTemplates_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="emailTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailTemplateParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailCode"> A <c>System.String</c> instance.</param>
            <param name="emailDescription"> A <c>System.String</c> instance.</param>
            <param name="emailSubject"> A <c>System.String</c> instance.</param>
            <param name="emailBodyText"> A <c>System.String</c> instance.</param>
            <param name="emailBodyHtml"> A <c>System.String</c> instance.</param>
            <param name="emailFields"> A <c>System.String</c> instance.</param>
            <param name="emailAddressName"> A <c>System.String</c> instance.</param>
            <param name="emailAddressFrom"> A <c>System.String</c> instance.</param>
            <param name="emailAddressCc"> A <c>System.String</c> instance.</param>
            <param name="emailAddressBcc"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="emailAddressTo"> A <c>System.String</c> instance.</param>
            <param name="emailAddressToName"> A <c>System.String</c> instance.</param>
            <param name="emailAddressToMandatory"> A <c>System.Boolean?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailTemplates_Delete' stored procedure. 
            </summary>	
            <param name="emailTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailTemplates_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.CustomGetByEmailCode(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'EmailTemplates_CustomGetByEmailCode' stored procedure. 
            </summary>	
            <param name="emailCode"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEmailTemplatesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPagesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPages"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPages"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByRelatedDynamicPageIdFromRelatedDynamicPages(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets DynamicPages objects from the datasource by RelatedDynamicPageID in the
            	RelatedDynamicPages table. Table DynamicPages is related to table DynamicPages
            	through the (M:N) relationship defined in the RelatedDynamicPages table.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_relatedDynamicPageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of DynamicPages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByDynamicPageIdFromRelatedDynamicPages(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets DynamicPages objects from the datasource by DynamicPageID in the
            	RelatedDynamicPages table. Table DynamicPages is related to table DynamicPages
            	through the (M:N) relationship defined in the RelatedDynamicPages table.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of DynamicPages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_dynamicPageId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByDynamicPageWebPartTemplateId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicPa__Dynam__619B8048 key.
            	FK__DynamicPa__Dynam__619B8048 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageWebPartTemplateId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicPa__Langu__60A75C0F key.
            	FK__DynamicPa__Langu__60A75C0F Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_languageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicPa__LastM__628FA481 key.
            	FK__DynamicPa__LastM__628FA481 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_DynamicPages_Sites key.
            	FK_DynamicPages_Sites Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetBySiteIdPageNameLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Unique_DynamicPages index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_pageName"></param>
            <param name="_languageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicPages"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetBySiteIdLanguageIdPageFriendlyName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Unique_DynamicPages_FriendlyName index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_languageId"></param>
            <param name="_pageFriendlyName"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicPages"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByDynamicPageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__DynamicPages__0BC6C43E index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicPages"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.DynamicPages})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPages)">
            <summary>
            	Inserts a JXTPortal.Entities.DynamicPages object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPages object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPages)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPages object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.DynamicPages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetSiteMissingSystemPagesByName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'DynamicPages_GetSiteMissingSystemPagesByName' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetBySiteIdPageNameLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetBySiteIdPageNameLanguageId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByKeywords(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetByKeywords' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="keywords"> A <c>System.String</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="searhable"> A <c>System.Boolean?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetNavigation(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'DynamicPages_GetNavigation' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="onMainNavigation"> A <c>System.Boolean?</c> instance.</param>
            <param name="onDynamicPageNavigation"> A <c>System.Boolean?</c> instance.</param>
            <param name="onFooterNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetBySiteIdPageName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'DynamicPages_GetBySiteIdPageName' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.CopyDynamicPagesForNewLangauge(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_CopyDynamicPagesForNewLangauge' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="newSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="newLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByDynamicPageWebPartTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetByDynamicPageWebPartTemplateId' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'DynamicPages_Update' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="pageTitle"> A <c>System.String</c> instance.</param>
            <param name="pageContent"> A <c>System.String</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="hyperLink"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="openInNewWindow"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="fullScreen"> A <c>System.Boolean?</c> instance.</param>
            <param name="onTopNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onLeftNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onBottomNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onSiteMap"> A <c>System.Boolean?</c> instance.</param>
            <param name="searchable"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="secured"> A <c>System.Boolean?</c> instance.</param>
            <param name="customUrl"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="generateBreadcrumb"> A <c>System.Boolean?</c> instance.</param>
            <param name="publishOn"> A <c>System.DateTime?</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByDynamicPageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetByDynamicPageId' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetDetail(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetDetail' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.CustomGetValidHierarchy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'DynamicPages_CustomGetValidHierarchy' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="onSiteMap"> A <c>System.Boolean?</c> instance.</param>
            <param name="nonSystemPage"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'DynamicPages_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_Delete' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetHierarchyByChild(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetHierarchyByChild' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetSystemPagesBySiteIDPageName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'DynamicPages_GetSystemPagesBySiteIDPageName' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.UpdateWebPartTemplate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'DynamicPages_UpdateWebPartTemplate' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="updateChildPages"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.CopySystemPage(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_CopySystemPage' stored procedure. 
            </summary>	
            <param name="masterSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultAdminId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByDynamicPageIdFromRelatedDynamicPages(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetByDynamicPageIdFromRelatedDynamicPages' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetMissingSystemPagesBySiteID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetMissingSystemPagesBySiteID' stored procedure. 
            </summary>	
            <param name="defaultSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetBySiteIdLanguageIdPageFriendlyName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'DynamicPages_GetBySiteIdLanguageIdPageFriendlyName' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByRelatedDynamicPageIdFromRelatedDynamicPages(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetByRelatedDynamicPageIdFromRelatedDynamicPages' stored procedure. 
            </summary>	
            <param name="relatedDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetSystemPagesBySiteIDLanguageID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'DynamicPages_GetSystemPagesBySiteIDLanguageID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetBySiteIdPageFriendlyName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'DynamicPages_GetBySiteIdPageFriendlyName' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByDynamicPageIdLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetByDynamicPageIdLanguageId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.BulkUpdate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'DynamicPages_BulkUpdate' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="from"> A <c>System.String</c> instance.</param>
            <param name="to"> A <c>System.String</c> instance.</param>
            <param name="updateSystemPages"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetHierarchy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'DynamicPages_GetHierarchy' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="onSiteMap"> A <c>System.Boolean?</c> instance.</param>
            <param name="nonSystemPage"> A <c>System.Boolean?</c> instance.</param>
            <param name="showAll"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'DynamicPages_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="pageTitle"> A <c>System.String</c> instance.</param>
            <param name="pageContent"> A <c>System.String</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="hyperLink"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="openInNewWindow"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="fullScreen"> A <c>System.Boolean?</c> instance.</param>
            <param name="onTopNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onLeftNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onBottomNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onSiteMap"> A <c>System.Boolean?</c> instance.</param>
            <param name="searchable"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="secured"> A <c>System.Boolean?</c> instance.</param>
            <param name="customUrl"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="generateBreadcrumb"> A <c>System.Boolean?</c> instance.</param>
            <param name="publishOn"> A <c>System.DateTime?</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetSystemPagesNameBySiteID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetSystemPagesNameBySiteID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.CustomGetBySiteIDLanguageID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_CustomGetBySiteIDLanguageID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetBySiteIdPageNameLanguageIdWithRoot(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetBySiteIdPageNameLanguageIdWithRoot' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'DynamicPages_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="pageTitle"> A <c>System.String</c> instance.</param>
            <param name="pageContent"> A <c>System.String</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="hyperLink"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="openInNewWindow"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="fullScreen"> A <c>System.Boolean?</c> instance.</param>
            <param name="onTopNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onLeftNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onBottomNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onSiteMap"> A <c>System.Boolean?</c> instance.</param>
            <param name="searchable"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="secured"> A <c>System.Boolean?</c> instance.</param>
            <param name="customUrl"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="generateBreadcrumb"> A <c>System.Boolean?</c> instance.</param>
            <param name="publishOn"> A <c>System.DateTime?</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPages_GetByLanguageId' stored procedure. 
            </summary>	
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPagesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPagesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPagesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPageRevisions"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPageRevisions"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_dynamicPageRevisionId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageRevisions objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageRevisions objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageRevisions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageRevisions objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.GetByDynamicPageRevisionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DynamicPageRevision index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageRevisionId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicPageRevisions"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.DynamicPageRevisions})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPageRevisions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPageRevisions)">
            <summary>
            	Inserts a JXTPortal.Entities.DynamicPageRevisions object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPageRevisions object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPageRevisions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPageRevisions)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPageRevisions object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.DynamicPageRevisions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Guid},System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'DynamicPageRevisions_Insert' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="pageTitle"> A <c>System.String</c> instance.</param>
            <param name="pageContent"> A <c>System.String</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="hyperLink"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="openInNewWindow"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="fullScreen"> A <c>System.Boolean?</c> instance.</param>
            <param name="onTopNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onLeftNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onBottomNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onSiteMap"> A <c>System.Boolean?</c> instance.</param>
            <param name="searchable"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="secured"> A <c>System.Boolean?</c> instance.</param>
            <param name="customUrl"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="generateBreadcrumb"> A <c>System.Boolean?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="publishOn"> A <c>System.DateTime?</c> instance.</param>
            <param name="mappingId"> A <c>System.Guid?</c> instance.</param>
            <param name="comment"> A <c>System.String</c> instance.</param>
            <param name="pageLog"> A <c>System.String</c> instance.</param>
            <param name="dynamicPageRevisionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.CustomGetBySiteIDMappingID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Guid})">
            <summary>
            This method wraps the 'DynamicPageRevisions_CustomGetBySiteIDMappingID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="mappingId"> A <c>System.Guid?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.CustomSaveRevision(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Guid},System.String,System.String)">
            <summary>
            This method wraps the 'DynamicPageRevisions_CustomSaveRevision' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="pageTitle"> A <c>System.String</c> instance.</param>
            <param name="pageContent"> A <c>System.String</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="hyperLink"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="openInNewWindow"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="fullScreen"> A <c>System.Boolean?</c> instance.</param>
            <param name="onTopNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onLeftNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onBottomNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onSiteMap"> A <c>System.Boolean?</c> instance.</param>
            <param name="searchable"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="secured"> A <c>System.Boolean?</c> instance.</param>
            <param name="customUrl"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="generateBreadcrumb"> A <c>System.Boolean?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="publishOn"> A <c>System.DateTime?</c> instance.</param>
            <param name="mappingId"> A <c>System.Guid?</c> instance.</param>
            <param name="comment"> A <c>System.String</c> instance.</param>
            <param name="pageLog"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.GetByDynamicPageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageRevisions_GetByDynamicPageId' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.GetByDynamicPageRevisionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageRevisions_GetByDynamicPageRevisionId' stored procedure. 
            </summary>	
            <param name="dynamicPageRevisionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'DynamicPageRevisions_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Guid},System.String,System.String)">
            <summary>
            This method wraps the 'DynamicPageRevisions_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="dynamicPageRevisionId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="pageTitle"> A <c>System.String</c> instance.</param>
            <param name="pageContent"> A <c>System.String</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="hyperLink"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="openInNewWindow"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="fullScreen"> A <c>System.Boolean?</c> instance.</param>
            <param name="onTopNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onLeftNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onBottomNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onSiteMap"> A <c>System.Boolean?</c> instance.</param>
            <param name="searchable"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="secured"> A <c>System.Boolean?</c> instance.</param>
            <param name="customUrl"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="generateBreadcrumb"> A <c>System.Boolean?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="publishOn"> A <c>System.DateTime?</c> instance.</param>
            <param name="mappingId"> A <c>System.Guid?</c> instance.</param>
            <param name="comment"> A <c>System.String</c> instance.</param>
            <param name="pageLog"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.CustomGetBySiteIDStatus(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageRevisions_CustomGetBySiteIDStatus' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageRevisions_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Guid},System.String,System.String)">
            <summary>
            This method wraps the 'DynamicPageRevisions_Update' stored procedure. 
            </summary>	
            <param name="dynamicPageRevisionId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="pageTitle"> A <c>System.String</c> instance.</param>
            <param name="pageContent"> A <c>System.String</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="hyperLink"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="openInNewWindow"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="fullScreen"> A <c>System.Boolean?</c> instance.</param>
            <param name="onTopNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onLeftNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onBottomNav"> A <c>System.Boolean?</c> instance.</param>
            <param name="onSiteMap"> A <c>System.Boolean?</c> instance.</param>
            <param name="searchable"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="secured"> A <c>System.Boolean?</c> instance.</param>
            <param name="customUrl"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="generateBreadcrumb"> A <c>System.Boolean?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="publishOn"> A <c>System.DateTime?</c> instance.</param>
            <param name="mappingId"> A <c>System.Guid?</c> instance.</param>
            <param name="comment"> A <c>System.String</c> instance.</param>
            <param name="pageLog"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.CustomRevertPage(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            This method wraps the 'DynamicPageRevisions_CustomRevertPage' stored procedure. 
            </summary>	
            <param name="mappingId"> A <c>System.Guid?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageRevisions_Delete' stored procedure. 
            </summary>	
            <param name="dynamicPageRevisionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageRevisionsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicContent"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_dynamicContentId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicContent objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicContent objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicContent objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicContent objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicCo__LastM__63A73788 key.
            	FK__DynamicCo__LastM__63A73788 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicContent objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicCo__SiteI__62B3134F key.
            	FK__DynamicCo__SiteI__62B3134F Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicContent objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.GetByDynamicContentId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__DynamicC__6A79B03A5FD6A6A4 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicContentId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicContent"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.DynamicContent})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicContent object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicContent)">
            <summary>
            	Inserts a JXTPortal.Entities.DynamicContent object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicContent object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicContent object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicContent)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicContent object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.DynamicContent object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicContentProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.CustomWidgetCssSelector"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.CustomWidgetCssSelector"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customWidgetCssSelectorId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidgetCssSelector objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidgetCssSelector objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidgetCssSelector objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidgetCssSelector objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__CustomWid__SiteI__3355AF8A key.
            	FK__CustomWid__SiteI__3355AF8A Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidgetCssSelector objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.GetByCustomWidgetCssSelectorId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__CustomWi__CF286719316D6718 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_customWidgetCssSelectorId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.CustomWidgetCssSelector"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.CustomWidgetCssSelector})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.CustomWidgetCssSelector object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.CustomWidgetCssSelector)">
            <summary>
            	Inserts a JXTPortal.Entities.CustomWidgetCssSelector object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.CustomWidgetCssSelector object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.CustomWidgetCssSelector object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.CustomWidgetCssSelector)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.CustomWidgetCssSelector object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.CustomWidgetCssSelector object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'CustomWidgetCSSSelector_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetCssSelectorName"> A <c>System.String</c> instance.</param>
            <param name="customWidgetCssSelectorClassName"> A <c>System.String</c> instance.</param>
            <param name="active"> A <c>System.Boolean?</c> instance.</param>
            <param name="modifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="modifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetCssSelectorId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.GetByCustomWidgetCssSelectorId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidgetCSSSelector_GetByCustomWidgetCssSelectorId' stored procedure. 
            </summary>	
            <param name="customWidgetCssSelectorId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidgetCSSSelector_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'CustomWidgetCSSSelector_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidgetCSSSelector_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidgetCSSSelector_Update' stored procedure. 
            </summary>	
            <param name="customWidgetCssSelectorId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetCssSelectorName"> A <c>System.String</c> instance.</param>
            <param name="customWidgetCssSelectorClassName"> A <c>System.String</c> instance.</param>
            <param name="active"> A <c>System.Boolean?</c> instance.</param>
            <param name="modifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="modifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidgetCSSSelector_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="customWidgetCssSelectorId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetCssSelectorName"> A <c>System.String</c> instance.</param>
            <param name="customWidgetCssSelectorClassName"> A <c>System.String</c> instance.</param>
            <param name="active"> A <c>System.Boolean?</c> instance.</param>
            <param name="modifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="modifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidgetCSSSelector_Delete' stored procedure. 
            </summary>	
            <param name="customWidgetCssSelectorId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.CustomGetBySiteID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidgetCSSSelector_CustomGetBySiteID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCustomWidgetCssSelectorProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.CustomPayment"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customPaymentId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomPayment objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomPayment objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomPayment objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomPayment objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomPayment_Sites key.
            	FK_CustomPayment_Sites Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomPayment objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.GetByCustomPaymentId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CustomPayment index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_customPaymentId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.CustomPayment"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.CustomPayment})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.CustomPayment object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.CustomPayment)">
            <summary>
            	Inserts a JXTPortal.Entities.CustomPayment object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.CustomPayment object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.CustomPayment object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.CustomPayment)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.CustomPayment object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.CustomPayment object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.CustomGetOrderDetails(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomPayment_CustomGetOrderDetails' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="isPaid"> A <c>System.Boolean?</c> instance.</param>
            <param name="paymentType"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.CustomGetByGuid(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            This method wraps the 'CustomPayment_CustomGetByGuid' stored procedure. 
            </summary>	
            <param name="customPaymentGuid"> A <c>System.Guid?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCustomPaymentProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.ViewSiteAdvertisers"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the ViewSiteAdvertisers objects.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewSiteAdvertisers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.Get(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewSiteAdvertisers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of ViewSiteAdvertisers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'ViewSiteAdvertisers_Get_List' stored procedure. 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.Get(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ViewSiteAdvertisers_Get' stored procedure. 
            </summary>
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewSiteAdvertisersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlProfessionProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Profession"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlProfessionProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Profession"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlProfessionProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlProfessionProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_professionId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Profession objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Profession objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Profession objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Profession objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.GetByReferredSiteId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Professio__Refer__64049B05 key.
            	FK__Professio__Refer__64049B05 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_referredSiteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Profession objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.GetByProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Profession__2942188C index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_professionId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Profession"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Profession})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Profession object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Profession)">
            <summary>
            	Inserts a JXTPortal.Entities.Profession object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Profession object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Profession object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Profession)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Profession object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Profession object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.GetSiteTree(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Profession_GetSiteTree' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Profession_Insert' stored procedure. 
            </summary>	
            <param name="professionName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="referredSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.GetByProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Profession_GetByProfessionId' stored procedure. 
            </summary>	
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Profession_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Profession_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.CustomBulkInsert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Profession_CustomBulkInsert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="xmlText"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Profession_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="referredSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Profession_Delete' stored procedure. 
            </summary>	
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.GetDetailWithSite(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Profession_GetDetailWithSite' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Profession_Update' stored procedure. 
            </summary>	
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="referredSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.GetByReferredSiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Profession_GetByReferredSiteId' stored procedure. 
            </summary>	
            <param name="referredSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlProfessionProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlProfessionProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlProfessionProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlNewsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.News"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlNewsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.News"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_newsId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.News objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.News objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.News objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.News objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__News__LastModifi__7D439ABD key.
            	FK__News__LastModifi__7D439ABD Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.News objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetByNewsCategoryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__News__NewsCatego__7C4F7684 key.
            	FK__News__NewsCatego__7C4F7684 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_newsCategoryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.News objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__News__SiteID__09C96D33 key.
            	FK__News__SiteID__09C96D33 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.News objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetByNewsId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__News__2C3393D0 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_newsId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.News"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.News})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.News object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.News)">
            <summary>
            	Inserts a JXTPortal.Entities.News object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.News object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.News object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.News)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.News object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.News object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.CustomGetNews(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'News_CustomGetNews' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="keyword"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'News_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="subject"> A <c>System.String</c> instance.</param>
            <param name="content"> A <c>System.String</c> instance.</param>
            <param name="postDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="newsIndustryId"> A <c>System.Int32?</c> instance.</param>
            <param name="newsTypeIds"> A <c>System.String</c> instance.</param>
            <param name="customXml"> A <c>System.String</c> instance.</param>
            <param name="imageUrl"> A <c>System.String</c> instance.</param>
            <param name="author"> A <c>System.String</c> instance.</param>
            <param name="newsId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'News_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'News_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'News_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            This method wraps the 'News_Update' stored procedure. 
            </summary>	
            <param name="newsId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="subject"> A <c>System.String</c> instance.</param>
            <param name="content"> A <c>System.String</c> instance.</param>
            <param name="postDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="newsIndustryId"> A <c>System.Int32?</c> instance.</param>
            <param name="newsTypeIds"> A <c>System.String</c> instance.</param>
            <param name="customXml"> A <c>System.String</c> instance.</param>
            <param name="imageUrl"> A <c>System.String</c> instance.</param>
            <param name="author"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetByNewsId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'News_GetByNewsId' stored procedure. 
            </summary>	
            <param name="newsId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            This method wraps the 'News_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="newsId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="subject"> A <c>System.String</c> instance.</param>
            <param name="content"> A <c>System.String</c> instance.</param>
            <param name="postDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="newsIndustryId"> A <c>System.Int32?</c> instance.</param>
            <param name="newsTypeIds"> A <c>System.String</c> instance.</param>
            <param name="customXml"> A <c>System.String</c> instance.</param>
            <param name="imageUrl"> A <c>System.String</c> instance.</param>
            <param name="author"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'News_Delete' stored procedure. 
            </summary>	
            <param name="newsId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'News_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProviderBase.GetByNewsCategoryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'News_GetByNewsCategoryId' stored procedure. 
            </summary>	
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberLanguages"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberLanguageId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLanguages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLanguages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLanguages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLanguages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberLan__Membe__071B8E18 key.
            	FK__MemberLan__Membe__071B8E18 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLanguages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.GetByMemberLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__MemberLa__ADB965C7053345A6 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberLanguageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberLanguages"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberLanguages})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberLanguages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberLanguages)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberLanguages object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberLanguages object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberLanguages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberLanguages)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberLanguages object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberLanguages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberLanguages_Insert' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="langauges"> A <c>System.String</c> instance.</param>
            <param name="profieciency"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="memberLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.GetByMemberLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberLanguages_GetByMemberLanguageId' stored procedure. 
            </summary>	
            <param name="memberLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberLanguages_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberLanguages_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'MemberLanguages_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="langauges"> A <c>System.String</c> instance.</param>
            <param name="profieciency"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberLanguages_Delete' stored procedure. 
            </summary>	
            <param name="memberLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'MemberLanguages_Update' stored procedure. 
            </summary>	
            <param name="memberLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="langauges"> A <c>System.String</c> instance.</param>
            <param name="profieciency"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberLanguages_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberLanguagesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobRoles"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobRoleId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobRoles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobRoles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobRoles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobRoles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobRoles__JobArc__1471E42F key.
            	FK__JobRoles__JobArc__1471E42F Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobArchiveId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobRoles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobRoles__JobID__137DBFF6 key.
            	FK__JobRoles__JobID__137DBFF6 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobRoles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetByRoleId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobRoles__RoleID__15660868 key.
            	FK__JobRoles__RoleID__15660868 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_roleId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobRoles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetByJobRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobRoles__12899BBD index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobRoleId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobRoles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobRoles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobRoles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobRoles)">
            <summary>
            	Inserts a JXTPortal.Entities.JobRoles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobRoles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobRoles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobRoles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobRoles object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobRoles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'JobRoles_Insert' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobRoles_GetByJobId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetByJobRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobRoles_GetByJobRoleId' stored procedure. 
            </summary>	
            <param name="jobRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobRoles_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobRoles_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetByRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobRoles_GetByRoleId' stored procedure. 
            </summary>	
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobRoles_Update' stored procedure. 
            </summary>	
            <param name="jobRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobRoles_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobRoles_Delete' stored procedure. 
            </summary>	
            <param name="jobRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobRoles_GetByJobArchiveId' stored procedure. 
            </summary>	
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.GetByJobIdProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobRoles_GetByJobIdProfessionId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobRolesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobRolesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobRoles"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobRolesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobRolesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobApplicationNotes"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobApplicationNotes"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobApplicationNoteId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationNotes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationNotes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationNotes objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationNotes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobApplic__Adver__67D5DE90 key.
            	FK__JobApplic__Adver__67D5DE90 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserUserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationNotes objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetByJobApplicationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobApplic__JobAp__69BE2702 key.
            	FK__JobApplic__JobAp__69BE2702 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobApplicationId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationNotes objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobApplic__Membe__68CA02C9 key.
            	FK__JobApplic__Membe__68CA02C9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationNotes objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetByJobApplicationNoteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobApplicationNo__66E1BA57 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobApplicationNoteId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobApplicationNotes"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobApplicationNotes})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobApplicationNotes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobApplicationNotes)">
            <summary>
            	Inserts a JXTPortal.Entities.JobApplicationNotes object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobApplicationNotes object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobApplicationNotes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobApplicationNotes)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobApplicationNotes object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobApplicationNotes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'JobApplicationNotes_Insert' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="note"> A <c>System.String</c> instance.</param>
            <param name="jobApplicationNoteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplicationNotes_GetByAdvertiserUserId' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplicationNotes_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobApplicationNotes_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplicationNotes_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetByJobApplicationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplicationNotes_GetByJobApplicationId' stored procedure. 
            </summary>	
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobApplicationNotes_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobApplicationNoteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="note"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplicationNotes_Delete' stored procedure. 
            </summary>	
            <param name="jobApplicationNoteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.GetByJobApplicationNoteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplicationNotes_GetByJobApplicationNoteId' stored procedure. 
            </summary>	
            <param name="jobApplicationNoteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobApplicationNotes_Update' stored procedure. 
            </summary>	
            <param name="jobApplicationNoteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="note"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobApplicationNotesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.GlobalSettings"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_globalSettingId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByDefaultCountryId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__GlobalSet__Defau__0445F0DF key.
            	FK__GlobalSet__Defau__0445F0DF Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_defaultCountryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByDefaultLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__GlobalSet__Defau__5772F790 key.
            	FK__GlobalSet__Defau__5772F790 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_defaultLanguageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByDefaultDynamicPageId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__GlobalSet__Defau__58671BC9 key.
            	FK__GlobalSet__Defau__58671BC9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_defaultDynamicPageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__GlobalSet__LastM__5A4F643B key.
            	FK__GlobalSet__LastM__5A4F643B Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteFavIconId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__GlobalSet__SiteF__5C37ACAD key.
            	FK__GlobalSet__SiteF__5C37ACAD Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteFavIconId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__GlobalSet__SiteI__125EB334 key.
            	FK__GlobalSet__SiteI__125EB334 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalSettings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteIdGlobalSettingId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the _dta_index_GlobalSettings_7_408245105__K2_K1_55 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_globalSettingId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteIdPublicJobsSearch(JXTPortal.Data.TransactionManager,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_GlobalSettings_SiteID_PublicJobsSearch index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_publicJobsSearch"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteIdUseAdvertiserFilter(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_GlobalSettings_SiteID_UseAdvertiserFilter index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_useAdvertiserFilter"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByPublicJobsSearchPrivateJobsSiteId(JXTPortal.Data.TransactionManager,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_GlobalSettins_PublicJobsSearch_PrivateJobs_SiteID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_publicJobsSearch"></param>
            <param name="_privateJobs"></param>
            <param name="_siteId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByGlobalSettingId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__tmp_ms_xx_Global__408F9238 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_globalSettingId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.GlobalSettings"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.GlobalSettings})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.GlobalSettings object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.GlobalSettings)">
            <summary>
            	Inserts a JXTPortal.Entities.GlobalSettings object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.GlobalSettings object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.GlobalSettings object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.GlobalSettings)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.GlobalSettings object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.GlobalSettings object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByPublicJobsSearchPrivateJobsSiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetByPublicJobsSearchPrivateJobsSiteId' stored procedure. 
            </summary>	
            <param name="publicJobsSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateJobs"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'GlobalSettings_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="globalSettingId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="publicJobsSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicMembersSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicCompaniesSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicSponsoredAdverts"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateJobs"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateMembers"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateCompanies"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="pageTitlePrefix"> A <c>System.String</c> instance.</param>
            <param name="pageTitleSuffix"> A <c>System.String</c> instance.</param>
            <param name="defaultTitle"> A <c>System.String</c> instance.</param>
            <param name="homeTitle"> A <c>System.String</c> instance.</param>
            <param name="defaultDescription"> A <c>System.String</c> instance.</param>
            <param name="homeDescription"> A <c>System.String</c> instance.</param>
            <param name="defaultKeywords"> A <c>System.String</c> instance.</param>
            <param name="homeKeywords"> A <c>System.String</c> instance.</param>
            <param name="showFaceBookButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="useAdvertiserFilter"> A <c>System.Int32?</c> instance.</param>
            <param name="merchantId"> A <c>System.Int32?</c> instance.</param>
            <param name="showTwitterButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="showJobAlertButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="showLinkedInButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteFavIconId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteDocType"> A <c>System.String</c> instance.</param>
            <param name="currencySymbol"> A <c>System.String</c> instance.</param>
            <param name="ftpFolderLocation"> A <c>System.String</c> instance.</param>
            <param name="metaTags"> A <c>System.String</c> instance.</param>
            <param name="systemMetaTags"> A <c>System.String</c> instance.</param>
            <param name="memberRegistrationNotification"> A <c>System.String</c> instance.</param>
            <param name="linkedInApi"> A <c>System.String</c> instance.</param>
            <param name="linkedInLogo"> A <c>System.String</c> instance.</param>
            <param name="linkedInCompanyId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInEmail"> A <c>System.String</c> instance.</param>
            <param name="privacySettings"> A <c>System.String</c> instance.</param>
            <param name="wwwRedirect"> A <c>System.Boolean?</c> instance.</param>
            <param name="allowAdvertiser"> A <c>System.Boolean?</c> instance.</param>
            <param name="linkedInApiSecret"> A <c>System.String</c> instance.</param>
            <param name="googleClientId"> A <c>System.String</c> instance.</param>
            <param name="googleClientSecret"> A <c>System.String</c> instance.</param>
            <param name="facebookAppId"> A <c>System.String</c> instance.</param>
            <param name="facebookAppSecret"> A <c>System.String</c> instance.</param>
            <param name="linkedInButtonSize"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="payPalUsername"> A <c>System.String</c> instance.</param>
            <param name="payPalPassword"> A <c>System.String</c> instance.</param>
            <param name="payPalSignature"> A <c>System.String</c> instance.</param>
            <param name="securePayMerchantId"> A <c>System.String</c> instance.</param>
            <param name="securePayPassword"> A <c>System.String</c> instance.</param>
            <param name="usingSsl"> A <c>System.Boolean?</c> instance.</param>
            <param name="useCustomProfessionRole"> A <c>System.Boolean?</c> instance.</param>
            <param name="generateJobXml"> A <c>System.Boolean?</c> instance.</param>
            <param name="isPrivateSite"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateRedirectUrl"> A <c>System.String</c> instance.</param>
            <param name="enableJobCustomQuestionnaire"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobApplicationTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobScreeningProcess"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserApprovalProcess"> A <c>System.Int32?</c> instance.</param>
            <param name="siteType"> A <c>System.Int32?</c> instance.</param>
            <param name="enableSsl"> A <c>System.Boolean?</c> instance.</param>
            <param name="gst"> A <c>System.Decimal?</c> instance.</param>
            <param name="gstLabel"> A <c>System.String</c> instance.</param>
            <param name="numberOfPremiumJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="premiumJobDays"> A <c>System.Int32?</c> instance.</param>
            <param name="displayPremiumJobsOnResults"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobExpiryNotification"> A <c>System.Boolean?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="payPalClientId"> A <c>System.String</c> instance.</param>
            <param name="payPalClientSecret"> A <c>System.String</c> instance.</param>
            <param name="paypalUser"> A <c>System.String</c> instance.</param>
            <param name="paypalProPassword"> A <c>System.String</c> instance.</param>
            <param name="paypalVendor"> A <c>System.String</c> instance.</param>
            <param name="paypalPartner"> A <c>System.String</c> instance.</param>
            <param name="invoiceSiteInfo"> A <c>System.String</c> instance.</param>
            <param name="invoiceSiteFooter"> A <c>System.String</c> instance.</param>
            <param name="enableTermsAndConditions"> A <c>System.Boolean?</c> instance.</param>
            <param name="defaultEmailLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="googleTagManager"> A <c>System.String</c> instance.</param>
            <param name="googleAnalytics"> A <c>System.String</c> instance.</param>
            <param name="googleWebMaster"> A <c>System.String</c> instance.</param>
            <param name="enablePeopleSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByGlobalSettingId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetByGlobalSettingId' stored procedure. 
            </summary>	
            <param name="globalSettingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'GlobalSettings_Update' stored procedure. 
            </summary>	
            <param name="globalSettingId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="publicJobsSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicMembersSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicCompaniesSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicSponsoredAdverts"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateJobs"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateMembers"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateCompanies"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="pageTitlePrefix"> A <c>System.String</c> instance.</param>
            <param name="pageTitleSuffix"> A <c>System.String</c> instance.</param>
            <param name="defaultTitle"> A <c>System.String</c> instance.</param>
            <param name="homeTitle"> A <c>System.String</c> instance.</param>
            <param name="defaultDescription"> A <c>System.String</c> instance.</param>
            <param name="homeDescription"> A <c>System.String</c> instance.</param>
            <param name="defaultKeywords"> A <c>System.String</c> instance.</param>
            <param name="homeKeywords"> A <c>System.String</c> instance.</param>
            <param name="showFaceBookButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="useAdvertiserFilter"> A <c>System.Int32?</c> instance.</param>
            <param name="merchantId"> A <c>System.Int32?</c> instance.</param>
            <param name="showTwitterButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="showJobAlertButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="showLinkedInButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteFavIconId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteDocType"> A <c>System.String</c> instance.</param>
            <param name="currencySymbol"> A <c>System.String</c> instance.</param>
            <param name="ftpFolderLocation"> A <c>System.String</c> instance.</param>
            <param name="metaTags"> A <c>System.String</c> instance.</param>
            <param name="systemMetaTags"> A <c>System.String</c> instance.</param>
            <param name="memberRegistrationNotification"> A <c>System.String</c> instance.</param>
            <param name="linkedInApi"> A <c>System.String</c> instance.</param>
            <param name="linkedInLogo"> A <c>System.String</c> instance.</param>
            <param name="linkedInCompanyId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInEmail"> A <c>System.String</c> instance.</param>
            <param name="privacySettings"> A <c>System.String</c> instance.</param>
            <param name="wwwRedirect"> A <c>System.Boolean?</c> instance.</param>
            <param name="allowAdvertiser"> A <c>System.Boolean?</c> instance.</param>
            <param name="linkedInApiSecret"> A <c>System.String</c> instance.</param>
            <param name="googleClientId"> A <c>System.String</c> instance.</param>
            <param name="googleClientSecret"> A <c>System.String</c> instance.</param>
            <param name="facebookAppId"> A <c>System.String</c> instance.</param>
            <param name="facebookAppSecret"> A <c>System.String</c> instance.</param>
            <param name="linkedInButtonSize"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="payPalUsername"> A <c>System.String</c> instance.</param>
            <param name="payPalPassword"> A <c>System.String</c> instance.</param>
            <param name="payPalSignature"> A <c>System.String</c> instance.</param>
            <param name="securePayMerchantId"> A <c>System.String</c> instance.</param>
            <param name="securePayPassword"> A <c>System.String</c> instance.</param>
            <param name="usingSsl"> A <c>System.Boolean?</c> instance.</param>
            <param name="useCustomProfessionRole"> A <c>System.Boolean?</c> instance.</param>
            <param name="generateJobXml"> A <c>System.Boolean?</c> instance.</param>
            <param name="isPrivateSite"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateRedirectUrl"> A <c>System.String</c> instance.</param>
            <param name="enableJobCustomQuestionnaire"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobApplicationTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobScreeningProcess"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserApprovalProcess"> A <c>System.Int32?</c> instance.</param>
            <param name="siteType"> A <c>System.Int32?</c> instance.</param>
            <param name="enableSsl"> A <c>System.Boolean?</c> instance.</param>
            <param name="gst"> A <c>System.Decimal?</c> instance.</param>
            <param name="gstLabel"> A <c>System.String</c> instance.</param>
            <param name="numberOfPremiumJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="premiumJobDays"> A <c>System.Int32?</c> instance.</param>
            <param name="displayPremiumJobsOnResults"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobExpiryNotification"> A <c>System.Boolean?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="payPalClientId"> A <c>System.String</c> instance.</param>
            <param name="payPalClientSecret"> A <c>System.String</c> instance.</param>
            <param name="paypalUser"> A <c>System.String</c> instance.</param>
            <param name="paypalProPassword"> A <c>System.String</c> instance.</param>
            <param name="paypalVendor"> A <c>System.String</c> instance.</param>
            <param name="paypalPartner"> A <c>System.String</c> instance.</param>
            <param name="invoiceSiteInfo"> A <c>System.String</c> instance.</param>
            <param name="invoiceSiteFooter"> A <c>System.String</c> instance.</param>
            <param name="enableTermsAndConditions"> A <c>System.Boolean?</c> instance.</param>
            <param name="defaultEmailLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="googleTagManager"> A <c>System.String</c> instance.</param>
            <param name="googleAnalytics"> A <c>System.String</c> instance.</param>
            <param name="googleWebMaster"> A <c>System.String</c> instance.</param>
            <param name="enablePeopleSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByDefaultCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetByDefaultCountryId' stored procedure. 
            </summary>	
            <param name="defaultCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByDefaultLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetByDefaultLanguageId' stored procedure. 
            </summary>	
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'GlobalSettings_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="publicJobsSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicMembersSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicCompaniesSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicSponsoredAdverts"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateJobs"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateMembers"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateCompanies"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="pageTitlePrefix"> A <c>System.String</c> instance.</param>
            <param name="pageTitleSuffix"> A <c>System.String</c> instance.</param>
            <param name="defaultTitle"> A <c>System.String</c> instance.</param>
            <param name="homeTitle"> A <c>System.String</c> instance.</param>
            <param name="defaultDescription"> A <c>System.String</c> instance.</param>
            <param name="homeDescription"> A <c>System.String</c> instance.</param>
            <param name="defaultKeywords"> A <c>System.String</c> instance.</param>
            <param name="homeKeywords"> A <c>System.String</c> instance.</param>
            <param name="showFaceBookButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="useAdvertiserFilter"> A <c>System.Int32?</c> instance.</param>
            <param name="merchantId"> A <c>System.Int32?</c> instance.</param>
            <param name="showTwitterButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="showJobAlertButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="showLinkedInButton"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteFavIconId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteDocType"> A <c>System.String</c> instance.</param>
            <param name="currencySymbol"> A <c>System.String</c> instance.</param>
            <param name="ftpFolderLocation"> A <c>System.String</c> instance.</param>
            <param name="metaTags"> A <c>System.String</c> instance.</param>
            <param name="systemMetaTags"> A <c>System.String</c> instance.</param>
            <param name="memberRegistrationNotification"> A <c>System.String</c> instance.</param>
            <param name="linkedInApi"> A <c>System.String</c> instance.</param>
            <param name="linkedInLogo"> A <c>System.String</c> instance.</param>
            <param name="linkedInCompanyId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInEmail"> A <c>System.String</c> instance.</param>
            <param name="privacySettings"> A <c>System.String</c> instance.</param>
            <param name="wwwRedirect"> A <c>System.Boolean?</c> instance.</param>
            <param name="allowAdvertiser"> A <c>System.Boolean?</c> instance.</param>
            <param name="linkedInApiSecret"> A <c>System.String</c> instance.</param>
            <param name="googleClientId"> A <c>System.String</c> instance.</param>
            <param name="googleClientSecret"> A <c>System.String</c> instance.</param>
            <param name="facebookAppId"> A <c>System.String</c> instance.</param>
            <param name="facebookAppSecret"> A <c>System.String</c> instance.</param>
            <param name="linkedInButtonSize"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="payPalUsername"> A <c>System.String</c> instance.</param>
            <param name="payPalPassword"> A <c>System.String</c> instance.</param>
            <param name="payPalSignature"> A <c>System.String</c> instance.</param>
            <param name="securePayMerchantId"> A <c>System.String</c> instance.</param>
            <param name="securePayPassword"> A <c>System.String</c> instance.</param>
            <param name="usingSsl"> A <c>System.Boolean?</c> instance.</param>
            <param name="useCustomProfessionRole"> A <c>System.Boolean?</c> instance.</param>
            <param name="generateJobXml"> A <c>System.Boolean?</c> instance.</param>
            <param name="isPrivateSite"> A <c>System.Boolean?</c> instance.</param>
            <param name="privateRedirectUrl"> A <c>System.String</c> instance.</param>
            <param name="enableJobCustomQuestionnaire"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobApplicationTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobScreeningProcess"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserApprovalProcess"> A <c>System.Int32?</c> instance.</param>
            <param name="siteType"> A <c>System.Int32?</c> instance.</param>
            <param name="enableSsl"> A <c>System.Boolean?</c> instance.</param>
            <param name="gst"> A <c>System.Decimal?</c> instance.</param>
            <param name="gstLabel"> A <c>System.String</c> instance.</param>
            <param name="numberOfPremiumJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="premiumJobDays"> A <c>System.Int32?</c> instance.</param>
            <param name="displayPremiumJobsOnResults"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobExpiryNotification"> A <c>System.Boolean?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="payPalClientId"> A <c>System.String</c> instance.</param>
            <param name="payPalClientSecret"> A <c>System.String</c> instance.</param>
            <param name="paypalUser"> A <c>System.String</c> instance.</param>
            <param name="paypalProPassword"> A <c>System.String</c> instance.</param>
            <param name="paypalVendor"> A <c>System.String</c> instance.</param>
            <param name="paypalPartner"> A <c>System.String</c> instance.</param>
            <param name="invoiceSiteInfo"> A <c>System.String</c> instance.</param>
            <param name="invoiceSiteFooter"> A <c>System.String</c> instance.</param>
            <param name="enableTermsAndConditions"> A <c>System.Boolean?</c> instance.</param>
            <param name="defaultEmailLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="googleTagManager"> A <c>System.String</c> instance.</param>
            <param name="googleAnalytics"> A <c>System.String</c> instance.</param>
            <param name="googleWebMaster"> A <c>System.String</c> instance.</param>
            <param name="enablePeopleSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="globalSettingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'GlobalSettings_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteFavIconId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetBySiteFavIconId' stored procedure. 
            </summary>	
            <param name="siteFavIconId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.CustomGetPaymentDetail(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_CustomGetPaymentDetail' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteIdPublicJobsSearch(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'GlobalSettings_GetBySiteIdPublicJobsSearch' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="publicJobsSearch"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_Delete' stored procedure. 
            </summary>	
            <param name="globalSettingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteIdGlobalSettingId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetBySiteIdGlobalSettingId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="globalSettingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetBySiteIdUseAdvertiserFilter(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetBySiteIdUseAdvertiserFilter' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="useAdvertiserFilter"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.GetByDefaultDynamicPageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalSettings_GetByDefaultDynamicPageId' stored procedure. 
            </summary>	
            <param name="defaultDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlGlobalSettingsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.GlobalArea"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_areaId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalArea objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalArea objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalArea objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalArea objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__GlobalAre__Locat__1E0803D9 key.
            	FK__GlobalAre__Locat__1E0803D9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_locationId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalArea objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.GetByAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__GlobalArea__1C1FBB67 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_areaId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.GlobalArea"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.GlobalArea})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.GlobalArea object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.GlobalArea)">
            <summary>
            	Inserts a JXTPortal.Entities.GlobalArea object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.GlobalArea object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.GlobalArea object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.GlobalArea)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.GlobalArea object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.GlobalArea object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'GlobalArea_Insert' stored procedure. 
            </summary>	
            <param name="areaName"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalArea_GetByLocationId' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'GlobalArea_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalArea_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'GlobalArea_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaName"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalArea_Delete' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.GetByAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalArea_GetByAreaId' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'GlobalArea_Update' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaName"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlGlobalAreaProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlExceptionTableProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.ExceptionTable"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.ExceptionTable"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_exceptionId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.ExceptionTable objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.ExceptionTable objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.ExceptionTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.ExceptionTable objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.GetByExceptionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__tmp_ms_xx_Except__2116E6DF index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_exceptionId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.ExceptionTable"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.ExceptionTable})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.ExceptionTable object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.ExceptionTable)">
            <summary>
            	Inserts a JXTPortal.Entities.ExceptionTable object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.ExceptionTable object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.ExceptionTable object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.ExceptionTable)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.ExceptionTable object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.ExceptionTable object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ExceptionTable_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ExceptionTable_Delete' stored procedure. 
            </summary>	
            <param name="exceptionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method wraps the 'ExceptionTable_Update' stored procedure. 
            </summary>	
            <param name="exceptionId"> A <c>System.Int32?</c> instance.</param>
            <param name="dateEntered"> A <c>System.DateTime?</c> instance.</param>
            <param name="exceptionApplicationSource"> A <c>System.String</c> instance.</param>
            <param name="clientIpAddress"> A <c>System.String</c> instance.</param>
            <param name="hostIpAddress"> A <c>System.String</c> instance.</param>
            <param name="exceptionUrl"> A <c>System.String</c> instance.</param>
            <param name="exceptionMessage"> A <c>System.String</c> instance.</param>
            <param name="exceptionStackTrace"> A <c>System.String</c> instance.</param>
            <param name="errorParamsMessage"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'ExceptionTable_Insert' stored procedure. 
            </summary>	
            <param name="dateEntered"> A <c>System.DateTime?</c> instance.</param>
            <param name="exceptionApplicationSource"> A <c>System.String</c> instance.</param>
            <param name="clientIpAddress"> A <c>System.String</c> instance.</param>
            <param name="hostIpAddress"> A <c>System.String</c> instance.</param>
            <param name="exceptionUrl"> A <c>System.String</c> instance.</param>
            <param name="exceptionMessage"> A <c>System.String</c> instance.</param>
            <param name="exceptionStackTrace"> A <c>System.String</c> instance.</param>
            <param name="errorParamsMessage"> A <c>System.String</c> instance.</param>
            <param name="exceptionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.GetByExceptionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ExceptionTable_GetByExceptionId' stored procedure. 
            </summary>	
            <param name="exceptionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'ExceptionTable_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method wraps the 'ExceptionTable_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="exceptionId"> A <c>System.Int32?</c> instance.</param>
            <param name="dateEntered"> A <c>System.DateTime?</c> instance.</param>
            <param name="exceptionApplicationSource"> A <c>System.String</c> instance.</param>
            <param name="clientIpAddress"> A <c>System.String</c> instance.</param>
            <param name="hostIpAddress"> A <c>System.String</c> instance.</param>
            <param name="exceptionUrl"> A <c>System.String</c> instance.</param>
            <param name="exceptionMessage"> A <c>System.String</c> instance.</param>
            <param name="exceptionStackTrace"> A <c>System.String</c> instance.</param>
            <param name="errorParamsMessage"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlExceptionTableProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlExceptionTableProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlExceptionTableProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.EmailFormats"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_emailFormatId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailFormats objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailFormats objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailFormats objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.EmailFormats objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.GetByEmailFormatId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__EmailFormats__173876EA index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_emailFormatId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.EmailFormats"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.EmailFormats})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.EmailFormats object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.EmailFormats)">
            <summary>
            	Inserts a JXTPortal.Entities.EmailFormats object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.EmailFormats object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.EmailFormats object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.EmailFormats)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.EmailFormats object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.EmailFormats object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailFormats_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailFormats_Delete' stored procedure. 
            </summary>	
            <param name="emailFormatId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'EmailFormats_Update' stored procedure. 
            </summary>	
            <param name="emailFormatId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailFormatName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'EmailFormats_Insert' stored procedure. 
            </summary>	
            <param name="emailFormatName"> A <c>System.String</c> instance.</param>
            <param name="emailFormatId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'EmailFormats_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.GetByEmailFormatId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'EmailFormats_GetByEmailFormatId' stored procedure. 
            </summary>	
            <param name="emailFormatId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'EmailFormats_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="emailFormatId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailFormatName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEmailFormatsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserJobPricing"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserJobPricing"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_advertiserId">. Primary Key.</param>	
            <param name="_jobItemsTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobPricing objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobPricing objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobPricing objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobPricing objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__Adver__1C3CAE6F key.
            	FK__Advertise__Adver__1C3CAE6F Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobPricing objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.GetByJobItemsTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__JobIt__1D30D2A8 key.
            	FK__Advertise__JobIt__1D30D2A8 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobItemsTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobPricing objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.GetByAdvertiserIdJobItemsTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Advertis__93477E8A196041C4 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="_jobItemsTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdvertiserJobPricing"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.AdvertiserJobPricing})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserJobPricing object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserJobPricing)">
            <summary>
            	Inserts a JXTPortal.Entities.AdvertiserJobPricing object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserJobPricing object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserJobPricing object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserJobPricing)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserJobPricing object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.AdvertiserJobPricing object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobPricing_Insert' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemsTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="startDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.CustomGetByAdvertiserIDJobItemsTypeID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobPricing_CustomGetByAdvertiserIDJobItemsTypeID' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemsTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'AdvertiserJobPricing_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobPricing_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.GetByJobItemsTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobPricing_GetByJobItemsTypeId' stored procedure. 
            </summary>	
            <param name="jobItemsTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobPricing_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.GetByAdvertiserIdJobItemsTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobPricing_GetByAdvertiserIdJobItemsTypeId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemsTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobPricing_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemsTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="startDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobPricing_Delete' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemsTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobPricing_Update' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="originalAdvertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemsTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="originalJobItemsTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="startDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobPricingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdminUsersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdminUsers"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdminUsers"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_adminUserId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminUsers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminUsers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminUsers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminUsers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetByAdminRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AdminUsers_AdminRoles key.
            	FK_AdminUsers_AdminRoles Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_adminRoleId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminUsers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AdminUsers_Sites key.
            	FK_AdminUsers_Sites Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminUsers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetBySiteIdUserName(JXTPortal.Data.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Unique_AdminUsers index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_userName"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdminUsers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetByAdminUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__AdminUsers__7E6CC920 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_adminUserId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdminUsers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.AdminUsers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdminUsers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdminUsers)">
            <summary>
            	Inserts a JXTPortal.Entities.AdminUsers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdminUsers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdminUsers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdminUsers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdminUsers object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.AdminUsers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'AdminUsers_Insert' stored procedure. 
            </summary>	
            <param name="adminRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="userPassword"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="adminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetByAdminUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdminUsers_GetByAdminUserId' stored procedure. 
            </summary>	
            <param name="adminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdminUsers_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'AdminUsers_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdminUsers_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetBySiteIdUserName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdminUsers_GetBySiteIdUserName' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method wraps the 'AdminUsers_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="adminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="adminRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="userPassword"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdminUsers_Delete' stored procedure. 
            </summary>	
            <param name="adminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method wraps the 'AdminUsers_Update' stored procedure. 
            </summary>	
            <param name="adminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="adminRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="userPassword"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.GetByAdminRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdminUsers_GetByAdminRoleId' stored procedure. 
            </summary>	
            <param name="adminRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdminUsersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminUsersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdminUsersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.WorkType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_workTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WorkType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.WorkType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WorkType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WorkType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.GetByWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__WorkType__3E3D3572 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_workTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.WorkType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.WorkType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.WorkType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.WorkType)">
            <summary>
            	Inserts a JXTPortal.Entities.WorkType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.WorkType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.WorkType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.WorkType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.WorkType object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.WorkType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WorkType_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WorkType_Delete' stored procedure. 
            </summary>	
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'WorkType_Update' stored procedure. 
            </summary>	
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'WorkType_Insert' stored procedure. 
            </summary>	
            <param name="workTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'WorkType_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.GetByWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WorkType_GetByWorkTypeId' stored procedure. 
            </summary>	
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'WorkType_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlWorkTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteWebPartsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteWebParts"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteWebPartsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteRolesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteRoles"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteRoles"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteRoleId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteRoles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteRoles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteRoles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteRoles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetByRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteRoles__RoleI__1CA7377D key.
            	FK__SiteRoles__RoleI__1CA7377D Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_roleId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteRoles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SiteRoles index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetBySiteRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__tmp_ms_xx_SiteRo__113584D1 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteRoleId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteRoles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetBySiteIdSiteRoleFriendlyUrl(JXTPortal.Data.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the wit_SiteRoles index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_siteRoleFriendlyUrl"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetBySiteIdRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the wit_SiteRoles_2 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteRoles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteRoles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteRoles)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteRoles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteRoles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteRoles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteRoles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteRoles object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteRoles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.CustomGetBySiteIDRoleID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteRoles_CustomGetBySiteIDRoleID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetBySiteIdSiteRoleFriendlyUrl(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteRoles_GetBySiteIdSiteRoleFriendlyUrl' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteRoleFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteRoles_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteRoleName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteRoleFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="totalJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="canonicalUrl"> A <c>System.String</c> instance.</param>
            <param name="siteRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteRoles_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteRoles_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteRoles_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteRoles_Update' stored procedure. 
            </summary>	
            <param name="siteRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteRoleName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteRoleFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="totalJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="canonicalUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetBySiteIdFriendlyUrl(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteRoles_GetBySiteIdFriendlyUrl' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="friendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.CustomBulkInsert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'SiteRoles_CustomBulkInsert' stored procedure. 
            </summary>	
            <param name="values"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.CustomBulkDelete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'SiteRoles_CustomBulkDelete' stored procedure. 
            </summary>	
            <param name="values"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetByProfessionID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteRoles_GetByProfessionID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetBySiteIdRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteRoles_GetBySiteIdRoleId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetBySiteRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteRoles_GetBySiteRoleId' stored procedure. 
            </summary>	
            <param name="siteRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteRoles_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteRoleName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteRoleFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="totalJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="canonicalUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteRoles_Delete' stored procedure. 
            </summary>	
            <param name="siteRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.GetByRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteRoles_GetByRoleId' stored procedure. 
            </summary>	
            <param name="roleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteRolesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteRolesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteRolesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteResources"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteResourceId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResources objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResources objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResources objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResources objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteResou__Langu__60083D91 key.
            	FK__SiteResou__Langu__60083D91 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_languageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResources objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteResou__LastM__7FA0E47B key.
            	FK__SiteResou__LastM__7FA0E47B Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResources objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetByResourceCode(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteResou__Resou__60FC61CA key.
            	FK__SiteResou__Resou__60FC61CA Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_resourceCode"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResources objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetByResourceFileId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteResou__Resou__61F08603 key.
            	FK__SiteResou__Resou__61F08603 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_resourceFileId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResources objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteResou__SiteI__116A8EFB key.
            	FK__SiteResou__SiteI__116A8EFB Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResources objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetBySiteIdLanguageIdResourceCode(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UK_SiteResources index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_languageId"></param>
            <param name="_resourceCode"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteResources"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetBySiteResourceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteResources__54968AE5 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteResourceId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteResources"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteResources})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteResources object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteResources)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteResources object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteResources object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteResources object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteResources)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteResources object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteResources object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteResources_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceCode"> A <c>System.String</c> instance.</param>
            <param name="resourceFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceText"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="siteResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteResources_Delete' stored procedure. 
            </summary>	
            <param name="siteResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteResources_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteResources_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetByResourceCode(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'SiteResources_GetByResourceCode' stored procedure. 
            </summary>	
            <param name="resourceCode"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteResources_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetBySiteIdLanguageIdResourceCode(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteResources_GetBySiteIdLanguageIdResourceCode' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceCode"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteResources_Update' stored procedure. 
            </summary>	
            <param name="siteResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceCode"> A <c>System.String</c> instance.</param>
            <param name="resourceFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceText"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteResources_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceCode"> A <c>System.String</c> instance.</param>
            <param name="resourceFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceText"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteResources_GetByLanguageId' stored procedure. 
            </summary>	
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetBySiteResourceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteResources_GetBySiteResourceId' stored procedure. 
            </summary>	
            <param name="siteResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteResources_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.GetByResourceFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteResources_GetByResourceFileId' stored procedure. 
            </summary>	
            <param name="resourceFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteResourcesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteArea"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteAreaId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteArea objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteArea objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteArea objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteArea objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetByAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteArea__AreaID__4E739D3B key.
            	FK__SiteArea__AreaID__4E739D3B Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_areaId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteArea objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteArea__SiteID__4F67C174 key.
            	FK__SiteArea__SiteID__4F67C174 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteArea objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetBySiteAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteArea__30E33A54 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteAreaId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteArea"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteArea})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteArea object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteArea)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteArea object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteArea object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteArea object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteArea)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteArea object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteArea object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteArea_Insert' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteAreaName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetByLocationID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteArea_GetByLocationID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteArea_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteArea_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteArea_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetBySiteAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteArea_GetBySiteAreaId' stored procedure. 
            </summary>	
            <param name="siteAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'SiteArea_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteAreaName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteArea_Delete' stored procedure. 
            </summary>	
            <param name="siteAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.GetByAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteArea_GetByAreaId' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'SiteArea_Update' stored procedure. 
            </summary>	
            <param name="siteAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteAreaName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteAreaProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberMemberships"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberMembershipsId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberMemberships objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberMemberships objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberMemberships objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberMemberships objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberMem__LastM__0D93E57B key.
            	FK__MemberMem__LastM__0D93E57B Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberMemberships objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberMem__SiteI__0E8809B4 key.
            	FK__MemberMem__SiteI__0E8809B4 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberMemberships objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.GetByMemberMembershipsId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__MemberMe__3D60688A0AB778D0 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberMembershipsId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberMemberships"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberMemberships})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberMemberships object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberMemberships)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberMemberships object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberMemberships object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberMemberships object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberMemberships)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberMemberships object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberMemberships object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberMemberships_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberMembershipsName"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberMembershipsId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberMemberships_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberMemberships_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberMemberships_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.CustomGetBySiteID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberMemberships_CustomGetBySiteID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'MemberMemberships_Update' stored procedure. 
            </summary>	
            <param name="memberMembershipsId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberMembershipsName"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'MemberMemberships_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberMembershipsId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberMembershipsName"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberMemberships_Delete' stored procedure. 
            </summary>	
            <param name="memberMembershipsId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberMemberships_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.GetByMemberMembershipsId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberMemberships_GetByMemberMembershipsId' stored procedure. 
            </summary>	
            <param name="memberMembershipsId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberMembershipsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberMembershipsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberMemberships"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberMembershipsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberMembershipsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberLicenses"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberLicenseId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLicenses objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLicenses objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLicenses objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLicenses objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberLic__Membe__7D9223DE key.
            	FK__MemberLic__Membe__7D9223DE Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberLicenses objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.GetByMemberLicenseId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__MemberLi__9351502B7BA9DB6C index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberLicenseId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberLicenses"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberLicenses})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberLicenses object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberLicenses)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberLicenses object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberLicenses object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberLicenses object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberLicenses)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberLicenses object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberLicenses object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberLicenses_Insert' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberLicenseName"> A <c>System.String</c> instance.</param>
            <param name="licenseType"> A <c>System.String</c> instance.</param>
            <param name="issueDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="state"> A <c>System.String</c> instance.</param>
            <param name="doesNotExpire"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="memberLicenseId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberLicenses_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberLicenses_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberLicenses_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.GetByMemberLicenseId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberLicenses_GetByMemberLicenseId' stored procedure. 
            </summary>	
            <param name="memberLicenseId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'MemberLicenses_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberLicenseId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberLicenseName"> A <c>System.String</c> instance.</param>
            <param name="licenseType"> A <c>System.String</c> instance.</param>
            <param name="issueDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="state"> A <c>System.String</c> instance.</param>
            <param name="doesNotExpire"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberLicenses_Delete' stored procedure. 
            </summary>	
            <param name="memberLicenseId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'MemberLicenses_Update' stored procedure. 
            </summary>	
            <param name="memberLicenseId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberLicenseName"> A <c>System.String</c> instance.</param>
            <param name="licenseType"> A <c>System.String</c> instance.</param>
            <param name="issueDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="state"> A <c>System.String</c> instance.</param>
            <param name="doesNotExpire"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberLicensesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobCustomXmlProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobCustomXml"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobCustomXml"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobCustomXmlid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomXml objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomXml objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomXml objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomXml objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobCustom__Adver__0A6373FB key.
            	FK__JobCustom__Adver__0A6373FB Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomXml objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobCustom__SiteI__096F4FC2 key.
            	FK__JobCustom__SiteI__096F4FC2 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomXml objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.GetByJobCustomXmlid(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobCusto__D29C8AB1059EBEDE index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobCustomXmlid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobCustomXml"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobCustomXml})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobCustomXml object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobCustomXml)">
            <summary>
            	Inserts a JXTPortal.Entities.JobCustomXml object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobCustomXml object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobCustomXml object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobCustomXml)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobCustomXml object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobCustomXml object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'JobCustomXML_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="uniqueCode"> A <c>System.String</c> instance.</param>
            <param name="customXml"> A <c>System.String</c> instance.</param>
            <param name="customType"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="isDefault"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageIds"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobCustomXmlid"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobCustomXML_Delete' stored procedure. 
            </summary>	
            <param name="jobCustomXmlid"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobCustomXML_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobCustomXML_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobCustomXML_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobCustomXML_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'JobCustomXML_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobCustomXmlid"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="uniqueCode"> A <c>System.String</c> instance.</param>
            <param name="customXml"> A <c>System.String</c> instance.</param>
            <param name="customType"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="isDefault"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageIds"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.GetByJobCustomXmlid(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobCustomXML_GetByJobCustomXmlid' stored procedure. 
            </summary>	
            <param name="jobCustomXmlid"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'JobCustomXML_Update' stored procedure. 
            </summary>	
            <param name="jobCustomXmlid"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="uniqueCode"> A <c>System.String</c> instance.</param>
            <param name="customXml"> A <c>System.String</c> instance.</param>
            <param name="customType"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="isDefault"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageIds"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.CustomGetBySiteIDJobIDCustomType(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobCustomXML_CustomGetBySiteIDJobIDCustomType' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="customType"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobCustomXmlProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomXmlProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobCustomXmlProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlEnquiriesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Enquiries"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Enquiries"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_enquiryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Enquiries objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Enquiries objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Enquiries objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Enquiries objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Enquiries__SiteI__0D99FE17 key.
            	FK__Enquiries__SiteI__0D99FE17 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Enquiries objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.GetByEnquiryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Enquiries__1920BF5C index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_enquiryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Enquiries"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Enquiries})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Enquiries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Enquiries)">
            <summary>
            	Inserts a JXTPortal.Entities.Enquiries object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Enquiries object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Enquiries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Enquiries)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Enquiries object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Enquiries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Enquiries_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="name"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="contactPhone"> A <c>System.String</c> instance.</param>
            <param name="content"> A <c>System.String</c> instance.</param>
            <param name="date"> A <c>System.DateTime?</c> instance.</param>
            <param name="ipAddress"> A <c>System.String</c> instance.</param>
            <param name="enquiryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Enquiries_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Enquiries_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.GetByEnquiryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Enquiries_GetByEnquiryId' stored procedure. 
            </summary>	
            <param name="enquiryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            This method wraps the 'Enquiries_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="enquiryId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="name"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="contactPhone"> A <c>System.String</c> instance.</param>
            <param name="content"> A <c>System.String</c> instance.</param>
            <param name="date"> A <c>System.DateTime?</c> instance.</param>
            <param name="ipAddress"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Enquiries_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            This method wraps the 'Enquiries_Update' stored procedure. 
            </summary>	
            <param name="enquiryId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="name"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="contactPhone"> A <c>System.String</c> instance.</param>
            <param name="content"> A <c>System.String</c> instance.</param>
            <param name="date"> A <c>System.DateTime?</c> instance.</param>
            <param name="ipAddress"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Enquiries_Delete' stored procedure. 
            </summary>	
            <param name="enquiryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEnquiriesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEnquiriesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEnquiriesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlConsultantsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Consultants"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Consultants"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_consultantId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Consultants objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Consultants objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Consultants objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Consultants objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Consultan__SiteI__777D1EBE key.
            	FK__Consultan__SiteI__777D1EBE Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Consultants objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.GetByConsultantId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Consulta__E5B83F397594D64C index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_consultantId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Consultants"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Consultants})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Consultants object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Consultants)">
            <summary>
            	Inserts a JXTPortal.Entities.Consultants object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Consultants object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Consultants object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Consultants)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Consultants object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Consultants object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Consultants_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="title"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="phone"> A <c>System.String</c> instance.</param>
            <param name="mobile"> A <c>System.String</c> instance.</param>
            <param name="positionTitle"> A <c>System.String</c> instance.</param>
            <param name="officeLocation"> A <c>System.String</c> instance.</param>
            <param name="categories"> A <c>System.String</c> instance.</param>
            <param name="location"> A <c>System.String</c> instance.</param>
            <param name="friendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="shortDescription"> A <c>System.String</c> instance.</param>
            <param name="testimonial"> A <c>System.String</c> instance.</param>
            <param name="fullDescription"> A <c>System.String</c> instance.</param>
            <param name="consultantData"> A <c>System.String</c> instance.</param>
            <param name="linkedInUrl"> A <c>System.String</c> instance.</param>
            <param name="twitterUrl"> A <c>System.String</c> instance.</param>
            <param name="facebookUrl"> A <c>System.String</c> instance.</param>
            <param name="googleUrl"> A <c>System.String</c> instance.</param>
            <param name="link"> A <c>System.String</c> instance.</param>
            <param name="wechatUrl"> A <c>System.String</c> instance.</param>
            <param name="featuredTeamMember"> A <c>System.Int32?</c> instance.</param>
            <param name="imageUrl"> A <c>System.Byte[]</c> instance.</param>
            <param name="videoUrl"> A <c>System.String</c> instance.</param>
            <param name="blogRss"> A <c>System.String</c> instance.</param>
            <param name="newsRss"> A <c>System.String</c> instance.</param>
            <param name="jobRss"> A <c>System.String</c> instance.</param>
            <param name="testimonialsRss"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Int32?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="lastName"> A <c>System.String</c> instance.</param>
            <param name="consultantsXml"> A <c>System.String</c> instance.</param>
            <param name="consultantImageUrl"> A <c>System.String</c> instance.</param>
            <param name="consultantId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Consultants_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Consultants_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Consultants_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.GetByConsultantId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Consultants_GetByConsultantId' stored procedure. 
            </summary>	
            <param name="consultantId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            This method wraps the 'Consultants_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="consultantId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="title"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="phone"> A <c>System.String</c> instance.</param>
            <param name="mobile"> A <c>System.String</c> instance.</param>
            <param name="positionTitle"> A <c>System.String</c> instance.</param>
            <param name="officeLocation"> A <c>System.String</c> instance.</param>
            <param name="categories"> A <c>System.String</c> instance.</param>
            <param name="location"> A <c>System.String</c> instance.</param>
            <param name="friendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="shortDescription"> A <c>System.String</c> instance.</param>
            <param name="testimonial"> A <c>System.String</c> instance.</param>
            <param name="fullDescription"> A <c>System.String</c> instance.</param>
            <param name="consultantData"> A <c>System.String</c> instance.</param>
            <param name="linkedInUrl"> A <c>System.String</c> instance.</param>
            <param name="twitterUrl"> A <c>System.String</c> instance.</param>
            <param name="facebookUrl"> A <c>System.String</c> instance.</param>
            <param name="googleUrl"> A <c>System.String</c> instance.</param>
            <param name="link"> A <c>System.String</c> instance.</param>
            <param name="wechatUrl"> A <c>System.String</c> instance.</param>
            <param name="featuredTeamMember"> A <c>System.Int32?</c> instance.</param>
            <param name="imageUrl"> A <c>System.Byte[]</c> instance.</param>
            <param name="videoUrl"> A <c>System.String</c> instance.</param>
            <param name="blogRss"> A <c>System.String</c> instance.</param>
            <param name="newsRss"> A <c>System.String</c> instance.</param>
            <param name="jobRss"> A <c>System.String</c> instance.</param>
            <param name="testimonialsRss"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Int32?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="lastName"> A <c>System.String</c> instance.</param>
            <param name="consultantsXml"> A <c>System.String</c> instance.</param>
            <param name="consultantImageUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Consultants_Delete' stored procedure. 
            </summary>	
            <param name="consultantId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            This method wraps the 'Consultants_Update' stored procedure. 
            </summary>	
            <param name="consultantId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="title"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="phone"> A <c>System.String</c> instance.</param>
            <param name="mobile"> A <c>System.String</c> instance.</param>
            <param name="positionTitle"> A <c>System.String</c> instance.</param>
            <param name="officeLocation"> A <c>System.String</c> instance.</param>
            <param name="categories"> A <c>System.String</c> instance.</param>
            <param name="location"> A <c>System.String</c> instance.</param>
            <param name="friendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="shortDescription"> A <c>System.String</c> instance.</param>
            <param name="testimonial"> A <c>System.String</c> instance.</param>
            <param name="fullDescription"> A <c>System.String</c> instance.</param>
            <param name="consultantData"> A <c>System.String</c> instance.</param>
            <param name="linkedInUrl"> A <c>System.String</c> instance.</param>
            <param name="twitterUrl"> A <c>System.String</c> instance.</param>
            <param name="facebookUrl"> A <c>System.String</c> instance.</param>
            <param name="googleUrl"> A <c>System.String</c> instance.</param>
            <param name="link"> A <c>System.String</c> instance.</param>
            <param name="wechatUrl"> A <c>System.String</c> instance.</param>
            <param name="featuredTeamMember"> A <c>System.Int32?</c> instance.</param>
            <param name="imageUrl"> A <c>System.Byte[]</c> instance.</param>
            <param name="videoUrl"> A <c>System.String</c> instance.</param>
            <param name="blogRss"> A <c>System.String</c> instance.</param>
            <param name="newsRss"> A <c>System.String</c> instance.</param>
            <param name="jobRss"> A <c>System.String</c> instance.</param>
            <param name="testimonialsRss"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Int32?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="lastName"> A <c>System.String</c> instance.</param>
            <param name="consultantsXml"> A <c>System.String</c> instance.</param>
            <param name="consultantImageUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlConsultantsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlConsultantsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlConsultantsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the ViewSalary objects.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewSalary objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.Get(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewSalary objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of ViewSalary objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'ViewSalary_Get_List' stored procedure. 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.GetCustomSalaryTo(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            This method wraps the 'ViewSalary_GetCustomSalaryTo' stored procedure. 
            </summary>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="amountFrom"> A <c>System.Decimal?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.GetCustomSalaryFrom(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ViewSalary_GetCustomSalaryFrom' stored procedure. 
            </summary>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.Get(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wraps the 'ViewSalary_Get' stored procedure. 
            </summary>
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewSalaryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteSummary"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteSummaryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSummary objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSummary objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSummary objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSummary objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.GetBySiteSummaryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteSumm__C2159BD62691D76C index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteSummaryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteSummary"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteSummary})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteSummary object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteSummary)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteSummary object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteSummary object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteSummary object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteSummary)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteSummary object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteSummary object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.GetBySiteSummaryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSummary_GetBySiteSummaryId' stored procedure. 
            </summary>	
            <param name="siteSummaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSummary_Delete' stored procedure. 
            </summary>	
            <param name="siteSummaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSummary_Update' stored procedure. 
            </summary>	
            <param name="siteSummaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="modifiedBy"> A <c>System.String</c> instance.</param>
            <param name="timeStamp"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteSummary_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="modifiedBy"> A <c>System.String</c> instance.</param>
            <param name="timeStamp"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="siteSummaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteSummary_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSummary_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSummary_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteSummaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="modifiedBy"> A <c>System.String</c> instance.</param>
            <param name="timeStamp"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteSummaryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteLocation"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteLocationId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLocation objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLocation objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLocation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLocation objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteLocat__Locat__505BE5AD key.
            	FK__SiteLocat__Locat__505BE5AD Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_locationId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLocation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteLocat__SiteI__515009E6 key.
            	FK__SiteLocat__SiteI__515009E6 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLocation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetBySiteIdLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UK_SiteLocation index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_locationId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteLocation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetBySiteLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteLocation__32CB82C6 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteLocationId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteLocation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteLocation})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteLocation)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteLocation object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteLocation object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteLocation)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteLocation object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetByCountryID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLocation_GetByCountryID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteLocation_Insert' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteLocationName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteLocationFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="siteLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLocation_GetByLocationId' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteLocation_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLocation_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetBySiteIdLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLocation_GetBySiteIdLocationId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetBySiteIdFriendlyUrl(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteLocation_GetBySiteIdFriendlyUrl' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="friendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.CustomDeleteBySiteIDLocationID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLocation_CustomDeleteBySiteIDLocationID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetBySiteLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLocation_GetBySiteLocationId' stored procedure. 
            </summary>	
            <param name="siteLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLocation_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            This method wraps the 'SiteLocation_Update' stored procedure. 
            </summary>	
            <param name="siteLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteLocationName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteLocationFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            This method wraps the 'SiteLocation_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteLocationName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteLocationFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLocation_Delete' stored procedure. 
            </summary>	
            <param name="siteLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.CustomGetBySiteID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLocation_CustomGetBySiteID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteLocationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteLanguages"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteLanguageId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLanguages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLanguages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLanguages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLanguages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteLangu__Langu__00200768 key.
            	FK__SiteLangu__Langu__00200768 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_languageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLanguages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteLangu__SiteI__162F4418 key.
            	FK__SiteLangu__SiteI__162F4418 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteLanguages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetBySiteIdLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Unique_SiteLanguages index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_languageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteLanguages"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetBySiteLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteLanguages__300424B4 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteLanguageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteLanguages"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteLanguages})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteLanguages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteLanguages)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteLanguages object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteLanguages object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteLanguages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteLanguages)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteLanguages object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteLanguages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteLanguages_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteLanguageName"> A <c>System.String</c> instance.</param>
            <param name="siteLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLanguages_Delete' stored procedure. 
            </summary>	
            <param name="siteLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLanguages_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteLanguages_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLanguages_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteLanguages_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteLanguageName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLanguages_GetByLanguageId' stored procedure. 
            </summary>	
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteLanguages_Update' stored procedure. 
            </summary>	
            <param name="siteLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteLanguageName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetBySiteLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLanguages_GetBySiteLanguageId' stored procedure. 
            </summary>	
            <param name="siteLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.GetBySiteIdLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteLanguages_GetBySiteIdLanguageId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteLanguagesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlNewsTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.NewsType"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.NewsType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_newsTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.GetByNewsTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__NewsType__9013FE2A05A5E4ED index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_newsTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.NewsType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.NewsType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.NewsType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.NewsType)">
            <summary>
            	Inserts a JXTPortal.Entities.NewsType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.NewsType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.NewsType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.NewsType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.NewsType object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.NewsType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlNewsCategoriesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.NewsCategories"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.NewsCategories"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_newsCategoryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsCategories objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsCategories objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsCategories objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsCategories objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__NewsCateg__LastM__7EACC042 key.
            	FK__NewsCateg__LastM__7EACC042 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsCategories objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__NewsCateg__SiteI__07E124C1 key.
            	FK__NewsCateg__SiteI__07E124C1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsCategories objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.GetByNewsCategoryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__NewsCategories__2E1BDC42 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_newsCategoryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.NewsCategories"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.NewsCategories})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.NewsCategories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.NewsCategories)">
            <summary>
            	Inserts a JXTPortal.Entities.NewsCategories object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.NewsCategories object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.NewsCategories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.NewsCategories)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.NewsCategories object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.NewsCategories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'NewsCategories_Insert' stored procedure. 
            </summary>	
            <param name="newsCategoryName"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'NewsCategories_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'NewsCategories_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'NewsCategories_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'NewsCategories_Update' stored procedure. 
            </summary>	
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="newsCategoryName"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'NewsCategories_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="newsCategoryName"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="pageFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'NewsCategories_Delete' stored procedure. 
            </summary>	
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'NewsCategories_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.GetByNewsCategoryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'NewsCategories_GetByNewsCategoryId' stored procedure. 
            </summary>	
            <param name="newsCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsCategoriesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsCategoriesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsCategoriesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberReferencesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberReferences"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberReferences"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberReferenceId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberReferences objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberReferences objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberReferences objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberReferences objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberRef__Membe__7408B9A4 key.
            	FK__MemberRef__Membe__7408B9A4 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberReferences objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.GetByMemberReferenceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__MemberRe__DDF7099272207132 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberReferenceId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberReferences"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberReferences})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberReferences object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberReferences)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberReferences object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberReferences object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberReferences object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberReferences)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberReferences object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberReferences object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberReferences_Insert' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberReferenceName"> A <c>System.String</c> instance.</param>
            <param name="jobTitle"> A <c>System.String</c> instance.</param>
            <param name="company"> A <c>System.String</c> instance.</param>
            <param name="phone"> A <c>System.String</c> instance.</param>
            <param name="relationship"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="memberReferenceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberReferences_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberReferences_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberReferences_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.GetByMemberReferenceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberReferences_GetByMemberReferenceId' stored procedure. 
            </summary>	
            <param name="memberReferenceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'MemberReferences_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberReferenceId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberReferenceName"> A <c>System.String</c> instance.</param>
            <param name="jobTitle"> A <c>System.String</c> instance.</param>
            <param name="company"> A <c>System.String</c> instance.</param>
            <param name="phone"> A <c>System.String</c> instance.</param>
            <param name="relationship"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberReferences_Delete' stored procedure. 
            </summary>	
            <param name="memberReferenceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'MemberReferences_Update' stored procedure. 
            </summary>	
            <param name="memberReferenceId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberReferenceName"> A <c>System.String</c> instance.</param>
            <param name="jobTitle"> A <c>System.String</c> instance.</param>
            <param name="company"> A <c>System.String</c> instance.</param>
            <param name="phone"> A <c>System.String</c> instance.</param>
            <param name="relationship"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberReferencesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberReferencesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberReferencesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberCertificateMemberships"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberCertificateMemberships"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberCertificateMembershipId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberCertificateMemberships objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberCertificateMemberships objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberCertificateMemberships objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberCertificateMemberships objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberCer__Membe__0256D8FB key.
            	FK__MemberCer__Membe__0256D8FB Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberCertificateMemberships objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.GetByMemberCertificateMembershipId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__MemberCe__7107F296006E9089 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberCertificateMembershipId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberCertificateMemberships"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberCertificateMemberships})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberCertificateMemberships object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberCertificateMemberships)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberCertificateMemberships object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberCertificateMemberships object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberCertificateMemberships object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberCertificateMemberships)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberCertificateMemberships object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberCertificateMemberships object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberCertificateMemberships_Insert' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberCertificateMembershipName"> A <c>System.String</c> instance.</param>
            <param name="certificationAuthority"> A <c>System.String</c> instance.</param>
            <param name="licenseNumber"> A <c>System.String</c> instance.</param>
            <param name="certificationUrl"> A <c>System.String</c> instance.</param>
            <param name="startMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="startYear"> A <c>System.Int32?</c> instance.</param>
            <param name="endMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="endYear"> A <c>System.Int32?</c> instance.</param>
            <param name="doesnotExpire"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="memberCertificateMembershipId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberCertificateMemberships_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberCertificateMemberships_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberCertificateMemberships_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.GetByMemberCertificateMembershipId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberCertificateMemberships_GetByMemberCertificateMembershipId' stored procedure. 
            </summary>	
            <param name="memberCertificateMembershipId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'MemberCertificateMemberships_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberCertificateMembershipId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberCertificateMembershipName"> A <c>System.String</c> instance.</param>
            <param name="certificationAuthority"> A <c>System.String</c> instance.</param>
            <param name="licenseNumber"> A <c>System.String</c> instance.</param>
            <param name="certificationUrl"> A <c>System.String</c> instance.</param>
            <param name="startMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="startYear"> A <c>System.Int32?</c> instance.</param>
            <param name="endMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="endYear"> A <c>System.Int32?</c> instance.</param>
            <param name="doesnotExpire"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberCertificateMemberships_Delete' stored procedure. 
            </summary>	
            <param name="memberCertificateMembershipId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'MemberCertificateMemberships_Update' stored procedure. 
            </summary>	
            <param name="memberCertificateMembershipId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberCertificateMembershipName"> A <c>System.String</c> instance.</param>
            <param name="certificationAuthority"> A <c>System.String</c> instance.</param>
            <param name="licenseNumber"> A <c>System.String</c> instance.</param>
            <param name="certificationUrl"> A <c>System.String</c> instance.</param>
            <param name="startMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="startYear"> A <c>System.Int32?</c> instance.</param>
            <param name="endMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="endYear"> A <c>System.Int32?</c> instance.</param>
            <param name="doesnotExpire"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberCertificateMembershipsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobApplicationType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobApplicationTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobApplic__SiteI__6BBD319A key.
            	FK__JobApplic__SiteI__6BBD319A Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplicationType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.GetByJobApplicationTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobAppli__BF72967968E0C4EF index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobApplicationTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobApplicationType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobApplicationType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobApplicationType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobApplicationType)">
            <summary>
            	Inserts a JXTPortal.Entities.JobApplicationType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobApplicationType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobApplicationType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobApplicationType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobApplicationType object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobApplicationType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAreaProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Area"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAreaProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Area"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAreaProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAreaProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_areaId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Area objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Area objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Area objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Area objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Area__LocationID__3F3159AB key.
            	FK__Area__LocationID__3F3159AB Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_locationId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Area objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.GetByAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Area__1FB8AE52 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_areaId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Area"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Area})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Area object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Area)">
            <summary>
            	Inserts a JXTPortal.Entities.Area object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Area object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Area object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Area)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Area object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Area object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Area_Insert' stored procedure. 
            </summary>	
            <param name="areaName"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Area_GetByLocationId' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Area_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Area_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.GetSiteTree(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Area_GetSiteTree' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Area_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaName"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Area_Delete' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.GetDetailWithSite(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Area_GetDetailWithSite' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Area_Update' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaName"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProviderBase.GetByAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Area_GetByAreaId' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAreaProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAreaProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAreaProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAreaProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAreaProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserJobTemplateLogo"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_advertiserJobTemplateLogoId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobTemplateLogo objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobTemplateLogo objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobTemplateLogo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobTemplateLogo objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__Adver__6C9A93AD key.
            	FK__Advertise__Adver__6C9A93AD Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserJobTemplateLogo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.GetByAdvertiserJobTemplateLogoId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__AdvertiserJobTem__6BA66F74 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserJobTemplateLogoId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdvertiserJobTemplateLogo"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.AdvertiserJobTemplateLogo})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserJobTemplateLogo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserJobTemplateLogo)">
            <summary>
            	Inserts a JXTPortal.Entities.AdvertiserJobTemplateLogo object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserJobTemplateLogo object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserJobTemplateLogo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserJobTemplateLogo)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserJobTemplateLogo object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.AdvertiserJobTemplateLogo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Byte[],System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'AdvertiserJobTemplateLogo_Insert' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobLogoName"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="jobTemplateLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'AdvertiserJobTemplateLogo_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobTemplateLogo_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.GetPagingByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobTemplateLogo_GetPagingByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobTemplateLogo_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.GetByAdvertiserJobTemplateLogoId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobTemplateLogo_GetByAdvertiserJobTemplateLogoId' stored procedure. 
            </summary>	
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Byte[],System.String)">
            <summary>
            This method wraps the 'AdvertiserJobTemplateLogo_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobLogoName"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="jobTemplateLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserJobTemplateLogo_Delete' stored procedure. 
            </summary>	
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Byte[],System.String)">
            <summary>
            This method wraps the 'AdvertiserJobTemplateLogo_Update' stored procedure. 
            </summary>	
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobLogoName"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="jobTemplateLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserAccountType"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserAccountType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_advertiserAccountTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserAccountType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserAccountType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserAccountType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserAccountType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.GetByAdvertiserAccountTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__AdvertiserAccoun__023D5A04 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserAccountTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdvertiserAccountType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.AdvertiserAccountType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserAccountType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserAccountType)">
            <summary>
            	Inserts a JXTPortal.Entities.AdvertiserAccountType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserAccountType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserAccountType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserAccountType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserAccountType object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.AdvertiserAccountType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserAccountType_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserAccountType_Delete' stored procedure. 
            </summary>	
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdvertiserAccountType_Update' stored procedure. 
            </summary>	
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountTypeName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'AdvertiserAccountType_Insert' stored procedure. 
            </summary>	
            <param name="advertiserAccountTypeName"> A <c>System.String</c> instance.</param>
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'AdvertiserAccountType_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.GetByAdvertiserAccountTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserAccountType_GetByAdvertiserAccountTypeId' stored procedure. 
            </summary>	
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdvertiserAccountType_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountTypeName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserAccountStatus"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_advertiserAccountStatusId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserAccountStatus objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserAccountStatus objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserAccountStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserAccountStatus objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.GetByAdvertiserAccountStatusId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__AdvertiserAccoun__00551192 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserAccountStatusId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdvertiserAccountStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.AdvertiserAccountStatus})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserAccountStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserAccountStatus)">
            <summary>
            	Inserts a JXTPortal.Entities.AdvertiserAccountStatus object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserAccountStatus object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserAccountStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserAccountStatus)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserAccountStatus object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.AdvertiserAccountStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserAccountStatus_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserAccountStatus_Delete' stored procedure. 
            </summary>	
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.GetByAdvertiserAccountStatusId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserAccountStatus_GetByAdvertiserAccountStatusId' stored procedure. 
            </summary>	
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'AdvertiserAccountStatus_Insert' stored procedure. 
            </summary>	
            <param name="advertiserAccountStatusName"> A <c>System.String</c> instance.</param>
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdvertiserAccountStatus_Update' stored procedure. 
            </summary>	
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountStatusName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'AdvertiserAccountStatus_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdvertiserAccountStatus_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountStatusName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteProfession"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteProfessionId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteProfession objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteProfession objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteProfession objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteProfession objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetBySiteIdProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the _dta_index_SiteProfession_7_224719853__K2_K3_4_10 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_professionId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SiteProfession index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetByProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SiteProfession_ProfessionID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_professionId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetBySiteProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__tmp_ms_xx_SitePr__0E591826 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteProfessionId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteProfession"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteProfession})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteProfession object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteProfession)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteProfession object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteProfession object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteProfession object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteProfession)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteProfession object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteProfession object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.CustomGetBySiteIDFriendlyUrl(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteProfession_CustomGetBySiteIDFriendlyUrl' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteProfessionFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetBySiteIdProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteProfession_GetBySiteIdProfessionId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteProfession_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteProfessionName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteProfessionFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="totalJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="canonicalUrl"> A <c>System.String</c> instance.</param>
            <param name="siteProfessionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetByProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteProfession_GetByProfessionId' stored procedure. 
            </summary>	
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteProfession_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteProfession_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteProfession_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetBySiteIdFriendlyUrl(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteProfession_GetBySiteIdFriendlyUrl' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="friendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.CustomBulkInsert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'SiteProfession_CustomBulkInsert' stored procedure. 
            </summary>	
            <param name="values"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.CustomBulkDelete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'SiteProfession_CustomBulkDelete' stored procedure. 
            </summary>	
            <param name="values"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.CustomGetBySiteIDProfessionID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteProfession_CustomGetBySiteIDProfessionID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.GetBySiteProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteProfession_GetBySiteProfessionId' stored procedure. 
            </summary>	
            <param name="siteProfessionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteProfession_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteProfessionId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteProfessionName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteProfessionFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="totalJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="canonicalUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteProfession_Delete' stored procedure. 
            </summary>	
            <param name="siteProfessionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteProfession_Update' stored procedure. 
            </summary>	
            <param name="siteProfessionId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteProfessionName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="metaTitle"> A <c>System.String</c> instance.</param>
            <param name="metaKeywords"> A <c>System.String</c> instance.</param>
            <param name="metaDescription"> A <c>System.String</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteProfessionFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="totalJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="canonicalUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteProfessionProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteLanguagesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteLanguages"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLanguagesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteLanguagesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteCurrencies"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteCurrencyId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCurrencies objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCurrencies objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCurrencies objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCurrencies objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteCurre__Curre__2BE2B892 key.
            	FK__SiteCurre__Curre__2BE2B892 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_currencyId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCurrencies objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteCurre__SiteI__2AEE9459 key.
            	FK__SiteCurre__SiteI__2AEE9459 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCurrencies objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.GetBySiteCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteCurrencies__29FA7020 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteCurrencyId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteCurrencies"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteCurrencies})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteCurrencies object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteCurrencies)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteCurrencies object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteCurrencies object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteCurrencies object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteCurrencies)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteCurrencies object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteCurrencies object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobViews"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobViewId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobViews objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobViews objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobViews objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobViews objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobViews__SiteID__462A06AB key.
            	FK__JobViews__SiteID__462A06AB Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobViews objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobViews_JobArchiveID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobArchiveId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobViews_JobID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetBySiteIdJobIdJobArchiveIdViewDate(JXTPortal.Data.TransactionManager,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UK_JobViews index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_jobId"></param>
            <param name="_jobArchiveId"></param>
            <param name="_viewDate"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobViews"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetByJobViewId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobViews__4535E272 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobViewId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobViews"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobViews})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobViews object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobViews)">
            <summary>
            	Inserts a JXTPortal.Entities.JobViews object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobViews object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobViews object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobViews)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobViews object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobViews object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetByDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'JobViews_GetByDate' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="viewDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'JobViews_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="viewDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="totalView"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="domainReferral"> A <c>System.String</c> instance.</param>
            <param name="jobViewId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobViews_GetByJobId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetBySiteIdJobIdJobArchiveIdViewDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'JobViews_GetBySiteIdJobIdJobArchiveIdViewDate' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="viewDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobViews_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobViews_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobViews_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.UpdateCounter(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'JobViews_UpdateCounter' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="domainReferral"> A <c>System.String</c> instance.</param>
            <param name="viewDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetBySiteIdJobIdViewDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'JobViews_GetBySiteIdJobIdViewDate' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="viewDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobViews_Update' stored procedure. 
            </summary>	
            <param name="jobViewId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="viewDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="totalView"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="domainReferral"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobViews_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobViewId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="viewDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="totalView"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="domainReferral"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobViews_Delete' stored procedure. 
            </summary>	
            <param name="jobViewId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetGroupByDateRange(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'JobViews_GetGroupByDateRange' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobViews_GetByJobArchiveId' stored procedure. 
            </summary>	
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.GetByJobViewId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobViews_GetByJobViewId' stored procedure. 
            </summary>	
            <param name="jobViewId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobViewsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobCustomQuestionnaire"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobCustomQuestionnaire"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobCustomQuestionnaireId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomQuestionnaire objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomQuestionnaire objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomQuestionnaire objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobCustomQuestionnaire objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.GetByJobCustomQuestionnaireId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobCusto__69184A567081E6B7 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobCustomQuestionnaireId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobCustomQuestionnaire"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobCustomQuestionnaire})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobCustomQuestionnaire object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobCustomQuestionnaire)">
            <summary>
            	Inserts a JXTPortal.Entities.JobCustomQuestionnaire object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobCustomQuestionnaire object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobCustomQuestionnaire object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobCustomQuestionnaire)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobCustomQuestionnaire object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobCustomQuestionnaire object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobCustomQuestionnaireProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobApplicationType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobApplicationTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobApplication"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobApplicationId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplication objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplication objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplication objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplication objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetBySiteIdReferral(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobApplic__SiteI__09D52582 key.
            	FK__JobApplic__SiteI__09D52582 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteIdReferral"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobApplication objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobApplication_JobArchiveID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobArchiveId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobApplication_JobID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the JobApplication_MemberID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByJobApplicationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobApplication__05107065 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobApplicationId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobApplication"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobApplication})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobApplication object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobApplication)">
            <summary>
            	Inserts a JXTPortal.Entities.JobApplication object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobApplication object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobApplication object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobApplication)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobApplication object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobApplication object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByAdvertiserIdJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetByAdvertiserIdJobId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.CustomGetByJobIdMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_CustomGetByJobIdMemberId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            This method wraps the 'JobApplication_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberResumeFile"> A <c>System.String</c> instance.</param>
            <param name="memberCoverLetterFile"> A <c>System.String</c> instance.</param>
            <param name="applicationStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="jobAppValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="siteIdReferral"> A <c>System.Int32?</c> instance.</param>
            <param name="urlReferral"> A <c>System.String</c> instance.</param>
            <param name="applicantGrade"> A <c>System.Int32?</c> instance.</param>
            <param name="lastViewedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="emailAddress"> A <c>System.String</c> instance.</param>
            <param name="mobilePhone"> A <c>System.String</c> instance.</param>
            <param name="memberNote"> A <c>System.String</c> instance.</param>
            <param name="advertiserNote"> A <c>System.String</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="draft"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobApplicationTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="externalXmlFilename"> A <c>System.String</c> instance.</param>
            <param name="customQuestionnaireXml"> A <c>System.String</c> instance.</param>
            <param name="externalPdfFilename"> A <c>System.String</c> instance.</param>
            <param name="fileDownloaded"> A <c>System.Boolean?</c> instance.</param>
            <param name="appliedWith"> A <c>System.String</c> instance.</param>
            <param name="screeningQuestionaireXml"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            This method wraps the 'JobApplication_Update' stored procedure. 
            </summary>	
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberResumeFile"> A <c>System.String</c> instance.</param>
            <param name="memberCoverLetterFile"> A <c>System.String</c> instance.</param>
            <param name="applicationStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="jobAppValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="siteIdReferral"> A <c>System.Int32?</c> instance.</param>
            <param name="urlReferral"> A <c>System.String</c> instance.</param>
            <param name="applicantGrade"> A <c>System.Int32?</c> instance.</param>
            <param name="lastViewedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="emailAddress"> A <c>System.String</c> instance.</param>
            <param name="mobilePhone"> A <c>System.String</c> instance.</param>
            <param name="memberNote"> A <c>System.String</c> instance.</param>
            <param name="advertiserNote"> A <c>System.String</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="draft"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobApplicationTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="externalXmlFilename"> A <c>System.String</c> instance.</param>
            <param name="customQuestionnaireXml"> A <c>System.String</c> instance.</param>
            <param name="externalPdfFilename"> A <c>System.String</c> instance.</param>
            <param name="fileDownloaded"> A <c>System.Boolean?</c> instance.</param>
            <param name="appliedWith"> A <c>System.String</c> instance.</param>
            <param name="screeningQuestionaireXml"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetByJobId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByJobApplicationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetByJobApplicationId' stored procedure. 
            </summary>	
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.CustomGetJobApplicationDetails(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_CustomGetJobApplicationDetails' stored procedure. 
            </summary>	
            <param name="applicationDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_Delete' stored procedure. 
            </summary>	
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByAdvertiserIdJobArchiveId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetByAdvertiserIdJobArchiveId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetJobsNameByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetJobsNameByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32}@,System.Nullable{System.Guid}@)">
            <summary>
            This method wraps the 'JobApplication_Insert' stored procedure. 
            </summary>	
            <param name="applicationDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberResumeFile"> A <c>System.String</c> instance.</param>
            <param name="memberCoverLetterFile"> A <c>System.String</c> instance.</param>
            <param name="applicationStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="siteIdReferral"> A <c>System.Int32?</c> instance.</param>
            <param name="urlReferral"> A <c>System.String</c> instance.</param>
            <param name="applicantGrade"> A <c>System.Int32?</c> instance.</param>
            <param name="lastViewedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="emailAddress"> A <c>System.String</c> instance.</param>
            <param name="mobilePhone"> A <c>System.String</c> instance.</param>
            <param name="memberNote"> A <c>System.String</c> instance.</param>
            <param name="advertiserNote"> A <c>System.String</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="draft"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobApplicationTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="externalXmlFilename"> A <c>System.String</c> instance.</param>
            <param name="customQuestionnaireXml"> A <c>System.String</c> instance.</param>
            <param name="externalPdfFilename"> A <c>System.String</c> instance.</param>
            <param name="fileDownloaded"> A <c>System.Boolean?</c> instance.</param>
            <param name="appliedWith"> A <c>System.String</c> instance.</param>
            <param name="screeningQuestionaireXml"> A <c>System.String</c> instance.</param>
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobAppValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetBySiteIdReferral(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetBySiteIdReferral' stored procedure. 
            </summary>	
            <param name="siteIdReferral"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetByJobArchiveId' stored procedure. 
            </summary>	
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.CustomGetDraftJobsByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_CustomGetDraftJobsByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.CustomGetNewJobApplications(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobApplication_CustomGetNewJobApplications' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobApplicationId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobApplication_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.CustomUpdateDownloadedFileStatus(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'JobApplication_CustomUpdateDownloadedFileStatus' stored procedure. 
            </summary>	
            <param name="jobappids"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobApplicationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobApplicationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobApplication"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobApplicationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobApplicationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlGlobalLocationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.GlobalLocation"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.GlobalLocation"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_locationId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalLocation objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalLocation objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalLocation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalLocation objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__GlobalLoc__Count__1A3772F5 key.
            	FK__GlobalLoc__Count__1A3772F5 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_countryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.GlobalLocation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__GlobalLocation__184F2A83 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_locationId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.GlobalLocation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.GlobalLocation})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.GlobalLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.GlobalLocation)">
            <summary>
            	Inserts a JXTPortal.Entities.GlobalLocation object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.GlobalLocation object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.GlobalLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.GlobalLocation)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.GlobalLocation object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.GlobalLocation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'GlobalLocation_Insert' stored procedure. 
            </summary>	
            <param name="locationName"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalLocation_GetByLocationId' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'GlobalLocation_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalLocation_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalLocation_GetByCountryId' stored procedure. 
            </summary>	
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'GlobalLocation_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationName"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'GlobalLocation_Delete' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'GlobalLocation_Update' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationName"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlGlobalLocationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalLocationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlGlobalLocationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlFilesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Files"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlFilesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Files"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlFilesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlFilesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_fileId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Files objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Files objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Files objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Files objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Files_AdminUsers key.
            	FK_Files_AdminUsers Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Files objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByFileTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Files_FileTypes key.
            	FK_Files_FileTypes Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_fileTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Files objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByFolderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Files_Folders key.
            	FK_Files_Folders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_folderId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Files objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Files_Sites key.
            	FK_Files_Sites Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Files objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByFolderIdSiteIdFileName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Files index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_folderId"></param>
            <param name="_siteId"></param>
            <param name="_fileName"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Files"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Files__1CF15040 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_fileId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Files"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Files})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Files object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Files)">
            <summary>
            	Inserts a JXTPortal.Entities.Files object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Files object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Files object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Files)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Files object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Files object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Files_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="fileName"> A <c>System.String</c> instance.</param>
            <param name="fileSystemName"> A <c>System.String</c> instance.</param>
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByFolderIdSiteIdFileName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Files_GetByFolderIdSiteIdFileName' stored procedure. 
            </summary>	
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="fileName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_GetByFileId' stored procedure. 
            </summary>	
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Files_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetBySiteIDPageNameFileTypeID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_GetBySiteIDPageNameFileTypeID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByFolderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_GetByFolderId' stored procedure. 
            </summary>	
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_Update' stored procedure. 
            </summary>	
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="fileName"> A <c>System.String</c> instance.</param>
            <param name="fileSystemName"> A <c>System.String</c> instance.</param>
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="fileName"> A <c>System.String</c> instance.</param>
            <param name="fileSystemName"> A <c>System.String</c> instance.</param>
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_Delete' stored procedure. 
            </summary>	
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProviderBase.GetByFileTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Files_GetByFileTypeId' stored procedure. 
            </summary>	
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlFilesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlFilesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlFilesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFilesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlFilesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCustomPaymentProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.CustomPayment"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomPaymentProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCustomPaymentProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteProfessionProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteProfession"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteProfessionProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteProfessionProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteCountries"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteCountryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCountries objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCountries objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCountries objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCountries objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteCount__Count__781FBE44 key.
            	FK__SiteCount__Count__781FBE44 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_countryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCountries objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteCount__SiteI__7913E27D key.
            	FK__SiteCount__SiteI__7913E27D Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCountries objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetBySiteIdCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UK_SiteCountries index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_countryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteCountries"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetBySiteCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__tmp_ms_xx_SiteCo__772B9A0B index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteCountryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteCountries"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteCountries})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteCountries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteCountries)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteCountries object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteCountries object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteCountries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteCountries)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteCountries object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteCountries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteCountries_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteCountryName"> A <c>System.String</c> instance.</param>
            <param name="siteCountryFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="currency"> A <c>System.String</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetBySiteIdCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCountries_GetBySiteIdCountryId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCountries_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteCountries_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetBySiteCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCountries_GetBySiteCountryId' stored procedure. 
            </summary>	
            <param name="siteCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetBySiteIdFriendlyUrl(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteCountries_GetBySiteIdFriendlyUrl' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="friendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.CustomDeleteBySiteIDCountryID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCountries_CustomDeleteBySiteIDCountryID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCountries_GetByCountryId' stored procedure. 
            </summary>	
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCountries_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteCountryName"> A <c>System.String</c> instance.</param>
            <param name="siteCountryFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="currency"> A <c>System.String</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCountries_Delete' stored procedure. 
            </summary>	
            <param name="siteCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCountries_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCountries_Update' stored procedure. 
            </summary>	
            <param name="siteCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteCountryName"> A <c>System.String</c> instance.</param>
            <param name="siteCountryFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="currency"> A <c>System.String</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteCountriesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberPositionsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberPositions"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberPositions"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberPositionId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberPositions objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberPositions objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberPositions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberPositions objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the fk_MemberPositionsMember key.
            	fk_MemberPositionsMember Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberPositions objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.GetByMemberPositionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MemberPositions index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberPositionId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberPositions"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberPositions})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberPositions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberPositions)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberPositions object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberPositions object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberPositions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberPositions)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberPositions object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberPositions object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberPositions_Insert' stored procedure. 
            </summary>	
            <param name="linkedInInternalPositionId"> A <c>System.Int32?</c> instance.</param>
            <param name="title"> A <c>System.String</c> instance.</param>
            <param name="summary"> A <c>System.String</c> instance.</param>
            <param name="companyId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="companyIndustry"> A <c>System.String</c> instance.</param>
            <param name="startMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="startYear"> A <c>System.Int32?</c> instance.</param>
            <param name="endMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="endYear"> A <c>System.Int32?</c> instance.</param>
            <param name="isCurrent"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="organisationWebsite"> A <c>System.String</c> instance.</param>
            <param name="responsibilitiesAndAchievements"> A <c>System.String</c> instance.</param>
            <param name="typeOfDirectorship"> A <c>System.String</c> instance.</param>
            <param name="additionalRolesAndResponsibilities"> A <c>System.String</c> instance.</param>
            <param name="isDirectorship"> A <c>System.Boolean?</c> instance.</param>
            <param name="city"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberPositionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberPositions_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberPositions_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberPositions_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.GetByMemberPositionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberPositions_GetByMemberPositionId' stored procedure. 
            </summary>	
            <param name="memberPositionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberPositions_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberPositionId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInInternalPositionId"> A <c>System.Int32?</c> instance.</param>
            <param name="title"> A <c>System.String</c> instance.</param>
            <param name="summary"> A <c>System.String</c> instance.</param>
            <param name="companyId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="companyIndustry"> A <c>System.String</c> instance.</param>
            <param name="startMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="startYear"> A <c>System.Int32?</c> instance.</param>
            <param name="endMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="endYear"> A <c>System.Int32?</c> instance.</param>
            <param name="isCurrent"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="organisationWebsite"> A <c>System.String</c> instance.</param>
            <param name="responsibilitiesAndAchievements"> A <c>System.String</c> instance.</param>
            <param name="typeOfDirectorship"> A <c>System.String</c> instance.</param>
            <param name="additionalRolesAndResponsibilities"> A <c>System.String</c> instance.</param>
            <param name="isDirectorship"> A <c>System.Boolean?</c> instance.</param>
            <param name="city"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberPositions_Delete' stored procedure. 
            </summary>	
            <param name="memberPositionId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberPositions_Update' stored procedure. 
            </summary>	
            <param name="memberPositionId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInInternalPositionId"> A <c>System.Int32?</c> instance.</param>
            <param name="title"> A <c>System.String</c> instance.</param>
            <param name="summary"> A <c>System.String</c> instance.</param>
            <param name="companyId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="companyIndustry"> A <c>System.String</c> instance.</param>
            <param name="startMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="startYear"> A <c>System.Int32?</c> instance.</param>
            <param name="endMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="endYear"> A <c>System.Int32?</c> instance.</param>
            <param name="isCurrent"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="organisationWebsite"> A <c>System.String</c> instance.</param>
            <param name="responsibilitiesAndAchievements"> A <c>System.String</c> instance.</param>
            <param name="typeOfDirectorship"> A <c>System.String</c> instance.</param>
            <param name="additionalRolesAndResponsibilities"> A <c>System.String</c> instance.</param>
            <param name="isDirectorship"> A <c>System.Boolean?</c> instance.</param>
            <param name="city"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberPositionsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberPositionsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberPositionsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Languages"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_languageId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Languages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Languages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Languages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Languages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Languages__24927208 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_languageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Languages"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Languages})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Languages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Languages)">
            <summary>
            	Inserts a JXTPortal.Entities.Languages object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Languages object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Languages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Languages)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Languages object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Languages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Languages_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Languages_Delete' stored procedure. 
            </summary>	
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Languages_Update' stored procedure. 
            </summary>	
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.GetByLanguageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Languages_GetByLanguageId' stored procedure. 
            </summary>	
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Languages_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Languages_Insert' stored procedure. 
            </summary>	
            <param name="languageName"> A <c>System.String</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Languages_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlLanguagesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Jobs"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Jobs__Advertiser__6C63F2D5 key.
            	FK__Jobs__Advertiser__6C63F2D5 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Jobs__CurrencyID__45554476 key.
            	FK__Jobs__CurrencyID__45554476 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_currencyId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByJobTemplateId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Jobs__JobTemplat__703483B9 key.
            	FK__Jobs__JobTemplat__703483B9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobTemplateId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByLastModifiedByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Jobs__LastModifi__6D58170E key.
            	FK__Jobs__LastModifi__6D58170E Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedByAdvertiserUserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByLastModifiedByAdminUserId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Jobs__LastModifi__6E4C3B47 key.
            	FK__Jobs__LastModifi__6E4C3B47 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedByAdminUserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Jobs__SalaryType__464968AF key.
            	FK__Jobs__SalaryType__464968AF Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_salaryTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Jobs__SiteID__64C2D10D key.
            	FK__Jobs__SiteID__64C2D10D Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Jobs__WorkTypeID__65B6F546 key.
            	FK__Jobs__WorkTypeID__65B6F546 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_workTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Jobs objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByExpiredAdvertiserIdExpiryDate(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Nullable{System.Int32},System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Jobs_Expired_AdvertiserID_ExpiryDate index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_expired"></param>
            <param name="_advertiserId"></param>
            <param name="_expiryDate"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByExpiredBilledExpiryDate(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Boolean,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Jobs_Expired_Bill_ExpiryDate index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_expired"></param>
            <param name="_billed"></param>
            <param name="_expiryDate"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByExpiredExpiryDate(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Jobs_Expired_ExpiryDate index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_expired"></param>
            <param name="_expiryDate"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByWorkTypeIdJobIdAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandExpiredExpiryDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Int32,System.Int32,System.Decimal,System.Decimal,System.Nullable{System.Int32},System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Jobs_Search index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_workTypeId"></param>
            <param name="_jobId"></param>
            <param name="_advertiserId"></param>
            <param name="_currencyId"></param>
            <param name="_salaryTypeId"></param>
            <param name="_salaryLowerBand"></param>
            <param name="_salaryUpperBand"></param>
            <param name="_expired"></param>
            <param name="_expiryDate"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetBySiteIdBilledAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Boolean,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Jobs_SiteID_Billed_AdvertiserID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_billed"></param>
            <param name="_advertiserId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetBySiteIdExpiredBilledAdvertiserIdEnteredByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Jobs_SiteID_Expired_Billed_AdvertiserID_EnteredByAdvertiserUserID index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_expired"></param>
            <param name="_billed"></param>
            <param name="_advertiserId"></param>
            <param name="_enteredByAdvertiserUserId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Jobs__63CEACD4 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Jobs"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Jobs})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Jobs object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Jobs)">
            <summary>
            	Inserts a JXTPortal.Entities.Jobs object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Jobs object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Jobs object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Jobs)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Jobs object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Jobs object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.CustomUpdateAllSiteJobCount(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Jobs_CustomUpdateAllSiteJobCount' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByJobId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByLastModifiedByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByLastModifiedByAdvertiserUserId' stored procedure. 
            </summary>	
            <param name="lastModifiedByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByWorkTypeIdJobIdAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandExpiredExpiryDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'Jobs_GetByWorkTypeIdJobIdAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandExpiredExpiryDate' stored procedure. 
            </summary>	
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetJobApplicationAndViewsDetail(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetJobApplicationAndViewsDetail' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="fromDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="duration"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.CustomGetBySiteIdStatusIDs(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_CustomGetBySiteIdStatusIDs' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="statusIds"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.CustomArchiveXML(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Jobs_CustomArchiveXML' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserName"> A <c>System.String</c> instance.</param>
            <param name="xmlFeed"> A <c>string</c> instance.</param>
            <param name="clientIpAddress"> A <c>System.String</c> instance.</param>
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetAdvertiserJobs(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetAdvertiserJobs' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="type"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.JobsPurge(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Jobs_JobsPurge' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetStatistics(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetStatistics' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByExpiredAdvertiserIdExpiryDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'Jobs_GetByExpiredAdvertiserIdExpiryDate' stored procedure. 
            </summary>	
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.JobUnarchive(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_JobUnarchive' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.CustomGetJobByExternalJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Jobs_CustomGetJobByExternalJobId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="externalJobId"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByJobTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByJobTemplateId' stored procedure. 
            </summary>	
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Jobs_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByWorkTypeId' stored procedure. 
            </summary>	
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByCurrencyId' stored procedure. 
            </summary>	
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandWorkTypeIdExpiredExpiryDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'Jobs_GetByAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandWorkTypeIdExpiredExpiryDate' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="expired"> A <c>System.Boolean?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByExpiredExpiryDateAdvertiserIdCurrencyIdSalaryUpperBandSalaryLowerBandWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByExpiredExpiryDateAdvertiserIdCurrencyIdSalaryUpperBandSalaryLowerBandWorkTypeId' stored procedure. 
            </summary>	
            <param name="expired"> A <c>System.Boolean?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.CustomGetGeoAddressToUpdate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Jobs_CustomGetGeoAddressToUpdate' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByExpiredBilledExpiryDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'Jobs_GetByExpiredBilledExpiryDate' stored procedure. 
            </summary>	
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetCurrentJobStatistics(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Jobs_GetCurrentJobStatistics' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="sortField"> A <c>System.String</c> instance.</param>
            <param name="sortAsc"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.CustomUpdateSiteJobCount(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_CustomUpdateSiteJobCount' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetBySalaryTypeId' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.JobArchive(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_JobArchive' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByLastModifiedByAdminUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByLastModifiedByAdminUserId' stored procedure. 
            </summary>	
            <param name="lastModifiedByAdminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.JobX_SubmitQueue(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_JobX_SubmitQueue' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetHistoricalJobStatistics(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Jobs_GetHistoricalJobStatistics' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="sortField"> A <c>System.String</c> instance.</param>
            <param name="sortAsc"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByExpiredExpiryDate(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'Jobs_GetByExpiredExpiryDate' stored procedure. 
            </summary>	
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.CustomCalculateJobCount(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Jobs_CustomCalculateJobCount' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="addJob"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetArchivedJobs(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetArchivedJobs' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="currentOrderBy"> A <c>System.String</c> instance.</param>
            <param name="currentPageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="currentPageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByJobItemTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByJobItemTypeId' stored procedure. 
            </summary>	
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.CustomUpdateGeoLocations(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'Jobs_CustomUpdateGeoLocations' stored procedure. 
            </summary>	
            <param name="xmlFeed"> A <c>string</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetBySiteIdBilledAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetBySiteIdBilledAdvertiserId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Jobs_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobName"> A <c>System.String</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="fullDescription"> A <c>System.String</c> instance.</param>
            <param name="webServiceProcessed"> A <c>System.Boolean?</c> instance.</param>
            <param name="applicationEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="refNo"> A <c>System.String</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="datePosted"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemPrice"> A <c>System.Decimal?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="showSalaryDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryText"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationUrl"> A <c>System.String</c> instance.</param>
            <param name="uploadMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchFieldExtension"> A <c>System.String</c> instance.</param>
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="hashValue"> A <c>System.Byte[]</c> instance.</param>
            <param name="requireLogonForExternalApplications"> A <c>System.Boolean?</c> instance.</param>
            <param name="showLocationDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicTransport"> A <c>System.String</c> instance.</param>
            <param name="address"> A <c>System.String</c> instance.</param>
            <param name="contactDetails"> A <c>System.String</c> instance.</param>
            <param name="jobContactPhone"> A <c>System.String</c> instance.</param>
            <param name="jobContactName"> A <c>System.String</c> instance.</param>
            <param name="qualificationsRecognised"> A <c>System.Boolean?</c> instance.</param>
            <param name="residentOnly"> A <c>System.Boolean?</c> instance.</param>
            <param name="documentLink"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint1"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint2"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint3"> A <c>System.String</c> instance.</param>
            <param name="hotJob"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="showSalaryRange"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobLatitude"> A <c>System.Double?</c> instance.</param>
            <param name="jobLongitude"> A <c>System.Double?</c> instance.</param>
            <param name="addressStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_Delete' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetByJobIdWithArchive(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetByJobIdWithArchive' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.GetBySiteIdExpiredBilledAdvertiserIdEnteredByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_GetBySiteIdExpiredBilledAdvertiserIdEnteredByAdvertiserUserId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobName"> A <c>System.String</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="fullDescription"> A <c>System.String</c> instance.</param>
            <param name="webServiceProcessed"> A <c>System.Boolean?</c> instance.</param>
            <param name="applicationEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="refNo"> A <c>System.String</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="datePosted"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemPrice"> A <c>System.Decimal?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="showSalaryDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryText"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationUrl"> A <c>System.String</c> instance.</param>
            <param name="uploadMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchFieldExtension"> A <c>System.String</c> instance.</param>
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="hashValue"> A <c>System.Byte[]</c> instance.</param>
            <param name="requireLogonForExternalApplications"> A <c>System.Boolean?</c> instance.</param>
            <param name="showLocationDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicTransport"> A <c>System.String</c> instance.</param>
            <param name="address"> A <c>System.String</c> instance.</param>
            <param name="contactDetails"> A <c>System.String</c> instance.</param>
            <param name="jobContactPhone"> A <c>System.String</c> instance.</param>
            <param name="jobContactName"> A <c>System.String</c> instance.</param>
            <param name="qualificationsRecognised"> A <c>System.Boolean?</c> instance.</param>
            <param name="residentOnly"> A <c>System.Boolean?</c> instance.</param>
            <param name="documentLink"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint1"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint2"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint3"> A <c>System.String</c> instance.</param>
            <param name="hotJob"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="showSalaryRange"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobLatitude"> A <c>System.Double?</c> instance.</param>
            <param name="jobLongitude"> A <c>System.Double?</c> instance.</param>
            <param name="addressStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.CustomPostXML(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Jobs_CustomPostXML' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserName"> A <c>System.String</c> instance.</param>
            <param name="xmlFeed"> A <c>string</c> instance.</param>
            <param name="errorList"> A <c>string</c> instance.</param>
            <param name="clientIpAddress"> A <c>System.String</c> instance.</param>
            <param name="archiveMissingJobs"> A <c>System.Boolean?</c> instance.</param>
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Byte[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Jobs_Update' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobName"> A <c>System.String</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="fullDescription"> A <c>System.String</c> instance.</param>
            <param name="webServiceProcessed"> A <c>System.Boolean?</c> instance.</param>
            <param name="applicationEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="refNo"> A <c>System.String</c> instance.</param>
            <param name="visible"> A <c>System.Boolean?</c> instance.</param>
            <param name="datePosted"> A <c>System.DateTime?</c> instance.</param>
            <param name="expiryDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="expired"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemPrice"> A <c>System.Decimal?</c> instance.</param>
            <param name="billed"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="showSalaryDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryText"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedByAdminUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="applicationUrl"> A <c>System.String</c> instance.</param>
            <param name="uploadMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchFieldExtension"> A <c>System.String</c> instance.</param>
            <param name="advertiserJobTemplateLogoId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="hashValue"> A <c>System.Byte[]</c> instance.</param>
            <param name="requireLogonForExternalApplications"> A <c>System.Boolean?</c> instance.</param>
            <param name="showLocationDetails"> A <c>System.Boolean?</c> instance.</param>
            <param name="publicTransport"> A <c>System.String</c> instance.</param>
            <param name="address"> A <c>System.String</c> instance.</param>
            <param name="contactDetails"> A <c>System.String</c> instance.</param>
            <param name="jobContactPhone"> A <c>System.String</c> instance.</param>
            <param name="jobContactName"> A <c>System.String</c> instance.</param>
            <param name="qualificationsRecognised"> A <c>System.Boolean?</c> instance.</param>
            <param name="residentOnly"> A <c>System.Boolean?</c> instance.</param>
            <param name="documentLink"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint1"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint2"> A <c>System.String</c> instance.</param>
            <param name="bulletPoint3"> A <c>System.String</c> instance.</param>
            <param name="hotJob"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobFriendlyName"> A <c>System.String</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="showSalaryRange"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="enteredByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobLatitude"> A <c>System.Double?</c> instance.</param>
            <param name="jobLongitude"> A <c>System.Double?</c> instance.</param>
            <param name="addressStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobItemsTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobItemsType"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobItemsType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetByAdvertiserIdFromAdvertiserJobPricing(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets JobItemsType objects from the datasource by AdvertiserID in the
            	AdvertiserJobPricing table. Table JobItemsType is related to table Advertisers
            	through the (M:N) relationship defined in the AdvertiserJobPricing table.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of JobItemsType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobItemTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobItemsType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobItemsType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobItemsType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobItemsType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobItemsT__LastM__5D21AF45 key.
            	FK__JobItemsT__LastM__5D21AF45 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobItemsType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobItemsT__SiteI__5B3966D3 key.
            	FK__JobItemsT__SiteI__5B3966D3 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobItemsType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetByJobItemTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobItemsType__5A45429A index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobItemTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobItemsType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobItemsType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobItemsType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobItemsType)">
            <summary>
            	Inserts a JXTPortal.Entities.JobItemsType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobItemsType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobItemsType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobItemsType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobItemsType object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobItemsType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetByJobItemTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobItemsType_GetByJobItemTypeId' stored procedure. 
            </summary>	
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'JobItemsType_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="daysActive"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="discountAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="totalNumberOfJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="shortDescription"> A <c>System.String</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetByAdvertiserIdFromAdvertiserJobPricing(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobItemsType_GetByAdvertiserIdFromAdvertiserJobPricing' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobItemsType_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobItemsType_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobItemsType_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.CustomGetBySiteID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobItemsType_CustomGetBySiteID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobItemsType_Update' stored procedure. 
            </summary>	
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="daysActive"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="discountAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="totalNumberOfJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="shortDescription"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobItemsType_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="daysActive"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="discountAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="totalNumberOfJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="shortDescription"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobItemsType_Delete' stored procedure. 
            </summary>	
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobItemsType_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobItemsTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobItemsTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobItemsTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlIndustryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Industry"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlIndustryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Industry"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlIndustryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlIndustryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_industryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Industry objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Industry objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Industry objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Industry objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Industry_SiteID key.
            	FK_Industry_SiteID Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Industry objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.GetByIndustryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Industry__808DEC2C1D4306BD index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_industryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Industry"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Industry})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Industry object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Industry)">
            <summary>
            	Inserts a JXTPortal.Entities.Industry object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Industry object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Industry object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Industry)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Industry object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Industry object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlIndustryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIndustryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlIndustryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlEmailFormatsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.EmailFormats"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailFormatsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEmailFormatsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicpagesCustomWidget"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicpagesCustomWidget"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_dynamicPageId">. Primary Key.</param>	
            <param name="_customWidgetId">. Primary Key.</param>	
            <param name="_position">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicpagesCustomWidget objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicpagesCustomWidget objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicpagesCustomWidget objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicpagesCustomWidget objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetByCustomWidgetId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Dynamicpa__Custo__40AFAAA8 key.
            	FK__Dynamicpa__Custo__40AFAAA8 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_customWidgetId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicpagesCustomWidget objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetByDynamicPageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Dynamicpa__Dynam__3FBB866F key.
            	FK__Dynamicpa__Dynam__3FBB866F Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicpagesCustomWidget objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetByDynamicPageIdCustomWidgetIdPosition(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Dynamicp__685EECE93DD33DFD index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageId"></param>
            <param name="_customWidgetId"></param>
            <param name="_position"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicpagesCustomWidget"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.DynamicpagesCustomWidget})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicpagesCustomWidget object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicpagesCustomWidget)">
            <summary>
            	Inserts a JXTPortal.Entities.DynamicpagesCustomWidget object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicpagesCustomWidget object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicpagesCustomWidget object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicpagesCustomWidget)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicpagesCustomWidget object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.DynamicpagesCustomWidget object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetByDynamicPageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_GetByDynamicPageId' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetByDynamicPageIdCustomWidgetIdPosition(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_GetByDynamicPageIdCustomWidgetIdPosition' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="position"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_Insert' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="position"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_Update' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="originalDynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="originalCustomWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="position"> A <c>System.Int32?</c> instance.</param>
            <param name="originalPosition"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.CustomGetByDynamicPageIDPosition(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_CustomGetByDynamicPageIDPosition' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="position"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="position"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetByCustomWidgetId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_GetByCustomWidgetId' stored procedure. 
            </summary>	
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.CustomSelect(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_CustomSelect' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="position"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.CustomDelete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_CustomDelete' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="position"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.GetByDynamicPageIdCustomWidgetId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_GetByDynamicPageIdCustomWidgetId' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicpagesCustomWidget_Delete' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="position"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicpagesCustomWidgetProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAvailableStatusProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AvailableStatus"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AvailableStatus"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_availableStatusId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AvailableStatus objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.AvailableStatus objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AvailableStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AvailableStatus objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Available__LastM__79E80B25 key.
            	FK__Available__LastM__79E80B25 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AvailableStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Available__SiteI__78F3E6EC key.
            	FK__Available__SiteI__78F3E6EC Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AvailableStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.GetByAvailableStatusId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__AvailableStatus__742F31CF index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_availableStatusId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AvailableStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.AvailableStatus})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AvailableStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AvailableStatus)">
            <summary>
            	Inserts a JXTPortal.Entities.AvailableStatus object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AvailableStatus object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AvailableStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AvailableStatus)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AvailableStatus object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.AvailableStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'AvailableStatus_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="availableStatusParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="availableStatusName"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="availableStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.GetByAvailableStatusId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AvailableStatus_GetByAvailableStatusId' stored procedure. 
            </summary>	
            <param name="availableStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'AvailableStatus_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AvailableStatus_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AvailableStatus_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AvailableStatus_Update' stored procedure. 
            </summary>	
            <param name="availableStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="availableStatusParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="availableStatusName"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AvailableStatus_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="availableStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="availableStatusParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="availableStatusName"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AvailableStatus_Delete' stored procedure. 
            </summary>	
            <param name="availableStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AvailableStatus_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAvailableStatusProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAvailableStatusProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAvailableStatusProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSalaryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Salary"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSalaryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Salary"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSalaryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSalaryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salaryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Salary objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Salary objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Salary objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Salary objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Salary__Currency__1E2668BC key.
            	FK__Salary__Currency__1E2668BC Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_currencyId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Salary objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Salary__SalaryTy__1D324483 key.
            	FK__Salary__SalaryTy__1D324483 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_salaryTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Salary objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.GetBySalaryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Salary__1C3E204A index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_salaryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Salary"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Salary})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Salary object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Salary)">
            <summary>
            	Inserts a JXTPortal.Entities.Salary object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Salary object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Salary object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Salary)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Salary object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Salary object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Salary_Insert' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="amount"> A <c>System.Decimal?</c> instance.</param>
            <param name="isFrom"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Salary_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Salary_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Salary_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="salaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="amount"> A <c>System.Decimal?</c> instance.</param>
            <param name="isFrom"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Salary_Delete' stored procedure. 
            </summary>	
            <param name="salaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Salary_GetBySalaryTypeId' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Salary_Update' stored procedure. 
            </summary>	
            <param name="salaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="amount"> A <c>System.Decimal?</c> instance.</param>
            <param name="isFrom"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.GetBySalaryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Salary_GetBySalaryId' stored procedure. 
            </summary>	
            <param name="salaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Salary_GetByCurrencyId' stored procedure. 
            </summary>	
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSalaryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSalaryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlNewsIndustryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.NewsIndustry"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.NewsIndustry"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_newsIndustryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsIndustry objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsIndustry objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsIndustry objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.NewsIndustry objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.GetByNewsIndustryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__NewsIndu__289B7D7C7FED0B97 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_newsIndustryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.NewsIndustry"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.NewsIndustry})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.NewsIndustry object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.NewsIndustry)">
            <summary>
            	Inserts a JXTPortal.Entities.NewsIndustry object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.NewsIndustry object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.NewsIndustry object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.NewsIndustry)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.NewsIndustry object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.NewsIndustry object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNewsIndustryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNewsIndustryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlNewsIndustryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberWizard"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberWizardId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberWizard objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberWizard objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberWizard objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberWizard objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberWiz__LastM__2847DBB7 key.
            	FK__MemberWiz__LastM__2847DBB7 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberWizard objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberWiz__SiteI__293BFFF0 key.
            	FK__MemberWiz__SiteI__293BFFF0 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberWizard objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.GetByMemberWizardId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__MemberWi__53348B031FB295B6 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberWizardId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberWizard"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberWizard})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberWizard object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberWizard)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberWizard object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberWizard object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberWizard object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberWizard)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberWizard object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberWizard object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberWizard_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberWizardParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="profileTitle"> A <c>System.String</c> instance.</param>
            <param name="cvTitle"> A <c>System.String</c> instance.</param>
            <param name="rolePreferencesTitle"> A <c>System.String</c> instance.</param>
            <param name="educationTitle"> A <c>System.String</c> instance.</param>
            <param name="membershipsTitle"> A <c>System.String</c> instance.</param>
            <param name="experienceTitle"> A <c>System.String</c> instance.</param>
            <param name="skillsTitle"> A <c>System.String</c> instance.</param>
            <param name="profileEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="cvEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="rolePreferencesEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="educationEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="membershipsEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="experienceEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="skillsEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="directorshipTitle"> A <c>System.String</c> instance.</param>
            <param name="directorshipEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="skills"> A <c>System.String</c> instance.</param>
            <param name="licenseTypes"> A <c>System.String</c> instance.</param>
            <param name="summaryTitle"> A <c>System.String</c> instance.</param>
            <param name="personalDetailsTitle"> A <c>System.String</c> instance.</param>
            <param name="licensesTitle"> A <c>System.String</c> instance.</param>
            <param name="attachCoverLetterTitle"> A <c>System.String</c> instance.</param>
            <param name="languagesTitle"> A <c>System.String</c> instance.</param>
            <param name="referencesTitle"> A <c>System.String</c> instance.</param>
            <param name="customQuestionTitle"> A <c>System.String</c> instance.</param>
            <param name="summaryPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="personalDetailsPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="licensesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="attachCoverLetterPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="languagesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="referencesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="customQuestionPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="profilePoints"> A <c>System.Int32?</c> instance.</param>
            <param name="cvPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="rolePreferencesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="educationPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="membershipsPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="experiencePoints"> A <c>System.Int32?</c> instance.</param>
            <param name="skillsPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="directorshipPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="wizardLanguageXml"> A <c>System.String</c> instance.</param>
            <param name="customQuestionsXml"> A <c>System.String</c> instance.</param>
            <param name="memberWizardId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberWizard_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberWizard_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberWizard_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.GetByMemberWizardId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberWizard_GetByMemberWizardId' stored procedure. 
            </summary>	
            <param name="memberWizardId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'MemberWizard_Update' stored procedure. 
            </summary>	
            <param name="memberWizardId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberWizardParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="profileTitle"> A <c>System.String</c> instance.</param>
            <param name="cvTitle"> A <c>System.String</c> instance.</param>
            <param name="rolePreferencesTitle"> A <c>System.String</c> instance.</param>
            <param name="educationTitle"> A <c>System.String</c> instance.</param>
            <param name="membershipsTitle"> A <c>System.String</c> instance.</param>
            <param name="experienceTitle"> A <c>System.String</c> instance.</param>
            <param name="skillsTitle"> A <c>System.String</c> instance.</param>
            <param name="profileEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="cvEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="rolePreferencesEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="educationEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="membershipsEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="experienceEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="skillsEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="directorshipTitle"> A <c>System.String</c> instance.</param>
            <param name="directorshipEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="skills"> A <c>System.String</c> instance.</param>
            <param name="licenseTypes"> A <c>System.String</c> instance.</param>
            <param name="summaryTitle"> A <c>System.String</c> instance.</param>
            <param name="personalDetailsTitle"> A <c>System.String</c> instance.</param>
            <param name="licensesTitle"> A <c>System.String</c> instance.</param>
            <param name="attachCoverLetterTitle"> A <c>System.String</c> instance.</param>
            <param name="languagesTitle"> A <c>System.String</c> instance.</param>
            <param name="referencesTitle"> A <c>System.String</c> instance.</param>
            <param name="customQuestionTitle"> A <c>System.String</c> instance.</param>
            <param name="summaryPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="personalDetailsPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="licensesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="attachCoverLetterPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="languagesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="referencesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="customQuestionPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="profilePoints"> A <c>System.Int32?</c> instance.</param>
            <param name="cvPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="rolePreferencesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="educationPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="membershipsPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="experiencePoints"> A <c>System.Int32?</c> instance.</param>
            <param name="skillsPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="directorshipPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="wizardLanguageXml"> A <c>System.String</c> instance.</param>
            <param name="customQuestionsXml"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.CustomGetMemberPoints(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberWizard_CustomGetMemberPoints' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'MemberWizard_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberWizardId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberWizardParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="profileTitle"> A <c>System.String</c> instance.</param>
            <param name="cvTitle"> A <c>System.String</c> instance.</param>
            <param name="rolePreferencesTitle"> A <c>System.String</c> instance.</param>
            <param name="educationTitle"> A <c>System.String</c> instance.</param>
            <param name="membershipsTitle"> A <c>System.String</c> instance.</param>
            <param name="experienceTitle"> A <c>System.String</c> instance.</param>
            <param name="skillsTitle"> A <c>System.String</c> instance.</param>
            <param name="profileEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="cvEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="rolePreferencesEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="educationEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="membershipsEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="experienceEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="skillsEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="directorshipTitle"> A <c>System.String</c> instance.</param>
            <param name="directorshipEnable"> A <c>System.Boolean?</c> instance.</param>
            <param name="skills"> A <c>System.String</c> instance.</param>
            <param name="licenseTypes"> A <c>System.String</c> instance.</param>
            <param name="summaryTitle"> A <c>System.String</c> instance.</param>
            <param name="personalDetailsTitle"> A <c>System.String</c> instance.</param>
            <param name="licensesTitle"> A <c>System.String</c> instance.</param>
            <param name="attachCoverLetterTitle"> A <c>System.String</c> instance.</param>
            <param name="languagesTitle"> A <c>System.String</c> instance.</param>
            <param name="referencesTitle"> A <c>System.String</c> instance.</param>
            <param name="customQuestionTitle"> A <c>System.String</c> instance.</param>
            <param name="summaryPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="personalDetailsPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="licensesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="attachCoverLetterPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="languagesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="referencesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="customQuestionPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="profilePoints"> A <c>System.Int32?</c> instance.</param>
            <param name="cvPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="rolePreferencesPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="educationPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="membershipsPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="experiencePoints"> A <c>System.Int32?</c> instance.</param>
            <param name="skillsPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="directorshipPoints"> A <c>System.Int32?</c> instance.</param>
            <param name="wizardLanguageXml"> A <c>System.String</c> instance.</param>
            <param name="customQuestionsXml"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberWizard_Delete' stored procedure. 
            </summary>	
            <param name="memberWizardId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberWizard_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberWizardProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlInvoiceItemProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.InvoiceItem"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.InvoiceItem"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_invoiceItemId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceItem objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceItem objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceItem objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceItem objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__InvoiceIt__Adver__2F5CD1E0 key.
            	FK__InvoiceIt__Adver__2F5CD1E0 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserUserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceItem objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByInvoiceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__InvoiceIt__Invoi__2C806535 key.
            	FK__InvoiceIt__Invoi__2C806535 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_invoiceId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceItem objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__InvoiceIt__JobAr__2E68ADA7 key.
            	FK__InvoiceIt__JobAr__2E68ADA7 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobArchiveId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceItem objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__InvoiceIt__JobID__2D74896E key.
            	FK__InvoiceIt__JobID__2D74896E Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceItem objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByInvoiceItemId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__InvoiceI__478FE0FC2A981CC3 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_invoiceItemId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.InvoiceItem"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.InvoiceItem})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.InvoiceItem object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.InvoiceItem)">
            <summary>
            	Inserts a JXTPortal.Entities.InvoiceItem object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.InvoiceItem object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.InvoiceItem object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.InvoiceItem)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.InvoiceItem object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.InvoiceItem object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_GetByJobId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_GetByAdvertiserUserId' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByInvoiceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_GetByInvoiceId' stored procedure. 
            </summary>	
            <param name="invoiceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'InvoiceItem_Insert' stored procedure. 
            </summary>	
            <param name="invoiceId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="createdDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="invoiceItemId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'InvoiceItem_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByInvoiceItemId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_GetByInvoiceItemId' stored procedure. 
            </summary>	
            <param name="invoiceItemId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_Update' stored procedure. 
            </summary>	
            <param name="invoiceItemId"> A <c>System.Int32?</c> instance.</param>
            <param name="invoiceId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="createdDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.CustomJobBoardAccountPostJob(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            This method wraps the 'InvoiceItem_CustomJobBoardAccountPostJob' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="taxRate"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="discountAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="discountGst"> A <c>System.Decimal?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="invoiceItemId"> A <c>System.Int32?</c> instance.</param>
            <param name="invoiceId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="createdDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_Delete' stored procedure. 
            </summary>	
            <param name="invoiceItemId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_GetByJobArchiveId' stored procedure. 
            </summary>	
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.CustomPayJob(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceItem_CustomPayJob' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlInvoiceItemProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceItemProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlInvoiceItemProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlFoldersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Folders"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlFoldersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlFoldersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_folderId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Folders objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Folders objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Folders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Folders objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Folders_Sites key.
            	FK_Folders_Sites Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Folders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.GetBySiteIdFolderIdParentFolderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Folders index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_folderId"></param>
            <param name="_parentFolderId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Folders"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.GetByFolderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Folders__20C1E124 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_folderId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Folders"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Folders})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Folders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Folders)">
            <summary>
            	Inserts a JXTPortal.Entities.Folders object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Folders object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Folders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Folders)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Folders object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Folders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Folders_Insert' stored procedure. 
            </summary>	
            <param name="parentFolderId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="folderName"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Folders_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Folders_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.GetByFolderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Folders_GetByFolderId' stored procedure. 
            </summary>	
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Folders_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentFolderId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="folderName"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Folders_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Folders_Update' stored procedure. 
            </summary>	
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentFolderId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="folderName"> A <c>System.String</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.GetBySiteIdFolderIdParentFolderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Folders_GetBySiteIdFolderIdParentFolderId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="parentFolderId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Folders_Delete' stored procedure. 
            </summary>	
            <param name="folderId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlFoldersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPageWebPartTemplatesLink"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPageWebPartTemplatesLink"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_dynamicPageWebPartTemplatesLinkId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplatesLink objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplatesLink objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplatesLink objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplatesLink objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetByDynamicPageWebPartTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicPa__Dynam__6C190EBB key.
            	FK__DynamicPa__Dynam__6C190EBB Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageWebPartTemplateId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplatesLink objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetBySiteWebPartId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicPa__SiteW__6D0D32F4 key.
            	FK__DynamicPa__SiteW__6D0D32F4 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteWebPartId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplatesLink objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetByDynamicPageWebPartTemplateIdSiteWebPartId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_DynamicPageWebPartTemplatesLink index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageWebPartTemplateId"></param>
            <param name="_siteWebPartId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicPageWebPartTemplatesLink"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetByDynamicPageWebPartTemplatesLinkId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__DynamicPageWebPa__15502E78 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageWebPartTemplatesLinkId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicPageWebPartTemplatesLink"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.DynamicPageWebPartTemplatesLink})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPageWebPartTemplatesLink object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPageWebPartTemplatesLink)">
            <summary>
            	Inserts a JXTPortal.Entities.DynamicPageWebPartTemplatesLink object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPageWebPartTemplatesLink object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPageWebPartTemplatesLink object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPageWebPartTemplatesLink)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPageWebPartTemplatesLink object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.DynamicPageWebPartTemplatesLink object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_Insert' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageWebPartTemplatesLinkId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetByDynamicPageWebPartTemplateIdSiteWebPartId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_GetByDynamicPageWebPartTemplateIdSiteWebPartId' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetByDynamicPageWebPartTemplatesLinkId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_GetByDynamicPageWebPartTemplatesLinkId' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplatesLinkId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetByDynamicPageWebPartTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_GetByDynamicPageWebPartTemplateId' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="dynamicPageWebPartTemplatesLinkId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.GetBySiteWebPartId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_GetBySiteWebPartId' stored procedure. 
            </summary>	
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_Update' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplatesLinkId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartId"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplatesLink_Delete' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplatesLinkId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesLinkProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPageWebPartTemplates"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPageWebPartTemplates"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_dynamicPageWebPartTemplateId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplates objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplates objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplates objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicPa__LastM__6B24EA82 key.
            	FK__DynamicPa__LastM__6B24EA82 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicPa__SiteI__0E8E2250 key.
            	FK__DynamicPa__SiteI__0E8E2250 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageWebPartTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.GetByDynamicPageWebPartTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__DynamicPageWebPa__1367E606 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageWebPartTemplateId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicPageWebPartTemplates"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.DynamicPageWebPartTemplates})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPageWebPartTemplates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPageWebPartTemplates)">
            <summary>
            	Inserts a JXTPortal.Entities.DynamicPageWebPartTemplates object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPageWebPartTemplates object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPageWebPartTemplates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPageWebPartTemplates)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPageWebPartTemplates object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.DynamicPageWebPartTemplates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplates_Insert' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartName"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplates_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplates_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplates_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.GetByDynamicPageWebPartTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplates_GetByDynamicPageWebPartTemplateId' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplates_Update' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageWebPartName"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplates_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageWebPartName"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplates_Delete' stored procedure. 
            </summary>	
            <param name="dynamicPageWebPartTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageWebPartTemplates_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageWebPartTemplatesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPageFiles"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_dynamicPageFileId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageFiles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageFiles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageFiles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageFiles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetByFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicPa__FileI__0B679CE2 key.
            	FK__DynamicPa__FileI__0B679CE2 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_fileId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageFiles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DynamicPa__SiteI__0A7378A9 key.
            	FK__DynamicPa__SiteI__0A7378A9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DynamicPageFiles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetBySiteIdPageNameFileId(JXTPortal.Data.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_DynamicPageFiles index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_pageName"></param>
            <param name="_fileId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetByDynamicPageFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__DynamicPageFiles__07970BFE index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageFileId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DynamicPageFiles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.DynamicPageFiles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPageFiles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPageFiles)">
            <summary>
            	Inserts a JXTPortal.Entities.DynamicPageFiles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPageFiles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DynamicPageFiles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DynamicPageFiles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DynamicPageFiles object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.DynamicPageFiles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'DynamicPageFiles_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="dynamicPageFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.DeleteBySiteIDPageName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageFiles_DeleteBySiteIDPageName' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetByFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageFiles_GetByFileId' stored procedure. 
            </summary>	
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageFiles_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'DynamicPageFiles_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageFiles_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetByDynamicPageFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageFiles_GetByDynamicPageFileId' stored procedure. 
            </summary>	
            <param name="dynamicPageFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.GetBySiteIdPageNameFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageFiles_GetBySiteIdPageNameFileId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageFiles_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="dynamicPageFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageFiles_Delete' stored procedure. 
            </summary>	
            <param name="dynamicPageFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DynamicPageFiles_Update' stored procedure. 
            </summary>	
            <param name="dynamicPageFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageName"> A <c>System.String</c> instance.</param>
            <param name="fileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCountriesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Countries"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCountriesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Countries"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCountriesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCountriesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_countryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Countries objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Countries objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Countries objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Countries objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Countries__09DE7BCC index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_countryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Countries"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Countries})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Countries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Countries)">
            <summary>
            	Inserts a JXTPortal.Entities.Countries object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Countries object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Countries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Countries)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Countries object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Countries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Countries_Insert' stored procedure. 
            </summary>	
            <param name="countryName"> A <c>System.String</c> instance.</param>
            <param name="abbr"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="currency"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Countries_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Countries_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.GetSiteTree(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Countries_GetSiteTree' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Countries_GetByCountryId' stored procedure. 
            </summary>	
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Countries_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryName"> A <c>System.String</c> instance.</param>
            <param name="abbr"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="currency"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Countries_Delete' stored procedure. 
            </summary>	
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.GetDetailWithSite(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Countries_GetDetailWithSite' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Countries_Update' stored procedure. 
            </summary>	
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryName"> A <c>System.String</c> instance.</param>
            <param name="abbr"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="currency"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCountriesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCountriesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCountriesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserUsers"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_advertiserUserId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserUsers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserUsers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserUsers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserUsers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__Adver__04659998 key.
            	FK__Advertise__Adver__04659998 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserUsers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByEmailFormat(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__Email__5FB337D6 key.
            	FK__Advertise__Email__5FB337D6 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_emailFormat"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserUsers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__LastM__7CC477D0 key.
            	FK__Advertise__LastM__7CC477D0 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserUsers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByNewsletterFormat(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__Newsl__5EBF139D key.
            	FK__Advertise__Newsl__5EBF139D Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_newsletterFormat"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserUsers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByUserNameAdvertiserId(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Unique_AdvertiserUsers index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_userName"></param>
            <param name="_advertiserId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdvertiserUsers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__AdvertiserUsers__07F6335A index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserUserId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdvertiserUsers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.AdvertiserUsers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserUsers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserUsers)">
            <summary>
            	Inserts a JXTPortal.Entities.AdvertiserUsers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserUsers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserUsers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserUsers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserUsers object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.AdvertiserUsers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByUserNameAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_GetByUserNameAdvertiserId' stored procedure. 
            </summary>	
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_GetByAdvertiserUserId' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByNewsletterFormat(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_GetByNewsletterFormat' stored procedure. 
            </summary>	
            <param name="newsletterFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'AdvertiserUsers_Insert' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="primaryAccount"> A <c>System.Boolean?</c> instance.</param>
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="userPassword"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="applicationEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="phone"> A <c>System.String</c> instance.</param>
            <param name="fax"> A <c>System.String</c> instance.</param>
            <param name="accountStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="newsletter"> A <c>System.Boolean?</c> instance.</param>
            <param name="newsletterFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="validated"> A <c>System.Boolean?</c> instance.</param>
            <param name="validateGuid"> A <c>System.Guid?</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="lastLoginDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="jobExpiryNotification"> A <c>System.Boolean?</c> instance.</param>
            <param name="loginAttempts"> A <c>System.Int32?</c> instance.</param>
            <param name="lastAttemptDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="lastTermsAndConditionsDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="externalAdvertiserUserId"> A <c>System.String</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'AdvertiserUsers_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.AdminGetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_AdminGetPaged' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByUserNameSiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_GetByUserNameSiteId' stored procedure. 
            </summary>	
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdvertiserUsers_Update' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="primaryAccount"> A <c>System.Boolean?</c> instance.</param>
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="userPassword"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="applicationEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="phone"> A <c>System.String</c> instance.</param>
            <param name="fax"> A <c>System.String</c> instance.</param>
            <param name="accountStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="newsletter"> A <c>System.Boolean?</c> instance.</param>
            <param name="newsletterFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="validated"> A <c>System.Boolean?</c> instance.</param>
            <param name="validateGuid"> A <c>System.Guid?</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="lastLoginDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="jobExpiryNotification"> A <c>System.Boolean?</c> instance.</param>
            <param name="loginAttempts"> A <c>System.Int32?</c> instance.</param>
            <param name="lastAttemptDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="lastTermsAndConditionsDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="externalAdvertiserUserId"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdvertiserUsers_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="primaryAccount"> A <c>System.Boolean?</c> instance.</param>
            <param name="userName"> A <c>System.String</c> instance.</param>
            <param name="userPassword"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="applicationEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="phone"> A <c>System.String</c> instance.</param>
            <param name="fax"> A <c>System.String</c> instance.</param>
            <param name="accountStatus"> A <c>System.Int32?</c> instance.</param>
            <param name="newsletter"> A <c>System.Boolean?</c> instance.</param>
            <param name="newsletterFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="validated"> A <c>System.Boolean?</c> instance.</param>
            <param name="validateGuid"> A <c>System.Guid?</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="lastLoginDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="jobExpiryNotification"> A <c>System.Boolean?</c> instance.</param>
            <param name="loginAttempts"> A <c>System.Int32?</c> instance.</param>
            <param name="lastAttemptDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="lastTermsAndConditionsDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="externalAdvertiserUserId"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_Delete' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByEmailFormat(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_GetByEmailFormat' stored procedure. 
            </summary>	
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetAdvertiserUserPassword(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_GetAdvertiserUserPassword' stored procedure. 
            </summary>	
            <param name="username"> A <c>System.String</c> instance.</param>
            <param name="email"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserUsers_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserJobTemplateLogo"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserJobTemplateLogoProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdminRolesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdminRoles"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdminRoles"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_adminRoleId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminRoles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminRoles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminRoles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdminRoles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.GetByAdminRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__AdminRoles__7C8480AE index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_adminRoleId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdminRoles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.AdminRoles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdminRoles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdminRoles)">
            <summary>
            	Inserts a JXTPortal.Entities.AdminRoles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdminRoles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdminRoles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdminRoles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdminRoles object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.AdminRoles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdminRoles_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdminRoles_Delete' stored procedure. 
            </summary>	
            <param name="adminRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdminRoles_Update' stored procedure. 
            </summary>	
            <param name="adminRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'AdminRoles_Insert' stored procedure. 
            </summary>	
            <param name="roleName"> A <c>System.String</c> instance.</param>
            <param name="adminRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.GetByAdminRoleId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdminRoles_GetByAdminRoleId' stored procedure. 
            </summary>	
            <param name="adminRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'AdminRoles_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdminRoles_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="adminRoleId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdminRolesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdminRolesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdminRolesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the ViewJobSearch objects.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewJobSearch objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.Get(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewJobSearch objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of ViewJobSearch objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.GetBySearchFilter(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'ViewJobSearch_GetBySearchFilter' stored procedure. 
            </summary>
            <param name="keyword"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.String</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="jobTypeIds"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.GetPremiumSearchFilter(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ViewJobSearch_GetPremiumSearchFilter' stored procedure. 
            </summary>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'ViewJobSearch_Get_List' stored procedure. 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.GetBySearchFilterGoogleMap(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            This method wraps the 'ViewJobSearch_GetBySearchFilterGoogleMap' stored procedure. 
            </summary>
            <param name="keyword"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="jobTypeIds"> A <c>System.String</c> instance.</param>
            <param name="northEastLat"> A <c>System.Double?</c> instance.</param>
            <param name="northEastLng"> A <c>System.Double?</c> instance.</param>
            <param name="southWestLat"> A <c>System.Double?</c> instance.</param>
            <param name="southWestLng"> A <c>System.Double?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.GetBySearchFilterRedefine(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            This method wraps the 'ViewJobSearch_GetBySearchFilterRedefine' stored procedure. 
            </summary>
            <param name="keyword"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="professionId"> A <c>System.Int32?</c> instance.</param>
            <param name="roleId"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.String</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobTypeIds"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.Get(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wraps the 'ViewJobSearch_Get' stored procedure. 
            </summary>
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewJobSearchProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlWorkTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.WorkType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWorkTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlWorkTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteSalaryType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteSalaryTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSalaryType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSalaryType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSalaryType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSalaryType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteSalar__Salar__55209ACA key.
            	FK__SiteSalar__Salar__55209ACA Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_salaryTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSalaryType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteSalar__SiteI__5614BF03 key.
            	FK__SiteSalar__SiteI__5614BF03 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteSalaryType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.GetBySiteSalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteSalaryType__3A6CA48E index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteSalaryTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteSalaryType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteSalaryType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteSalaryType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteSalaryType)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteSalaryType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteSalaryType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteSalaryType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteSalaryType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteSalaryType object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteSalaryType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.GetBySiteSalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSalaryType_GetBySiteSalaryTypeId' stored procedure. 
            </summary>	
            <param name="siteSalaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteSalaryType_Insert' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteSalaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSalaryType_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteSalaryType_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSalaryType_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSalaryType_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteSalaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSalaryType_Delete' stored procedure. 
            </summary>	
            <param name="siteSalaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSalaryType_GetBySalaryTypeId' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteSalaryType_Update' stored procedure. 
            </summary>	
            <param name="siteSalaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteLocationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteLocation"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteLocationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteLocationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.RelatedDynamicPages"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_dynamicPageId">. Primary Key.</param>	
            <param name="_relatedDynamicPageId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.RelatedDynamicPages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.RelatedDynamicPages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.RelatedDynamicPages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.RelatedDynamicPages objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.GetByDynamicPageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__RelatedDy__Dynam__6DAF69E3 key.
            	FK__RelatedDy__Dynam__6DAF69E3 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.RelatedDynamicPages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.GetByRelatedDynamicPageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__RelatedDy__Relat__6EA38E1C key.
            	FK__RelatedDy__Relat__6EA38E1C Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_relatedDynamicPageId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.RelatedDynamicPages objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.GetByDynamicPageIdRelatedDynamicPageId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__RelatedD__5DE3F83B6AD2FD38 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_dynamicPageId"></param>
            <param name="_relatedDynamicPageId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.RelatedDynamicPages"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.RelatedDynamicPages})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.RelatedDynamicPages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.RelatedDynamicPages)">
            <summary>
            	Inserts a JXTPortal.Entities.RelatedDynamicPages object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.RelatedDynamicPages object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.RelatedDynamicPages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.RelatedDynamicPages)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.RelatedDynamicPages object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.RelatedDynamicPages object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.CustomGetByDynamicPageID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'RelatedDynamicPages_CustomGetByDynamicPageID' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.CustomModify(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'RelatedDynamicPages_CustomModify' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="relatedDynamicPageList"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberStatus"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberStatusId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberStatus objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberStatus objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberStatus objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberSta__LastM__57A05EFD key.
            	FK__MemberSta__LastM__57A05EFD Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberSta__SiteI__58948336 key.
            	FK__MemberSta__SiteI__58948336 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.GetByMemberStatusId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__MemberSt__53C4FDDC54C3F252 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberStatusId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberStatus})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberStatus)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberStatus object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberStatus object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberStatus)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberStatus object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberStatus_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberStatusName"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberStatus_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberStatus_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.GetByMemberStatusId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberStatus_GetByMemberStatusId' stored procedure. 
            </summary>	
            <param name="memberStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.CustomGetBySiteID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberStatus_CustomGetBySiteID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'MemberStatus_Update' stored procedure. 
            </summary>	
            <param name="memberStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberStatusName"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'MemberStatus_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberStatusName"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberStatus_Delete' stored procedure. 
            </summary>	
            <param name="memberStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberStatus_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberStatus_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberStatusProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberStatusProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberStatus"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberStatusProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberStatusProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberQualification"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberQualificationId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberQualification objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberQualification objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberQualification objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberQualification objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the fk_MemberQualificationMember key.
            	fk_MemberQualificationMember Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberQualification objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.GetByMemberQualificationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MemberQualification index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberQualificationId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberQualification"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberQualification})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberQualification object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberQualification)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberQualification object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberQualification object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberQualification object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberQualification)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberQualification object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberQualification object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberQualification_Insert' stored procedure. 
            </summary>	
            <param name="linkedInInternalEducationId"> A <c>System.Int32?</c> instance.</param>
            <param name="schoolName"> A <c>System.String</c> instance.</param>
            <param name="fieldOfStudy"> A <c>System.String</c> instance.</param>
            <param name="startYear"> A <c>System.Int32?</c> instance.</param>
            <param name="endYear"> A <c>System.Int32?</c> instance.</param>
            <param name="degree"> A <c>System.String</c> instance.</param>
            <param name="activities"> A <c>System.String</c> instance.</param>
            <param name="notes"> A <c>System.String</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="city"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="qualificationLevelId"> A <c>System.Int32?</c> instance.</param>
            <param name="qualificationLevelOther"> A <c>System.String</c> instance.</param>
            <param name="major"> A <c>System.String</c> instance.</param>
            <param name="present"> A <c>System.Boolean?</c> instance.</param>
            <param name="startMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="endMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="memberQualificationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.GetByMemberQualificationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberQualification_GetByMemberQualificationId' stored procedure. 
            </summary>	
            <param name="memberQualificationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberQualification_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberQualification_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberQualification_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberQualification_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberQualificationId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInInternalEducationId"> A <c>System.Int32?</c> instance.</param>
            <param name="schoolName"> A <c>System.String</c> instance.</param>
            <param name="fieldOfStudy"> A <c>System.String</c> instance.</param>
            <param name="startYear"> A <c>System.Int32?</c> instance.</param>
            <param name="endYear"> A <c>System.Int32?</c> instance.</param>
            <param name="degree"> A <c>System.String</c> instance.</param>
            <param name="activities"> A <c>System.String</c> instance.</param>
            <param name="notes"> A <c>System.String</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="city"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="qualificationLevelId"> A <c>System.Int32?</c> instance.</param>
            <param name="qualificationLevelOther"> A <c>System.String</c> instance.</param>
            <param name="major"> A <c>System.String</c> instance.</param>
            <param name="present"> A <c>System.Boolean?</c> instance.</param>
            <param name="startMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="endMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberQualification_Delete' stored procedure. 
            </summary>	
            <param name="memberQualificationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberQualification_Update' stored procedure. 
            </summary>	
            <param name="memberQualificationId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInInternalEducationId"> A <c>System.Int32?</c> instance.</param>
            <param name="schoolName"> A <c>System.String</c> instance.</param>
            <param name="fieldOfStudy"> A <c>System.String</c> instance.</param>
            <param name="startYear"> A <c>System.Int32?</c> instance.</param>
            <param name="endYear"> A <c>System.Int32?</c> instance.</param>
            <param name="degree"> A <c>System.String</c> instance.</param>
            <param name="activities"> A <c>System.String</c> instance.</param>
            <param name="notes"> A <c>System.String</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="city"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="qualificationLevelId"> A <c>System.Int32?</c> instance.</param>
            <param name="qualificationLevelOther"> A <c>System.String</c> instance.</param>
            <param name="major"> A <c>System.String</c> instance.</param>
            <param name="present"> A <c>System.Boolean?</c> instance.</param>
            <param name="startMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="endMonth"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberQualificationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberFiles"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberFileId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFiles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFiles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFiles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFiles objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberFil__Membe__76969D2E key.
            	FK__MemberFil__Membe__76969D2E Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFiles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetByMemberFileTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__MemberFil__Membe__778AC167 key.
            	FK__MemberFil__Membe__778AC167 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberFileTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFiles objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetByMemberFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__MemberFiles__267ABA7A index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberFileId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberFiles"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberFiles})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberFiles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberFiles)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberFiles object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberFiles object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberFiles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberFiles)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberFiles object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberFiles object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetByMemberFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberFiles_GetByMemberFileId' stored procedure. 
            </summary>	
            <param name="memberFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberFiles_Insert' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileName"> A <c>System.String</c> instance.</param>
            <param name="memberFileSearchExtension"> A <c>System.String</c> instance.</param>
            <param name="memberFileContent"> A <c>System.Byte[]</c> instance.</param>
            <param name="memberFileTitle"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="documentTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileUrl"> A <c>System.String</c> instance.</param>
            <param name="memberFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberFiles_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberFiles_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberFiles_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'MemberFiles_Update' stored procedure. 
            </summary>	
            <param name="memberFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileName"> A <c>System.String</c> instance.</param>
            <param name="memberFileSearchExtension"> A <c>System.String</c> instance.</param>
            <param name="memberFileContent"> A <c>System.Byte[]</c> instance.</param>
            <param name="memberFileTitle"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="documentTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Byte[],System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'MemberFiles_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileName"> A <c>System.String</c> instance.</param>
            <param name="memberFileSearchExtension"> A <c>System.String</c> instance.</param>
            <param name="memberFileContent"> A <c>System.Byte[]</c> instance.</param>
            <param name="memberFileTitle"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="documentTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberFiles_Delete' stored procedure. 
            </summary>	
            <param name="memberFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetPagingByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberFiles_GetPagingByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetByMemberIdMemberFileName(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'MemberFiles_GetByMemberIdMemberFileName' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.GetByMemberFileTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberFiles_GetByMemberFileTypeId' stored procedure. 
            </summary>	
            <param name="memberFileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberFilesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCurrenciesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Currencies"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Currencies"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_currencyId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Currencies objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Currencies objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Currencies objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Currencies objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Currencies__281227AE index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_currencyId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Currencies"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Currencies})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Currencies object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Currencies)">
            <summary>
            	Inserts a JXTPortal.Entities.Currencies object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Currencies object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Currencies object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Currencies)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Currencies object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Currencies object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Currencies_Insert' stored procedure. 
            </summary>	
            <param name="currencySymbol"> A <c>System.String</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Currencies_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Currencies_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Currencies_Update' stored procedure. 
            </summary>	
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencySymbol"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Currencies_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="currencySymbol"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Currencies_Delete' stored procedure. 
            </summary>	
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.GetBySiteIdCustom(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Currencies_GetBySiteIdCustom' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Currencies_GetByCurrencyId' stored procedure. 
            </summary>	
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCurrenciesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCurrenciesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCurrenciesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.ViewSiteAreaLocationCountry"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the ViewSiteAreaLocationCountry objects.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewSiteAreaLocationCountry objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.Get(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewSiteAreaLocationCountry objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of ViewSiteAreaLocationCountry objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.GetBySiteLocationIdSiteAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ViewSiteAreaLocationCountry_GetBySiteLocationIdSiteAreaId' stored procedure. 
            </summary>
            <param name="siteLocationId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'ViewSiteAreaLocationCountry_Get_List' stored procedure. 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.Get(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wraps the 'ViewSiteAreaLocationCountry_Get' stored procedure. 
            </summary>
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewSiteAreaLocationCountryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewJobSearchProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.ViewJobSearch"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobSearchProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewJobSearchProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteResourcesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteResources"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteResourcesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSalaryTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SalaryType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSalaryTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSalaryTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlIntegrationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Integrations"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlIntegrationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCustomWidgetProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.CustomWidget"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.CustomWidget"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customWidgetId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidget objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidget objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidget objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidget objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetByCustomWidgetCssSelectorId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__CustomWid__Custo__3A02AD19 key.
            	FK__CustomWid__Custo__3A02AD19 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_customWidgetCssSelectorId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidget objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__CustomWid__SiteI__390E88E0 key.
            	FK__CustomWid__SiteI__390E88E0 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.CustomWidget objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetByCustomWidgetId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__CustomWi__4C35670E3726406E index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_customWidgetId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.CustomWidget"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.CustomWidget})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.CustomWidget object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.CustomWidget)">
            <summary>
            	Inserts a JXTPortal.Entities.CustomWidget object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.CustomWidget object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.CustomWidget object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.CustomWidget)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.CustomWidget object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.CustomWidget object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'CustomWidget_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetCssSelectorId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetName"> A <c>System.String</c> instance.</param>
            <param name="content"> A <c>System.String</c> instance.</param>
            <param name="dateCreated"> A <c>System.DateTime?</c> instance.</param>
            <param name="modifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="modifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="active"> A <c>System.Boolean?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetByCustomWidgetCssSelectorId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidget_GetByCustomWidgetCssSelectorId' stored procedure. 
            </summary>	
            <param name="customWidgetCssSelectorId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidget_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'CustomWidget_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidget_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidget_Update' stored procedure. 
            </summary>	
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetCssSelectorId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetName"> A <c>System.String</c> instance.</param>
            <param name="content"> A <c>System.String</c> instance.</param>
            <param name="dateCreated"> A <c>System.DateTime?</c> instance.</param>
            <param name="modifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="modifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="active"> A <c>System.Boolean?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetByCustomWidgetId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidget_GetByCustomWidgetId' stored procedure. 
            </summary>	
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidget_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetCssSelectorId"> A <c>System.Int32?</c> instance.</param>
            <param name="customWidgetName"> A <c>System.String</c> instance.</param>
            <param name="content"> A <c>System.String</c> instance.</param>
            <param name="dateCreated"> A <c>System.DateTime?</c> instance.</param>
            <param name="modifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="modifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="active"> A <c>System.Boolean?</c> instance.</param>
            <param name="sourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidget_Delete' stored procedure. 
            </summary>	
            <param name="customWidgetId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.GetByDynamicPageIdFromDynamicpagesCustomWidget(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidget_GetByDynamicPageIdFromDynamicpagesCustomWidget' stored procedure. 
            </summary>	
            <param name="dynamicPageId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.CustomGetBySiteID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'CustomWidget_CustomGetBySiteID' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlCustomWidgetProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlCustomWidgetProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlCustomWidgetProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.WebServiceLog"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_webServiceLogId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WebServiceLog objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.WebServiceLog objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WebServiceLog objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WebServiceLog objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__WebServic__SiteI__68AD1FA9 key.
            	FK__WebServic__SiteI__68AD1FA9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.WebServiceLog objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.GetByWebServiceLogId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__WebServi__129E5DA9486A6D49 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_webServiceLogId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.WebServiceLog"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.WebServiceLog})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.WebServiceLog object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.WebServiceLog)">
            <summary>
            	Inserts a JXTPortal.Entities.WebServiceLog object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.WebServiceLog object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.WebServiceLog object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.WebServiceLog)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.WebServiceLog object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.WebServiceLog object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'WebServiceLog_Insert' stored procedure. 
            </summary>	
            <param name="clientIpAddress"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="createdDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="methodInvoked"> A <c>System.String</c> instance.</param>
            <param name="inputXml"> A <c>string</c> instance.</param>
            <param name="outputResponse"> A <c>string</c> instance.</param>
            <param name="invalidXml"> A <c>System.String</c> instance.</param>
            <param name="totalSent"> A <c>System.Int32?</c> instance.</param>
            <param name="totalUpdated"> A <c>System.Int32?</c> instance.</param>
            <param name="totalArchived"> A <c>System.Int32?</c> instance.</param>
            <param name="totalFailed"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="finishedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="totalInserted"> A <c>System.Int32?</c> instance.</param>
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="clientIpAddress"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="createdDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="methodInvoked"> A <c>System.String</c> instance.</param>
            <param name="inputXml"> A <c>string</c> instance.</param>
            <param name="outputResponse"> A <c>string</c> instance.</param>
            <param name="invalidXml"> A <c>System.String</c> instance.</param>
            <param name="totalSent"> A <c>System.Int32?</c> instance.</param>
            <param name="totalUpdated"> A <c>System.Int32?</c> instance.</param>
            <param name="totalArchived"> A <c>System.Int32?</c> instance.</param>
            <param name="totalFailed"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="finishedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="totalInserted"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'WebServiceLog_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.CustomGetInputXML(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_CustomGetInputXML' stored procedure. 
            </summary>	
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.CustomGetExportList(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_CustomGetExportList' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.CustomGetWebServiceLogPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_CustomGetWebServiceLogPaged' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="showFailedOnly"> A <c>System.Boolean?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.CustomGetWebServiceLogByID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_CustomGetWebServiceLogByID' stored procedure. 
            </summary>	
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.CustomGetOutputResponse(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_CustomGetOutputResponse' stored procedure. 
            </summary>	
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.CustomGetInvalidXML(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_CustomGetInvalidXML' stored procedure. 
            </summary>	
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_Update' stored procedure. 
            </summary>	
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="clientIpAddress"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="createdDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="methodInvoked"> A <c>System.String</c> instance.</param>
            <param name="inputXml"> A <c>string</c> instance.</param>
            <param name="outputResponse"> A <c>string</c> instance.</param>
            <param name="invalidXml"> A <c>System.String</c> instance.</param>
            <param name="totalSent"> A <c>System.Int32?</c> instance.</param>
            <param name="totalUpdated"> A <c>System.Int32?</c> instance.</param>
            <param name="totalArchived"> A <c>System.Int32?</c> instance.</param>
            <param name="totalFailed"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="finishedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="totalInserted"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.GetByWebServiceLogId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_GetByWebServiceLogId' stored procedure. 
            </summary>	
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'WebServiceLog_Delete' stored procedure. 
            </summary>	
            <param name="webServiceLogId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlWebServiceLogProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteSummaryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteSummary"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSummaryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteSummaryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteAdvertiserFilter"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteAdvertiserFilter"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteAdvertiserFilterId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteAdvertiserFilter objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteAdvertiserFilter objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteAdvertiserFilter objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteAdvertiserFilter objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteAdver__Adver__1F997E18 key.
            	FK__SiteAdver__Adver__1F997E18 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteAdvertiserFilter objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteAdver__SiteI__1EA559DF key.
            	FK__SiteAdver__SiteI__1EA559DF Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteAdvertiserFilter objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetBySiteIdAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UK_SiteAdvertiserFilter index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_advertiserId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteAdvertiserFilter"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetBySiteAdvertiserFilterId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteAdvertiserFi__1DB135A6 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteAdvertiserFilterId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteAdvertiserFilter"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteAdvertiserFilter})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteAdvertiserFilter object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteAdvertiserFilter)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteAdvertiserFilter object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteAdvertiserFilter object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteAdvertiserFilter object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteAdvertiserFilter)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteAdvertiserFilter object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteAdvertiserFilter object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetNameBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_GetNameBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteAdvertiserFilterId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetBySiteIdAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_GetBySiteIdAdvertiserId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetBySiteAdvertiserFilterId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_GetBySiteAdvertiserFilterId' stored procedure. 
            </summary>	
            <param name="siteAdvertiserFilterId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteAdvertiserFilterId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_Delete' stored procedure. 
            </summary>	
            <param name="siteAdvertiserFilterId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteAdvertiserFilter_Update' stored procedure. 
            </summary>	
            <param name="siteAdvertiserFilterId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteAdvertiserFilterProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberQualificationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberQualification"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberQualificationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberQualificationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Jobs"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.InvoiceOrder"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_orderId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceOrder objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceOrder objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceOrder objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceOrder objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__InvoiceOr__Adver__16DB3CD9 key.
            	FK__InvoiceOr__Adver__16DB3CD9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserUserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.InvoiceOrder objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.GetByOrderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__InvoiceO__C3905BAF14F2F467 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_orderId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.InvoiceOrder"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.InvoiceOrder})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.InvoiceOrder object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.InvoiceOrder)">
            <summary>
            	Inserts a JXTPortal.Entities.InvoiceOrder object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.InvoiceOrder object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.InvoiceOrder object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.InvoiceOrder)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.InvoiceOrder object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.InvoiceOrder object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'InvoiceOrder_Insert' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="createdDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="paymentTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="isPayable"> A <c>System.Boolean?</c> instance.</param>
            <param name="isPaid"> A <c>System.Boolean?</c> instance.</param>
            <param name="datePaid"> A <c>System.DateTime?</c> instance.</param>
            <param name="paidByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="gst"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="discountAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="discountGst"> A <c>System.Decimal?</c> instance.</param>
            <param name="responseCode"> A <c>System.String</c> instance.</param>
            <param name="responseText"> A <c>System.String</c> instance.</param>
            <param name="bankTransactionId"> A <c>System.String</c> instance.</param>
            <param name="responseXml"> A <c>System.String</c> instance.</param>
            <param name="success"> A <c>System.Int32?</c> instance.</param>
            <param name="orderId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceOrder_GetByAdvertiserUserId' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.GetByJobItemTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceOrder_GetByJobItemTypeId' stored procedure. 
            </summary>	
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'InvoiceOrder_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceOrder_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceOrder_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="orderId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="createdDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="paymentTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="isPayable"> A <c>System.Boolean?</c> instance.</param>
            <param name="isPaid"> A <c>System.Boolean?</c> instance.</param>
            <param name="datePaid"> A <c>System.DateTime?</c> instance.</param>
            <param name="paidByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="gst"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="discountAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="discountGst"> A <c>System.Decimal?</c> instance.</param>
            <param name="responseCode"> A <c>System.String</c> instance.</param>
            <param name="responseText"> A <c>System.String</c> instance.</param>
            <param name="bankTransactionId"> A <c>System.String</c> instance.</param>
            <param name="responseXml"> A <c>System.String</c> instance.</param>
            <param name="success"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceOrder_Delete' stored procedure. 
            </summary>	
            <param name="orderId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceOrder_Update' stored procedure. 
            </summary>	
            <param name="orderId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="createdDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="paymentTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="isPayable"> A <c>System.Boolean?</c> instance.</param>
            <param name="isPaid"> A <c>System.Boolean?</c> instance.</param>
            <param name="datePaid"> A <c>System.DateTime?</c> instance.</param>
            <param name="paidByAdvertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="gst"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="discountAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="discountGst"> A <c>System.Decimal?</c> instance.</param>
            <param name="responseCode"> A <c>System.String</c> instance.</param>
            <param name="responseText"> A <c>System.String</c> instance.</param>
            <param name="bankTransactionId"> A <c>System.String</c> instance.</param>
            <param name="responseXml"> A <c>System.String</c> instance.</param>
            <param name="success"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.GetByOrderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'InvoiceOrder_GetByOrderId' stored procedure. 
            </summary>	
            <param name="orderId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlInvoiceOrderProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserUsers"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserUsersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserBusinessType"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserBusinessType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_advertiserBusinessTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserBusinessType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserBusinessType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserBusinessType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.AdvertiserBusinessType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.GetByAdvertiserBusinessTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__AdvertiserBusine__0425A276 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserBusinessTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.AdvertiserBusinessType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.AdvertiserBusinessType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserBusinessType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserBusinessType)">
            <summary>
            	Inserts a JXTPortal.Entities.AdvertiserBusinessType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserBusinessType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.AdvertiserBusinessType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.AdvertiserBusinessType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.AdvertiserBusinessType object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.AdvertiserBusinessType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserBusinessType_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserBusinessType_Delete' stored procedure. 
            </summary>	
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdvertiserBusinessType_Update' stored procedure. 
            </summary>	
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserBusinessTypeName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'AdvertiserBusinessType_Insert' stored procedure. 
            </summary>	
            <param name="advertiserBusinessTypeName"> A <c>System.String</c> instance.</param>
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'AdvertiserBusinessType_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.GetByAdvertiserBusinessTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'AdvertiserBusinessType_GetByAdvertiserBusinessTypeId' stored procedure. 
            </summary>	
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'AdvertiserBusinessType_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserBusinessTypeName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserBusinessTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteWebPartTypes"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteWebPartTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebPartTypes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebPartTypes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebPartTypes objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWebPartTypes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.GetBySiteWebPartTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteWebPartTypes__35BCFE0A index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteWebPartTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteWebPartTypes"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteWebPartTypes})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteWebPartTypes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteWebPartTypes)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteWebPartTypes object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteWebPartTypes object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteWebPartTypes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteWebPartTypes)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteWebPartTypes object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteWebPartTypes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebPartTypes_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebPartTypes_Delete' stored procedure. 
            </summary>	
            <param name="siteWebPartTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.GetBySiteWebPartTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWebPartTypes_GetBySiteWebPartTypeId' stored procedure. 
            </summary>	
            <param name="siteWebPartTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteWebPartTypes_Insert' stored procedure. 
            </summary>	
            <param name="siteWebPartName"> A <c>System.String</c> instance.</param>
            <param name="siteWebPartTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteWebPartTypes_Update' stored procedure. 
            </summary>	
            <param name="siteWebPartTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteWebPartTypes_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteWebPartTypes_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteWebPartTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWebPartName"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSitesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Sites"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSitesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Sites"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSitesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSitesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Sites objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Sites objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Sites objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Sites objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Sites__LastModif__153B1FDF key.
            	FK__Sites__LastModif__153B1FDF Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Sites objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__tmp_ms_xx_Sites__0504B816 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Sites"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetByMobileUrl(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UX_Sites_MobileUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_mobileUrl"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Sites"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Sites})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Sites object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Sites)">
            <summary>
            	Inserts a JXTPortal.Entities.Sites object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Sites object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Sites object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Sites)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Sites object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Sites object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Create(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Sites_Create' stored procedure. 
            </summary>	
            <param name="sourceSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="languageId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteName"> A <c>System.String</c> instance.</param>
            <param name="siteUrl"> A <c>System.String</c> instance.</param>
            <param name="siteDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.String,System.Byte[],System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Sites_Insert' stored procedure. 
            </summary>	
            <param name="siteName"> A <c>System.String</c> instance.</param>
            <param name="siteUrl"> A <c>System.String</c> instance.</param>
            <param name="siteDescription"> A <c>System.String</c> instance.</param>
            <param name="siteAdminLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="live"> A <c>System.Boolean?</c> instance.</param>
            <param name="mobileEnabled"> A <c>System.Boolean?</c> instance.</param>
            <param name="mobileUrl"> A <c>System.String</c> instance.</param>
            <param name="siteAdminLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Sites_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Sites_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetByMobileUrl(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'Sites_GetByMobileUrl' stored procedure. 
            </summary>	
            <param name="mobileUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.FindSite(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Sites_FindSite' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.Byte[],System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            This method wraps the 'Sites_Update' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteName"> A <c>System.String</c> instance.</param>
            <param name="siteUrl"> A <c>System.String</c> instance.</param>
            <param name="siteDescription"> A <c>System.String</c> instance.</param>
            <param name="siteAdminLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="live"> A <c>System.Boolean?</c> instance.</param>
            <param name="mobileEnabled"> A <c>System.Boolean?</c> instance.</param>
            <param name="mobileUrl"> A <c>System.String</c> instance.</param>
            <param name="siteAdminLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Remove(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Sites_Remove' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetPaging(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Sites_GetPaging' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteName"> A <c>System.String</c> instance.</param>
            <param name="siteUrl"> A <c>System.String</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.String,System.Byte[],System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            This method wraps the 'Sites_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteName"> A <c>System.String</c> instance.</param>
            <param name="siteUrl"> A <c>System.String</c> instance.</param>
            <param name="siteDescription"> A <c>System.String</c> instance.</param>
            <param name="siteAdminLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="live"> A <c>System.Boolean?</c> instance.</param>
            <param name="mobileEnabled"> A <c>System.Boolean?</c> instance.</param>
            <param name="mobileUrl"> A <c>System.String</c> instance.</param>
            <param name="siteAdminLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Copy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Sites_Copy' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteName"> A <c>System.String</c> instance.</param>
            <param name="siteUrl"> A <c>System.String</c> instance.</param>
            <param name="siteDescription"> A <c>System.String</c> instance.</param>
            <param name="ftpFolderLocation"> A <c>System.String</c> instance.</param>
            <param name="copyGlobalSettings"> A <c>System.Boolean?</c> instance.</param>
            <param name="copyJobTemplates"> A <c>System.Boolean?</c> instance.</param>
            <param name="copySiteLocation"> A <c>System.Boolean?</c> instance.</param>
            <param name="copyProfessionRoles"> A <c>System.Boolean?</c> instance.</param>
            <param name="useCustomProfessionRole"> A <c>System.Boolean?</c> instance.</param>
            <param name="copySalaryTypes"> A <c>System.Boolean?</c> instance.</param>
            <param name="copyWorkTypes"> A <c>System.Boolean?</c> instance.</param>
            <param name="copyEducation"> A <c>System.Boolean?</c> instance.</param>
            <param name="copyAvailableStatus"> A <c>System.Boolean?</c> instance.</param>
            <param name="copyWebParts"> A <c>System.Boolean?</c> instance.</param>
            <param name="copyWidgets"> A <c>System.Boolean?</c> instance.</param>
            <param name="copyEmailTemplates"> A <c>System.Boolean?</c> instance.</param>
            <param name="selectedLanguages"> A <c>System.String</c> instance.</param>
            <param name="selectedDynamicPages"> A <c>System.String</c> instance.</param>
            <param name="selectedFiles"> A <c>System.String</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Sites_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Sites_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Sites_Delete' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSitesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSitesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSitesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSitesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSitesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMembersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Members"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMembersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Members"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMembersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMembersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Members objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Members objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Members objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Members objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Members__Country__797309D9 key.
            	FK__Members__Country__797309D9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_countryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Members objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetByEducationId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Members__Educati__2215F810 key.
            	FK__Members__Educati__2215F810 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_educationId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Members objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetByEmailFormat(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Members__EmailFo__7A672E12 key.
            	FK__Members__EmailFo__7A672E12 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_emailFormat"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Members objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Members__SiteID__0ABD916C key.
            	FK__Members__SiteID__0ABD916C Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Members objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetBySiteIdEmailAddress(JXTPortal.Data.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Unique_Members index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_emailAddress"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Members"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetBySiteIdUsername(JXTPortal.Data.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Unique_Members_Email index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="_username"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Members"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Members__2A4B4B5E index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Members"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Members})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Members object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Members)">
            <summary>
            	Inserts a JXTPortal.Entities.Members object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Members object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Members object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Members)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Members object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Members object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetBySiteIdEmailAddress(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Members_GetBySiteIdEmailAddress' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="emailAddress"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Guid},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'Members_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="username"> A <c>System.String</c> instance.</param>
            <param name="password"> A <c>System.String</c> instance.</param>
            <param name="title"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="emailAddress"> A <c>System.String</c> instance.</param>
            <param name="company"> A <c>System.String</c> instance.</param>
            <param name="position"> A <c>System.String</c> instance.</param>
            <param name="homePhone"> A <c>System.String</c> instance.</param>
            <param name="workPhone"> A <c>System.String</c> instance.</param>
            <param name="mobilePhone"> A <c>System.String</c> instance.</param>
            <param name="fax"> A <c>System.String</c> instance.</param>
            <param name="address1"> A <c>System.String</c> instance.</param>
            <param name="address2"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.String</c> instance.</param>
            <param name="areaId"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="preferredCategoryId"> A <c>System.String</c> instance.</param>
            <param name="preferredSubCategoryId"> A <c>System.String</c> instance.</param>
            <param name="preferredSalaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="subscribed"> A <c>System.Boolean?</c> instance.</param>
            <param name="monthlyUpdate"> A <c>System.Boolean?</c> instance.</param>
            <param name="referringMemberId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="lastLogon"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateOfBirth"> A <c>System.DateTime?</c> instance.</param>
            <param name="gender"> A <c>System.String</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="validated"> A <c>System.Boolean?</c> instance.</param>
            <param name="validateGuid"> A <c>System.Guid?</c> instance.</param>
            <param name="memberUrlExtension"> A <c>System.String</c> instance.</param>
            <param name="websiteUrl"> A <c>System.String</c> instance.</param>
            <param name="availabilityId"> A <c>System.Int32?</c> instance.</param>
            <param name="availabilityFromDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="mySpaceHeading"> A <c>System.String</c> instance.</param>
            <param name="mySpaceContent"> A <c>System.String</c> instance.</param>
            <param name="urlReferrer"> A <c>System.String</c> instance.</param>
            <param name="requiredPasswordChange"> A <c>System.Boolean?</c> instance.</param>
            <param name="preferredJobTitle"> A <c>System.String</c> instance.</param>
            <param name="preferredAvailability"> A <c>System.String</c> instance.</param>
            <param name="preferredAvailabilityType"> A <c>System.Int32?</c> instance.</param>
            <param name="preferredSalaryFrom"> A <c>System.String</c> instance.</param>
            <param name="preferredSalaryTo"> A <c>System.String</c> instance.</param>
            <param name="currentSalaryFrom"> A <c>System.String</c> instance.</param>
            <param name="currentSalaryTo"> A <c>System.String</c> instance.</param>
            <param name="lookingFor"> A <c>System.String</c> instance.</param>
            <param name="experience"> A <c>System.String</c> instance.</param>
            <param name="skills"> A <c>System.String</c> instance.</param>
            <param name="reasons"> A <c>System.String</c> instance.</param>
            <param name="comments"> A <c>System.String</c> instance.</param>
            <param name="profileType"> A <c>System.String</c> instance.</param>
            <param name="educationId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="registeredDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="states"> A <c>System.String</c> instance.</param>
            <param name="suburb"> A <c>System.String</c> instance.</param>
            <param name="postCode"> A <c>System.String</c> instance.</param>
            <param name="profilePicture"> A <c>System.String</c> instance.</param>
            <param name="shortBio"> A <c>System.String</c> instance.</param>
            <param name="workTypeId"> A <c>System.String</c> instance.</param>
            <param name="memberships"> A <c>System.String</c> instance.</param>
            <param name="memberStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInAccessToken"> A <c>System.String</c> instance.</param>
            <param name="externalMemberId"> A <c>System.String</c> instance.</param>
            <param name="passportNo"> A <c>System.String</c> instance.</param>
            <param name="mailingAddress1"> A <c>System.String</c> instance.</param>
            <param name="mailingAddress2"> A <c>System.String</c> instance.</param>
            <param name="mailingStates"> A <c>System.String</c> instance.</param>
            <param name="mailingSuburb"> A <c>System.String</c> instance.</param>
            <param name="mailingPostCode"> A <c>System.String</c> instance.</param>
            <param name="mailingCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryName"> A <c>System.String</c> instance.</param>
            <param name="mailingCountryName"> A <c>System.String</c> instance.</param>
            <param name="loginAttempts"> A <c>System.Int32?</c> instance.</param>
            <param name="lastAttemptDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="lastTermsAndConditionsDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="referringSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="multiLingualFirstName"> A <c>System.String</c> instance.</param>
            <param name="multiLingualSurame"> A <c>System.String</c> instance.</param>
            <param name="secondaryEmail"> A <c>System.String</c> instance.</param>
            <param name="candidateData"> A <c>System.String</c> instance.</param>
            <param name="eligibleToWorkIn"> A <c>System.String</c> instance.</param>
            <param name="referenceUponRequest"> A <c>System.Boolean?</c> instance.</param>
            <param name="preferredLine"> A <c>System.Int32?</c> instance.</param>
            <param name="videoUrl"> A <c>System.String</c> instance.</param>
            <param name="profileDataXml"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Guid},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'Members_Update' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="username"> A <c>System.String</c> instance.</param>
            <param name="password"> A <c>System.String</c> instance.</param>
            <param name="title"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="emailAddress"> A <c>System.String</c> instance.</param>
            <param name="company"> A <c>System.String</c> instance.</param>
            <param name="position"> A <c>System.String</c> instance.</param>
            <param name="homePhone"> A <c>System.String</c> instance.</param>
            <param name="workPhone"> A <c>System.String</c> instance.</param>
            <param name="mobilePhone"> A <c>System.String</c> instance.</param>
            <param name="fax"> A <c>System.String</c> instance.</param>
            <param name="address1"> A <c>System.String</c> instance.</param>
            <param name="address2"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.String</c> instance.</param>
            <param name="areaId"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="preferredCategoryId"> A <c>System.String</c> instance.</param>
            <param name="preferredSubCategoryId"> A <c>System.String</c> instance.</param>
            <param name="preferredSalaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="subscribed"> A <c>System.Boolean?</c> instance.</param>
            <param name="monthlyUpdate"> A <c>System.Boolean?</c> instance.</param>
            <param name="referringMemberId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="lastLogon"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateOfBirth"> A <c>System.DateTime?</c> instance.</param>
            <param name="gender"> A <c>System.String</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="validated"> A <c>System.Boolean?</c> instance.</param>
            <param name="validateGuid"> A <c>System.Guid?</c> instance.</param>
            <param name="memberUrlExtension"> A <c>System.String</c> instance.</param>
            <param name="websiteUrl"> A <c>System.String</c> instance.</param>
            <param name="availabilityId"> A <c>System.Int32?</c> instance.</param>
            <param name="availabilityFromDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="mySpaceHeading"> A <c>System.String</c> instance.</param>
            <param name="mySpaceContent"> A <c>System.String</c> instance.</param>
            <param name="urlReferrer"> A <c>System.String</c> instance.</param>
            <param name="requiredPasswordChange"> A <c>System.Boolean?</c> instance.</param>
            <param name="preferredJobTitle"> A <c>System.String</c> instance.</param>
            <param name="preferredAvailability"> A <c>System.String</c> instance.</param>
            <param name="preferredAvailabilityType"> A <c>System.Int32?</c> instance.</param>
            <param name="preferredSalaryFrom"> A <c>System.String</c> instance.</param>
            <param name="preferredSalaryTo"> A <c>System.String</c> instance.</param>
            <param name="currentSalaryFrom"> A <c>System.String</c> instance.</param>
            <param name="currentSalaryTo"> A <c>System.String</c> instance.</param>
            <param name="lookingFor"> A <c>System.String</c> instance.</param>
            <param name="experience"> A <c>System.String</c> instance.</param>
            <param name="skills"> A <c>System.String</c> instance.</param>
            <param name="reasons"> A <c>System.String</c> instance.</param>
            <param name="comments"> A <c>System.String</c> instance.</param>
            <param name="profileType"> A <c>System.String</c> instance.</param>
            <param name="educationId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="registeredDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="states"> A <c>System.String</c> instance.</param>
            <param name="suburb"> A <c>System.String</c> instance.</param>
            <param name="postCode"> A <c>System.String</c> instance.</param>
            <param name="profilePicture"> A <c>System.String</c> instance.</param>
            <param name="shortBio"> A <c>System.String</c> instance.</param>
            <param name="workTypeId"> A <c>System.String</c> instance.</param>
            <param name="memberships"> A <c>System.String</c> instance.</param>
            <param name="memberStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInAccessToken"> A <c>System.String</c> instance.</param>
            <param name="externalMemberId"> A <c>System.String</c> instance.</param>
            <param name="passportNo"> A <c>System.String</c> instance.</param>
            <param name="mailingAddress1"> A <c>System.String</c> instance.</param>
            <param name="mailingAddress2"> A <c>System.String</c> instance.</param>
            <param name="mailingStates"> A <c>System.String</c> instance.</param>
            <param name="mailingSuburb"> A <c>System.String</c> instance.</param>
            <param name="mailingPostCode"> A <c>System.String</c> instance.</param>
            <param name="mailingCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryName"> A <c>System.String</c> instance.</param>
            <param name="mailingCountryName"> A <c>System.String</c> instance.</param>
            <param name="loginAttempts"> A <c>System.Int32?</c> instance.</param>
            <param name="lastAttemptDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="lastTermsAndConditionsDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="referringSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="multiLingualFirstName"> A <c>System.String</c> instance.</param>
            <param name="multiLingualSurame"> A <c>System.String</c> instance.</param>
            <param name="secondaryEmail"> A <c>System.String</c> instance.</param>
            <param name="candidateData"> A <c>System.String</c> instance.</param>
            <param name="eligibleToWorkIn"> A <c>System.String</c> instance.</param>
            <param name="referenceUponRequest"> A <c>System.Boolean?</c> instance.</param>
            <param name="preferredLine"> A <c>System.Int32?</c> instance.</param>
            <param name="videoUrl"> A <c>System.String</c> instance.</param>
            <param name="profileDataXml"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetBySiteIdUsername(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Members_GetBySiteIdUsername' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="username"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_GetByCountryId' stored procedure. 
            </summary>	
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.AdminGetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_AdminGetPaged' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="emailAddress"> A <c>System.String</c> instance.</param>
            <param name="username"> A <c>System.String</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Guid},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Members_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="username"> A <c>System.String</c> instance.</param>
            <param name="password"> A <c>System.String</c> instance.</param>
            <param name="title"> A <c>System.String</c> instance.</param>
            <param name="firstName"> A <c>System.String</c> instance.</param>
            <param name="surname"> A <c>System.String</c> instance.</param>
            <param name="emailAddress"> A <c>System.String</c> instance.</param>
            <param name="company"> A <c>System.String</c> instance.</param>
            <param name="position"> A <c>System.String</c> instance.</param>
            <param name="homePhone"> A <c>System.String</c> instance.</param>
            <param name="workPhone"> A <c>System.String</c> instance.</param>
            <param name="mobilePhone"> A <c>System.String</c> instance.</param>
            <param name="fax"> A <c>System.String</c> instance.</param>
            <param name="address1"> A <c>System.String</c> instance.</param>
            <param name="address2"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.String</c> instance.</param>
            <param name="areaId"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="preferredCategoryId"> A <c>System.String</c> instance.</param>
            <param name="preferredSubCategoryId"> A <c>System.String</c> instance.</param>
            <param name="preferredSalaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="subscribed"> A <c>System.Boolean?</c> instance.</param>
            <param name="monthlyUpdate"> A <c>System.Boolean?</c> instance.</param>
            <param name="referringMemberId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="lastLogon"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateOfBirth"> A <c>System.DateTime?</c> instance.</param>
            <param name="gender"> A <c>System.String</c> instance.</param>
            <param name="tags"> A <c>System.String</c> instance.</param>
            <param name="validated"> A <c>System.Boolean?</c> instance.</param>
            <param name="validateGuid"> A <c>System.Guid?</c> instance.</param>
            <param name="memberUrlExtension"> A <c>System.String</c> instance.</param>
            <param name="websiteUrl"> A <c>System.String</c> instance.</param>
            <param name="availabilityId"> A <c>System.Int32?</c> instance.</param>
            <param name="availabilityFromDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="mySpaceHeading"> A <c>System.String</c> instance.</param>
            <param name="mySpaceContent"> A <c>System.String</c> instance.</param>
            <param name="urlReferrer"> A <c>System.String</c> instance.</param>
            <param name="requiredPasswordChange"> A <c>System.Boolean?</c> instance.</param>
            <param name="preferredJobTitle"> A <c>System.String</c> instance.</param>
            <param name="preferredAvailability"> A <c>System.String</c> instance.</param>
            <param name="preferredAvailabilityType"> A <c>System.Int32?</c> instance.</param>
            <param name="preferredSalaryFrom"> A <c>System.String</c> instance.</param>
            <param name="preferredSalaryTo"> A <c>System.String</c> instance.</param>
            <param name="currentSalaryFrom"> A <c>System.String</c> instance.</param>
            <param name="currentSalaryTo"> A <c>System.String</c> instance.</param>
            <param name="lookingFor"> A <c>System.String</c> instance.</param>
            <param name="experience"> A <c>System.String</c> instance.</param>
            <param name="skills"> A <c>System.String</c> instance.</param>
            <param name="reasons"> A <c>System.String</c> instance.</param>
            <param name="comments"> A <c>System.String</c> instance.</param>
            <param name="profileType"> A <c>System.String</c> instance.</param>
            <param name="educationId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="registeredDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="states"> A <c>System.String</c> instance.</param>
            <param name="suburb"> A <c>System.String</c> instance.</param>
            <param name="postCode"> A <c>System.String</c> instance.</param>
            <param name="profilePicture"> A <c>System.String</c> instance.</param>
            <param name="shortBio"> A <c>System.String</c> instance.</param>
            <param name="workTypeId"> A <c>System.String</c> instance.</param>
            <param name="memberships"> A <c>System.String</c> instance.</param>
            <param name="memberStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="linkedInAccessToken"> A <c>System.String</c> instance.</param>
            <param name="externalMemberId"> A <c>System.String</c> instance.</param>
            <param name="passportNo"> A <c>System.String</c> instance.</param>
            <param name="mailingAddress1"> A <c>System.String</c> instance.</param>
            <param name="mailingAddress2"> A <c>System.String</c> instance.</param>
            <param name="mailingStates"> A <c>System.String</c> instance.</param>
            <param name="mailingSuburb"> A <c>System.String</c> instance.</param>
            <param name="mailingPostCode"> A <c>System.String</c> instance.</param>
            <param name="mailingCountryId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryName"> A <c>System.String</c> instance.</param>
            <param name="mailingCountryName"> A <c>System.String</c> instance.</param>
            <param name="loginAttempts"> A <c>System.Int32?</c> instance.</param>
            <param name="lastAttemptDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="status"> A <c>System.Int32?</c> instance.</param>
            <param name="lastTermsAndConditionsDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="defaultLanguageId"> A <c>System.Int32?</c> instance.</param>
            <param name="referringSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="multiLingualFirstName"> A <c>System.String</c> instance.</param>
            <param name="multiLingualSurame"> A <c>System.String</c> instance.</param>
            <param name="secondaryEmail"> A <c>System.String</c> instance.</param>
            <param name="candidateData"> A <c>System.String</c> instance.</param>
            <param name="eligibleToWorkIn"> A <c>System.String</c> instance.</param>
            <param name="referenceUponRequest"> A <c>System.Boolean?</c> instance.</param>
            <param name="preferredLine"> A <c>System.Int32?</c> instance.</param>
            <param name="videoUrl"> A <c>System.String</c> instance.</param>
            <param name="profileDataXml"> A <c>System.String</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetByEducationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_GetByEducationId' stored procedure. 
            </summary>	
            <param name="educationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_Delete' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetByKeyword(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Members_GetByKeyword' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="keyword"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.CustomGetNewValidMembers(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'Members_CustomGetNewValidMembers' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Members_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.CustomGetCV(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_CustomGetCV' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetByEmailFormat(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_GetByEmailFormat' stored procedure. 
            </summary>	
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.CustomPeopleSearch(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Members_CustomPeopleSearch' stored procedure. 
            </summary>	
            <param name="keyword"> A <c>System.String</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.String</c> instance.</param>
            <param name="professionId"> A <c>System.String</c> instance.</param>
            <param name="roleId"> A <c>System.String</c> instance.</param>
            <param name="countryId"> A <c>System.String</c> instance.</param>
            <param name="locationId"> A <c>System.String</c> instance.</param>
            <param name="areaId"> A <c>System.String</c> instance.</param>
            <param name="eligibleToWorkIn"> A <c>System.String</c> instance.</param>
            <param name="availabilityFromDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.GetMemberCount(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_GetMemberCount' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.CustomGetNewValidProfiles(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'Members_CustomGetNewValidProfiles' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProviderBase.PeopleSearch(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Members_PeopleSearch' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="preferredCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="preferredSubCategoryId"> A <c>System.Int32?</c> instance.</param>
            <param name="preferredSalaryId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="availabilityId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="searchExpression"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMembersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMembersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMembersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMembersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMembersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberLicensesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberLicenses"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLicensesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberLicensesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlInvoiceProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Invoice"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Invoice"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_invoiceId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Invoice objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Invoice objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Invoice objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Invoice objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Invoice__Adverti__3710CDD7 key.
            	FK__Invoice__Adverti__3710CDD7 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserUserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Invoice objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.GetByOrderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Invoice__OrderID__3804F210 key.
            	FK__Invoice__OrderID__3804F210 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_orderId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Invoice objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.GetByInvoiceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Invoice__D796AAD535288565 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_invoiceId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Invoice"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Invoice})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Invoice object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Invoice)">
            <summary>
            	Inserts a JXTPortal.Entities.Invoice object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Invoice object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Invoice object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Invoice)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Invoice object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Invoice object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Invoice_Insert' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="orderId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="totalNumberOfJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="invoiceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.GetByAdvertiserUserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Invoice_GetByAdvertiserUserId' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.GetByInvoiceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Invoice_GetByInvoiceId' stored procedure. 
            </summary>	
            <param name="invoiceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Invoice_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.CustomGetAdvertiserInvoiceReport(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'Invoice_CustomGetAdvertiserInvoiceReport' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="orderId"> A <c>System.String</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="where"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.CustomCheckJobCreditCount(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Invoice_CustomCheckJobCreditCount' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String)">
            <summary>
            This method wraps the 'Invoice_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="invoiceId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="orderId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="totalNumberOfJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Invoice_Delete' stored procedure. 
            </summary>	
            <param name="invoiceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Invoice_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String)">
            <summary>
            This method wraps the 'Invoice_Update' stored procedure. 
            </summary>	
            <param name="invoiceId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="orderId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobItemTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="totalNumberOfJobs"> A <c>System.Int32?</c> instance.</param>
            <param name="totalAmount"> A <c>System.Decimal?</c> instance.</param>
            <param name="description"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.GetByOrderId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Invoice_GetByOrderId' stored procedure. 
            </summary>	
            <param name="orderId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.CustomJobCreditList(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Invoice_CustomJobCreditList' stored procedure. 
            </summary>	
            <param name="advertiserUserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlInvoiceProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlInvoiceProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlGlobalSettingsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.GlobalSettings"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalSettingsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlGlobalSettingsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertisersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Advertisers"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Advertisers"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByJobItemsTypeIdFromAdvertiserJobPricing(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Advertisers objects from the datasource by JobItemsTypeID in the
            	AdvertiserJobPricing table. Table Advertisers is related to table JobItemsType
            	through the (M:N) relationship defined in the AdvertiserJobPricing table.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobItemsTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Advertisers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_advertiserId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Advertisers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Advertisers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Advertisers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Advertisers objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByAdvertiserAccountStatusId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__Adver__0559BDD1 key.
            	FK__Advertise__Adver__0559BDD1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserAccountStatusId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Advertisers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByAdvertiserBusinessTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__Adver__064DE20A key.
            	FK__Advertise__Adver__064DE20A Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserBusinessTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Advertisers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByAdvertiserAccountTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__Adver__07420643 key.
            	FK__Advertise__Adver__07420643 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserAccountTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Advertisers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__LastM__092A4EB5 key.
            	FK__Advertise__LastM__092A4EB5 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Advertisers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Advertise__SiteI__08362A7C key.
            	FK__Advertise__SiteI__08362A7C Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Advertisers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__tmp_ms_xx_Advert__01892CED index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Advertisers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Advertisers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Advertisers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Advertisers)">
            <summary>
            	Inserts a JXTPortal.Entities.Advertisers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Advertisers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Advertisers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Advertisers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Advertisers object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Advertisers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.CustomGetActivityReport(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            This method wraps the 'Advertisers_CustomGetActivityReport' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="keyword"> A <c>System.String</c> instance.</param>
            <param name="dateFrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateTo"> A <c>System.DateTime?</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="isDesc"> A <c>System.Boolean?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByJobItemsTypeIdFromAdvertiserJobPricing(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetByJobItemsTypeIdFromAdvertiserJobPricing' stored procedure. 
            </summary>	
            <param name="jobItemsTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.Byte[],System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Advertisers_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="businessNumber"> A <c>System.String</c> instance.</param>
            <param name="streetAddress1"> A <c>System.String</c> instance.</param>
            <param name="streetAddress2"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="postalAddress1"> A <c>System.String</c> instance.</param>
            <param name="postalAddress2"> A <c>System.String</c> instance.</param>
            <param name="webAddress"> A <c>System.String</c> instance.</param>
            <param name="noOfEmployees"> A <c>System.String</c> instance.</param>
            <param name="firstApprovedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="profile"> A <c>System.String</c> instance.</param>
            <param name="charityNumber"> A <c>System.String</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="freeTrialStartDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="freeTrialEndDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="accountsPayableEmail"> A <c>System.String</c> instance.</param>
            <param name="requireLogonForExternalApplication"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="linkedInLogo"> A <c>System.String</c> instance.</param>
            <param name="linkedInCompanyId"> A <c>System.String</c> instance.</param>
            <param name="linkedInEmail"> A <c>System.String</c> instance.</param>
            <param name="registerDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="externalAdvertiserId"> A <c>System.String</c> instance.</param>
            <param name="videoLink"> A <c>System.String</c> instance.</param>
            <param name="industry"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyRole"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyFirstName"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyLastName"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyPhone"> A <c>System.String</c> instance.</param>
            <param name="preferredContactMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.Byte[],System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'Advertisers_Update' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="businessNumber"> A <c>System.String</c> instance.</param>
            <param name="streetAddress1"> A <c>System.String</c> instance.</param>
            <param name="streetAddress2"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="postalAddress1"> A <c>System.String</c> instance.</param>
            <param name="postalAddress2"> A <c>System.String</c> instance.</param>
            <param name="webAddress"> A <c>System.String</c> instance.</param>
            <param name="noOfEmployees"> A <c>System.String</c> instance.</param>
            <param name="firstApprovedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="profile"> A <c>System.String</c> instance.</param>
            <param name="charityNumber"> A <c>System.String</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="freeTrialStartDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="freeTrialEndDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="accountsPayableEmail"> A <c>System.String</c> instance.</param>
            <param name="requireLogonForExternalApplication"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="linkedInLogo"> A <c>System.String</c> instance.</param>
            <param name="linkedInCompanyId"> A <c>System.String</c> instance.</param>
            <param name="linkedInEmail"> A <c>System.String</c> instance.</param>
            <param name="registerDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="externalAdvertiserId"> A <c>System.String</c> instance.</param>
            <param name="videoLink"> A <c>System.String</c> instance.</param>
            <param name="industry"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyRole"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyFirstName"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyLastName"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyPhone"> A <c>System.String</c> instance.</param>
            <param name="preferredContactMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetAdvertisersNotPostedSince(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetAdvertisersNotPostedSince' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="daysSinceLastPost"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetAdvertiserTypeStatistics(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetAdvertiserTypeStatistics' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.AdminGetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_AdminGetPaged' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByAdvertiserAccountStatusId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetByAdvertiserAccountStatusId' stored procedure. 
            </summary>	
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_Delete' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.Byte[],System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Advertisers_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserAccountStatusId"> A <c>System.Int32?</c> instance.</param>
            <param name="companyName"> A <c>System.String</c> instance.</param>
            <param name="businessNumber"> A <c>System.String</c> instance.</param>
            <param name="streetAddress1"> A <c>System.String</c> instance.</param>
            <param name="streetAddress2"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="postalAddress1"> A <c>System.String</c> instance.</param>
            <param name="postalAddress2"> A <c>System.String</c> instance.</param>
            <param name="webAddress"> A <c>System.String</c> instance.</param>
            <param name="noOfEmployees"> A <c>System.String</c> instance.</param>
            <param name="firstApprovedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="profile"> A <c>System.String</c> instance.</param>
            <param name="charityNumber"> A <c>System.String</c> instance.</param>
            <param name="searchField"> A <c>System.String</c> instance.</param>
            <param name="freeTrialStartDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="freeTrialEndDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="accountsPayableEmail"> A <c>System.String</c> instance.</param>
            <param name="requireLogonForExternalApplication"> A <c>System.Boolean?</c> instance.</param>
            <param name="advertiserLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="linkedInLogo"> A <c>System.String</c> instance.</param>
            <param name="linkedInCompanyId"> A <c>System.String</c> instance.</param>
            <param name="linkedInEmail"> A <c>System.String</c> instance.</param>
            <param name="registerDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="externalAdvertiserId"> A <c>System.String</c> instance.</param>
            <param name="videoLink"> A <c>System.String</c> instance.</param>
            <param name="industry"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyRole"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyFirstName"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyLastName"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyEmailAddress"> A <c>System.String</c> instance.</param>
            <param name="nominatedCompanyPhone"> A <c>System.String</c> instance.</param>
            <param name="preferredContactMethod"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.CustomGetAllAdvertisers(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_CustomGetAllAdvertisers' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetAllAdvertisers(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetAllAdvertisers' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetAllJobStatistics(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetAllJobStatistics' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetAdvertiserCount(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetAdvertiserCount' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.CustomGetExpiringJobAdvertiser(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_CustomGetExpiringJobAdvertiser' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="withInDays"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByAdvertiserBusinessTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetByAdvertiserBusinessTypeId' stored procedure. 
            </summary>	
            <param name="advertiserBusinessTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.GetByAdvertiserAccountTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Advertisers_GetByAdvertiserAccountTypeId' stored procedure. 
            </summary>	
            <param name="advertiserAccountTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Advertisers_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlAdvertisersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertisersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertisersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteSalaryType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteSalaryTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteMappings"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteMappingId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteMappings objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteMappings objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteMappings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteMappings objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.GetByMasterSiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteMappi__Maste__6201483D key.
            	FK__SiteMappi__Maste__6201483D Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_masterSiteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteMappings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteMappi__SiteI__610D2404 key.
            	FK__SiteMappi__SiteI__610D2404 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteMappings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.GetBySiteMappingId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteMapp__C583615F5F24DB92 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteMappingId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteMappings"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteMappings})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteMappings object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteMappings)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteMappings object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteMappings object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteMappings object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteMappings)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteMappings object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteMappings object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteMappingsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteMappingsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteMappings"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteMappingsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteMappingsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteCurrencies"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteCurrenciesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberFileTypes"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_memberFileTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFileTypes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFileTypes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFileTypes objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.MemberFileTypes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.GetByMemberFileTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__MemberFileTypes__286302EC index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberFileTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.MemberFileTypes"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.MemberFileTypes})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberFileTypes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberFileTypes)">
            <summary>
            	Inserts a JXTPortal.Entities.MemberFileTypes object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberFileTypes object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.MemberFileTypes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.MemberFileTypes)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.MemberFileTypes object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.MemberFileTypes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberFileTypes_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberFileTypes_Delete' stored procedure. 
            </summary>	
            <param name="memberFileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'MemberFileTypes_Update' stored procedure. 
            </summary>	
            <param name="memberFileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileTypeName"> A <c>System.String</c> instance.</param>
            <param name="memberFileExtensions"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'MemberFileTypes_Insert' stored procedure. 
            </summary>	
            <param name="memberFileTypeName"> A <c>System.String</c> instance.</param>
            <param name="memberFileExtensions"> A <c>System.String</c> instance.</param>
            <param name="memberFileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.GetByMemberFileTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'MemberFileTypes_GetByMemberFileTypeId' stored procedure. 
            </summary>	
            <param name="memberFileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'MemberFileTypes_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'MemberFileTypes_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="memberFileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberFileTypeName"> A <c>System.String</c> instance.</param>
            <param name="memberFileExtensions"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlMemberFileTypesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberFilesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberFiles"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFilesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberFilesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlLocationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Location"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlLocationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlLocationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_locationId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Location objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Location objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Location objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Location objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Location__Countr__07225D8A key.
            	FK__Location__Countr__07225D8A Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_countryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Location objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Location__2759D01A index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_locationId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Location"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Location})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Location object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Location)">
            <summary>
            	Inserts a JXTPortal.Entities.Location object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Location object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Location object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Location)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Location object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Location object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Location_Insert' stored procedure. 
            </summary>	
            <param name="locationName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Location_GetByLocationId' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Location_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Location_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.GetSiteTree(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Location_GetSiteTree' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Location_GetByCountryId' stored procedure. 
            </summary>	
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Location_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Location_Delete' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.GetDetailWithSite(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Location_GetDetailWithSite' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Location_Update' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlLocationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlLocationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlLocationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlLanguagesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Languages"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLanguagesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlLanguagesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobsSavedProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobsSaved"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobsSaved"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobSaveId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsSaved objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsSaved objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsSaved objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsSaved objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsSaved__JobAr__5F43C5EB key.
            	FK__JobsSaved__JobAr__5F43C5EB Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobArchiveId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsSaved objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsSaved__JobID__63112973 key.
            	FK__JobsSaved__JobID__63112973 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsSaved objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobsSaved__Membe__64054DAC key.
            	FK__JobsSaved__Membe__64054DAC Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobsSaved objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetByJobSaveId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobsSaved__621D053A index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobSaveId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobsSaved"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobsSaved})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobsSaved object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobsSaved)">
            <summary>
            	Inserts a JXTPortal.Entities.JobsSaved object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobsSaved object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobsSaved object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobsSaved)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobsSaved object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobsSaved object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'JobsSaved_Insert' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobSaveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsSaved_GetByJobId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsSaved_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobsSaved_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsSaved_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetByJobSaveId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsSaved_GetByJobSaveId' stored procedure. 
            </summary>	
            <param name="jobSaveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsSaved_Update' stored procedure. 
            </summary>	
            <param name="jobSaveId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsSaved_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobSaveId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsSaved_Delete' stored procedure. 
            </summary>	
            <param name="jobSaveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsSaved_GetByJobArchiveId' stored procedure. 
            </summary>	
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.GetJobNameByMemberID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobsSaved_GetJobNameByMemberID' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="pageNumber"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobsSavedProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsSavedProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobsSavedProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlFileTypesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.FileTypes"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.FileTypes"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_fileTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.FileTypes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.FileTypes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.FileTypes objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.FileTypes objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.GetByFileTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__FileTypes__1ED998B2 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_fileTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.FileTypes"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.FileTypes})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.FileTypes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.FileTypes)">
            <summary>
            	Inserts a JXTPortal.Entities.FileTypes object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.FileTypes object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.FileTypes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.FileTypes)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.FileTypes object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.FileTypes object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'FileTypes_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'FileTypes_Delete' stored procedure. 
            </summary>	
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.GetByFileTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'FileTypes_GetByFileTypeId' stored procedure. 
            </summary>	
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'FileTypes_Insert' stored procedure. 
            </summary>	
            <param name="fileTypeName"> A <c>System.String</c> instance.</param>
            <param name="fileTypeExtension"> A <c>System.String</c> instance.</param>
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'FileTypes_Update' stored procedure. 
            </summary>	
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="fileTypeName"> A <c>System.String</c> instance.</param>
            <param name="fileTypeExtension"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'FileTypes_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            This method wraps the 'FileTypes_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="fileTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="fileTypeName"> A <c>System.String</c> instance.</param>
            <param name="fileTypeExtension"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlFileTypesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFileTypesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlFileTypesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteWorkType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteWorkTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWorkType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWorkType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWorkType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWorkType objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteWorkT__SiteI__216BEC9A key.
            	FK__SiteWorkT__SiteI__216BEC9A Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWorkType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetByWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteWorkT__WorkT__2077C861 key.
            	FK__SiteWorkT__WorkT__2077C861 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_workTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteWorkType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetBySiteWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__tmp_ms_xx_SiteWo__17E28260 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteWorkTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteWorkType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteWorkType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteWorkType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteWorkType)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteWorkType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteWorkType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteWorkType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteWorkType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteWorkType object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteWorkType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteWorkType_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWorkTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWorkTypeFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="siteWorkTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetByWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWorkType_GetByWorkTypeId' stored procedure. 
            </summary>	
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteWorkType_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWorkType_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetBySiteIdFriendlyUrl(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteWorkType_GetBySiteIdFriendlyUrl' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="friendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWorkType_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.GetBySiteWorkTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWorkType_GetBySiteWorkTypeId' stored procedure. 
            </summary>	
            <param name="siteWorkTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteWorkType_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteWorkTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWorkTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWorkTypeFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteWorkType_Delete' stored procedure. 
            </summary>	
            <param name="siteWorkTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'SiteWorkType_Update' stored procedure. 
            </summary>	
            <param name="siteWorkTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="workTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWorkTypeName"> A <c>System.String</c> instance.</param>
            <param name="valid"> A <c>System.Boolean?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="siteWorkTypeFriendlyUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlNetTiersProvider">
            <summary>
            This class is the Sql implementation of the NetTiersProvider.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:JXTPortal.Data.SqlClient.SqlNetTiersProvider"/> class.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.CreateTransaction">
            <summary>
            Creates a new <c cref="T:JXTPortal.Data.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(JXTPortal.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(JXTPortal.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(JXTPortal.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(JXTPortal.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(JXTPortal.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(JXTPortal.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(JXTPortal.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(JXTPortal.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(JXTPortal.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(JXTPortal.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(JXTPortal.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(JXTPortal.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.UseStoredProcedure">
            <summary>
            Gets a value indicating whether to use stored procedure or not.
            </summary>
            <value>
            	<c>true</c> if this repository use stored procedures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.IsTransactionSupported">
            <summary>
             Indicates if the current <c cref="T:JXTPortal.Data.Bases.NetTiersProvider"/> implementation supports Transacton.
            </summary>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.GlobalLocationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.GlobalLocation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlGlobalLocationProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlGlobalLocationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteWebPartTypesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteWebPartTypes"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteWebPartTypesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteWebPartTypesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.GlobalAreaProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.GlobalArea"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlGlobalAreaProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlGlobalAreaProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobCustomQuestionnaireProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobCustomQuestionnaire"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobCustomQuestionnaireProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobCustomQuestionnaireProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.EmailFormatsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.EmailFormats"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlEmailFormatsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlEmailFormatsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.FileTypesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.FileTypes"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlFileTypesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlFileTypesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AdminRolesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.AdminRoles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdminRolesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdminRolesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ExceptionTableProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.ExceptionTable"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlExceptionTableProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlExceptionTableProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.LanguagesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Languages"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlLanguagesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlLanguagesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SalaryTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SalaryType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSalaryTypeProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSalaryTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.LocationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Location"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlLocationProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlLocationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SalaryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Salary"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSalaryProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSalaryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteSummaryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteSummary"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteSummaryProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteSummaryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberFileTypesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberFileTypes"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberFileTypesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberFileTypesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.NewsTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.NewsType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlNewsTypeProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlNewsTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.DynamicPageRevisionsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.DynamicPageRevisions"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPageRevisionsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPageRevisionsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.NewsIndustryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.NewsIndustry"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlNewsIndustryProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlNewsIndustryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AdvertiserBusinessTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.AdvertiserBusinessType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserBusinessTypeProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserBusinessTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SitesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Sites"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSitesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSitesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AdminUsersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.AdminUsers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdminUsersProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdminUsersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AdvertiserJobPricingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.AdvertiserJobPricing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserJobPricingProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserJobPricingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.NewsCategoriesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.NewsCategories"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlNewsCategoriesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlNewsCategoriesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.DefaultResourcesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.DefaultResources"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDefaultResourcesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDefaultResourcesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.CountriesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Countries"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCountriesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCountriesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AdvertiserAccountTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.AdvertiserAccountType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserAccountTypeProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserAccountTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.RolesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Roles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlRolesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlRolesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.RelatedDynamicPagesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.RelatedDynamicPages"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlRelatedDynamicPagesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlRelatedDynamicPagesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ProfessionProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Profession"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlProfessionProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlProfessionProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.NewsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.News"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlNewsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlNewsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MembersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Members"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMembersProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMembersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberWizardProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberWizard"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberWizardProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberWizardProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberLanguagesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberLanguages"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberLanguagesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberLanguagesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberLicensesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberLicenses"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberLicensesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberLicensesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberMembershipsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberMemberships"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberMembershipsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberMembershipsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberPositionsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberPositions"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberPositionsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberPositionsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberStatusProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberStatus"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberStatusProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberStatusProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberQualificationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberQualification"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberQualificationProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberQualificationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AdvertiserAccountStatusProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.AdvertiserAccountStatus"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserAccountStatusProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserAccountStatusProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberReferencesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberReferences"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberReferencesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberReferencesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteAdvertiserFilterProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteAdvertiserFilter"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteAdvertiserFilterProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteAdvertiserFilterProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteSalaryTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteSalaryType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteSalaryTypeProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteSalaryTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteAreaProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteArea"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteAreaProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteAreaProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteWebPartsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteWebParts"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteWebPartsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteWebPartsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.EducationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Educations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlEducationsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlEducationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.WorkTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.WorkType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlWorkTypeProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlWorkTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.WidgetContainersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.WidgetContainers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlWidgetContainersProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlWidgetContainersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteWorkTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteWorkType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteWorkTypeProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteWorkTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteRolesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteRoles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteRolesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteRolesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.WebServiceLogProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.WebServiceLog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlWebServiceLogProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlWebServiceLogProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteResourcesXmlProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteResourcesXml"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteResourcesXmlProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteResourcesXmlProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteCurrenciesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteCurrencies"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteCurrenciesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteCurrenciesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteResourcesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteResources"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteResourcesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteResourcesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteCustomMappingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteCustomMapping"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteCustomMappingProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteCustomMappingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteCountriesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteCountries"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteCountriesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteCountriesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteLanguagesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteLanguages"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteLanguagesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteLanguagesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteProfessionProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteProfession"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteProfessionProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteProfessionProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteLocationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteLocation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteLocationProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteLocationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AdvertiserJobTemplateLogoProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.AdvertiserJobTemplateLogo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserJobTemplateLogoProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserJobTemplateLogoProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SiteMappingsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.SiteMappings"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteMappingsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlSiteMappingsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberFilesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberFiles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberFilesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberFilesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.FilesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Files"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlFilesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlFilesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.MemberCertificateMembershipsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.MemberCertificateMemberships"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberCertificateMembershipsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlMemberCertificateMembershipsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.CustomPaymentProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.CustomPayment"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCustomPaymentProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCustomPaymentProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.CurrenciesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Currencies"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCurrenciesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCurrenciesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.EnquiriesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Enquiries"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlEnquiriesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlEnquiriesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.CustomWidgetCssSelectorProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.CustomWidgetCssSelector"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCustomWidgetCssSelectorProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCustomWidgetCssSelectorProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.FoldersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Folders"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlFoldersProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlFoldersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.GlobalSettingsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.GlobalSettings"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlGlobalSettingsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlGlobalSettingsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ConsultantsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Consultants"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlConsultantsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlConsultantsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.EmailTemplatesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.EmailTemplates"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlEmailTemplatesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlEmailTemplatesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.InvoiceOrderProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.InvoiceOrder"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlInvoiceOrderProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlInvoiceOrderProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AdvertiserUsersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.AdvertiserUsers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserUsersProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertiserUsersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.CustomWidgetProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.CustomWidget"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCustomWidgetProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlCustomWidgetProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.DynamicPageWebPartTemplatesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.DynamicPageWebPartTemplates"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPageWebPartTemplatesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPageWebPartTemplatesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.DynamicContentProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.DynamicContent"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicContentProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicContentProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AdvertisersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Advertisers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertisersProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAdvertisersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.DynamicPageFilesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.DynamicPageFiles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPageFilesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPageFilesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.DynamicPageWebPartTemplatesLinkProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.DynamicPageWebPartTemplatesLink"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPageWebPartTemplatesLinkProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPageWebPartTemplatesLinkProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.DynamicPagesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.DynamicPages"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPagesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicPagesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.DynamicpagesCustomWidgetProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.DynamicpagesCustomWidget"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicpagesCustomWidgetProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlDynamicpagesCustomWidgetProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.IndustryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Industry"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlIndustryProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlIndustryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.IntegrationMappingsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.IntegrationMappings"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlIntegrationMappingsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlIntegrationMappingsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobTemplatesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobTemplates"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobTemplatesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobTemplatesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.IntegrationsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Integrations"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlIntegrationsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlIntegrationsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Jobs"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AreaProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Area"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAreaProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAreaProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobsArchiveProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobsArchive"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobsArchiveProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobsArchiveProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobViewsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobViews"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobViewsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobViewsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobsSavedProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobsSaved"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobsSavedProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobsSavedProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobCustomXmlProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobCustomXml"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobCustomXmlProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobCustomXmlProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobRolesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobRoles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobRolesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobRolesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.AvailableStatusProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.AvailableStatus"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAvailableStatusProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlAvailableStatusProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.InvoiceProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.Invoice"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlInvoiceProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlInvoiceProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobAlertsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobAlerts"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobAlertsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobAlertsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.InvoiceItemProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.InvoiceItem"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlInvoiceItemProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlInvoiceItemProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobApplicationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobApplication"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobApplicationProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobApplicationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobAreaProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobArea"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobAreaProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobAreaProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobApplicationNotesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobApplicationNotes"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobApplicationNotesProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobApplicationNotesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobItemsTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobItemsType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobItemsTypeProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobItemsTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.JobApplicationTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.JobApplicationType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobApplicationTypeProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlJobApplicationTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ViewJobsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.ViewJobs"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewJobsProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewJobsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ViewJobsArchiveProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.ViewJobsArchive"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewJobsArchiveProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewJobsArchiveProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ViewJobSearchProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.ViewJobSearch"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewJobSearchProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewJobSearchProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ViewSalaryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.ViewSalary"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewSalaryProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewSalaryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ViewSiteAdvertisersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.ViewSiteAdvertisers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewSiteAdvertisersProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewSiteAdvertisersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.ViewSiteAreaLocationCountryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:JXTPortal.Entities.ViewSiteAreaLocationCountry"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewSiteAreaLocationCountryProvider">
            <summary>
            Gets the current <c cref="P:JXTPortal.Data.SqlClient.SqlNetTiersProvider.SqlViewSiteAreaLocationCountryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteResourcesXml"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteResourcesXml"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteResourceXmlid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResourcesXml objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResourcesXml objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResourcesXml objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResourcesXml objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteResou__SiteI__3BBD6C3C key.
            	FK__SiteResou__SiteI__3BBD6C3C Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteResourcesXml objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.GetBySiteResourceXmlid(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteReso__C3575D8A39D523CA index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteResourceXmlid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteResourcesXml"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteResourcesXml})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteResourcesXml object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteResourcesXml)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteResourcesXml object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteResourcesXml object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteResourcesXml object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteResourcesXml)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteResourcesXml object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteResourcesXml object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteResourcesXmlProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.RelatedDynamicPages"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlRelatedDynamicPagesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobViewsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobViews"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobViewsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobViewsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobTemplatesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobTemplates"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobTemplates"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobTemplateId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobTemplates objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobTemplates objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobTemplates objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobTempla__Adver__2C5C4C1E key.
            	FK__JobTempla__Adver__2C5C4C1E Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_advertiserId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobTempla__LastM__61E66462 key.
            	FK__JobTempla__LastM__61E66462 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobTempla__SiteI__5FFE1BF0 key.
            	FK__JobTempla__SiteI__5FFE1BF0 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobTemplates objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetByJobTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobTemplates__5F09F7B7 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobTemplateId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobTemplates"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobTemplates})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobTemplates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobTemplates)">
            <summary>
            	Inserts a JXTPortal.Entities.JobTemplates object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobTemplates object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobTemplates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobTemplates)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobTemplates object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobTemplates object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Byte[],System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'JobTemplates_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobTemplateDescription"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateHtml"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobTemplateLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobTemplateLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobTemplates_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobTemplates_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobTemplates_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetByJobTemplateId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobTemplates_GetByJobTemplateId' stored procedure. 
            </summary>	
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetByAdvertiserId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobTemplates_GetByAdvertiserId' stored procedure. 
            </summary>	
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetAdvertiserJobTemplates(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobTemplates_GetAdvertiserJobTemplates' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Byte[],System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobTemplates_Update' stored procedure. 
            </summary>	
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobTemplateDescription"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateHtml"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobTemplateLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobTemplateLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Byte[],System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobTemplates_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobTemplateDescription"> A <c>System.String</c> instance.</param>
            <param name="jobTemplateHtml"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="jobTemplateLogo"> A <c>System.Byte[]</c> instance.</param>
            <param name="advertiserId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobTemplateLogoUrl"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobTemplates_Delete' stored procedure. 
            </summary>	
            <param name="jobTemplateId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobTemplates_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobTemplatesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobTemplatesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobTemplatesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicContentProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicContent"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicContentProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicContentProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.AdvertiserAccountStatus"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlAdvertiserAccountStatusProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.StoredProcedureProvider">
            <summary>
            Summary description for Procedures.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.StoredProcedureProvider.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.StoredProcedureProvider"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.StoredProcedureProvider.Serialize(System.String)">
            <summary>
            Serializes the specified filename.
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.StoredProcedureProvider.Deserialize">
            <summary>
            Deserializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.StoredProcedureProvider.GetProcedureBodyFromEmbeddedResource(System.String)">
            <summary>
            Get the query text from the embedded xml file.
            </summary>
            <param name="name">The name of the query.</param>
            <returns>the text of the query</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Boolean)">
            <summary>
            Get the command wrapper, either from the stored procedures or from the embedded queries.
            </summary>
            <param name="database">The database instance.</param>
            <param name="commandName">the name of the sp.</param>
            <param name="useStoredProcedure">Indicates if we want stored procedure.</param>
            <returns></returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Type,JXTPortal.Data.SqlFilterParameterCollection,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the command wrapper for a dynamically generated query and
            optionally includes server-side paging.
            </summary>
            <param name="database"></param>
            <param name="commandName"></param>
            <param name="columnEnum"></param>
            <param name="parameters"></param>
            <param name="orderBy"></param>
            <param name="start"></param>
            <param name="pageLength"></param>
            <returns></returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.StoredProcedureProvider.Current">
            <summary>
            Gets the current <see cref="T:JXTPortal.Data.SqlClient.StoredProcedureProvider"/> singleton instance.
            </summary>
            <value><see cref="T:JXTPortal.Data.SqlClient.StoredProcedureProvider"/></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.StoredProcedureProvider.Procedures">
            <summary>
            Gets or sets the procedures.
            </summary>
            <value>An <see cref="T:System.Collections.ArrayList"/> of <see cref="T:JXTPortal.Data.SqlClient.Procedure"/> objects.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.StoredProcedureProvider.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:JXTPortal.Data.SqlClient.Procedure"/> instance with the specified name.
            </summary>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.StoredProcedureProvider.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:JXTPortal.Data.SqlClient.Procedure"/> instance at the specified index.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.Procedure">
            <summary>
            Represents a sql query.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.Procedure.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.Procedure"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.Procedure.Parameter(System.String)">
            <summary>
            Get the parameter from the specified name of the param.
            </summary>
            <param name="paramName">Name of the param.</param>
            <returns></returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Procedure.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Procedure.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Procedure.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Procedure.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Procedure.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value></value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.Parameter">
            <summary>
            Respresents a query parameter.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.Parameter.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.Parameter"/> instance.
            </summary>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Parameter.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Parameter.SqlType">
            <summary>
            Gets or sets the SqlType.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Parameter.Direction">
            <summary>
            Gets or sets the Direction.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Parameter.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Parameter.Precision">
            <summary>
            Gets or sets the precision.
            </summary>
            <value></value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.Parameter.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value></value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteWebPartTypes"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteWebPartTypesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberWizardProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberWizard"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberWizardProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberWizardProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.IntegrationMappings"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.IntegrationMappings"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_integrationMappingId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.IntegrationMappings objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.IntegrationMappings objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.IntegrationMappings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.IntegrationMappings objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_IntegrationMappings_SiteID key.
            	FK_IntegrationMappings_SiteID Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.IntegrationMappings objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.GetByIntegrationMappingId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Integrat__0C56D1007E497E51 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_integrationMappingId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.IntegrationMappings"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.IntegrationMappings})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.IntegrationMappings object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.IntegrationMappings)">
            <summary>
            	Inserts a JXTPortal.Entities.IntegrationMappings object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.IntegrationMappings object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.IntegrationMappings object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.IntegrationMappings)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.IntegrationMappings object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.IntegrationMappings object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'IntegrationMappings_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="integrationMappingTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jxtEntity"> A <c>System.String</c> instance.</param>
            <param name="jxtColumn"> A <c>System.String</c> instance.</param>
            <param name="jxtType"> A <c>System.String</c> instance.</param>
            <param name="jxtSize"> A <c>System.Int32?</c> instance.</param>
            <param name="thirdPartyEntity"> A <c>System.String</c> instance.</param>
            <param name="thirdPartyColumn"> A <c>System.String</c> instance.</param>
            <param name="thirdPartyType"> A <c>System.String</c> instance.</param>
            <param name="thirdPartySize"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="sync"> A <c>System.Int32?</c> instance.</param>
            <param name="globalMapping"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="integrationMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'IntegrationMappings_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'IntegrationMappings_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'IntegrationMappings_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.GetByIntegrationMappingId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'IntegrationMappings_GetByIntegrationMappingId' stored procedure. 
            </summary>	
            <param name="integrationMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'IntegrationMappings_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="integrationMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="integrationMappingTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jxtEntity"> A <c>System.String</c> instance.</param>
            <param name="jxtColumn"> A <c>System.String</c> instance.</param>
            <param name="jxtType"> A <c>System.String</c> instance.</param>
            <param name="jxtSize"> A <c>System.Int32?</c> instance.</param>
            <param name="thirdPartyEntity"> A <c>System.String</c> instance.</param>
            <param name="thirdPartyColumn"> A <c>System.String</c> instance.</param>
            <param name="thirdPartyType"> A <c>System.String</c> instance.</param>
            <param name="thirdPartySize"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="sync"> A <c>System.Int32?</c> instance.</param>
            <param name="globalMapping"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'IntegrationMappings_Delete' stored procedure. 
            </summary>	
            <param name="integrationMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'IntegrationMappings_Update' stored procedure. 
            </summary>	
            <param name="integrationMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="integrationMappingTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="jxtEntity"> A <c>System.String</c> instance.</param>
            <param name="jxtColumn"> A <c>System.String</c> instance.</param>
            <param name="jxtType"> A <c>System.String</c> instance.</param>
            <param name="jxtSize"> A <c>System.Int32?</c> instance.</param>
            <param name="thirdPartyEntity"> A <c>System.String</c> instance.</param>
            <param name="thirdPartyColumn"> A <c>System.String</c> instance.</param>
            <param name="thirdPartyType"> A <c>System.String</c> instance.</param>
            <param name="thirdPartySize"> A <c>System.Int32?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="sync"> A <c>System.Int32?</c> instance.</param>
            <param name="globalMapping"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModifiedDate"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlIntegrationMappingsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlFoldersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Folders"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlFoldersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlFoldersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the ViewJobsArchive objects.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewJobsArchive objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.Get(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ViewJobsArchive objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of ViewJobsArchive objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.GetByID(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'ViewJobsArchive_GetByID' stored procedure. 
            </summary>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.VList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'ViewJobsArchive_Get_List' stored procedure. 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.Get(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            This method wraps the 'ViewJobsArchive_Get' stored procedure. 
            </summary>
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlWebServiceLogProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.WebServiceLog"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlWebServiceLogProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlWebServiceLogProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteCustomMapping"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_siteCustomMappingId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCustomMapping objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCustomMapping objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCustomMapping objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCustomMapping objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__SiteCusto__SiteI__142B3EA9 key.
            	FK__SiteCusto__SiteI__142B3EA9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.SiteCustomMapping objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.GetBySiteCustomMappingId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__SiteCust__DC6CA4B71242F637 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteCustomMappingId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.SiteCustomMapping"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.SiteCustomMapping})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteCustomMapping object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteCustomMapping)">
            <summary>
            	Inserts a JXTPortal.Entities.SiteCustomMapping object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteCustomMapping object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.SiteCustomMapping object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.SiteCustomMapping)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.SiteCustomMapping object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.SiteCustomMapping object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'SiteCustomMapping_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="masterSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteCustomMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCustomMapping_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'SiteCustomMapping_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCustomMapping_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCustomMapping_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="siteCustomMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="masterSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCustomMapping_Delete' stored procedure. 
            </summary>	
            <param name="siteCustomMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.GetBySiteCustomMappingId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCustomMapping_GetBySiteCustomMappingId' stored procedure. 
            </summary>	
            <param name="siteCustomMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'SiteCustomMapping_Update' stored procedure. 
            </summary>	
            <param name="siteCustomMappingId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="masterSiteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteCustomMapping"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteCustomMappingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobArea"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobAreaId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobArea objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobArea objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobArea objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobArea objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetByAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobArea__AreaID__10A1534B key.
            	FK__JobArea__AreaID__10A1534B Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_areaId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobArea objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobArea__JobArch__0FAD2F12 key.
            	FK__JobArea__JobArch__0FAD2F12 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobArchiveId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobArea objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobArea__JobID__0EB90AD9 key.
            	FK__JobArea__JobID__0EB90AD9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobArea objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetByJobAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobArea__0DC4E6A0 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobAreaId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobArea"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobArea})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobArea object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobArea)">
            <summary>
            	Inserts a JXTPortal.Entities.JobArea object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobArea object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobArea object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobArea)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobArea object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobArea object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'JobArea_Insert' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetByJobId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobArea_GetByJobId' stored procedure. 
            </summary>	
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobArea_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobArea_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobArea_Update' stored procedure. 
            </summary>	
            <param name="jobAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobArea_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobArea_Delete' stored procedure. 
            </summary>	
            <param name="jobAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetByAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobArea_GetByAreaId' stored procedure. 
            </summary>	
            <param name="areaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetByJobArchiveId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobArea_GetByJobArchiveId' stored procedure. 
            </summary>	
            <param name="jobArchiveId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.GetByJobAreaId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobArea_GetByJobAreaId' stored procedure. 
            </summary>	
            <param name="jobAreaId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobAreaProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlEmailTemplatesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.EmailTemplates"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEmailTemplatesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEmailTemplatesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlEducationsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Educations"/> entity.
            </summary>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlEducationsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Educations"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEducationsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEducationsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_educationId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Educations objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.Educations objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Educations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Educations objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Education__LastM__7BD05397 key.
            	FK__Education__LastM__7BD05397 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Educations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__Education__SiteI__7ADC2F5E key.
            	FK__Education__SiteI__7ADC2F5E Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.Educations objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.GetByEducationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Educations__76177A41 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_educationId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.Educations"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.Educations})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Educations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Educations)">
            <summary>
            	Inserts a JXTPortal.Entities.Educations object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Educations object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.Educations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.Educations)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.Educations object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.Educations object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'Educations_Insert' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="educationParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="educationName"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="educationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Educations_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.GetByEducationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Educations_GetByEducationId' stored procedure. 
            </summary>	
            <param name="educationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Educations_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'Educations_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Educations_Update' stored procedure. 
            </summary>	
            <param name="educationId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="educationParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="educationName"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Educations_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="educationId"> A <c>System.Int32?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="educationParentId"> A <c>System.Int32?</c> instance.</param>
            <param name="educationName"> A <c>System.String</c> instance.</param>
            <param name="globalTemplate"> A <c>System.Boolean?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="sequence"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Educations_Delete' stored procedure. 
            </summary>	
            <param name="educationId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'Educations_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlEducationsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlEducationsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlEducationsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DynamicPageFiles"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDynamicPageFilesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DefaultResources"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_defaultResourceId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DefaultResources objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.DefaultResources objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DefaultResources objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DefaultResources objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DefaultRe__LastM__7DB89C09 key.
            	FK__DefaultRe__LastM__7DB89C09 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_lastModifiedBy"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DefaultResources objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetByResourceFileId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__DefaultRe__Resou__5D2BD0E6 key.
            	FK__DefaultRe__Resou__5D2BD0E6 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_resourceFileId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.DefaultResources objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetByResourceCode(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UK_DefaultResources_ResourceCode index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_resourceCode"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DefaultResources"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetByDefaultResourceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__DefaultResources__50C5FA01 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_defaultResourceId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.DefaultResources"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.DefaultResources})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DefaultResources object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DefaultResources)">
            <summary>
            	Inserts a JXTPortal.Entities.DefaultResources object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DefaultResources object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.DefaultResources object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.DefaultResources)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.DefaultResources object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.DefaultResources object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'DefaultResources_Insert' stored procedure. 
            </summary>	
            <param name="resourceCode"> A <c>System.String</c> instance.</param>
            <param name="resourceFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceText"> A <c>System.String</c> instance.</param>
            <param name="resourceDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="defaultResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'DefaultResources_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetByResourceCode(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'DefaultResources_GetByResourceCode' stored procedure. 
            </summary>	
            <param name="resourceCode"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetByDefaultResourceId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DefaultResources_GetByDefaultResourceId' stored procedure. 
            </summary>	
            <param name="defaultResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DefaultResources_Update' stored procedure. 
            </summary>	
            <param name="defaultResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceCode"> A <c>System.String</c> instance.</param>
            <param name="resourceFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceText"> A <c>System.String</c> instance.</param>
            <param name="resourceDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DefaultResources_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="defaultResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceCode"> A <c>System.String</c> instance.</param>
            <param name="resourceFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="resourceText"> A <c>System.String</c> instance.</param>
            <param name="resourceDescription"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DefaultResources_Delete' stored procedure. 
            </summary>	
            <param name="defaultResourceId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DefaultResources_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetByLastModifiedBy(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DefaultResources_GetByLastModifiedBy' stored procedure. 
            </summary>	
            <param name="lastModifiedBy"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.GetByResourceFileId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'DefaultResources_GetByResourceFileId' stored procedure. 
            </summary>	
            <param name="resourceFileId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:JXTPortal.Entities.TList`1"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlDefaultResourcesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteWorkType"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteWorkTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberLanguagesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberLanguages"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberLanguagesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberLanguagesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlMemberFileTypesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.MemberFileTypes"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlMemberFileTypesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlMemberFileTypesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobAreaProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobArea"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAreaProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobAreaProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlInvoiceOrderProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.InvoiceOrder"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlInvoiceOrderProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlInvoiceOrderProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlGlobalAreaProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.GlobalArea"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlGlobalAreaProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlGlobalAreaProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlDefaultResourcesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.DefaultResources"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlDefaultResourcesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlDefaultResourcesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewSalaryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.ViewSalary"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewSalaryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewSalaryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.ViewJobsArchive"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlViewJobsArchiveProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteCountriesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteCountries"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteCountriesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteCountriesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlSiteAreaProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.SiteArea"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlSiteAreaProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlSiteAreaProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlLocationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.Location"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlLocationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlLocationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobsArchiveProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobsArchive"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobsArchiveProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobsArchiveProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobAlerts"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobAlertId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Find(JXTPortal.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobAlerts objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Find(JXTPortal.Data.TransactionManager,JXTPortal.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:JXTPortal.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of JXTPortal.Entities.JobAlerts objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetAll(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobAlerts objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobAlerts objects.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobAlerts__Curre__4FD2D2E9 key.
            	FK__JobAlerts__Curre__4FD2D2E9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_currencyId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobAlerts objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobAlerts__Membe__1D07F587 key.
            	FK__JobAlerts__Membe__1D07F587 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_memberId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobAlerts objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobAlerts__Salar__50C6F722 key.
            	FK__JobAlerts__Salar__50C6F722 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_salaryTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobAlerts objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK__JobAlerts__SiteI__1EF03DF9 key.
            	FK__JobAlerts__SiteI__1EF03DF9 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_siteId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of JXTPortal.Entities.JobAlerts objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetByJobAlertId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__JobAlerts__1B1FAD15 index.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="_jobAlertId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:JXTPortal.Entities.JobAlerts"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.BulkInsert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.TList{JXTPortal.Entities.JobAlerts})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobAlerts object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Insert(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobAlerts)">
            <summary>
            	Inserts a JXTPortal.Entities.JobAlerts object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobAlerts object to insert.</param>
            <remarks>
            	After inserting into the datasource, the JXTPortal.Entities.JobAlerts object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Update(JXTPortal.Data.TransactionManager,JXTPortal.Entities.JobAlerts)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object</param>
            <param name="entity">JXTPortal.Entities.JobAlerts object to update.</param>
            <remarks>
            	After updating the datasource, the JXTPortal.Entities.JobAlerts object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetByProfessionId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'JobAlerts_GetByProfessionId' stored procedure. 
            </summary>	
            <param name="professionId"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetByJobAlertId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobAlerts_GetByJobAlertId' stored procedure. 
            </summary>	
            <param name="jobAlertId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Insert(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32}@)">
            <summary>
            This method wraps the 'JobAlerts_Insert' stored procedure. 
            </summary>	
            <param name="jobAlertName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="searchKeywords"> A <c>System.String</c> instance.</param>
            <param name="recurrenceType"> A <c>System.Int32?</c> instance.</param>
            <param name="dailyFrequency"> A <c>System.Int32?</c> instance.</param>
            <param name="weeklyFrequency"> A <c>System.Int32?</c> instance.</param>
            <param name="weeklyDayOccurence"> A <c>System.Int32?</c> instance.</param>
            <param name="dateLastRun"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateNextRun"> A <c>System.DateTime?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="alertActive"> A <c>System.Boolean?</c> instance.</param>
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="customRecurrenceType"> A <c>System.Int32?</c> instance.</param>
            <param name="lastResultCount"> A <c>System.Int32?</c> instance.</param>
            <param name="primaryAlert"> A <c>System.Boolean?</c> instance.</param>
            <param name="unsubscribeValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="editValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="viewValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.String</c> instance.</param>
            <param name="areaIds"> A <c>System.String</c> instance.</param>
            <param name="professionId"> A <c>System.String</c> instance.</param>
            <param name="searchRoleIds"> A <c>System.String</c> instance.</param>
            <param name="workTypeIds"> A <c>System.String</c> instance.</param>
            <param name="salaryIds"> A <c>System.String</c> instance.</param>
            <param name="daysPosted"> A <c>System.Int32?</c> instance.</param>
            <param name="generatedSql"> A <c>System.String</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.String</c> instance.</param>
            <param name="jobAlertId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetByMemberId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobAlerts_GetByMemberId' stored procedure. 
            </summary>	
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetByLocationId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'JobAlerts_GetByLocationId' stored procedure. 
            </summary>	
            <param name="locationId"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Get_List(JXTPortal.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            This method wraps the 'JobAlerts_Get_List' stored procedure. 
            </summary>	
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetPaged(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobAlerts_GetPaged' stored procedure. 
            </summary>	
            <param name="whereClause"> A <c>System.String</c> instance.</param>
            <param name="orderBy"> A <c>System.String</c> instance.</param>
            <param name="pageIndex"> A <c>System.Int32?</c> instance.</param>
            <param name="pageSize"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetBySiteId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobAlerts_GetBySiteId' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetByCountryId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            This method wraps the 'JobAlerts_GetByCountryId' stored procedure. 
            </summary>	
            <param name="countryId"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetAllAlertsToRunToday(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobAlerts_GetAllAlertsToRunToday' stored procedure. 
            </summary>	
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Find(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobAlerts_Find' stored procedure. 
            </summary>	
            <param name="searchUsingOr"> A <c>System.Boolean?</c> instance.</param>
            <param name="jobAlertId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobAlertName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="searchKeywords"> A <c>System.String</c> instance.</param>
            <param name="recurrenceType"> A <c>System.Int32?</c> instance.</param>
            <param name="dailyFrequency"> A <c>System.Int32?</c> instance.</param>
            <param name="weeklyFrequency"> A <c>System.Int32?</c> instance.</param>
            <param name="weeklyDayOccurence"> A <c>System.Int32?</c> instance.</param>
            <param name="dateLastRun"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateNextRun"> A <c>System.DateTime?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="alertActive"> A <c>System.Boolean?</c> instance.</param>
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="customRecurrenceType"> A <c>System.Int32?</c> instance.</param>
            <param name="lastResultCount"> A <c>System.Int32?</c> instance.</param>
            <param name="primaryAlert"> A <c>System.Boolean?</c> instance.</param>
            <param name="unsubscribeValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="editValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="viewValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.String</c> instance.</param>
            <param name="areaIds"> A <c>System.String</c> instance.</param>
            <param name="professionId"> A <c>System.String</c> instance.</param>
            <param name="searchRoleIds"> A <c>System.String</c> instance.</param>
            <param name="workTypeIds"> A <c>System.String</c> instance.</param>
            <param name="salaryIds"> A <c>System.String</c> instance.</param>
            <param name="daysPosted"> A <c>System.Int32?</c> instance.</param>
            <param name="generatedSql"> A <c>System.String</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Delete(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobAlerts_Delete' stored procedure. 
            </summary>	
            <param name="jobAlertId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetBySalaryTypeId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobAlerts_GetBySalaryTypeId' stored procedure. 
            </summary>	
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.Update(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            This method wraps the 'JobAlerts_Update' stored procedure. 
            </summary>	
            <param name="jobAlertId"> A <c>System.Int32?</c> instance.</param>
            <param name="jobAlertName"> A <c>System.String</c> instance.</param>
            <param name="lastModified"> A <c>System.DateTime?</c> instance.</param>
            <param name="searchKeywords"> A <c>System.String</c> instance.</param>
            <param name="recurrenceType"> A <c>System.Int32?</c> instance.</param>
            <param name="dailyFrequency"> A <c>System.Int32?</c> instance.</param>
            <param name="weeklyFrequency"> A <c>System.Int32?</c> instance.</param>
            <param name="weeklyDayOccurence"> A <c>System.Int32?</c> instance.</param>
            <param name="dateLastRun"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateNextRun"> A <c>System.DateTime?</c> instance.</param>
            <param name="memberId"> A <c>System.Int32?</c> instance.</param>
            <param name="alertActive"> A <c>System.Boolean?</c> instance.</param>
            <param name="emailFormat"> A <c>System.Int32?</c> instance.</param>
            <param name="customRecurrenceType"> A <c>System.Int32?</c> instance.</param>
            <param name="lastResultCount"> A <c>System.Int32?</c> instance.</param>
            <param name="primaryAlert"> A <c>System.Boolean?</c> instance.</param>
            <param name="unsubscribeValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="editValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="viewValidateId"> A <c>System.Guid?</c> instance.</param>
            <param name="siteId"> A <c>System.Int32?</c> instance.</param>
            <param name="locationId"> A <c>System.String</c> instance.</param>
            <param name="areaIds"> A <c>System.String</c> instance.</param>
            <param name="professionId"> A <c>System.String</c> instance.</param>
            <param name="searchRoleIds"> A <c>System.String</c> instance.</param>
            <param name="workTypeIds"> A <c>System.String</c> instance.</param>
            <param name="salaryIds"> A <c>System.String</c> instance.</param>
            <param name="daysPosted"> A <c>System.Int32?</c> instance.</param>
            <param name="generatedSql"> A <c>System.String</c> instance.</param>
            <param name="salaryLowerBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="salaryUpperBand"> A <c>System.Decimal?</c> instance.</param>
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="salaryTypeId"> A <c>System.Int32?</c> instance.</param>
            <param name="countryId"> A <c>System.String</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.CustomGetMemberReport(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This method wraps the 'JobAlerts_CustomGetMemberReport' stored procedure. 
            </summary>	
            <param name="siteid"> A <c>System.Int32?</c> instance.</param>
            <param name="datefrom"> A <c>System.DateTime?</c> instance.</param>
            <param name="dateto"> A <c>System.DateTime?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.GetByCurrencyId(JXTPortal.Data.TransactionManager,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method wraps the 'JobAlerts_GetByCurrencyId' stored procedure. 
            </summary>	
            <param name="currencyId"> A <c>System.Int32?</c> instance.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:JXTPortal.Data.TransactionManager"/> object.</param>
            <remark>This method is generated from a stored procedure.</remark>
            <returns>A <see cref="T:System.Data.DataSet"/> instance.</returns>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:JXTPortal.Data.SqlClient.SqlJobAlertsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:JXTPortal.Data.SqlClient.SqlJobAlertsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:JXTPortal.Entities.JobAlerts"/> entity.
            </summary>
        </member>
        <member name="M:JXTPortal.Data.SqlClient.SqlJobAlertsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:JXTPortal.Data.SqlClient.SqlJobAlertsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
    </members>
</doc>

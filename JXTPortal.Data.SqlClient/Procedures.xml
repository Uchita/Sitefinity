<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type='text/xsl' href="scriptsql.xsl"?>
<root xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<database includeDrop="true">MiniJXT</database>
<procedures>
		
		<procedure owner="dbo" name="GlobalLocation_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the GlobalLocation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[LocationID],
					[LocationName],
					[CountryID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalLocation]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="GlobalLocation_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the GlobalLocation table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [LocationID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([LocationID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [LocationID]'
				SET @SQL = @SQL + ' FROM [dbo].[GlobalLocation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[LocationID], O.[LocationName], O.[CountryID], O.[Valid], O.[Sequence]
				FROM
				    [dbo].[GlobalLocation] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[LocationID] = PageIndex.[LocationID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[GlobalLocation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="GlobalLocation_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the GlobalLocation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[GlobalLocation]
					(
					[LocationName]
					,[CountryID]
					,[Valid]
					,[Sequence]
					)
				VALUES
					(
					@LocationName
					,@CountryId
					,@Valid
					,@Sequence
					)
				
				-- Get the identity value
				SET @LocationId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalLocation_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the GlobalLocation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[GlobalLocation]
				SET
					[LocationName] = @LocationName
					,[CountryID] = @CountryId
					,[Valid] = @Valid
					,[Sequence] = @Sequence
				WHERE
[LocationID] = @LocationId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalLocation_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the GlobalLocation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[GlobalLocation] WITH (ROWLOCK) 
				WHERE
					[LocationID] = @LocationId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalLocation_GetByCountryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalLocation table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[LocationID],
					[LocationName],
					[CountryID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalLocation]
				WHERE
					[CountryID] = @CountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalLocation_GetByLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalLocation table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[LocationID],
					[LocationName],
					[CountryID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalLocation]
				WHERE
					[LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="GlobalLocation_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the GlobalLocation table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [LocationID]
	, [LocationName]
	, [CountryID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[GlobalLocation]
    WHERE 
	 ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([LocationName] = @LocationName OR @LocationName IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [LocationID]
	, [LocationName]
	, [CountryID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[GlobalLocation]
    WHERE 
	 ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([LocationName] = @LocationName AND @LocationName is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="GlobalLocation_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the GlobalLocation table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [LocationID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [LocationID] )
				SELECT TOP {3} [LocationID]
				FROM [dbo].[GlobalLocation] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[LocationID], O.[LocationName], O.[CountryID], O.[Valid], O.[Sequence]
				FROM
				    [dbo].[GlobalLocation] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[LocationID] = PageIndex.[LocationID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[GlobalLocation] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="GlobalLocation_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the GlobalLocation table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[GlobalLocation]
					(
					[LocationName]
					,[CountryID]
					,[Valid]
					,[Sequence]
					)
				VALUES
					(
					@LocationName
					,@CountryId
					,@Valid
					,@Sequence
					)
				
				-- Get the identity value
				SET @LocationId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalLocation_GetByLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalLocation table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[LocationID],
					[LocationName],
					[CountryID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalLocation]
				WHERE
					[LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalLocation_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the GlobalLocation table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[LocationID],
					[LocationName],
					[CountryID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalLocation]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalLocation_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the GlobalLocation table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[GlobalLocation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalLocation_GetByCountryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalLocation table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[LocationID],
					[LocationName],
					[CountryID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalLocation]
				WHERE
					[CountryID] = @CountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalLocation_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the GlobalLocation table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [LocationID]
	, [LocationName]
	, [CountryID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[GlobalLocation]
    WHERE 
	 ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([LocationName] = @LocationName OR @LocationName IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [LocationID]
	, [LocationName]
	, [CountryID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[GlobalLocation]
    WHERE 
	 ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([LocationName] = @LocationName AND @LocationName is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalLocation_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the GlobalLocation table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[GlobalLocation] WITH (ROWLOCK) 
				WHERE
					[LocationID] = @LocationId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalLocation_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the GlobalLocation table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[GlobalLocation]
				SET
					[LocationName] = @LocationName
					,[CountryID] = @CountryId
					,[Valid] = @Valid
					,[Sequence] = @Sequence
				WHERE
[LocationID] = @LocationId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteWebPartTypes_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteWebPartTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteWebPartTypeID],
					[SiteWebPartName]
				FROM
					[dbo].[SiteWebPartTypes]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteWebPartTypes_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteWebPartTypes table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteWebPartTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteWebPartTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteWebPartTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteWebPartTypes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteWebPartTypeID], O.[SiteWebPartName]
				FROM
				    [dbo].[SiteWebPartTypes] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteWebPartTypeID] = PageIndex.[SiteWebPartTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteWebPartTypes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteWebPartTypes_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteWebPartTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteWebPartTypes]
					(
					[SiteWebPartName]
					)
				VALUES
					(
					@SiteWebPartName
					)
				
				-- Get the identity value
				SET @SiteWebPartTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebPartTypes_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteWebPartTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteWebPartTypes]
				SET
					[SiteWebPartName] = @SiteWebPartName
				WHERE
[SiteWebPartTypeID] = @SiteWebPartTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebPartTypes_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteWebPartTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteWebPartTypes] WITH (ROWLOCK) 
				WHERE
					[SiteWebPartTypeID] = @SiteWebPartTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebPartTypes_GetBySiteWebPartTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebPartTypes table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteWebPartTypeID],
					[SiteWebPartName]
				FROM
					[dbo].[SiteWebPartTypes]
				WHERE
					[SiteWebPartTypeID] = @SiteWebPartTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteWebPartTypes_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteWebPartTypes table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteWebPartTypeID]
	, [SiteWebPartName]
    FROM
	[dbo].[SiteWebPartTypes]
    WHERE 
	 ([SiteWebPartTypeID] = @SiteWebPartTypeId OR @SiteWebPartTypeId IS NULL)
	AND ([SiteWebPartName] = @SiteWebPartName OR @SiteWebPartName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteWebPartTypeID]
	, [SiteWebPartName]
    FROM
	[dbo].[SiteWebPartTypes]
    WHERE 
	 ([SiteWebPartTypeID] = @SiteWebPartTypeId AND @SiteWebPartTypeId is not null)
	OR ([SiteWebPartName] = @SiteWebPartName AND @SiteWebPartName is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteWebPartTypes_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteWebPartTypes table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteWebPartTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteWebPartTypeID] )
				SELECT TOP {3} [SiteWebPartTypeID]
				FROM [dbo].[SiteWebPartTypes] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteWebPartTypeID], O.[SiteWebPartName]
				FROM
				    [dbo].[SiteWebPartTypes] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteWebPartTypeID] = PageIndex.[SiteWebPartTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteWebPartTypes] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteWebPartTypes_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteWebPartTypes table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteWebPartTypes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebPartTypes_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteWebPartTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteWebPartTypes] WITH (ROWLOCK) 
				WHERE
					[SiteWebPartTypeID] = @SiteWebPartTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebPartTypes_GetBySiteWebPartTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebPartTypes table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteWebPartTypeID],
					[SiteWebPartName]
				FROM
					[dbo].[SiteWebPartTypes]
				WHERE
					[SiteWebPartTypeID] = @SiteWebPartTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebPartTypes_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteWebPartTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteWebPartTypes]
					(
					[SiteWebPartName]
					)
				VALUES
					(
					@SiteWebPartName
					)
				
				-- Get the identity value
				SET @SiteWebPartTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebPartTypes_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteWebPartTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteWebPartTypes]
				SET
					[SiteWebPartName] = @SiteWebPartName
				WHERE
[SiteWebPartTypeID] = @SiteWebPartTypeId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebPartTypes_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteWebPartTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteWebPartTypeID],
					[SiteWebPartName]
				FROM
					[dbo].[SiteWebPartTypes]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebPartTypes_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteWebPartTypes table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteWebPartTypeID]
	, [SiteWebPartName]
    FROM
	[dbo].[SiteWebPartTypes]
    WHERE 
	 ([SiteWebPartTypeID] = @SiteWebPartTypeId OR @SiteWebPartTypeId IS NULL)
	AND ([SiteWebPartName] = @SiteWebPartName OR @SiteWebPartName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteWebPartTypeID]
	, [SiteWebPartName]
    FROM
	[dbo].[SiteWebPartTypes]
    WHERE 
	 ([SiteWebPartTypeID] = @SiteWebPartTypeId AND @SiteWebPartTypeId is not null)
	OR ([SiteWebPartName] = @SiteWebPartName AND @SiteWebPartName is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="GlobalArea_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the GlobalArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalArea]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="GlobalArea_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the GlobalArea table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AreaID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AreaID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AreaID]'
				SET @SQL = @SQL + ' FROM [dbo].[GlobalArea]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AreaID], O.[AreaName], O.[LocationID], O.[Valid], O.[Sequence]
				FROM
				    [dbo].[GlobalArea] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AreaID] = PageIndex.[AreaID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[GlobalArea]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="GlobalArea_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the GlobalArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[GlobalArea]
					(
					[AreaName]
					,[LocationID]
					,[Valid]
					,[Sequence]
					)
				VALUES
					(
					@AreaName
					,@LocationId
					,@Valid
					,@Sequence
					)
				
				-- Get the identity value
				SET @AreaId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalArea_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the GlobalArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[GlobalArea]
				SET
					[AreaName] = @AreaName
					,[LocationID] = @LocationId
					,[Valid] = @Valid
					,[Sequence] = @Sequence
				WHERE
[AreaID] = @AreaId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalArea_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the GlobalArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[GlobalArea] WITH (ROWLOCK) 
				WHERE
					[AreaID] = @AreaId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalArea_GetByLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalArea table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalArea]
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalArea_GetByAreaId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalArea table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalArea]
				WHERE
					[AreaID] = @AreaId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="GlobalArea_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the GlobalArea table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AreaID]
	, [AreaName]
	, [LocationID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[GlobalArea]
    WHERE 
	 ([AreaID] = @AreaId OR @AreaId IS NULL)
	AND ([AreaName] = @AreaName OR @AreaName IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AreaID]
	, [AreaName]
	, [LocationID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[GlobalArea]
    WHERE 
	 ([AreaID] = @AreaId AND @AreaId is not null)
	OR ([AreaName] = @AreaName AND @AreaName is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="GlobalArea_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the GlobalArea table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AreaID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AreaID] )
				SELECT TOP {3} [AreaID]
				FROM [dbo].[GlobalArea] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AreaID], O.[AreaName], O.[LocationID], O.[Valid], O.[Sequence]
				FROM
				    [dbo].[GlobalArea] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AreaID] = PageIndex.[AreaID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[GlobalArea] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="GlobalArea_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the GlobalArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[GlobalArea]
					(
					[AreaName]
					,[LocationID]
					,[Valid]
					,[Sequence]
					)
				VALUES
					(
					@AreaName
					,@LocationId
					,@Valid
					,@Sequence
					)
				
				-- Get the identity value
				SET @AreaId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalArea_GetByLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalArea table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalArea]
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalArea_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the GlobalArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalArea]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalArea_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the GlobalArea table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[GlobalArea]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalArea_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the GlobalArea table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AreaID]
	, [AreaName]
	, [LocationID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[GlobalArea]
    WHERE 
	 ([AreaID] = @AreaId OR @AreaId IS NULL)
	AND ([AreaName] = @AreaName OR @AreaName IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AreaID]
	, [AreaName]
	, [LocationID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[GlobalArea]
    WHERE 
	 ([AreaID] = @AreaId AND @AreaId is not null)
	OR ([AreaName] = @AreaName AND @AreaName is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalArea_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the GlobalArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[GlobalArea] WITH (ROWLOCK) 
				WHERE
					[AreaID] = @AreaId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalArea_GetByAreaId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalArea table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[GlobalArea]
				WHERE
					[AreaID] = @AreaId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalArea_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the GlobalArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[GlobalArea]
				SET
					[AreaName] = @AreaName
					,[LocationID] = @LocationId
					,[Valid] = @Valid
					,[Sequence] = @Sequence
				WHERE
[AreaID] = @AreaId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobCustomQuestionnaire_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobCustomQuestionnaire table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobCustomQuestionnaireID],
					[JobID],
					[FormXML]
				FROM
					[dbo].[JobCustomQuestionnaire]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobCustomQuestionnaire_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobCustomQuestionnaire table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobCustomQuestionnaireID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobCustomQuestionnaireID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobCustomQuestionnaireID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobCustomQuestionnaire]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobCustomQuestionnaireID], O.[JobID], O.[FormXML]
				FROM
				    [dbo].[JobCustomQuestionnaire] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobCustomQuestionnaireID] = PageIndex.[JobCustomQuestionnaireID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobCustomQuestionnaire]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobCustomQuestionnaire_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobCustomQuestionnaire table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FormXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobCustomQuestionnaire]
					(
					[JobID]
					,[FormXML]
					)
				VALUES
					(
					@JobId
					,@FormXml
					)
				
				-- Get the identity value
				SET @JobCustomQuestionnaireId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobCustomQuestionnaire_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobCustomQuestionnaire table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FormXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobCustomQuestionnaire]
				SET
					[JobID] = @JobId
					,[FormXML] = @FormXml
				WHERE
[JobCustomQuestionnaireID] = @JobCustomQuestionnaireId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobCustomQuestionnaire_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobCustomQuestionnaire table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobCustomQuestionnaire] WITH (ROWLOCK) 
				WHERE
					[JobCustomQuestionnaireID] = @JobCustomQuestionnaireId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobCustomQuestionnaire_GetByJobCustomQuestionnaireId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobCustomQuestionnaire table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobCustomQuestionnaireID],
					[JobID],
					[FormXML]
				FROM
					[dbo].[JobCustomQuestionnaire]
				WHERE
					[JobCustomQuestionnaireID] = @JobCustomQuestionnaireId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobCustomQuestionnaire_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobCustomQuestionnaire table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FormXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobCustomQuestionnaireID]
	, [JobID]
	, [FormXML]
    FROM
	[dbo].[JobCustomQuestionnaire]
    WHERE 
	 ([JobCustomQuestionnaireID] = @JobCustomQuestionnaireId OR @JobCustomQuestionnaireId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([FormXML] = @FormXml OR @FormXml IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobCustomQuestionnaireID]
	, [JobID]
	, [FormXML]
    FROM
	[dbo].[JobCustomQuestionnaire]
    WHERE 
	 ([JobCustomQuestionnaireID] = @JobCustomQuestionnaireId AND @JobCustomQuestionnaireId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([FormXML] = @FormXml AND @FormXml is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobCustomQuestionnaire_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobCustomQuestionnaire table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobCustomQuestionnaireID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobCustomQuestionnaireID] )
				SELECT TOP {3} [JobCustomQuestionnaireID]
				FROM [dbo].[JobCustomQuestionnaire] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobCustomQuestionnaireID], O.[JobID], O.[FormXML]
				FROM
				    [dbo].[JobCustomQuestionnaire] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobCustomQuestionnaireID] = PageIndex.[JobCustomQuestionnaireID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobCustomQuestionnaire] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobCustomQuestionnaire_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobCustomQuestionnaire table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobCustomQuestionnaire]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomQuestionnaire_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobCustomQuestionnaire table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobCustomQuestionnaire] WITH (ROWLOCK) 
				WHERE
					[JobCustomQuestionnaireID] = @JobCustomQuestionnaireId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomQuestionnaire_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobCustomQuestionnaire table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FormXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[JobCustomQuestionnaire]
				SET
					[JobID] = @JobId
					,[FormXML] = @FormXml
				WHERE
[JobCustomQuestionnaireID] = @JobCustomQuestionnaireId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomQuestionnaire_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobCustomQuestionnaire table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FormXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[JobCustomQuestionnaire]
					(
					[JobID]
					,[FormXML]
					)
				VALUES
					(
					@JobId
					,@FormXml
					)
				
				-- Get the identity value
				SET @JobCustomQuestionnaireId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomQuestionnaire_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobCustomQuestionnaire table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobCustomQuestionnaireID],
					[JobID],
					[FormXML]
				FROM
					[dbo].[JobCustomQuestionnaire]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomQuestionnaire_GetByJobCustomQuestionnaireId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobCustomQuestionnaire table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobCustomQuestionnaireID],
					[JobID],
					[FormXML]
				FROM
					[dbo].[JobCustomQuestionnaire]
				WHERE
					[JobCustomQuestionnaireID] = @JobCustomQuestionnaireId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomQuestionnaire_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobCustomQuestionnaire table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobCustomQuestionnaireId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FormXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobCustomQuestionnaireID]
	, [JobID]
	, [FormXML]
    FROM
	[dbo].[JobCustomQuestionnaire]
    WHERE 
	 ([JobCustomQuestionnaireID] = @JobCustomQuestionnaireId OR @JobCustomQuestionnaireId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([FormXML] = @FormXml OR @FormXml IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobCustomQuestionnaireID]
	, [JobID]
	, [FormXML]
    FROM
	[dbo].[JobCustomQuestionnaire]
    WHERE 
	 ([JobCustomQuestionnaireID] = @JobCustomQuestionnaireId AND @JobCustomQuestionnaireId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([FormXML] = @FormXml AND @FormXml is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="EmailFormats_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the EmailFormats table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[EmailFormatID],
					[EmailFormatName]
				FROM
					[dbo].[EmailFormats]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="EmailFormats_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the EmailFormats table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [EmailFormatID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([EmailFormatID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [EmailFormatID]'
				SET @SQL = @SQL + ' FROM [dbo].[EmailFormats]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[EmailFormatID], O.[EmailFormatName]
				FROM
				    [dbo].[EmailFormats] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[EmailFormatID] = PageIndex.[EmailFormatID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[EmailFormats]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="EmailFormats_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the EmailFormats table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailFormatId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFormatName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[EmailFormats]
					(
					[EmailFormatName]
					)
				VALUES
					(
					@EmailFormatName
					)
				
				-- Get the identity value
				SET @EmailFormatId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="EmailFormats_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the EmailFormats table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailFormatId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFormatName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[EmailFormats]
				SET
					[EmailFormatName] = @EmailFormatName
				WHERE
[EmailFormatID] = @EmailFormatId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="EmailFormats_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the EmailFormats table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailFormatId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[EmailFormats] WITH (ROWLOCK) 
				WHERE
					[EmailFormatID] = @EmailFormatId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="EmailFormats_GetByEmailFormatId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailFormats table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailFormatId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[EmailFormatID],
					[EmailFormatName]
				FROM
					[dbo].[EmailFormats]
				WHERE
					[EmailFormatID] = @EmailFormatId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="EmailFormats_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the EmailFormats table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormatId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormatName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EmailFormatID]
	, [EmailFormatName]
    FROM
	[dbo].[EmailFormats]
    WHERE 
	 ([EmailFormatID] = @EmailFormatId OR @EmailFormatId IS NULL)
	AND ([EmailFormatName] = @EmailFormatName OR @EmailFormatName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EmailFormatID]
	, [EmailFormatName]
    FROM
	[dbo].[EmailFormats]
    WHERE 
	 ([EmailFormatID] = @EmailFormatId AND @EmailFormatId is not null)
	OR ([EmailFormatName] = @EmailFormatName AND @EmailFormatName is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="EmailFormats_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the EmailFormats table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [EmailFormatID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [EmailFormatID] )
				SELECT TOP {3} [EmailFormatID]
				FROM [dbo].[EmailFormats] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[EmailFormatID], O.[EmailFormatName]
				FROM
				    [dbo].[EmailFormats] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[EmailFormatID] = PageIndex.[EmailFormatID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[EmailFormats] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="EmailFormats_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the EmailFormats table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[EmailFormats]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailFormats_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the EmailFormats table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailFormatId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[EmailFormats] WITH (ROWLOCK) 
				WHERE
					[EmailFormatID] = @EmailFormatId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailFormats_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the EmailFormats table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailFormatId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormatName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[EmailFormats]
				SET
					[EmailFormatName] = @EmailFormatName
				WHERE
[EmailFormatID] = @EmailFormatId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailFormats_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the EmailFormats table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailFormatId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormatName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[EmailFormats]
					(
					[EmailFormatName]
					)
				VALUES
					(
					@EmailFormatName
					)
				
				-- Get the identity value
				SET @EmailFormatId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailFormats_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the EmailFormats table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[EmailFormatID],
					[EmailFormatName]
				FROM
					[dbo].[EmailFormats]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailFormats_GetByEmailFormatId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailFormats table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailFormatId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[EmailFormatID],
					[EmailFormatName]
				FROM
					[dbo].[EmailFormats]
				WHERE
					[EmailFormatID] = @EmailFormatId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailFormats_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the EmailFormats table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormatId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormatName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EmailFormatID]
	, [EmailFormatName]
    FROM
	[dbo].[EmailFormats]
    WHERE 
	 ([EmailFormatID] = @EmailFormatId OR @EmailFormatId IS NULL)
	AND ([EmailFormatName] = @EmailFormatName OR @EmailFormatName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EmailFormatID]
	, [EmailFormatName]
    FROM
	[dbo].[EmailFormats]
    WHERE 
	 ([EmailFormatID] = @EmailFormatId AND @EmailFormatId is not null)
	OR ([EmailFormatName] = @EmailFormatName AND @EmailFormatName is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="FileTypes_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the FileTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[FileTypeID],
					[FileTypeName],
					[FileTypeExtension]
				FROM
					[dbo].[FileTypes]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="FileTypes_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the FileTypes table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [FileTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([FileTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [FileTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[FileTypes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[FileTypeID], O.[FileTypeName], O.[FileTypeExtension]
				FROM
				    [dbo].[FileTypes] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[FileTypeID] = PageIndex.[FileTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[FileTypes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="FileTypes_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the FileTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FileTypeExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[FileTypes]
					(
					[FileTypeName]
					,[FileTypeExtension]
					)
				VALUES
					(
					@FileTypeName
					,@FileTypeExtension
					)
				
				-- Get the identity value
				SET @FileTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FileTypes_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the FileTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FileTypeExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[FileTypes]
				SET
					[FileTypeName] = @FileTypeName
					,[FileTypeExtension] = @FileTypeExtension
				WHERE
[FileTypeID] = @FileTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FileTypes_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the FileTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[FileTypes] WITH (ROWLOCK) 
				WHERE
					[FileTypeID] = @FileTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FileTypes_GetByFileTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the FileTypes table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[FileTypeID],
					[FileTypeName],
					[FileTypeExtension]
				FROM
					[dbo].[FileTypes]
				WHERE
					[FileTypeID] = @FileTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="FileTypes_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the FileTypes table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileTypeExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [FileTypeID]
	, [FileTypeName]
	, [FileTypeExtension]
    FROM
	[dbo].[FileTypes]
    WHERE 
	 ([FileTypeID] = @FileTypeId OR @FileTypeId IS NULL)
	AND ([FileTypeName] = @FileTypeName OR @FileTypeName IS NULL)
	AND ([FileTypeExtension] = @FileTypeExtension OR @FileTypeExtension IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [FileTypeID]
	, [FileTypeName]
	, [FileTypeExtension]
    FROM
	[dbo].[FileTypes]
    WHERE 
	 ([FileTypeID] = @FileTypeId AND @FileTypeId is not null)
	OR ([FileTypeName] = @FileTypeName AND @FileTypeName is not null)
	OR ([FileTypeExtension] = @FileTypeExtension AND @FileTypeExtension is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="FileTypes_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the FileTypes table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [FileTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [FileTypeID] )
				SELECT TOP {3} [FileTypeID]
				FROM [dbo].[FileTypes] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[FileTypeID], O.[FileTypeName], O.[FileTypeExtension]
				FROM
				    [dbo].[FileTypes] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[FileTypeID] = PageIndex.[FileTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[FileTypes] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="FileTypes_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the FileTypes table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[FileTypes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="FileTypes_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the FileTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[FileTypes] WITH (ROWLOCK) 
				WHERE
					[FileTypeID] = @FileTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="FileTypes_GetByFileTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the FileTypes table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[FileTypeID],
					[FileTypeName],
					[FileTypeExtension]
				FROM
					[dbo].[FileTypes]
				WHERE
					[FileTypeID] = @FileTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="FileTypes_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the FileTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileTypeExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[FileTypes]
					(
					[FileTypeName]
					,[FileTypeExtension]
					)
				VALUES
					(
					@FileTypeName
					,@FileTypeExtension
					)
				
				-- Get the identity value
				SET @FileTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="FileTypes_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the FileTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileTypeExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[FileTypes]
				SET
					[FileTypeName] = @FileTypeName
					,[FileTypeExtension] = @FileTypeExtension
				WHERE
[FileTypeID] = @FileTypeId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="FileTypes_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the FileTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[FileTypeID],
					[FileTypeName],
					[FileTypeExtension]
				FROM
					[dbo].[FileTypes]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="FileTypes_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the FileTypes table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileTypeExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [FileTypeID]
	, [FileTypeName]
	, [FileTypeExtension]
    FROM
	[dbo].[FileTypes]
    WHERE 
	 ([FileTypeID] = @FileTypeId OR @FileTypeId IS NULL)
	AND ([FileTypeName] = @FileTypeName OR @FileTypeName IS NULL)
	AND ([FileTypeExtension] = @FileTypeExtension OR @FileTypeExtension IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [FileTypeID]
	, [FileTypeName]
	, [FileTypeExtension]
    FROM
	[dbo].[FileTypes]
    WHERE 
	 ([FileTypeID] = @FileTypeId AND @FileTypeId is not null)
	OR ([FileTypeName] = @FileTypeName AND @FileTypeName is not null)
	OR ([FileTypeExtension] = @FileTypeExtension AND @FileTypeExtension is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="AdminRoles_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdminRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdminRoleID],
					[RoleName]
				FROM
					[dbo].[AdminRoles]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="AdminRoles_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdminRoles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdminRoleID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AdminRoleID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AdminRoleID]'
				SET @SQL = @SQL + ' FROM [dbo].[AdminRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AdminRoleID], O.[RoleName]
				FROM
				    [dbo].[AdminRoles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AdminRoleID] = PageIndex.[AdminRoleID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdminRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="AdminRoles_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdminRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[AdminRoles]
					(
					[RoleName]
					)
				VALUES
					(
					@RoleName
					)
				
				-- Get the identity value
				SET @AdminRoleId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdminRoles_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdminRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AdminRoles]
				SET
					[RoleName] = @RoleName
				WHERE
[AdminRoleID] = @AdminRoleId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdminRoles_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdminRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[AdminRoles] WITH (ROWLOCK) 
				WHERE
					[AdminRoleID] = @AdminRoleId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdminRoles_GetByAdminRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminRoles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdminRoleID],
					[RoleName]
				FROM
					[dbo].[AdminRoles]
				WHERE
					[AdminRoleID] = @AdminRoleId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdminRoles_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdminRoles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdminRoleID]
	, [RoleName]
    FROM
	[dbo].[AdminRoles]
    WHERE 
	 ([AdminRoleID] = @AdminRoleId OR @AdminRoleId IS NULL)
	AND ([RoleName] = @RoleName OR @RoleName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdminRoleID]
	, [RoleName]
    FROM
	[dbo].[AdminRoles]
    WHERE 
	 ([AdminRoleID] = @AdminRoleId AND @AdminRoleId is not null)
	OR ([RoleName] = @RoleName AND @RoleName is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="AdminRoles_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdminRoles table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdminRoleID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AdminRoleID] )
				SELECT TOP {3} [AdminRoleID]
				FROM [dbo].[AdminRoles] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AdminRoleID], O.[RoleName]
				FROM
				    [dbo].[AdminRoles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AdminRoleID] = PageIndex.[AdminRoleID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[AdminRoles] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="AdminRoles_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdminRoles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdminRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminRoles_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdminRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[AdminRoles] WITH (ROWLOCK) 
				WHERE
					[AdminRoleID] = @AdminRoleId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminRoles_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdminRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[AdminRoles]
				SET
					[RoleName] = @RoleName
				WHERE
[AdminRoleID] = @AdminRoleId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminRoles_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdminRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[AdminRoles]
					(
					[RoleName]
					)
				VALUES
					(
					@RoleName
					)
				
				-- Get the identity value
				SET @AdminRoleId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminRoles_GetByAdminRoleId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminRoles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AdminRoleID],
					[RoleName]
				FROM
					[dbo].[AdminRoles]
				WHERE
					[AdminRoleID] = @AdminRoleId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminRoles_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdminRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AdminRoleID],
					[RoleName]
				FROM
					[dbo].[AdminRoles]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminRoles_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdminRoles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdminRoleID]
	, [RoleName]
    FROM
	[dbo].[AdminRoles]
    WHERE 
	 ([AdminRoleID] = @AdminRoleId OR @AdminRoleId IS NULL)
	AND ([RoleName] = @RoleName OR @RoleName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdminRoleID]
	, [RoleName]
    FROM
	[dbo].[AdminRoles]
    WHERE 
	 ([AdminRoleID] = @AdminRoleId AND @AdminRoleId is not null)
	OR ([RoleName] = @RoleName AND @RoleName is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="ExceptionTable_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the ExceptionTable table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ExceptionID],
					[DateEntered],
					[ExceptionApplicationSource],
					[ClientIPAddress],
					[HostIPAddress],
					[ExceptionUrl],
					[ExceptionMessage],
					[ExceptionStackTrace],
					[ErrorParamsMessage]
				FROM
					[dbo].[ExceptionTable]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ExceptionTable_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ExceptionTable table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ExceptionID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ExceptionID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ExceptionID]'
				SET @SQL = @SQL + ' FROM [dbo].[ExceptionTable]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[ExceptionID], O.[DateEntered], O.[ExceptionApplicationSource], O.[ClientIPAddress], O.[HostIPAddress], O.[ExceptionUrl], O.[ExceptionMessage], O.[ExceptionStackTrace], O.[ErrorParamsMessage]
				FROM
				    [dbo].[ExceptionTable] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ExceptionID] = PageIndex.[ExceptionID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ExceptionTable]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ExceptionTable_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the ExceptionTable table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ExceptionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DateEntered" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ExceptionApplicationSource" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@HostIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExceptionUrl" type="varchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault=""/>
				<parameter name="@ExceptionMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ExceptionStackTrace" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ErrorParamsMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ExceptionTable]
					(
					[DateEntered]
					,[ExceptionApplicationSource]
					,[ClientIPAddress]
					,[HostIPAddress]
					,[ExceptionUrl]
					,[ExceptionMessage]
					,[ExceptionStackTrace]
					,[ErrorParamsMessage]
					)
				VALUES
					(
					@DateEntered
					,@ExceptionApplicationSource
					,@ClientIpAddress
					,@HostIpAddress
					,@ExceptionUrl
					,@ExceptionMessage
					,@ExceptionStackTrace
					,@ErrorParamsMessage
					)
				
				-- Get the identity value
				SET @ExceptionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ExceptionTable_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the ExceptionTable table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ExceptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DateEntered" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ExceptionApplicationSource" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@HostIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExceptionUrl" type="varchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault=""/>
				<parameter name="@ExceptionMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ExceptionStackTrace" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ErrorParamsMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ExceptionTable]
				SET
					[DateEntered] = @DateEntered
					,[ExceptionApplicationSource] = @ExceptionApplicationSource
					,[ClientIPAddress] = @ClientIpAddress
					,[HostIPAddress] = @HostIpAddress
					,[ExceptionUrl] = @ExceptionUrl
					,[ExceptionMessage] = @ExceptionMessage
					,[ExceptionStackTrace] = @ExceptionStackTrace
					,[ErrorParamsMessage] = @ErrorParamsMessage
				WHERE
[ExceptionID] = @ExceptionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ExceptionTable_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the ExceptionTable table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ExceptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ExceptionTable] WITH (ROWLOCK) 
				WHERE
					[ExceptionID] = @ExceptionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ExceptionTable_GetByExceptionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the ExceptionTable table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ExceptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ExceptionID],
					[DateEntered],
					[ExceptionApplicationSource],
					[ClientIPAddress],
					[HostIPAddress],
					[ExceptionUrl],
					[ExceptionMessage],
					[ExceptionStackTrace],
					[ErrorParamsMessage]
				FROM
					[dbo].[ExceptionTable]
				WHERE
					[ExceptionID] = @ExceptionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ExceptionTable_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the ExceptionTable table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExceptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateEntered" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExceptionApplicationSource" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HostIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExceptionUrl" type="varchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@ExceptionMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExceptionStackTrace" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ErrorParamsMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ExceptionID]
	, [DateEntered]
	, [ExceptionApplicationSource]
	, [ClientIPAddress]
	, [HostIPAddress]
	, [ExceptionUrl]
	, [ExceptionMessage]
	, [ExceptionStackTrace]
	, [ErrorParamsMessage]
    FROM
	[dbo].[ExceptionTable]
    WHERE 
	 ([ExceptionID] = @ExceptionId OR @ExceptionId IS NULL)
	AND ([DateEntered] = @DateEntered OR @DateEntered IS NULL)
	AND ([ExceptionApplicationSource] = @ExceptionApplicationSource OR @ExceptionApplicationSource IS NULL)
	AND ([ClientIPAddress] = @ClientIpAddress OR @ClientIpAddress IS NULL)
	AND ([HostIPAddress] = @HostIpAddress OR @HostIpAddress IS NULL)
	AND ([ExceptionUrl] = @ExceptionUrl OR @ExceptionUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ExceptionID]
	, [DateEntered]
	, [ExceptionApplicationSource]
	, [ClientIPAddress]
	, [HostIPAddress]
	, [ExceptionUrl]
	, [ExceptionMessage]
	, [ExceptionStackTrace]
	, [ErrorParamsMessage]
    FROM
	[dbo].[ExceptionTable]
    WHERE 
	 ([ExceptionID] = @ExceptionId AND @ExceptionId is not null)
	OR ([DateEntered] = @DateEntered AND @DateEntered is not null)
	OR ([ExceptionApplicationSource] = @ExceptionApplicationSource AND @ExceptionApplicationSource is not null)
	OR ([ClientIPAddress] = @ClientIpAddress AND @ClientIpAddress is not null)
	OR ([HostIPAddress] = @HostIpAddress AND @HostIpAddress is not null)
	OR ([ExceptionUrl] = @ExceptionUrl AND @ExceptionUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ExceptionTable_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ExceptionTable table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ExceptionID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ExceptionID] )
				SELECT TOP {3} [ExceptionID]
				FROM [dbo].[ExceptionTable] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[ExceptionID], O.[DateEntered], O.[ExceptionApplicationSource], O.[ClientIPAddress], O.[HostIPAddress], O.[ExceptionUrl], O.[ExceptionMessage], O.[ExceptionStackTrace], O.[ErrorParamsMessage]
				FROM
				    [dbo].[ExceptionTable] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ExceptionID] = PageIndex.[ExceptionID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ExceptionTable] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="ExceptionTable_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ExceptionTable table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ExceptionTable]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="ExceptionTable_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the ExceptionTable table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ExceptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[ExceptionTable] WITH (ROWLOCK) 
				WHERE
					[ExceptionID] = @ExceptionId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="ExceptionTable_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the ExceptionTable table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ExceptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateEntered" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExceptionApplicationSource" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HostIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExceptionUrl" type="varchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@ExceptionMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExceptionStackTrace" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ErrorParamsMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[ExceptionTable]
				SET
					[DateEntered] = @DateEntered
					,[ExceptionApplicationSource] = @ExceptionApplicationSource
					,[ClientIPAddress] = @ClientIpAddress
					,[HostIPAddress] = @HostIpAddress
					,[ExceptionUrl] = @ExceptionUrl
					,[ExceptionMessage] = @ExceptionMessage
					,[ExceptionStackTrace] = @ExceptionStackTrace
					,[ErrorParamsMessage] = @ErrorParamsMessage
				WHERE
[ExceptionID] = @ExceptionId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="ExceptionTable_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the ExceptionTable table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ExceptionId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateEntered" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExceptionApplicationSource" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HostIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExceptionUrl" type="varchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@ExceptionMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExceptionStackTrace" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ErrorParamsMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[ExceptionTable]
					(
					[DateEntered]
					,[ExceptionApplicationSource]
					,[ClientIPAddress]
					,[HostIPAddress]
					,[ExceptionUrl]
					,[ExceptionMessage]
					,[ExceptionStackTrace]
					,[ErrorParamsMessage]
					)
				VALUES
					(
					@DateEntered
					,@ExceptionApplicationSource
					,@ClientIpAddress
					,@HostIpAddress
					,@ExceptionUrl
					,@ExceptionMessage
					,@ExceptionStackTrace
					,@ErrorParamsMessage
					)
				
				-- Get the identity value
				SET @ExceptionId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="ExceptionTable_GetByExceptionId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the ExceptionTable table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ExceptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[ExceptionID],
					[DateEntered],
					[ExceptionApplicationSource],
					[ClientIPAddress],
					[HostIPAddress],
					[ExceptionUrl],
					[ExceptionMessage],
					[ExceptionStackTrace],
					[ErrorParamsMessage]
				FROM
					[dbo].[ExceptionTable]
				WHERE
					[ExceptionID] = @ExceptionId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="ExceptionTable_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the ExceptionTable table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[ExceptionID],
					[DateEntered],
					[ExceptionApplicationSource],
					[ClientIPAddress],
					[HostIPAddress],
					[ExceptionUrl],
					[ExceptionMessage],
					[ExceptionStackTrace],
					[ErrorParamsMessage]
				FROM
					[dbo].[ExceptionTable]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="ExceptionTable_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the ExceptionTable table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExceptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateEntered" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExceptionApplicationSource" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HostIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExceptionUrl" type="varchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@ExceptionMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExceptionStackTrace" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ErrorParamsMessage" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ExceptionID]
	, [DateEntered]
	, [ExceptionApplicationSource]
	, [ClientIPAddress]
	, [HostIPAddress]
	, [ExceptionUrl]
	, [ExceptionMessage]
	, [ExceptionStackTrace]
	, [ErrorParamsMessage]
    FROM
	[dbo].[ExceptionTable]
    WHERE 
	 ([ExceptionID] = @ExceptionId OR @ExceptionId IS NULL)
	AND ([DateEntered] = @DateEntered OR @DateEntered IS NULL)
	AND ([ExceptionApplicationSource] = @ExceptionApplicationSource OR @ExceptionApplicationSource IS NULL)
	AND ([ClientIPAddress] = @ClientIpAddress OR @ClientIpAddress IS NULL)
	AND ([HostIPAddress] = @HostIpAddress OR @HostIpAddress IS NULL)
	AND ([ExceptionUrl] = @ExceptionUrl OR @ExceptionUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ExceptionID]
	, [DateEntered]
	, [ExceptionApplicationSource]
	, [ClientIPAddress]
	, [HostIPAddress]
	, [ExceptionUrl]
	, [ExceptionMessage]
	, [ExceptionStackTrace]
	, [ErrorParamsMessage]
    FROM
	[dbo].[ExceptionTable]
    WHERE 
	 ([ExceptionID] = @ExceptionId AND @ExceptionId is not null)
	OR ([DateEntered] = @DateEntered AND @DateEntered is not null)
	OR ([ExceptionApplicationSource] = @ExceptionApplicationSource AND @ExceptionApplicationSource is not null)
	OR ([ClientIPAddress] = @ClientIpAddress AND @ClientIpAddress is not null)
	OR ([HostIPAddress] = @HostIpAddress AND @HostIpAddress is not null)
	OR ([ExceptionUrl] = @ExceptionUrl AND @ExceptionUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Languages_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Languages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[LanguageID],
					[LanguageName],
					[CharSetMetaTag]
				FROM
					[dbo].[Languages]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Languages_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Languages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [LanguageID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([LanguageID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [LanguageID]'
				SET @SQL = @SQL + ' FROM [dbo].[Languages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[LanguageID], O.[LanguageName], O.[CharSetMetaTag]
				FROM
				    [dbo].[Languages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[LanguageID] = PageIndex.[LanguageID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Languages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Languages_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Languages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CharSetMetaTag" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Languages]
					(
					[LanguageName]
					,[CharSetMetaTag]
					)
				VALUES
					(
					@LanguageName
					,@CharSetMetaTag
					)
				
				-- Get the identity value
				SET @LanguageId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Languages_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Languages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CharSetMetaTag" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Languages]
				SET
					[LanguageName] = @LanguageName
					,[CharSetMetaTag] = @CharSetMetaTag
				WHERE
[LanguageID] = @LanguageId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Languages_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Languages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Languages] WITH (ROWLOCK) 
				WHERE
					[LanguageID] = @LanguageId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Languages_GetByLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Languages table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[LanguageID],
					[LanguageName],
					[CharSetMetaTag]
				FROM
					[dbo].[Languages]
				WHERE
					[LanguageID] = @LanguageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Languages_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Languages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CharSetMetaTag" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [LanguageID]
	, [LanguageName]
	, [CharSetMetaTag]
    FROM
	[dbo].[Languages]
    WHERE 
	 ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([LanguageName] = @LanguageName OR @LanguageName IS NULL)
	AND ([CharSetMetaTag] = @CharSetMetaTag OR @CharSetMetaTag IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [LanguageID]
	, [LanguageName]
	, [CharSetMetaTag]
    FROM
	[dbo].[Languages]
    WHERE 
	 ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([LanguageName] = @LanguageName AND @LanguageName is not null)
	OR ([CharSetMetaTag] = @CharSetMetaTag AND @CharSetMetaTag is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Languages_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Languages table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [LanguageID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [LanguageID] )
				SELECT TOP {3} [LanguageID]
				FROM [dbo].[Languages] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[LanguageID], O.[LanguageName], O.[CharSetMetaTag]
				FROM
				    [dbo].[Languages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[LanguageID] = PageIndex.[LanguageID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Languages] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Languages_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Languages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Languages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Languages_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Languages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Languages] WITH (ROWLOCK) 
				WHERE
					[LanguageID] = @LanguageId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Languages_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Languages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CharSetMetaTag" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Languages]
				SET
					[LanguageName] = @LanguageName
					,[CharSetMetaTag] = @CharSetMetaTag
				WHERE
[LanguageID] = @LanguageId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Languages_GetByLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Languages table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[LanguageID],
					[LanguageName],
					[CharSetMetaTag]
				FROM
					[dbo].[Languages]
				WHERE
					[LanguageID] = @LanguageId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Languages_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Languages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[LanguageID],
					[LanguageName],
					[CharSetMetaTag]
				FROM
					[dbo].[Languages]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Languages_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Languages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CharSetMetaTag" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Languages]
					(
					[LanguageName]
					,[CharSetMetaTag]
					)
				VALUES
					(
					@LanguageName
					,@CharSetMetaTag
					)
				
				-- Get the identity value
				SET @LanguageId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Languages_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Languages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CharSetMetaTag" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [LanguageID]
	, [LanguageName]
	, [CharSetMetaTag]
    FROM
	[dbo].[Languages]
    WHERE 
	 ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([LanguageName] = @LanguageName OR @LanguageName IS NULL)
	AND ([CharSetMetaTag] = @CharSetMetaTag OR @CharSetMetaTag IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [LanguageID]
	, [LanguageName]
	, [CharSetMetaTag]
    FROM
	[dbo].[Languages]
    WHERE 
	 ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([LanguageName] = @LanguageName AND @LanguageName is not null)
	OR ([CharSetMetaTag] = @CharSetMetaTag AND @CharSetMetaTag is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SalaryType_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SalaryType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SalaryTypeID],
					[SalaryTypeName],
					[Valid]
				FROM
					[dbo].[SalaryType]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SalaryType_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SalaryType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SalaryTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SalaryTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SalaryTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[SalaryType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SalaryTypeID], O.[SalaryTypeName], O.[Valid]
				FROM
				    [dbo].[SalaryType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SalaryTypeID] = PageIndex.[SalaryTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SalaryType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SalaryType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SalaryType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SalaryType]
					(
					[SalaryTypeName]
					,[Valid]
					)
				VALUES
					(
					@SalaryTypeName
					,@Valid
					)
				
				-- Get the identity value
				SET @SalaryTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SalaryType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SalaryType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SalaryType]
				SET
					[SalaryTypeName] = @SalaryTypeName
					,[Valid] = @Valid
				WHERE
[SalaryTypeID] = @SalaryTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SalaryType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SalaryType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SalaryType] WITH (ROWLOCK) 
				WHERE
					[SalaryTypeID] = @SalaryTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SalaryType_GetBySalaryTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SalaryType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SalaryTypeID],
					[SalaryTypeName],
					[Valid]
				FROM
					[dbo].[SalaryType]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SalaryType_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SalaryType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalaryTypeID]
	, [SalaryTypeName]
	, [Valid]
    FROM
	[dbo].[SalaryType]
    WHERE 
	 ([SalaryTypeID] = @SalaryTypeId OR @SalaryTypeId IS NULL)
	AND ([SalaryTypeName] = @SalaryTypeName OR @SalaryTypeName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalaryTypeID]
	, [SalaryTypeName]
	, [Valid]
    FROM
	[dbo].[SalaryType]
    WHERE 
	 ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([SalaryTypeName] = @SalaryTypeName AND @SalaryTypeName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SalaryType_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SalaryType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SalaryTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SalaryTypeID] )
				SELECT TOP {3} [SalaryTypeID]
				FROM [dbo].[SalaryType] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SalaryTypeID], O.[SalaryTypeName], O.[Valid]
				FROM
				    [dbo].[SalaryType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SalaryTypeID] = PageIndex.[SalaryTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SalaryType] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SalaryType_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SalaryType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SalaryType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SalaryType_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SalaryType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SalaryType] WITH (ROWLOCK) 
				WHERE
					[SalaryTypeID] = @SalaryTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SalaryType_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SalaryType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SalaryType]
				SET
					[SalaryTypeName] = @SalaryTypeName
					,[Valid] = @Valid
				WHERE
[SalaryTypeID] = @SalaryTypeId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SalaryType_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SalaryType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SalaryType]
					(
					[SalaryTypeName]
					,[Valid]
					)
				VALUES
					(
					@SalaryTypeName
					,@Valid
					)
				
				-- Get the identity value
				SET @SalaryTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SalaryType_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SalaryType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SalaryTypeID],
					[SalaryTypeName],
					[Valid]
				FROM
					[dbo].[SalaryType]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SalaryType_GetBySalaryTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SalaryType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SalaryTypeID],
					[SalaryTypeName],
					[Valid]
				FROM
					[dbo].[SalaryType]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SalaryType_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SalaryType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalaryTypeID]
	, [SalaryTypeName]
	, [Valid]
    FROM
	[dbo].[SalaryType]
    WHERE 
	 ([SalaryTypeID] = @SalaryTypeId OR @SalaryTypeId IS NULL)
	AND ([SalaryTypeName] = @SalaryTypeName OR @SalaryTypeName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalaryTypeID]
	, [SalaryTypeName]
	, [Valid]
    FROM
	[dbo].[SalaryType]
    WHERE 
	 ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([SalaryTypeName] = @SalaryTypeName AND @SalaryTypeName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Location_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Location table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[LocationID],
					[LocationName],
					[Valid],
					[Sequence],
					[CountryID]
				FROM
					[dbo].[Location]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Location_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Location table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [LocationID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([LocationID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [LocationID]'
				SET @SQL = @SQL + ' FROM [dbo].[Location]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[LocationID], O.[LocationName], O.[Valid], O.[Sequence], O.[CountryID]
				FROM
				    [dbo].[Location] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[LocationID] = PageIndex.[LocationID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Location]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Location_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Location table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Location]
					(
					[LocationName]
					,[Valid]
					,[Sequence]
					,[CountryID]
					)
				VALUES
					(
					@LocationName
					,@Valid
					,@Sequence
					,@CountryId
					)
				
				-- Get the identity value
				SET @LocationId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Location_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Location table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Location]
				SET
					[LocationName] = @LocationName
					,[Valid] = @Valid
					,[Sequence] = @Sequence
					,[CountryID] = @CountryId
				WHERE
[LocationID] = @LocationId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Location_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Location table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Location] WITH (ROWLOCK) 
				WHERE
					[LocationID] = @LocationId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Location_GetByCountryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Location table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[LocationID],
					[LocationName],
					[Valid],
					[Sequence],
					[CountryID]
				FROM
					[dbo].[Location]
				WHERE
					[CountryID] = @CountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Location_GetByLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Location table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[LocationID],
					[LocationName],
					[Valid],
					[Sequence],
					[CountryID]
				FROM
					[dbo].[Location]
				WHERE
					[LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Location_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Location table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [LocationID]
	, [LocationName]
	, [Valid]
	, [Sequence]
	, [CountryID]
    FROM
	[dbo].[Location]
    WHERE 
	 ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([LocationName] = @LocationName OR @LocationName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [LocationID]
	, [LocationName]
	, [Valid]
	, [Sequence]
	, [CountryID]
    FROM
	[dbo].[Location]
    WHERE 
	 ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([LocationName] = @LocationName AND @LocationName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Location_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Location table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [LocationID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [LocationID] )
				SELECT TOP {3} [LocationID]
				FROM [dbo].[Location] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[LocationID], O.[LocationName], O.[Valid], O.[Sequence], O.[CountryID]
				FROM
				    [dbo].[Location] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[LocationID] = PageIndex.[LocationID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Location] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Location_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Location table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Location]
					(
					[LocationName]
					,[Valid]
					,[Sequence]
					,[CountryID]
					)
				VALUES
					(
					@LocationName
					,@Valid
					,@Sequence
					,@CountryId
					)
				
				-- Get the identity value
				SET @LocationId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Location_GetByLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Location table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[LocationID],
					[LocationName],
					[Valid],
					[Sequence],
					[CountryID]
				FROM
					[dbo].[Location]
				WHERE
					[LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Location_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Location table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[LocationID],
					[LocationName],
					[Valid],
					[Sequence],
					[CountryID]
				FROM
					[dbo].[Location]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Location_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Location table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Location]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Location_GetSiteTree"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SiteLocationFriendlyUrl, CountryID  
FROM @Location   
ORDER BY LocationName, SiteLocationName  
    
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Location_GetByCountryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Location table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[LocationID],
					[LocationName],
					[Valid],
					[Sequence],
					[CountryID]
				FROM
					[dbo].[Location]
				WHERE
					[CountryID] = @CountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Location_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Location table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [LocationID]
	, [LocationName]
	, [Valid]
	, [Sequence]
	, [CountryID]
    FROM
	[dbo].[Location]
    WHERE 
	 ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([LocationName] = @LocationName OR @LocationName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [LocationID]
	, [LocationName]
	, [Valid]
	, [Sequence]
	, [CountryID]
    FROM
	[dbo].[Location]
    WHERE 
	 ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([LocationName] = @LocationName AND @LocationName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Location_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Location table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Location] WITH (ROWLOCK) 
				WHERE
					[LocationID] = @LocationId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Location_GetDetailWithSite"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SiteLocationFriendlyUrl  
FROM @Location   
    
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Location_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Location table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Location]
				SET
					[LocationName] = @LocationName
					,[Valid] = @Valid
					,[Sequence] = @Sequence
					,[CountryID] = @CountryId
				WHERE
[LocationID] = @LocationId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Salary_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Salary table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SalaryID],
					[SalaryTypeID],
					[CurrencyID],
					[Amount],
					[SalaryDisplay],
					[IsFrom]
				FROM
					[dbo].[Salary]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Salary_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Salary table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SalaryID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SalaryID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SalaryID]'
				SET @SQL = @SQL + ' FROM [dbo].[Salary]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SalaryID], O.[SalaryTypeID], O.[CurrencyID], O.[Amount], O.[SalaryDisplay], O.[IsFrom]
				FROM
				    [dbo].[Salary] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SalaryID] = PageIndex.[SalaryID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Salary]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Salary_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Salary table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Amount" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryDisplay" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@IsFrom" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Salary]
					(
					[SalaryTypeID]
					,[CurrencyID]
					,[Amount]
					,[SalaryDisplay]
					,[IsFrom]
					)
				VALUES
					(
					@SalaryTypeId
					,@CurrencyId
					,@Amount
					,@SalaryDisplay
					,@IsFrom
					)
				
				-- Get the identity value
				SET @SalaryId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Salary_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Salary table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Amount" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryDisplay" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@IsFrom" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Salary]
				SET
					[SalaryTypeID] = @SalaryTypeId
					,[CurrencyID] = @CurrencyId
					,[Amount] = @Amount
					,[SalaryDisplay] = @SalaryDisplay
					,[IsFrom] = @IsFrom
				WHERE
[SalaryID] = @SalaryId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Salary_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Salary table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Salary] WITH (ROWLOCK) 
				WHERE
					[SalaryID] = @SalaryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Salary_GetByCurrencyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Salary table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SalaryID],
					[SalaryTypeID],
					[CurrencyID],
					[Amount],
					[SalaryDisplay],
					[IsFrom]
				FROM
					[dbo].[Salary]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Salary_GetBySalaryTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Salary table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SalaryID],
					[SalaryTypeID],
					[CurrencyID],
					[Amount],
					[SalaryDisplay],
					[IsFrom]
				FROM
					[dbo].[Salary]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Salary_GetBySalaryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Salary table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SalaryID],
					[SalaryTypeID],
					[CurrencyID],
					[Amount],
					[SalaryDisplay],
					[IsFrom]
				FROM
					[dbo].[Salary]
				WHERE
					[SalaryID] = @SalaryId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Salary_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Salary table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Amount" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryDisplay" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@IsFrom" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalaryID]
	, [SalaryTypeID]
	, [CurrencyID]
	, [Amount]
	, [SalaryDisplay]
	, [IsFrom]
    FROM
	[dbo].[Salary]
    WHERE 
	 ([SalaryID] = @SalaryId OR @SalaryId IS NULL)
	AND ([SalaryTypeID] = @SalaryTypeId OR @SalaryTypeId IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([Amount] = @Amount OR @Amount IS NULL)
	AND ([SalaryDisplay] = @SalaryDisplay OR @SalaryDisplay IS NULL)
	AND ([IsFrom] = @IsFrom OR @IsFrom IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalaryID]
	, [SalaryTypeID]
	, [CurrencyID]
	, [Amount]
	, [SalaryDisplay]
	, [IsFrom]
    FROM
	[dbo].[Salary]
    WHERE 
	 ([SalaryID] = @SalaryId AND @SalaryId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([Amount] = @Amount AND @Amount is not null)
	OR ([SalaryDisplay] = @SalaryDisplay AND @SalaryDisplay is not null)
	OR ([IsFrom] = @IsFrom AND @IsFrom is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Salary_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Salary table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SalaryID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SalaryID] )
				SELECT TOP {3} [SalaryID]
				FROM [dbo].[Salary] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SalaryID], O.[SalaryTypeID], O.[CurrencyID], O.[Amount], O.[SalaryDisplay], O.[IsFrom]
				FROM
				    [dbo].[Salary] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SalaryID] = PageIndex.[SalaryID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Salary] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Salary_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Salary table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Amount" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryDisplay" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@IsFrom" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Salary]
					(
					[SalaryTypeID]
					,[CurrencyID]
					,[Amount]
					,[SalaryDisplay]
					,[IsFrom]
					)
				VALUES
					(
					@SalaryTypeId
					,@CurrencyId
					,@Amount
					,@SalaryDisplay
					,@IsFrom
					)
				
				-- Get the identity value
				SET @SalaryId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Salary_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Salary table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SalaryID],
					[SalaryTypeID],
					[CurrencyID],
					[Amount],
					[SalaryDisplay],
					[IsFrom]
				FROM
					[dbo].[Salary]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Salary_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Salary table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Salary]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Salary_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Salary table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Amount" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryDisplay" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@IsFrom" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalaryID]
	, [SalaryTypeID]
	, [CurrencyID]
	, [Amount]
	, [SalaryDisplay]
	, [IsFrom]
    FROM
	[dbo].[Salary]
    WHERE 
	 ([SalaryID] = @SalaryId OR @SalaryId IS NULL)
	AND ([SalaryTypeID] = @SalaryTypeId OR @SalaryTypeId IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([Amount] = @Amount OR @Amount IS NULL)
	AND ([SalaryDisplay] = @SalaryDisplay OR @SalaryDisplay IS NULL)
	AND ([IsFrom] = @IsFrom OR @IsFrom IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalaryID]
	, [SalaryTypeID]
	, [CurrencyID]
	, [Amount]
	, [SalaryDisplay]
	, [IsFrom]
    FROM
	[dbo].[Salary]
    WHERE 
	 ([SalaryID] = @SalaryId AND @SalaryId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([Amount] = @Amount AND @Amount is not null)
	OR ([SalaryDisplay] = @SalaryDisplay AND @SalaryDisplay is not null)
	OR ([IsFrom] = @IsFrom AND @IsFrom is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Salary_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Salary table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Salary] WITH (ROWLOCK) 
				WHERE
					[SalaryID] = @SalaryId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Salary_GetBySalaryTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Salary table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SalaryID],
					[SalaryTypeID],
					[CurrencyID],
					[Amount],
					[SalaryDisplay],
					[IsFrom]
				FROM
					[dbo].[Salary]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Salary_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Salary table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Amount" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryDisplay" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@IsFrom" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Salary]
				SET
					[SalaryTypeID] = @SalaryTypeId
					,[CurrencyID] = @CurrencyId
					,[Amount] = @Amount
					,[SalaryDisplay] = @SalaryDisplay
					,[IsFrom] = @IsFrom
				WHERE
[SalaryID] = @SalaryId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Salary_GetBySalaryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Salary table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SalaryID],
					[SalaryTypeID],
					[CurrencyID],
					[Amount],
					[SalaryDisplay],
					[IsFrom]
				FROM
					[dbo].[Salary]
				WHERE
					[SalaryID] = @SalaryId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Salary_GetByCurrencyId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Salary table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SalaryID],
					[SalaryTypeID],
					[CurrencyID],
					[Amount],
					[SalaryDisplay],
					[IsFrom]
				FROM
					[dbo].[Salary]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteSummary_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteSummary table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteSummaryID],
					[SiteID],
					[Title],
					[Description],
					[ModifiedBy],
					[URL],
					[TimeStamp],
					[Valid],
					[ShowPlatformNotification],
					[PlatformNotificationText],
					[LastModifiedDate],
					[LastModifiedBy]
				FROM
					[dbo].[SiteSummary]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteSummary_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteSummary table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteSummaryID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteSummaryID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteSummaryID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteSummary]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteSummaryID], O.[SiteID], O.[Title], O.[Description], O.[ModifiedBy], O.[URL], O.[TimeStamp], O.[Valid], O.[ShowPlatformNotification], O.[PlatformNotificationText], O.[LastModifiedDate], O.[LastModifiedBy]
				FROM
				    [dbo].[SiteSummary] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteSummaryID] = PageIndex.[SiteSummaryID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteSummary]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteSummary_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteSummary table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteSummaryId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@ModifiedBy" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Url" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@TimeStamp" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowPlatformNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PlatformNotificationText" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteSummary]
					(
					[SiteID]
					,[Title]
					,[Description]
					,[ModifiedBy]
					,[URL]
					,[TimeStamp]
					,[Valid]
					,[ShowPlatformNotification]
					,[PlatformNotificationText]
					,[LastModifiedDate]
					,[LastModifiedBy]
					)
				VALUES
					(
					@SiteId
					,@Title
					,@Description
					,@ModifiedBy
					,@Url
					,@TimeStamp
					,@Valid
					,@ShowPlatformNotification
					,@PlatformNotificationText
					,@LastModifiedDate
					,@LastModifiedBy
					)
				
				-- Get the identity value
				SET @SiteSummaryId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteSummary_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteSummary table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteSummaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@ModifiedBy" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Url" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@TimeStamp" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowPlatformNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PlatformNotificationText" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteSummary]
				SET
					[SiteID] = @SiteId
					,[Title] = @Title
					,[Description] = @Description
					,[ModifiedBy] = @ModifiedBy
					,[URL] = @Url
					,[TimeStamp] = @TimeStamp
					,[Valid] = @Valid
					,[ShowPlatformNotification] = @ShowPlatformNotification
					,[PlatformNotificationText] = @PlatformNotificationText
					,[LastModifiedDate] = @LastModifiedDate
					,[LastModifiedBy] = @LastModifiedBy
				WHERE
[SiteSummaryID] = @SiteSummaryId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteSummary_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteSummary table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteSummaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteSummary] WITH (ROWLOCK) 
				WHERE
					[SiteSummaryID] = @SiteSummaryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteSummary_GetBySiteSummaryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteSummary table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteSummaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteSummaryID],
					[SiteID],
					[Title],
					[Description],
					[ModifiedBy],
					[URL],
					[TimeStamp],
					[Valid],
					[ShowPlatformNotification],
					[PlatformNotificationText],
					[LastModifiedDate],
					[LastModifiedBy]
				FROM
					[dbo].[SiteSummary]
				WHERE
					[SiteSummaryID] = @SiteSummaryId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteSummary_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteSummary table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteSummaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Url" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@TimeStamp" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowPlatformNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PlatformNotificationText" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteSummaryID]
	, [SiteID]
	, [Title]
	, [Description]
	, [ModifiedBy]
	, [URL]
	, [TimeStamp]
	, [Valid]
	, [ShowPlatformNotification]
	, [PlatformNotificationText]
	, [LastModifiedDate]
	, [LastModifiedBy]
    FROM
	[dbo].[SiteSummary]
    WHERE 
	 ([SiteSummaryID] = @SiteSummaryId OR @SiteSummaryId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([ModifiedBy] = @ModifiedBy OR @ModifiedBy IS NULL)
	AND ([URL] = @Url OR @Url IS NULL)
	AND ([TimeStamp] = @TimeStamp OR @TimeStamp IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([ShowPlatformNotification] = @ShowPlatformNotification OR @ShowPlatformNotification IS NULL)
	AND ([PlatformNotificationText] = @PlatformNotificationText OR @PlatformNotificationText IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteSummaryID]
	, [SiteID]
	, [Title]
	, [Description]
	, [ModifiedBy]
	, [URL]
	, [TimeStamp]
	, [Valid]
	, [ShowPlatformNotification]
	, [PlatformNotificationText]
	, [LastModifiedDate]
	, [LastModifiedBy]
    FROM
	[dbo].[SiteSummary]
    WHERE 
	 ([SiteSummaryID] = @SiteSummaryId AND @SiteSummaryId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([ModifiedBy] = @ModifiedBy AND @ModifiedBy is not null)
	OR ([URL] = @Url AND @Url is not null)
	OR ([TimeStamp] = @TimeStamp AND @TimeStamp is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([ShowPlatformNotification] = @ShowPlatformNotification AND @ShowPlatformNotification is not null)
	OR ([PlatformNotificationText] = @PlatformNotificationText AND @PlatformNotificationText is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteSummary_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteSummary table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteSummaryID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteSummaryID] )
				SELECT TOP {3} [SiteSummaryID]
				FROM [dbo].[SiteSummary] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteSummaryID], O.[SiteID], O.[Title], O.[Description], O.[ModifiedBy], O.[URL], O.[TimeStamp], O.[Valid], O.[ShowPlatformNotification], O.[PlatformNotificationText], O.[LastModifiedDate], O.[LastModifiedBy]
				FROM
				    [dbo].[SiteSummary] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteSummaryID] = PageIndex.[SiteSummaryID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteSummary] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteSummary_GetBySiteSummaryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteSummary table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteSummaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteSummary]
				WHERE
					[SiteSummaryID] = @SiteSummaryId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSummary_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteSummary table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteSummaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteSummary] WITH (ROWLOCK) 
				WHERE
					[SiteSummaryID] = @SiteSummaryId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSummary_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteSummary table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteSummaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Url" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@TimeStamp" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowPlatformNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PlatformNotificationText" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				WHERE
[SiteSummaryID] = @SiteSummaryId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSummary_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteSummary table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteSummaryId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Url" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@TimeStamp" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowPlatformNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PlatformNotificationText" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					)
				
				-- Get the identity value
				SET @SiteSummaryId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSummary_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteSummary table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteSummary]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSummary_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteSummary table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteSummary]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSummary_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteSummary table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteSummaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Url" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@TimeStamp" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowPlatformNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PlatformNotificationText" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberFileTypes_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberFileTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberFileTypeID],
					[MemberFileTypeName],
					[MemberFileExtensions]
				FROM
					[dbo].[MemberFileTypes]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberFileTypes_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberFileTypes table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberFileTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberFileTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberFileTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberFileTypes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberFileTypeID], O.[MemberFileTypeName], O.[MemberFileExtensions]
				FROM
				    [dbo].[MemberFileTypes] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberFileTypeID] = PageIndex.[MemberFileTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberFileTypes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberFileTypes_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberFileTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MemberFileExtensions" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberFileTypes]
					(
					[MemberFileTypeName]
					,[MemberFileExtensions]
					)
				VALUES
					(
					@MemberFileTypeName
					,@MemberFileExtensions
					)
				
				-- Get the identity value
				SET @MemberFileTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberFileTypes_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberFileTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MemberFileExtensions" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberFileTypes]
				SET
					[MemberFileTypeName] = @MemberFileTypeName
					,[MemberFileExtensions] = @MemberFileExtensions
				WHERE
[MemberFileTypeID] = @MemberFileTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberFileTypes_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberFileTypes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberFileTypes] WITH (ROWLOCK) 
				WHERE
					[MemberFileTypeID] = @MemberFileTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberFileTypes_GetByMemberFileTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberFileTypes table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberFileTypeID],
					[MemberFileTypeName],
					[MemberFileExtensions]
				FROM
					[dbo].[MemberFileTypes]
				WHERE
					[MemberFileTypeID] = @MemberFileTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberFileTypes_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberFileTypes table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MemberFileExtensions" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberFileTypeID]
	, [MemberFileTypeName]
	, [MemberFileExtensions]
    FROM
	[dbo].[MemberFileTypes]
    WHERE 
	 ([MemberFileTypeID] = @MemberFileTypeId OR @MemberFileTypeId IS NULL)
	AND ([MemberFileTypeName] = @MemberFileTypeName OR @MemberFileTypeName IS NULL)
	AND ([MemberFileExtensions] = @MemberFileExtensions OR @MemberFileExtensions IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberFileTypeID]
	, [MemberFileTypeName]
	, [MemberFileExtensions]
    FROM
	[dbo].[MemberFileTypes]
    WHERE 
	 ([MemberFileTypeID] = @MemberFileTypeId AND @MemberFileTypeId is not null)
	OR ([MemberFileTypeName] = @MemberFileTypeName AND @MemberFileTypeName is not null)
	OR ([MemberFileExtensions] = @MemberFileExtensions AND @MemberFileExtensions is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberFileTypes_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberFileTypes table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberFileTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberFileTypeID] )
				SELECT TOP {3} [MemberFileTypeID]
				FROM [dbo].[MemberFileTypes] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberFileTypeID], O.[MemberFileTypeName], O.[MemberFileExtensions]
				FROM
				    [dbo].[MemberFileTypes] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberFileTypeID] = PageIndex.[MemberFileTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberFileTypes] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberFileTypes_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberFileTypes table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberFileTypes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFileTypes_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberFileTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberFileTypes] WITH (ROWLOCK) 
				WHERE
					[MemberFileTypeID] = @MemberFileTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFileTypes_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberFileTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MemberFileExtensions" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[MemberFileTypes]
				SET
					[MemberFileTypeName] = @MemberFileTypeName
					,[MemberFileExtensions] = @MemberFileExtensions
				WHERE
[MemberFileTypeID] = @MemberFileTypeId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFileTypes_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberFileTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MemberFileExtensions" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[MemberFileTypes]
					(
					[MemberFileTypeName]
					,[MemberFileExtensions]
					)
				VALUES
					(
					@MemberFileTypeName
					,@MemberFileExtensions
					)
				
				-- Get the identity value
				SET @MemberFileTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFileTypes_GetByMemberFileTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberFileTypes table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[MemberFileTypeID],
					[MemberFileTypeName],
					[MemberFileExtensions]
				FROM
					[dbo].[MemberFileTypes]
				WHERE
					[MemberFileTypeID] = @MemberFileTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFileTypes_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberFileTypes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[MemberFileTypeID],
					[MemberFileTypeName],
					[MemberFileExtensions]
				FROM
					[dbo].[MemberFileTypes]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFileTypes_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberFileTypes table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MemberFileExtensions" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberFileTypeID]
	, [MemberFileTypeName]
	, [MemberFileExtensions]
    FROM
	[dbo].[MemberFileTypes]
    WHERE 
	 ([MemberFileTypeID] = @MemberFileTypeId OR @MemberFileTypeId IS NULL)
	AND ([MemberFileTypeName] = @MemberFileTypeName OR @MemberFileTypeName IS NULL)
	AND ([MemberFileExtensions] = @MemberFileExtensions OR @MemberFileExtensions IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberFileTypeID]
	, [MemberFileTypeName]
	, [MemberFileExtensions]
    FROM
	[dbo].[MemberFileTypes]
    WHERE 
	 ([MemberFileTypeID] = @MemberFileTypeId AND @MemberFileTypeId is not null)
	OR ([MemberFileTypeName] = @MemberFileTypeName AND @MemberFileTypeName is not null)
	OR ([MemberFileExtensions] = @MemberFileExtensions AND @MemberFileExtensions is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="NewsType_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the NewsType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[NewsTypeID],
					[NewsTypeName],
					[SiteID],
					[NewsTypeParentID],
					[GlobalTemplate],
					[Sequence],
					[ImageURL],
					[CustomXML],
					[LastModifiedBy],
					[LastModifiedDate]
				FROM
					[dbo].[NewsType]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="NewsType_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NewsType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [NewsTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([NewsTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [NewsTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[NewsType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[NewsTypeID], O.[NewsTypeName], O.[SiteID], O.[NewsTypeParentID], O.[GlobalTemplate], O.[Sequence], O.[ImageURL], O.[CustomXML], O.[LastModifiedBy], O.[LastModifiedDate]
				FROM
				    [dbo].[NewsType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[NewsTypeID] = PageIndex.[NewsTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[NewsType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="NewsType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the NewsType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[NewsType]
					(
					[NewsTypeName]
					,[SiteID]
					,[NewsTypeParentID]
					,[GlobalTemplate]
					,[Sequence]
					,[ImageURL]
					,[CustomXML]
					,[LastModifiedBy]
					,[LastModifiedDate]
					)
				VALUES
					(
					@NewsTypeName
					,@SiteId
					,@NewsTypeParentId
					,@GlobalTemplate
					,@Sequence
					,@ImageUrl
					,@CustomXml
					,@LastModifiedBy
					,@LastModifiedDate
					)
				
				-- Get the identity value
				SET @NewsTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the NewsType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[NewsType]
				SET
					[NewsTypeName] = @NewsTypeName
					,[SiteID] = @SiteId
					,[NewsTypeParentID] = @NewsTypeParentId
					,[GlobalTemplate] = @GlobalTemplate
					,[Sequence] = @Sequence
					,[ImageURL] = @ImageUrl
					,[CustomXML] = @CustomXml
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModifiedDate] = @LastModifiedDate
				WHERE
[NewsTypeID] = @NewsTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the NewsType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[NewsType] WITH (ROWLOCK) 
				WHERE
					[NewsTypeID] = @NewsTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsType_GetByNewsTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[NewsTypeID],
					[NewsTypeName],
					[SiteID],
					[NewsTypeParentID],
					[GlobalTemplate],
					[Sequence],
					[ImageURL],
					[CustomXML],
					[LastModifiedBy],
					[LastModifiedDate]
				FROM
					[dbo].[NewsType]
				WHERE
					[NewsTypeID] = @NewsTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="NewsType_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the NewsType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [NewsTypeID]
	, [NewsTypeName]
	, [SiteID]
	, [NewsTypeParentID]
	, [GlobalTemplate]
	, [Sequence]
	, [ImageURL]
	, [CustomXML]
	, [LastModifiedBy]
	, [LastModifiedDate]
    FROM
	[dbo].[NewsType]
    WHERE 
	 ([NewsTypeID] = @NewsTypeId OR @NewsTypeId IS NULL)
	AND ([NewsTypeName] = @NewsTypeName OR @NewsTypeName IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([NewsTypeParentID] = @NewsTypeParentId OR @NewsTypeParentId IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([ImageURL] = @ImageUrl OR @ImageUrl IS NULL)
	AND ([CustomXML] = @CustomXml OR @CustomXml IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [NewsTypeID]
	, [NewsTypeName]
	, [SiteID]
	, [NewsTypeParentID]
	, [GlobalTemplate]
	, [Sequence]
	, [ImageURL]
	, [CustomXML]
	, [LastModifiedBy]
	, [LastModifiedDate]
    FROM
	[dbo].[NewsType]
    WHERE 
	 ([NewsTypeID] = @NewsTypeId AND @NewsTypeId is not null)
	OR ([NewsTypeName] = @NewsTypeName AND @NewsTypeName is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([NewsTypeParentID] = @NewsTypeParentId AND @NewsTypeParentId is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([ImageURL] = @ImageUrl AND @ImageUrl is not null)
	OR ([CustomXML] = @CustomXml AND @CustomXml is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="NewsType_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NewsType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [NewsTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [NewsTypeID] )
				SELECT TOP {3} [NewsTypeID]
				FROM [dbo].[NewsType] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[NewsTypeID], O.[NewsTypeName], O.[SiteID], O.[NewsTypeParentID], O.[GlobalTemplate], O.[Sequence], O.[ImageURL], O.[CustomXML], O.[LastModifiedBy], O.[LastModifiedDate]
				FROM
				    [dbo].[NewsType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[NewsTypeID] = PageIndex.[NewsTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[NewsType] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="NewsType_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NewsType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[NewsType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsType_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the NewsType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[NewsType] WITH (ROWLOCK) 
				WHERE
					[NewsTypeID] = @NewsTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsType_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the NewsType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
				WHERE
[NewsTypeID] = @NewsTypeId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsType_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the NewsType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					)
				
				-- Get the identity value
				SET @NewsTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsType_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the NewsType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[NewsType]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsType_GetByNewsTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[NewsType]
				WHERE
					[NewsTypeID] = @NewsTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsType_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the NewsType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="DynamicPageRevisions_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPageRevisions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DynamicPageRevisionID],
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[Status],
					[Visible],
					[PublishOn],
					[MappingID],
					[Comment],
					[PageLog]
				FROM
					[dbo].[DynamicPageRevisions]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DynamicPageRevisions_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageRevisions table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageRevisionID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([DynamicPageRevisionID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [DynamicPageRevisionID]'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageRevisions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[DynamicPageRevisionID], O.[DynamicPageID], O.[SiteID], O.[LanguageID], O.[ParentDynamicPageID], O.[PageName], O.[PageTitle], O.[PageContent], O.[DynamicPageWebPartTemplateID], O.[HyperLink], O.[Valid], O.[OpenInNewWindow], O.[Sequence], O.[FullScreen], O.[OnTopNav], O.[OnLeftNav], O.[OnBottomNav], O.[OnSiteMap], O.[Searchable], O.[MetaKeywords], O.[MetaDescription], O.[PageFriendlyName], O.[LastModified], O.[LastModifiedBy], O.[SearchField], O.[SourceID], O.[Secured], O.[CustomUrl], O.[MetaTitle], O.[GenerateBreadcrumb], O.[Status], O.[Visible], O.[PublishOn], O.[MappingID], O.[Comment], O.[PageLog]
				FROM
				    [dbo].[DynamicPageRevisions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[DynamicPageRevisionID] = PageIndex.[DynamicPageRevisionID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageRevisions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="DynamicPageRevisions_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPageRevisions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageRevisionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@MappingId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Comment" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@PageLog" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[DynamicPageRevisions]
					(
					[DynamicPageID]
					,[SiteID]
					,[LanguageID]
					,[ParentDynamicPageID]
					,[PageName]
					,[PageTitle]
					,[PageContent]
					,[DynamicPageWebPartTemplateID]
					,[HyperLink]
					,[Valid]
					,[OpenInNewWindow]
					,[Sequence]
					,[FullScreen]
					,[OnTopNav]
					,[OnLeftNav]
					,[OnBottomNav]
					,[OnSiteMap]
					,[Searchable]
					,[MetaKeywords]
					,[MetaDescription]
					,[PageFriendlyName]
					,[LastModified]
					,[LastModifiedBy]
					,[SearchField]
					,[SourceID]
					,[Secured]
					,[CustomUrl]
					,[MetaTitle]
					,[GenerateBreadcrumb]
					,[Status]
					,[Visible]
					,[PublishOn]
					,[MappingID]
					,[Comment]
					,[PageLog]
					)
				VALUES
					(
					@DynamicPageId
					,@SiteId
					,@LanguageId
					,@ParentDynamicPageId
					,@PageName
					,@PageTitle
					,@PageContent
					,@DynamicPageWebPartTemplateId
					,@HyperLink
					,@Valid
					,@OpenInNewWindow
					,@Sequence
					,@FullScreen
					,@OnTopNav
					,@OnLeftNav
					,@OnBottomNav
					,@OnSiteMap
					,@Searchable
					,@MetaKeywords
					,@MetaDescription
					,@PageFriendlyName
					,@LastModified
					,@LastModifiedBy
					,@SearchField
					,@SourceId
					,@Secured
					,@CustomUrl
					,@MetaTitle
					,@GenerateBreadcrumb
					,@Status
					,@Visible
					,@PublishOn
					,@MappingId
					,@Comment
					,@PageLog
					)
				
				-- Get the identity value
				SET @DynamicPageRevisionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageRevisions_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPageRevisions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageRevisionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@MappingId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Comment" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@PageLog" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicPageRevisions]
				SET
					[DynamicPageID] = @DynamicPageId
					,[SiteID] = @SiteId
					,[LanguageID] = @LanguageId
					,[ParentDynamicPageID] = @ParentDynamicPageId
					,[PageName] = @PageName
					,[PageTitle] = @PageTitle
					,[PageContent] = @PageContent
					,[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
					,[HyperLink] = @HyperLink
					,[Valid] = @Valid
					,[OpenInNewWindow] = @OpenInNewWindow
					,[Sequence] = @Sequence
					,[FullScreen] = @FullScreen
					,[OnTopNav] = @OnTopNav
					,[OnLeftNav] = @OnLeftNav
					,[OnBottomNav] = @OnBottomNav
					,[OnSiteMap] = @OnSiteMap
					,[Searchable] = @Searchable
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[PageFriendlyName] = @PageFriendlyName
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
					,[SearchField] = @SearchField
					,[SourceID] = @SourceId
					,[Secured] = @Secured
					,[CustomUrl] = @CustomUrl
					,[MetaTitle] = @MetaTitle
					,[GenerateBreadcrumb] = @GenerateBreadcrumb
					,[Status] = @Status
					,[Visible] = @Visible
					,[PublishOn] = @PublishOn
					,[MappingID] = @MappingId
					,[Comment] = @Comment
					,[PageLog] = @PageLog
				WHERE
[DynamicPageRevisionID] = @DynamicPageRevisionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageRevisions_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPageRevisions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageRevisionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[DynamicPageRevisions] WITH (ROWLOCK) 
				WHERE
					[DynamicPageRevisionID] = @DynamicPageRevisionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageRevisions_GetByDynamicPageRevisionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageRevisions table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageRevisionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageRevisionID],
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[Status],
					[Visible],
					[PublishOn],
					[MappingID],
					[Comment],
					[PageLog]
				FROM
					[dbo].[DynamicPageRevisions]
				WHERE
					[DynamicPageRevisionID] = @DynamicPageRevisionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicPageRevisions_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPageRevisions table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageRevisionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MappingId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Comment" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageLog" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageRevisionID]
	, [DynamicPageID]
	, [SiteID]
	, [LanguageID]
	, [ParentDynamicPageID]
	, [PageName]
	, [PageTitle]
	, [PageContent]
	, [DynamicPageWebPartTemplateID]
	, [HyperLink]
	, [Valid]
	, [OpenInNewWindow]
	, [Sequence]
	, [FullScreen]
	, [OnTopNav]
	, [OnLeftNav]
	, [OnBottomNav]
	, [OnSiteMap]
	, [Searchable]
	, [MetaKeywords]
	, [MetaDescription]
	, [PageFriendlyName]
	, [LastModified]
	, [LastModifiedBy]
	, [SearchField]
	, [SourceID]
	, [Secured]
	, [CustomUrl]
	, [MetaTitle]
	, [GenerateBreadcrumb]
	, [Status]
	, [Visible]
	, [PublishOn]
	, [MappingID]
	, [Comment]
	, [PageLog]
    FROM
	[dbo].[DynamicPageRevisions]
    WHERE 
	 ([DynamicPageRevisionID] = @DynamicPageRevisionId OR @DynamicPageRevisionId IS NULL)
	AND ([DynamicPageID] = @DynamicPageId OR @DynamicPageId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([ParentDynamicPageID] = @ParentDynamicPageId OR @ParentDynamicPageId IS NULL)
	AND ([PageName] = @PageName OR @PageName IS NULL)
	AND ([PageTitle] = @PageTitle OR @PageTitle IS NULL)
	AND ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId OR @DynamicPageWebPartTemplateId IS NULL)
	AND ([HyperLink] = @HyperLink OR @HyperLink IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([OpenInNewWindow] = @OpenInNewWindow OR @OpenInNewWindow IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([FullScreen] = @FullScreen OR @FullScreen IS NULL)
	AND ([OnTopNav] = @OnTopNav OR @OnTopNav IS NULL)
	AND ([OnLeftNav] = @OnLeftNav OR @OnLeftNav IS NULL)
	AND ([OnBottomNav] = @OnBottomNav OR @OnBottomNav IS NULL)
	AND ([OnSiteMap] = @OnSiteMap OR @OnSiteMap IS NULL)
	AND ([Searchable] = @Searchable OR @Searchable IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([PageFriendlyName] = @PageFriendlyName OR @PageFriendlyName IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([SearchField] = @SearchField OR @SearchField IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
	AND ([Secured] = @Secured OR @Secured IS NULL)
	AND ([CustomUrl] = @CustomUrl OR @CustomUrl IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([GenerateBreadcrumb] = @GenerateBreadcrumb OR @GenerateBreadcrumb IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
	AND ([Visible] = @Visible OR @Visible IS NULL)
	AND ([PublishOn] = @PublishOn OR @PublishOn IS NULL)
	AND ([MappingID] = @MappingId OR @MappingId IS NULL)
	AND ([Comment] = @Comment OR @Comment IS NULL)
	AND ([PageLog] = @PageLog OR @PageLog IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageRevisionID]
	, [DynamicPageID]
	, [SiteID]
	, [LanguageID]
	, [ParentDynamicPageID]
	, [PageName]
	, [PageTitle]
	, [PageContent]
	, [DynamicPageWebPartTemplateID]
	, [HyperLink]
	, [Valid]
	, [OpenInNewWindow]
	, [Sequence]
	, [FullScreen]
	, [OnTopNav]
	, [OnLeftNav]
	, [OnBottomNav]
	, [OnSiteMap]
	, [Searchable]
	, [MetaKeywords]
	, [MetaDescription]
	, [PageFriendlyName]
	, [LastModified]
	, [LastModifiedBy]
	, [SearchField]
	, [SourceID]
	, [Secured]
	, [CustomUrl]
	, [MetaTitle]
	, [GenerateBreadcrumb]
	, [Status]
	, [Visible]
	, [PublishOn]
	, [MappingID]
	, [Comment]
	, [PageLog]
    FROM
	[dbo].[DynamicPageRevisions]
    WHERE 
	 ([DynamicPageRevisionID] = @DynamicPageRevisionId AND @DynamicPageRevisionId is not null)
	OR ([DynamicPageID] = @DynamicPageId AND @DynamicPageId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([ParentDynamicPageID] = @ParentDynamicPageId AND @ParentDynamicPageId is not null)
	OR ([PageName] = @PageName AND @PageName is not null)
	OR ([PageTitle] = @PageTitle AND @PageTitle is not null)
	OR ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId AND @DynamicPageWebPartTemplateId is not null)
	OR ([HyperLink] = @HyperLink AND @HyperLink is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([OpenInNewWindow] = @OpenInNewWindow AND @OpenInNewWindow is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([FullScreen] = @FullScreen AND @FullScreen is not null)
	OR ([OnTopNav] = @OnTopNav AND @OnTopNav is not null)
	OR ([OnLeftNav] = @OnLeftNav AND @OnLeftNav is not null)
	OR ([OnBottomNav] = @OnBottomNav AND @OnBottomNav is not null)
	OR ([OnSiteMap] = @OnSiteMap AND @OnSiteMap is not null)
	OR ([Searchable] = @Searchable AND @Searchable is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([PageFriendlyName] = @PageFriendlyName AND @PageFriendlyName is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	OR ([Secured] = @Secured AND @Secured is not null)
	OR ([CustomUrl] = @CustomUrl AND @CustomUrl is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([GenerateBreadcrumb] = @GenerateBreadcrumb AND @GenerateBreadcrumb is not null)
	OR ([Status] = @Status AND @Status is not null)
	OR ([Visible] = @Visible AND @Visible is not null)
	OR ([PublishOn] = @PublishOn AND @PublishOn is not null)
	OR ([MappingID] = @MappingId AND @MappingId is not null)
	OR ([Comment] = @Comment AND @Comment is not null)
	OR ([PageLog] = @PageLog AND @PageLog is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="DynamicPageRevisions_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageRevisions table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageRevisionID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [DynamicPageRevisionID] )
				SELECT TOP {3} [DynamicPageRevisionID]
				FROM [dbo].[DynamicPageRevisions] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[DynamicPageRevisionID], O.[DynamicPageID], O.[SiteID], O.[LanguageID], O.[ParentDynamicPageID], O.[PageName], O.[PageTitle], O.[PageContent], O.[DynamicPageWebPartTemplateID], O.[HyperLink], O.[Valid], O.[OpenInNewWindow], O.[Sequence], O.[FullScreen], O.[OnTopNav], O.[OnLeftNav], O.[OnBottomNav], O.[OnSiteMap], O.[Searchable], O.[MetaKeywords], O.[MetaDescription], O.[PageFriendlyName], O.[LastModified], O.[LastModifiedBy], O.[SearchField], O.[SourceID], O.[Secured], O.[CustomUrl], O.[MetaTitle], O.[GenerateBreadcrumb], O.[Status], O.[Visible], O.[PublishOn], O.[MappingID], O.[Comment], O.[PageLog]
				FROM
				    [dbo].[DynamicPageRevisions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[DynamicPageRevisionID] = PageIndex.[DynamicPageRevisionID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[DynamicPageRevisions] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="DynamicPageRevisions_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPageRevisions table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageRevisionId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MappingId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Comment" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageLog" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,@SearchField
					,@SourceId
					,@Secured
					,@CustomUrl
					,@MetaTitle
					,@GenerateBreadcrumb
					,@Status
					,@Visible
					,@PublishOn
					,@MappingId
					,@Comment
					,@PageLog
					)
				
				-- Get the identity value
				SET @DynamicPageRevisionId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_CustomGetBySiteIDMappingID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MappingID" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy,
SearchField,
SourceID,
Secured,
CustomUrl,
MetaTitle,
GenerateBreadcrumb,
[Status],
Visible,
PublishOn,
MappingID,
Comment,
PageLog
	FROM DynamicPageRevisions WITH (NOLOCK)
	WHERE SiteID = @SiteID AND MappingID = @MappingID
	
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_CustomSaveRevision"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MappingId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Comment" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageLog" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy        
  ,[SearchField] = @SearchField        
  ,[SourceID] = @SourceId        
  ,[Secured] = @Secured        
  ,[CustomUrl] = @CustomUrl        
  ,[MetaTitle] = @MetaTitle        
  ,[GenerateBreadcrumb] = @GenerateBreadcrumb        
  ,[Status] = @Draft        
  ,[Visible] = @Visible        
  ,[PublishOn] = @PublishOn        
  ,[MappingID] = @MappingId        
  ,[Comment] = @Comment       
  ,[PageLog] = @PageLog       
  WHERE        
  PageName = @PageName AND [Status] = @Pending AND LanguageID = @LanguageId AND SiteID = @SiteId       
       
END    

-- Maximum 5 revisions per page - delete rest of the Live revisions
DELETE FROM DynamicPageRevisions 
	WHERE Dynamicpageid = @DynamicPageId AND Status = @Published  AND 
		DynamicPageRevisionID NOT IN 
			(SELECT TOP 5 DynamicPageRevisionID FROM DynamicPageRevisions WITH (NOLOCK) WHERE Dynamicpageid = @DynamicPageId AND Status = @Published ORDER BY DynamicPageRevisionID DESC)  
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_GetByDynamicPageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageRevisions table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[Status],
					[Visible],
					[PublishOn],
					[MappingID]
				FROM
					[dbo].[DynamicPageRevisions]
				WHERE
					[DynamicPageID] = @DynamicPageId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_GetByDynamicPageRevisionId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageRevisions table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageRevisionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[Status],
					[Visible],
					[PublishOn],
					[MappingID],
					[Comment],
					[PageLog]
				FROM
					[dbo].[DynamicPageRevisions]
				WHERE
					[DynamicPageRevisionID] = @DynamicPageRevisionId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPageRevisions table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[Status],
					[Visible],
					[PublishOn],
					[MappingID],
					[Comment],
					[PageLog]
				FROM
					[dbo].[DynamicPageRevisions]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPageRevisions table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageRevisionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MappingId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Comment" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageLog" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	OR ([Secured] = @Secured AND @Secured is not null)
	OR ([CustomUrl] = @CustomUrl AND @CustomUrl is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([GenerateBreadcrumb] = @GenerateBreadcrumb AND @GenerateBreadcrumb is not null)
	OR ([Status] = @Status AND @Status is not null)
	OR ([Visible] = @Visible AND @Visible is not null)
	OR ([PublishOn] = @PublishOn AND @PublishOn is not null)
	OR ([MappingID] = @MappingId AND @MappingId is not null)
	OR ([Comment] = @Comment AND @Comment is not null)
	OR ([PageLog] = @PageLog AND @PageLog is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_CustomGetBySiteIDStatus"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy = AdminUsers.AdminUserID  
WHERE DynamicPageRevisions.LanguageID = 1 AND DynamicPageRevisions.SiteID = @SiteID AND ((@Status = 0) OR DynamicPageRevisions.[Status] = @Status)      
       
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageRevisions table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageRevisions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPageRevisions table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageRevisionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MappingId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Comment" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageLog" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,[SearchField] = @SearchField
					,[SourceID] = @SourceId
					,[Secured] = @Secured
					,[CustomUrl] = @CustomUrl
					,[MetaTitle] = @MetaTitle
					,[GenerateBreadcrumb] = @GenerateBreadcrumb
					,[Status] = @Status
					,[Visible] = @Visible
					,[PublishOn] = @PublishOn
					,[MappingID] = @MappingId
					,[Comment] = @Comment
					,[PageLog] = @PageLog
				WHERE
[DynamicPageRevisionID] = @DynamicPageRevisionId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_CustomRevertPage"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@MappingID" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy,        
@SearchField,        
@SourceID,        
@Secured,        
@CustomUrl,        
@MetaTitle,        
@GenerateBreadcrumb,        
@Status,        
@Visible,        
@PublishOn,        
@MappingID,        
@Comment,        
@PageLog        
END           
        
CLOSE db_cursor           
DEALLOCATE db_cursor        
        
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageRevisions_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPageRevisions table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageRevisionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[DynamicPageRevisions] WITH (ROWLOCK) 
				WHERE
					[DynamicPageRevisionID] = @DynamicPageRevisionId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="NewsIndustry_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the NewsIndustry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[NewsIndustryID],
					[NewsIndustryName],
					[SiteID],
					[NewsIndustryParentID],
					[GlobalTemplate],
					[Sequence],
					[CustomXML],
					[LastModifiedBy],
					[LastModifiedDate]
				FROM
					[dbo].[NewsIndustry]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="NewsIndustry_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NewsIndustry table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [NewsIndustryID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([NewsIndustryID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [NewsIndustryID]'
				SET @SQL = @SQL + ' FROM [dbo].[NewsIndustry]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[NewsIndustryID], O.[NewsIndustryName], O.[SiteID], O.[NewsIndustryParentID], O.[GlobalTemplate], O.[Sequence], O.[CustomXML], O.[LastModifiedBy], O.[LastModifiedDate]
				FROM
				    [dbo].[NewsIndustry] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[NewsIndustryID] = PageIndex.[NewsIndustryID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[NewsIndustry]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="NewsIndustry_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the NewsIndustry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsIndustryId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsIndustryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsIndustryParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[NewsIndustry]
					(
					[NewsIndustryName]
					,[SiteID]
					,[NewsIndustryParentID]
					,[GlobalTemplate]
					,[Sequence]
					,[CustomXML]
					,[LastModifiedBy]
					,[LastModifiedDate]
					)
				VALUES
					(
					@NewsIndustryName
					,@SiteId
					,@NewsIndustryParentId
					,@GlobalTemplate
					,@Sequence
					,@CustomXml
					,@LastModifiedBy
					,@LastModifiedDate
					)
				
				-- Get the identity value
				SET @NewsIndustryId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsIndustry_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the NewsIndustry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsIndustryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsIndustryParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[NewsIndustry]
				SET
					[NewsIndustryName] = @NewsIndustryName
					,[SiteID] = @SiteId
					,[NewsIndustryParentID] = @NewsIndustryParentId
					,[GlobalTemplate] = @GlobalTemplate
					,[Sequence] = @Sequence
					,[CustomXML] = @CustomXml
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModifiedDate] = @LastModifiedDate
				WHERE
[NewsIndustryID] = @NewsIndustryId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsIndustry_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the NewsIndustry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[NewsIndustry] WITH (ROWLOCK) 
				WHERE
					[NewsIndustryID] = @NewsIndustryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsIndustry_GetByNewsIndustryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsIndustry table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[NewsIndustryID],
					[NewsIndustryName],
					[SiteID],
					[NewsIndustryParentID],
					[GlobalTemplate],
					[Sequence],
					[CustomXML],
					[LastModifiedBy],
					[LastModifiedDate]
				FROM
					[dbo].[NewsIndustry]
				WHERE
					[NewsIndustryID] = @NewsIndustryId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="NewsIndustry_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the NewsIndustry table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [NewsIndustryID]
	, [NewsIndustryName]
	, [SiteID]
	, [NewsIndustryParentID]
	, [GlobalTemplate]
	, [Sequence]
	, [CustomXML]
	, [LastModifiedBy]
	, [LastModifiedDate]
    FROM
	[dbo].[NewsIndustry]
    WHERE 
	 ([NewsIndustryID] = @NewsIndustryId OR @NewsIndustryId IS NULL)
	AND ([NewsIndustryName] = @NewsIndustryName OR @NewsIndustryName IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([NewsIndustryParentID] = @NewsIndustryParentId OR @NewsIndustryParentId IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([CustomXML] = @CustomXml OR @CustomXml IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [NewsIndustryID]
	, [NewsIndustryName]
	, [SiteID]
	, [NewsIndustryParentID]
	, [GlobalTemplate]
	, [Sequence]
	, [CustomXML]
	, [LastModifiedBy]
	, [LastModifiedDate]
    FROM
	[dbo].[NewsIndustry]
    WHERE 
	 ([NewsIndustryID] = @NewsIndustryId AND @NewsIndustryId is not null)
	OR ([NewsIndustryName] = @NewsIndustryName AND @NewsIndustryName is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([NewsIndustryParentID] = @NewsIndustryParentId AND @NewsIndustryParentId is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([CustomXML] = @CustomXml AND @CustomXml is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="NewsIndustry_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NewsIndustry table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [NewsIndustryID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [NewsIndustryID] )
				SELECT TOP {3} [NewsIndustryID]
				FROM [dbo].[NewsIndustry] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[NewsIndustryID], O.[NewsIndustryName], O.[SiteID], O.[NewsIndustryParentID], O.[GlobalTemplate], O.[Sequence], O.[CustomXML], O.[LastModifiedBy], O.[LastModifiedDate]
				FROM
				    [dbo].[NewsIndustry] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[NewsIndustryID] = PageIndex.[NewsIndustryID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[NewsIndustry] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="NewsIndustry_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NewsIndustry table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[NewsIndustry]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsIndustry_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the NewsIndustry table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[NewsIndustry] WITH (ROWLOCK) 
				WHERE
					[NewsIndustryID] = @NewsIndustryId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsIndustry_GetByNewsIndustryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsIndustry table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[NewsIndustry]
				WHERE
					[NewsIndustryID] = @NewsIndustryId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsIndustry_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the NewsIndustry table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsIndustryId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					)
				
				-- Get the identity value
				SET @NewsIndustryId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsIndustry_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the NewsIndustry table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
				WHERE
[NewsIndustryID] = @NewsIndustryId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsIndustry_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the NewsIndustry table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[NewsIndustry]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsIndustry_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the NewsIndustry table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsIndustryParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="AdvertiserBusinessType_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserBusinessType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdvertiserBusinessTypeID],
					[AdvertiserBusinessTypeName],
					[SiteID],
					[BusinessTypeParentID],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModifiedDate],
					[Sequence]
				FROM
					[dbo].[AdvertiserBusinessType]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="AdvertiserBusinessType_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserBusinessType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserBusinessTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AdvertiserBusinessTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AdvertiserBusinessTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserBusinessType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AdvertiserBusinessTypeID], O.[AdvertiserBusinessTypeName], O.[SiteID], O.[BusinessTypeParentID], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModifiedDate], O.[Sequence]
				FROM
				    [dbo].[AdvertiserBusinessType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AdvertiserBusinessTypeID] = PageIndex.[AdvertiserBusinessTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserBusinessType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="AdvertiserBusinessType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserBusinessType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserBusinessTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BusinessTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[AdvertiserBusinessType]
					(
					[AdvertiserBusinessTypeName]
					,[SiteID]
					,[BusinessTypeParentID]
					,[GlobalTemplate]
					,[LastModifiedBy]
					,[LastModifiedDate]
					,[Sequence]
					)
				VALUES
					(
					@AdvertiserBusinessTypeName
					,@SiteId
					,@BusinessTypeParentId
					,@GlobalTemplate
					,@LastModifiedBy
					,@LastModifiedDate
					,@Sequence
					)
				
				-- Get the identity value
				SET @AdvertiserBusinessTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserBusinessType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserBusinessType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserBusinessTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BusinessTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AdvertiserBusinessType]
				SET
					[AdvertiserBusinessTypeName] = @AdvertiserBusinessTypeName
					,[SiteID] = @SiteId
					,[BusinessTypeParentID] = @BusinessTypeParentId
					,[GlobalTemplate] = @GlobalTemplate
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModifiedDate] = @LastModifiedDate
					,[Sequence] = @Sequence
				WHERE
[AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserBusinessType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserBusinessType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[AdvertiserBusinessType] WITH (ROWLOCK) 
				WHERE
					[AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserBusinessType_GetByAdvertiserBusinessTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserBusinessType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdvertiserBusinessTypeID],
					[AdvertiserBusinessTypeName],
					[SiteID],
					[BusinessTypeParentID],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModifiedDate],
					[Sequence]
				FROM
					[dbo].[AdvertiserBusinessType]
				WHERE
					[AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdvertiserBusinessType_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserBusinessType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@BusinessTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserBusinessTypeID]
	, [AdvertiserBusinessTypeName]
	, [SiteID]
	, [BusinessTypeParentID]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModifiedDate]
	, [Sequence]
    FROM
	[dbo].[AdvertiserBusinessType]
    WHERE 
	 ([AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId OR @AdvertiserBusinessTypeId IS NULL)
	AND ([AdvertiserBusinessTypeName] = @AdvertiserBusinessTypeName OR @AdvertiserBusinessTypeName IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([BusinessTypeParentID] = @BusinessTypeParentId OR @BusinessTypeParentId IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserBusinessTypeID]
	, [AdvertiserBusinessTypeName]
	, [SiteID]
	, [BusinessTypeParentID]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModifiedDate]
	, [Sequence]
    FROM
	[dbo].[AdvertiserBusinessType]
    WHERE 
	 ([AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId AND @AdvertiserBusinessTypeId is not null)
	OR ([AdvertiserBusinessTypeName] = @AdvertiserBusinessTypeName AND @AdvertiserBusinessTypeName is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([BusinessTypeParentID] = @BusinessTypeParentId AND @BusinessTypeParentId is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="AdvertiserBusinessType_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserBusinessType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserBusinessTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AdvertiserBusinessTypeID] )
				SELECT TOP {3} [AdvertiserBusinessTypeID]
				FROM [dbo].[AdvertiserBusinessType] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AdvertiserBusinessTypeID], O.[AdvertiserBusinessTypeName], O.[SiteID], O.[BusinessTypeParentID], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModifiedDate], O.[Sequence]
				FROM
				    [dbo].[AdvertiserBusinessType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AdvertiserBusinessTypeID] = PageIndex.[AdvertiserBusinessTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[AdvertiserBusinessType] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="AdvertiserBusinessType_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserBusinessType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserBusinessType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserBusinessType_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserBusinessType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[AdvertiserBusinessType] WITH (ROWLOCK) 
				WHERE
					[AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserBusinessType_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserBusinessType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@BusinessTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					,[Sequence] = @Sequence
				WHERE
[AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserBusinessType_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserBusinessType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@BusinessTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					,@Sequence
					)
				
				-- Get the identity value
				SET @AdvertiserBusinessTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserBusinessType_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserBusinessType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[Sequence]
				FROM
					[dbo].[AdvertiserBusinessType]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserBusinessType_GetByAdvertiserBusinessTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserBusinessType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[Sequence]
				FROM
					[dbo].[AdvertiserBusinessType]
				WHERE
					[AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserBusinessType_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserBusinessType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@BusinessTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Sites_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Sites table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteID],
					[SiteName],
					[SiteURL],
					[SiteDescription],
					[SiteAdminLogo],
					[LastModified],
					[LastModifiedBy],
					[Live],
					[MobileEnabled],
					[MobileUrl],
					[SiteAdminLogoUrl]
				FROM
					[dbo].[Sites]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Sites_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Sites table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteID]'
				SET @SQL = @SQL + ' FROM [dbo].[Sites]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteID], O.[SiteName], O.[SiteURL], O.[SiteDescription], O.[SiteAdminLogo], O.[LastModified], O.[LastModifiedBy], O.[Live], O.[MobileEnabled], O.[MobileUrl], O.[SiteAdminLogoUrl]
				FROM
				    [dbo].[Sites] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteID] = PageIndex.[SiteID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Sites]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Sites_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Sites table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@SiteDescription" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SiteAdminLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Live" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MobileEnabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MobileUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteAdminLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Sites]
					(
					[SiteName]
					,[SiteURL]
					,[SiteDescription]
					,[SiteAdminLogo]
					,[LastModified]
					,[LastModifiedBy]
					,[Live]
					,[MobileEnabled]
					,[MobileUrl]
					,[SiteAdminLogoUrl]
					)
				VALUES
					(
					@SiteName
					,@SiteUrl
					,@SiteDescription
					,@SiteAdminLogo
					,@LastModified
					,@LastModifiedBy
					,@Live
					,@MobileEnabled
					,@MobileUrl
					,@SiteAdminLogoUrl
					)
				
				-- Get the identity value
				SET @SiteId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Sites_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Sites table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@SiteDescription" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SiteAdminLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Live" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MobileEnabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MobileUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteAdminLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Sites]
				SET
					[SiteName] = @SiteName
					,[SiteURL] = @SiteUrl
					,[SiteDescription] = @SiteDescription
					,[SiteAdminLogo] = @SiteAdminLogo
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
					,[Live] = @Live
					,[MobileEnabled] = @MobileEnabled
					,[MobileUrl] = @MobileUrl
					,[SiteAdminLogoUrl] = @SiteAdminLogoUrl
				WHERE
[SiteID] = @SiteId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Sites_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Sites table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Sites] WITH (ROWLOCK) 
				WHERE
					[SiteID] = @SiteId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Sites_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Sites table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteID],
					[SiteName],
					[SiteURL],
					[SiteDescription],
					[SiteAdminLogo],
					[LastModified],
					[LastModifiedBy],
					[Live],
					[MobileEnabled],
					[MobileUrl],
					[SiteAdminLogoUrl]
				FROM
					[dbo].[Sites]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Sites_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Sites table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteID],
					[SiteName],
					[SiteURL],
					[SiteDescription],
					[SiteAdminLogo],
					[LastModified],
					[LastModifiedBy],
					[Live],
					[MobileEnabled],
					[MobileUrl],
					[SiteAdminLogoUrl]
				FROM
					[dbo].[Sites]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Sites_GetByMobileUrl" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Sites table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MobileUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteID],
					[SiteName],
					[SiteURL],
					[SiteDescription],
					[SiteAdminLogo],
					[LastModified],
					[LastModifiedBy],
					[Live],
					[MobileEnabled],
					[MobileUrl],
					[SiteAdminLogoUrl]
				FROM
					[dbo].[Sites]
				WHERE
					[MobileUrl] = @MobileUrl
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Sites_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Sites table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SiteDescription" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SiteAdminLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Live" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MobileEnabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MobileUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteAdminLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteID]
	, [SiteName]
	, [SiteURL]
	, [SiteDescription]
	, [SiteAdminLogo]
	, [LastModified]
	, [LastModifiedBy]
	, [Live]
	, [MobileEnabled]
	, [MobileUrl]
	, [SiteAdminLogoUrl]
    FROM
	[dbo].[Sites]
    WHERE 
	 ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([SiteName] = @SiteName OR @SiteName IS NULL)
	AND ([SiteURL] = @SiteUrl OR @SiteUrl IS NULL)
	AND ([SiteDescription] = @SiteDescription OR @SiteDescription IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([Live] = @Live OR @Live IS NULL)
	AND ([MobileEnabled] = @MobileEnabled OR @MobileEnabled IS NULL)
	AND ([MobileUrl] = @MobileUrl OR @MobileUrl IS NULL)
	AND ([SiteAdminLogoUrl] = @SiteAdminLogoUrl OR @SiteAdminLogoUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteID]
	, [SiteName]
	, [SiteURL]
	, [SiteDescription]
	, [SiteAdminLogo]
	, [LastModified]
	, [LastModifiedBy]
	, [Live]
	, [MobileEnabled]
	, [MobileUrl]
	, [SiteAdminLogoUrl]
    FROM
	[dbo].[Sites]
    WHERE 
	 ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([SiteName] = @SiteName AND @SiteName is not null)
	OR ([SiteURL] = @SiteUrl AND @SiteUrl is not null)
	OR ([SiteDescription] = @SiteDescription AND @SiteDescription is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([Live] = @Live AND @Live is not null)
	OR ([MobileEnabled] = @MobileEnabled AND @MobileEnabled is not null)
	OR ([MobileUrl] = @MobileUrl AND @MobileUrl is not null)
	OR ([SiteAdminLogoUrl] = @SiteAdminLogoUrl AND @SiteAdminLogoUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Sites_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Sites table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteID] )
				SELECT TOP {3} [SiteID]
				FROM [dbo].[Sites] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteID], O.[SiteName], O.[SiteURL], O.[SiteDescription], O.[SiteAdminLogo], O.[LastModified], O.[LastModifiedBy], O.[Live], O.[MobileEnabled], O.[MobileUrl], O.[SiteAdminLogoUrl]
				FROM
				    [dbo].[Sites] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteID] = PageIndex.[SiteID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Sites] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Sites_Create"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SourceSiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
e of Error
 
				-- Raise an error with the details of the exception
				DECLARE @ErrMsg nvarchar(4000), @ErrSeverity INT
				SELECT @ErrMsg = ERROR_MESSAGE(),
				@ErrSeverity = ERROR_SEVERITY()
 
				RAISERROR(@ErrMsg, @ErrSeverity, 1)
 
		END CATCH
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Sites table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SiteDescription" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SiteAdminLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Live" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MobileEnabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MobileUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteAdminLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,@Live
					,@MobileEnabled
					,@MobileUrl
					,@SiteAdminLogoUrl
					)
				
				-- Get the identity value
				SET @SiteId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Sites table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[Live],
					[MobileEnabled],
					[MobileUrl],
					[SiteAdminLogoUrl]
				FROM
					[dbo].[Sites]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Sites table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[Live],
					[MobileEnabled],
					[MobileUrl],
					[SiteAdminLogoUrl]
				FROM
					[dbo].[Sites]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_GetByMobileUrl"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Sites table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MobileUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[Live],
					[MobileEnabled],
					[MobileUrl],
					[SiteAdminLogoUrl]
				FROM
					[dbo].[Sites]
				WHERE
					[MobileUrl] = @MobileUrl
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_FindSite"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT    
 Sites.SiteID, Sites.SiteName, Sites.SiteUrl, Sites.SiteDescription, Sites.SiteAdminLogo, Sites.SiteAdminLogoUrl, GlobalSettings.DefaultLanguageID, Live, 
	MobileEnabled, MobileUrl    
FROM     
 Sites INNER JOIN GlobalSettings     
  ON Sites.SiteID = GlobalSettings.SiteID    
WHERE       
 (Sites.[SiteID] = @SiteId OR @SiteId IS null)      
 AND (Sites.[SiteUrl] = @SiteUrl OR isNULL(@SiteUrl, '') = '')      
    
SELECT @@ROWCOUNT
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Sites table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SiteDescription" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SiteAdminLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Live" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MobileEnabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MobileUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteAdminLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,[Live] = @Live
					,[MobileEnabled] = @MobileEnabled
					,[MobileUrl] = @MobileUrl
					,[SiteAdminLogoUrl] = @SiteAdminLogoUrl
				WHERE
[SiteID] = @SiteId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_Remove"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ErrorMessage  
 ROLLBACK TRAN @TransactionName  
END CATCH  
  
   
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_GetPaging"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@pageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@pageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount    
  FROM   Sites Sites WITH(NOLOCK)  
  INNER JOIN @tmpSiteID SitesSearchResult ON Sites.SiteID = SitesSearchResult.SiteID  
  WHERE      SitesSearchResult.RowNumber >= @PageStart      
  AND        SitesSearchResult.RowNumber <= @PageEnd       
  ORDER BY   SitesSearchResult.RowNumber   
  
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Sites table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SiteDescription" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SiteAdminLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Live" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MobileEnabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MobileUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteAdminLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	OR ([Live] = @Live AND @Live is not null)
	OR ([MobileEnabled] = @MobileEnabled AND @MobileEnabled is not null)
	OR ([MobileUrl] = @MobileUrl AND @MobileUrl is not null)
	OR ([SiteAdminLogoUrl] = @SiteAdminLogoUrl AND @SiteAdminLogoUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_Copy"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FtpFolderLocation" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CopyGlobalSettings" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopyJobTemplates" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopySiteLocation" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopyProfessionRoles" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseCustomProfessionRole" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopySalaryTypes" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopyWorkTypes" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopyEducation" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopyAvailableStatus" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopyWebParts" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopyWidgets" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CopyEmailTemplates" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SelectedLanguages" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SelectedDynamicPages" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SelectedFiles" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
e of Error                          
                           
    -- Raise an error with the details of the exception                          
    DECLARE @ErrMsg nvarchar(4000), @ErrSeverity INT                          
    SELECT @ErrMsg = ERROR_MESSAGE(),                          
    @ErrSeverity = ERROR_SEVERITY()                          
                           
    RAISERROR(@ErrMsg, @ErrSeverity, 1)                          
                           
  END CATCH
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Sites table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Sites]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Sites table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Sites_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Sites table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Sites] WITH (ROWLOCK) 
				WHERE
					[SiteID] = @SiteId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="AdminUsers_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdminUsers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdminUserID],
					[AdminRoleID],
					[SiteID],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[LoginAttempts],
					[LastAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="AdminUsers_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdminUsers table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdminUserID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AdminUserID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AdminUserID]'
				SET @SQL = @SQL + ' FROM [dbo].[AdminUsers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AdminUserID], O.[AdminRoleID], O.[SiteID], O.[UserName], O.[UserPassword], O.[FirstName], O.[Surname], O.[Email], O.[LoginAttempts], O.[LastAttemptDate], O.[Status]
				FROM
				    [dbo].[AdminUsers] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AdminUserID] = PageIndex.[AdminUserID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdminUsers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="AdminUsers_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdminUsers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdminUserId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[AdminUsers]
					(
					[AdminRoleID]
					,[SiteID]
					,[UserName]
					,[UserPassword]
					,[FirstName]
					,[Surname]
					,[Email]
					,[LoginAttempts]
					,[LastAttemptDate]
					,[Status]
					)
				VALUES
					(
					@AdminRoleId
					,@SiteId
					,@UserName
					,@UserPassword
					,@FirstName
					,@Surname
					,@Email
					,@LoginAttempts
					,@LastAttemptDate
					,@Status
					)
				
				-- Get the identity value
				SET @AdminUserId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdminUsers_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdminUsers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AdminUsers]
				SET
					[AdminRoleID] = @AdminRoleId
					,[SiteID] = @SiteId
					,[UserName] = @UserName
					,[UserPassword] = @UserPassword
					,[FirstName] = @FirstName
					,[Surname] = @Surname
					,[Email] = @Email
					,[LoginAttempts] = @LoginAttempts
					,[LastAttemptDate] = @LastAttemptDate
					,[Status] = @Status
				WHERE
[AdminUserID] = @AdminUserId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdminUsers_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdminUsers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[AdminUsers] WITH (ROWLOCK) 
				WHERE
					[AdminUserID] = @AdminUserId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdminUsers_GetByAdminRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdminUserID],
					[AdminRoleID],
					[SiteID],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[LoginAttempts],
					[LastAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
				WHERE
					[AdminRoleID] = @AdminRoleId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdminUsers_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdminUserID],
					[AdminRoleID],
					[SiteID],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[LoginAttempts],
					[LastAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdminUsers_GetBySiteIdUserName" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminUsers table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdminUserID],
					[AdminRoleID],
					[SiteID],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[LoginAttempts],
					[LastAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
				WHERE
					[SiteID] = @SiteId
					AND [UserName] = @UserName
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdminUsers_GetByAdminUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminUsers table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdminUserID],
					[AdminRoleID],
					[SiteID],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[LoginAttempts],
					[LastAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
				WHERE
					[AdminUserID] = @AdminUserId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdminUsers_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdminUsers table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdminUserID]
	, [AdminRoleID]
	, [SiteID]
	, [UserName]
	, [UserPassword]
	, [FirstName]
	, [Surname]
	, [Email]
	, [LoginAttempts]
	, [LastAttemptDate]
	, [Status]
    FROM
	[dbo].[AdminUsers]
    WHERE 
	 ([AdminUserID] = @AdminUserId OR @AdminUserId IS NULL)
	AND ([AdminRoleID] = @AdminRoleId OR @AdminRoleId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([UserName] = @UserName OR @UserName IS NULL)
	AND ([UserPassword] = @UserPassword OR @UserPassword IS NULL)
	AND ([FirstName] = @FirstName OR @FirstName IS NULL)
	AND ([Surname] = @Surname OR @Surname IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([LoginAttempts] = @LoginAttempts OR @LoginAttempts IS NULL)
	AND ([LastAttemptDate] = @LastAttemptDate OR @LastAttemptDate IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdminUserID]
	, [AdminRoleID]
	, [SiteID]
	, [UserName]
	, [UserPassword]
	, [FirstName]
	, [Surname]
	, [Email]
	, [LoginAttempts]
	, [LastAttemptDate]
	, [Status]
    FROM
	[dbo].[AdminUsers]
    WHERE 
	 ([AdminUserID] = @AdminUserId AND @AdminUserId is not null)
	OR ([AdminRoleID] = @AdminRoleId AND @AdminRoleId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([UserName] = @UserName AND @UserName is not null)
	OR ([UserPassword] = @UserPassword AND @UserPassword is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([Surname] = @Surname AND @Surname is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([LoginAttempts] = @LoginAttempts AND @LoginAttempts is not null)
	OR ([LastAttemptDate] = @LastAttemptDate AND @LastAttemptDate is not null)
	OR ([Status] = @Status AND @Status is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="AdminUsers_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdminUsers table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdminUserID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AdminUserID] )
				SELECT TOP {3} [AdminUserID]
				FROM [dbo].[AdminUsers] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AdminUserID], O.[AdminRoleID], O.[SiteID], O.[UserName], O.[UserPassword], O.[FirstName], O.[Surname], O.[Email], O.[LoginAttempts], O.[LastAttemptDate], O.[Status]
				FROM
				    [dbo].[AdminUsers] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AdminUserID] = PageIndex.[AdminUserID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[AdminUsers] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="AdminUsers_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdminUsers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdminUserId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tAttemptDate
					,@Status
					)
				
				-- Get the identity value
				SET @AdminUserId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminUsers_GetByAdminUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminUsers table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
				WHERE
					[AdminUserID] = @AdminUserId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminUsers_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminUsers_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdminUsers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminUsers_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdminUsers table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdminUsers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminUsers_GetBySiteIdUserName"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminUsers table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
				WHERE
					[SiteID] = @SiteId
					AND [UserName] = @UserName
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminUsers_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdminUsers table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tAttemptDate is not null)
	OR ([Status] = @Status AND @Status is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminUsers_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdminUsers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[AdminUsers] WITH (ROWLOCK) 
				WHERE
					[AdminUserID] = @AdminUserId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminUsers_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdminUsers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tAttemptDate
					,[Status] = @Status
				WHERE
[AdminUserID] = @AdminUserId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdminUsers_GetByAdminRoleId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdminUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdminRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tAttemptDate],
					[Status]
				FROM
					[dbo].[AdminUsers]
				WHERE
					[AdminRoleID] = @AdminRoleId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="AdvertiserJobPricing_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserJobPricing table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdvertiserID],
					[JobItemsTypeID],
					[TotalAmount],
					[StartDate],
					[ExpiryDate],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[AdvertiserJobPricing]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="AdvertiserJobPricing_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserJobPricing table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserID] int, [JobItemsTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AdvertiserID], [JobItemsTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AdvertiserID], [JobItemsTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserJobPricing]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AdvertiserID], O.[JobItemsTypeID], O.[TotalAmount], O.[StartDate], O.[ExpiryDate], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[AdvertiserJobPricing] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AdvertiserID] = PageIndex.[AdvertiserID]
					AND O.[JobItemsTypeID] = PageIndex.[JobItemsTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserJobPricing]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="AdvertiserJobPricing_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserJobPricing table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@StartDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[AdvertiserJobPricing]
					(
					[AdvertiserID]
					,[JobItemsTypeID]
					,[TotalAmount]
					,[StartDate]
					,[ExpiryDate]
					,[LastModified]
					,[LastModifiedBy]
					)
				VALUES
					(
					@AdvertiserId
					,@JobItemsTypeId
					,@TotalAmount
					,@StartDate
					,@ExpiryDate
					,@LastModified
					,@LastModifiedBy
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobPricing_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserJobPricing table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalAdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalJobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@StartDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AdvertiserJobPricing]
				SET
					[AdvertiserID] = @AdvertiserId
					,[JobItemsTypeID] = @JobItemsTypeId
					,[TotalAmount] = @TotalAmount
					,[StartDate] = @StartDate
					,[ExpiryDate] = @ExpiryDate
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
				WHERE
[AdvertiserID] = @OriginalAdvertiserId 
AND [JobItemsTypeID] = @OriginalJobItemsTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobPricing_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserJobPricing table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[AdvertiserJobPricing] WITH (ROWLOCK) 
				WHERE
					[AdvertiserID] = @AdvertiserId
					AND [JobItemsTypeID] = @JobItemsTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobPricing_GetByAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobPricing table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserID],
					[JobItemsTypeID],
					[TotalAmount],
					[StartDate],
					[ExpiryDate],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[AdvertiserJobPricing]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobPricing_GetByJobItemsTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobPricing table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserID],
					[JobItemsTypeID],
					[TotalAmount],
					[StartDate],
					[ExpiryDate],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[AdvertiserJobPricing]
				WHERE
					[JobItemsTypeID] = @JobItemsTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobPricing_GetByAdvertiserIdJobItemsTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobPricing table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdvertiserID],
					[JobItemsTypeID],
					[TotalAmount],
					[StartDate],
					[ExpiryDate],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[AdvertiserJobPricing]
				WHERE
					[AdvertiserID] = @AdvertiserId
					AND [JobItemsTypeID] = @JobItemsTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobPricing_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserJobPricing table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@StartDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserID]
	, [JobItemsTypeID]
	, [TotalAmount]
	, [StartDate]
	, [ExpiryDate]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[AdvertiserJobPricing]
    WHERE 
	 ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([JobItemsTypeID] = @JobItemsTypeId OR @JobItemsTypeId IS NULL)
	AND ([TotalAmount] = @TotalAmount OR @TotalAmount IS NULL)
	AND ([StartDate] = @StartDate OR @StartDate IS NULL)
	AND ([ExpiryDate] = @ExpiryDate OR @ExpiryDate IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserID]
	, [JobItemsTypeID]
	, [TotalAmount]
	, [StartDate]
	, [ExpiryDate]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[AdvertiserJobPricing]
    WHERE 
	 ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([JobItemsTypeID] = @JobItemsTypeId AND @JobItemsTypeId is not null)
	OR ([TotalAmount] = @TotalAmount AND @TotalAmount is not null)
	OR ([StartDate] = @StartDate AND @StartDate is not null)
	OR ([ExpiryDate] = @ExpiryDate AND @ExpiryDate is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="AdvertiserJobPricing_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserJobPricing table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserID] int, [JobItemsTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AdvertiserID], [JobItemsTypeID] )
				SELECT TOP {3} [AdvertiserID], [JobItemsTypeID]
				FROM [dbo].[AdvertiserJobPricing] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AdvertiserID], O.[JobItemsTypeID], O.[TotalAmount], O.[StartDate], O.[ExpiryDate], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[AdvertiserJobPricing] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AdvertiserID] = PageIndex.[AdvertiserID]
				    AND O.[JobItemsTypeID] = PageIndex.[JobItemsTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[AdvertiserJobPricing] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="AdvertiserJobPricing_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserJobPricing table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@StartDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					)
				
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobPricing_CustomGetByAdvertiserIDJobItemsTypeID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemsTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
			FROM AdvertiserJobPricing NOLOCK
			WHERE AdvertiserID = @AdvertiserID AND JobItemsTypeID = @JobItemsTypeID
	END
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobPricing_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserJobPricing table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[AdvertiserJobPricing]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobPricing_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserJobPricing table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserJobPricing]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobPricing_GetByJobItemsTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobPricing table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[AdvertiserJobPricing]
				WHERE
					[JobItemsTypeID] = @JobItemsTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobPricing_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobPricing table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[AdvertiserJobPricing]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobPricing_GetByAdvertiserIdJobItemsTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobPricing table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[AdvertiserJobPricing]
				WHERE
					[AdvertiserID] = @AdvertiserId
					AND [JobItemsTypeID] = @JobItemsTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobPricing_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserJobPricing table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@StartDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobPricing_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserJobPricing table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[AdvertiserJobPricing] WITH (ROWLOCK) 
				WHERE
					[AdvertiserID] = @AdvertiserId
					AND [JobItemsTypeID] = @JobItemsTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobPricing_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserJobPricing table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OriginalAdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OriginalJobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@StartDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				WHERE
[AdvertiserID] = @OriginalAdvertiserId 
AND [JobItemsTypeID] = @OriginalJobItemsTypeId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="NewsCategories_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the NewsCategories table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[NewsCategoryID],
					[NewsCategoryName],
					[SiteID],
					[Valid],
					[Sequence],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[LastModified],
					[LastModifiedBy],
					[PageFriendlyName],
					[CustomXML]
				FROM
					[dbo].[NewsCategories]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="NewsCategories_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NewsCategories table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [NewsCategoryID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([NewsCategoryID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [NewsCategoryID]'
				SET @SQL = @SQL + ' FROM [dbo].[NewsCategories]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[NewsCategoryID], O.[NewsCategoryName], O.[SiteID], O.[Valid], O.[Sequence], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[LastModified], O.[LastModifiedBy], O.[PageFriendlyName], O.[CustomXML]
				FROM
				    [dbo].[NewsCategories] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[NewsCategoryID] = PageIndex.[NewsCategoryID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[NewsCategories]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="NewsCategories_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the NewsCategories table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsCategoryName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[NewsCategories]
					(
					[NewsCategoryName]
					,[SiteID]
					,[Valid]
					,[Sequence]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					,[LastModified]
					,[LastModifiedBy]
					,[PageFriendlyName]
					,[CustomXML]
					)
				VALUES
					(
					@NewsCategoryName
					,@SiteId
					,@Valid
					,@Sequence
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					,@LastModified
					,@LastModifiedBy
					,@PageFriendlyName
					,@CustomXml
					)
				
				-- Get the identity value
				SET @NewsCategoryId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsCategories_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the NewsCategories table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsCategoryName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[NewsCategories]
				SET
					[NewsCategoryName] = @NewsCategoryName
					,[SiteID] = @SiteId
					,[Valid] = @Valid
					,[Sequence] = @Sequence
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
					,[PageFriendlyName] = @PageFriendlyName
					,[CustomXML] = @CustomXml
				WHERE
[NewsCategoryID] = @NewsCategoryId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsCategories_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the NewsCategories table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[NewsCategories] WITH (ROWLOCK) 
				WHERE
					[NewsCategoryID] = @NewsCategoryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsCategories_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsCategories table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[NewsCategoryID],
					[NewsCategoryName],
					[SiteID],
					[Valid],
					[Sequence],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[LastModified],
					[LastModifiedBy],
					[PageFriendlyName],
					[CustomXML]
				FROM
					[dbo].[NewsCategories]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsCategories_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsCategories table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[NewsCategoryID],
					[NewsCategoryName],
					[SiteID],
					[Valid],
					[Sequence],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[LastModified],
					[LastModifiedBy],
					[PageFriendlyName],
					[CustomXML]
				FROM
					[dbo].[NewsCategories]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="NewsCategories_GetByNewsCategoryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsCategories table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[NewsCategoryID],
					[NewsCategoryName],
					[SiteID],
					[Valid],
					[Sequence],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[LastModified],
					[LastModifiedBy],
					[PageFriendlyName],
					[CustomXML]
				FROM
					[dbo].[NewsCategories]
				WHERE
					[NewsCategoryID] = @NewsCategoryId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="NewsCategories_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the NewsCategories table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [NewsCategoryID]
	, [NewsCategoryName]
	, [SiteID]
	, [Valid]
	, [Sequence]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [LastModified]
	, [LastModifiedBy]
	, [PageFriendlyName]
	, [CustomXML]
    FROM
	[dbo].[NewsCategories]
    WHERE 
	 ([NewsCategoryID] = @NewsCategoryId OR @NewsCategoryId IS NULL)
	AND ([NewsCategoryName] = @NewsCategoryName OR @NewsCategoryName IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([PageFriendlyName] = @PageFriendlyName OR @PageFriendlyName IS NULL)
	AND ([CustomXML] = @CustomXml OR @CustomXml IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [NewsCategoryID]
	, [NewsCategoryName]
	, [SiteID]
	, [Valid]
	, [Sequence]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [LastModified]
	, [LastModifiedBy]
	, [PageFriendlyName]
	, [CustomXML]
    FROM
	[dbo].[NewsCategories]
    WHERE 
	 ([NewsCategoryID] = @NewsCategoryId AND @NewsCategoryId is not null)
	OR ([NewsCategoryName] = @NewsCategoryName AND @NewsCategoryName is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([PageFriendlyName] = @PageFriendlyName AND @PageFriendlyName is not null)
	OR ([CustomXML] = @CustomXml AND @CustomXml is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="NewsCategories_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NewsCategories table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [NewsCategoryID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [NewsCategoryID] )
				SELECT TOP {3} [NewsCategoryID]
				FROM [dbo].[NewsCategories] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[NewsCategoryID], O.[NewsCategoryName], O.[SiteID], O.[Valid], O.[Sequence], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[LastModified], O.[LastModifiedBy], O.[PageFriendlyName], O.[CustomXML]
				FROM
				    [dbo].[NewsCategories] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[NewsCategoryID] = PageIndex.[NewsCategoryID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[NewsCategories] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="NewsCategories_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the NewsCategories table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,@PageFriendlyName
					,@CustomXml
					)
				
				-- Get the identity value
				SET @NewsCategoryId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsCategories_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsCategories table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[PageFriendlyName],
					[CustomXML]
				FROM
					[dbo].[NewsCategories]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsCategories_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the NewsCategories table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[PageFriendlyName],
					[CustomXML]
				FROM
					[dbo].[NewsCategories]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsCategories_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the NewsCategories table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[NewsCategories]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsCategories_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the NewsCategories table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,[PageFriendlyName] = @PageFriendlyName
					,[CustomXML] = @CustomXml
				WHERE
[NewsCategoryID] = @NewsCategoryId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsCategories_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the NewsCategories table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	OR ([PageFriendlyName] = @PageFriendlyName AND @PageFriendlyName is not null)
	OR ([CustomXML] = @CustomXml AND @CustomXml is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsCategories_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the NewsCategories table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[NewsCategories] WITH (ROWLOCK) 
				WHERE
					[NewsCategoryID] = @NewsCategoryId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsCategories_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsCategories table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="NewsCategories_GetByNewsCategoryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the NewsCategories table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[PageFriendlyName],
					[CustomXML]
				FROM
					[dbo].[NewsCategories]
				WHERE
					[NewsCategoryID] = @NewsCategoryId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="DefaultResources_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DefaultResources table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DefaultResourceID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[ResourceDescription],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[DefaultResources]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DefaultResources_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DefaultResources table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DefaultResourceID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([DefaultResourceID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [DefaultResourceID]'
				SET @SQL = @SQL + ' FROM [dbo].[DefaultResources]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[DefaultResourceID], O.[ResourceCode], O.[ResourceFileID], O.[ResourceText], O.[ResourceDescription], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[DefaultResources] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[DefaultResourceID] = PageIndex.[DefaultResourceID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DefaultResources]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="DefaultResources_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DefaultResources table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultResourceId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ResourceDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[DefaultResources]
					(
					[ResourceCode]
					,[ResourceFileID]
					,[ResourceText]
					,[ResourceDescription]
					,[LastModified]
					,[LastModifiedBy]
					)
				VALUES
					(
					@ResourceCode
					,@ResourceFileId
					,@ResourceText
					,@ResourceDescription
					,@LastModified
					,@LastModifiedBy
					)
				
				-- Get the identity value
				SET @DefaultResourceId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DefaultResources_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DefaultResources table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ResourceDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DefaultResources]
				SET
					[ResourceCode] = @ResourceCode
					,[ResourceFileID] = @ResourceFileId
					,[ResourceText] = @ResourceText
					,[ResourceDescription] = @ResourceDescription
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
				WHERE
[DefaultResourceID] = @DefaultResourceId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DefaultResources_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DefaultResources table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[DefaultResources] WITH (ROWLOCK) 
				WHERE
					[DefaultResourceID] = @DefaultResourceId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DefaultResources_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DefaultResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DefaultResourceID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[ResourceDescription],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[DefaultResources]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DefaultResources_GetByResourceFileId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DefaultResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DefaultResourceID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[ResourceDescription],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[DefaultResources]
				WHERE
					[ResourceFileID] = @ResourceFileId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DefaultResources_GetByResourceCode" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DefaultResources table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DefaultResourceID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[ResourceDescription],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[DefaultResources]
				WHERE
					[ResourceCode] = @ResourceCode
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DefaultResources_GetByDefaultResourceId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DefaultResources table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DefaultResourceID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[ResourceDescription],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[DefaultResources]
				WHERE
					[DefaultResourceID] = @DefaultResourceId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DefaultResources_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DefaultResources table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ResourceDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DefaultResourceID]
	, [ResourceCode]
	, [ResourceFileID]
	, [ResourceText]
	, [ResourceDescription]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[DefaultResources]
    WHERE 
	 ([DefaultResourceID] = @DefaultResourceId OR @DefaultResourceId IS NULL)
	AND ([ResourceCode] = @ResourceCode OR @ResourceCode IS NULL)
	AND ([ResourceFileID] = @ResourceFileId OR @ResourceFileId IS NULL)
	AND ([ResourceText] = @ResourceText OR @ResourceText IS NULL)
	AND ([ResourceDescription] = @ResourceDescription OR @ResourceDescription IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DefaultResourceID]
	, [ResourceCode]
	, [ResourceFileID]
	, [ResourceText]
	, [ResourceDescription]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[DefaultResources]
    WHERE 
	 ([DefaultResourceID] = @DefaultResourceId AND @DefaultResourceId is not null)
	OR ([ResourceCode] = @ResourceCode AND @ResourceCode is not null)
	OR ([ResourceFileID] = @ResourceFileId AND @ResourceFileId is not null)
	OR ([ResourceText] = @ResourceText AND @ResourceText is not null)
	OR ([ResourceDescription] = @ResourceDescription AND @ResourceDescription is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="DefaultResources_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DefaultResources table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DefaultResourceID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [DefaultResourceID] )
				SELECT TOP {3} [DefaultResourceID]
				FROM [dbo].[DefaultResources] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[DefaultResourceID], O.[ResourceCode], O.[ResourceFileID], O.[ResourceText], O.[ResourceDescription], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[DefaultResources] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[DefaultResourceID] = PageIndex.[DefaultResourceID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[DefaultResources] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="DefaultResources_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DefaultResources table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultResourceId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ResourceDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					)
				
				-- Get the identity value
				SET @DefaultResourceId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DefaultResources_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DefaultResources table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[DefaultResources]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DefaultResources_GetByResourceCode"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DefaultResources table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[DefaultResources]
				WHERE
					[ResourceCode] = @ResourceCode
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DefaultResources_GetByDefaultResourceId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DefaultResources table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[DefaultResources]
				WHERE
					[DefaultResourceID] = @DefaultResourceId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DefaultResources_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DefaultResources table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ResourceDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				WHERE
[DefaultResourceID] = @DefaultResourceId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DefaultResources_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DefaultResources table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ResourceDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DefaultResources_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DefaultResources table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[DefaultResources] WITH (ROWLOCK) 
				WHERE
					[DefaultResourceID] = @DefaultResourceId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DefaultResources_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DefaultResources table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DefaultResources]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DefaultResources_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DefaultResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DefaultResources_GetByResourceFileId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DefaultResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[DefaultResources]
				WHERE
					[ResourceFileID] = @ResourceFileId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Countries_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Countries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CountryID],
					[CountryName],
					[Abbr],
					[Valid],
					[Sequence],
					[Currency]
				FROM
					[dbo].[Countries]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Countries_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Countries table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CountryID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([CountryID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [CountryID]'
				SET @SQL = @SQL + ' FROM [dbo].[Countries]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[CountryID], O.[CountryName], O.[Abbr], O.[Valid], O.[Sequence], O.[Currency]
				FROM
				    [dbo].[Countries] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[CountryID] = PageIndex.[CountryID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Countries]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Countries_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Countries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Abbr" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Countries]
					(
					[CountryName]
					,[Abbr]
					,[Valid]
					,[Sequence]
					,[Currency]
					)
				VALUES
					(
					@CountryName
					,@Abbr
					,@Valid
					,@Sequence
					,@Currency
					)
				
				-- Get the identity value
				SET @CountryId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Countries_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Countries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Abbr" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Countries]
				SET
					[CountryName] = @CountryName
					,[Abbr] = @Abbr
					,[Valid] = @Valid
					,[Sequence] = @Sequence
					,[Currency] = @Currency
				WHERE
[CountryID] = @CountryId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Countries_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Countries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Countries] WITH (ROWLOCK) 
				WHERE
					[CountryID] = @CountryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Countries_GetByCountryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Countries table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CountryID],
					[CountryName],
					[Abbr],
					[Valid],
					[Sequence],
					[Currency]
				FROM
					[dbo].[Countries]
				WHERE
					[CountryID] = @CountryId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Countries_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Countries table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Abbr" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CountryID]
	, [CountryName]
	, [Abbr]
	, [Valid]
	, [Sequence]
	, [Currency]
    FROM
	[dbo].[Countries]
    WHERE 
	 ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([CountryName] = @CountryName OR @CountryName IS NULL)
	AND ([Abbr] = @Abbr OR @Abbr IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([Currency] = @Currency OR @Currency IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CountryID]
	, [CountryName]
	, [Abbr]
	, [Valid]
	, [Sequence]
	, [Currency]
    FROM
	[dbo].[Countries]
    WHERE 
	 ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([CountryName] = @CountryName AND @CountryName is not null)
	OR ([Abbr] = @Abbr AND @Abbr is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Currency] = @Currency AND @Currency is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Countries_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Countries table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CountryID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [CountryID] )
				SELECT TOP {3} [CountryID]
				FROM [dbo].[Countries] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[CountryID], O.[CountryName], O.[Abbr], O.[Valid], O.[Sequence], O.[Currency]
				FROM
				    [dbo].[Countries] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[CountryID] = PageIndex.[CountryID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Countries] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Countries_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Countries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Abbr" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Countries]
					(
					[CountryName]
					,[Abbr]
					,[Valid]
					,[Sequence]
					,[Currency]
					)
				VALUES
					(
					@CountryName
					,@Abbr
					,@Valid
					,@Sequence
					,@Currency
					)
				
				-- Get the identity value
				SET @CountryId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Countries_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Countries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[CountryID],
					[CountryName],
					[Abbr],
					[Valid],
					[Sequence],
					[Currency]
				FROM
					[dbo].[Countries]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Countries_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Countries table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Countries]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Countries_GetSiteTree"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SiteCountryFriendlyUrl  
FROM @Countries   
ORDER BY CountryName, SiteCountryName  
    
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Countries_GetByCountryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Countries table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[CountryID],
					[CountryName],
					[Abbr],
					[Valid],
					[Sequence],
					[Currency]
				FROM
					[dbo].[Countries]
				WHERE
					[CountryID] = @CountryId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Countries_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Countries table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Abbr" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CountryID]
	, [CountryName]
	, [Abbr]
	, [Valid]
	, [Sequence]
	, [Currency]
    FROM
	[dbo].[Countries]
    WHERE 
	 ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([CountryName] = @CountryName OR @CountryName IS NULL)
	AND ([Abbr] = @Abbr OR @Abbr IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([Currency] = @Currency OR @Currency IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CountryID]
	, [CountryName]
	, [Abbr]
	, [Valid]
	, [Sequence]
	, [Currency]
    FROM
	[dbo].[Countries]
    WHERE 
	 ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([CountryName] = @CountryName AND @CountryName is not null)
	OR ([Abbr] = @Abbr AND @Abbr is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Currency] = @Currency AND @Currency is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Countries_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Countries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Countries] WITH (ROWLOCK) 
				WHERE
					[CountryID] = @CountryId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Countries_GetDetailWithSite"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
Currency
FROM @Countries     
ORDER BY CountryName, SiteCountryName    
      
END 

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Countries_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Countries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Abbr" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Countries]
				SET
					[CountryName] = @CountryName
					,[Abbr] = @Abbr
					,[Valid] = @Valid
					,[Sequence] = @Sequence
					,[Currency] = @Currency
				WHERE
[CountryID] = @CountryId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="AdvertiserAccountType_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserAccountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdvertiserAccountTypeID],
					[AdvertiserAccountTypeName]
				FROM
					[dbo].[AdvertiserAccountType]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="AdvertiserAccountType_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserAccountType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserAccountTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AdvertiserAccountTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AdvertiserAccountTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserAccountType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AdvertiserAccountTypeID], O.[AdvertiserAccountTypeName]
				FROM
				    [dbo].[AdvertiserAccountType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AdvertiserAccountTypeID] = PageIndex.[AdvertiserAccountTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserAccountType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="AdvertiserAccountType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserAccountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserAccountTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[AdvertiserAccountType]
					(
					[AdvertiserAccountTypeName]
					)
				VALUES
					(
					@AdvertiserAccountTypeName
					)
				
				-- Get the identity value
				SET @AdvertiserAccountTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserAccountType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserAccountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserAccountTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AdvertiserAccountType]
				SET
					[AdvertiserAccountTypeName] = @AdvertiserAccountTypeName
				WHERE
[AdvertiserAccountTypeID] = @AdvertiserAccountTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserAccountType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserAccountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[AdvertiserAccountType] WITH (ROWLOCK) 
				WHERE
					[AdvertiserAccountTypeID] = @AdvertiserAccountTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserAccountType_GetByAdvertiserAccountTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserAccountType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdvertiserAccountTypeID],
					[AdvertiserAccountTypeName]
				FROM
					[dbo].[AdvertiserAccountType]
				WHERE
					[AdvertiserAccountTypeID] = @AdvertiserAccountTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdvertiserAccountType_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserAccountType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserAccountTypeID]
	, [AdvertiserAccountTypeName]
    FROM
	[dbo].[AdvertiserAccountType]
    WHERE 
	 ([AdvertiserAccountTypeID] = @AdvertiserAccountTypeId OR @AdvertiserAccountTypeId IS NULL)
	AND ([AdvertiserAccountTypeName] = @AdvertiserAccountTypeName OR @AdvertiserAccountTypeName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserAccountTypeID]
	, [AdvertiserAccountTypeName]
    FROM
	[dbo].[AdvertiserAccountType]
    WHERE 
	 ([AdvertiserAccountTypeID] = @AdvertiserAccountTypeId AND @AdvertiserAccountTypeId is not null)
	OR ([AdvertiserAccountTypeName] = @AdvertiserAccountTypeName AND @AdvertiserAccountTypeName is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="AdvertiserAccountType_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserAccountType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserAccountTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AdvertiserAccountTypeID] )
				SELECT TOP {3} [AdvertiserAccountTypeID]
				FROM [dbo].[AdvertiserAccountType] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AdvertiserAccountTypeID], O.[AdvertiserAccountTypeName]
				FROM
				    [dbo].[AdvertiserAccountType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AdvertiserAccountTypeID] = PageIndex.[AdvertiserAccountTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[AdvertiserAccountType] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="AdvertiserAccountType_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserAccountType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserAccountType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountType_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserAccountType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[AdvertiserAccountType] WITH (ROWLOCK) 
				WHERE
					[AdvertiserAccountTypeID] = @AdvertiserAccountTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountType_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserAccountType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[AdvertiserAccountType]
				SET
					[AdvertiserAccountTypeName] = @AdvertiserAccountTypeName
				WHERE
[AdvertiserAccountTypeID] = @AdvertiserAccountTypeId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountType_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserAccountType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[AdvertiserAccountType]
					(
					[AdvertiserAccountTypeName]
					)
				VALUES
					(
					@AdvertiserAccountTypeName
					)
				
				-- Get the identity value
				SET @AdvertiserAccountTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountType_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserAccountType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AdvertiserAccountTypeID],
					[AdvertiserAccountTypeName]
				FROM
					[dbo].[AdvertiserAccountType]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountType_GetByAdvertiserAccountTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserAccountType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AdvertiserAccountTypeID],
					[AdvertiserAccountTypeName]
				FROM
					[dbo].[AdvertiserAccountType]
				WHERE
					[AdvertiserAccountTypeID] = @AdvertiserAccountTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountType_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserAccountType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserAccountTypeID]
	, [AdvertiserAccountTypeName]
    FROM
	[dbo].[AdvertiserAccountType]
    WHERE 
	 ([AdvertiserAccountTypeID] = @AdvertiserAccountTypeId OR @AdvertiserAccountTypeId IS NULL)
	AND ([AdvertiserAccountTypeName] = @AdvertiserAccountTypeName OR @AdvertiserAccountTypeName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserAccountTypeID]
	, [AdvertiserAccountTypeName]
    FROM
	[dbo].[AdvertiserAccountType]
    WHERE 
	 ([AdvertiserAccountTypeID] = @AdvertiserAccountTypeId AND @AdvertiserAccountTypeId is not null)
	OR ([AdvertiserAccountTypeName] = @AdvertiserAccountTypeName AND @AdvertiserAccountTypeName is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Roles_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Roles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[RoleID],
					[ProfessionID],
					[RoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription]
				FROM
					[dbo].[Roles]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Roles_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Roles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [RoleID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([RoleID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [RoleID]'
				SET @SQL = @SQL + ' FROM [dbo].[Roles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[RoleID], O.[ProfessionID], O.[RoleName], O.[Valid], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription]
				FROM
				    [dbo].[Roles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[RoleID] = PageIndex.[RoleID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Roles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Roles_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Roles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Roles]
					(
					[ProfessionID]
					,[RoleName]
					,[Valid]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					)
				VALUES
					(
					@ProfessionId
					,@RoleName
					,@Valid
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					)
				
				-- Get the identity value
				SET @RoleId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Roles_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Roles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Roles]
				SET
					[ProfessionID] = @ProfessionId
					,[RoleName] = @RoleName
					,[Valid] = @Valid
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
				WHERE
[RoleID] = @RoleId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Roles_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Roles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Roles] WITH (ROWLOCK) 
				WHERE
					[RoleID] = @RoleId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Roles_GetByProfessionIdRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Roles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RoleID],
					[ProfessionID],
					[RoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription]
				FROM
					[dbo].[Roles]
				WHERE
					[ProfessionID] = @ProfessionId
					AND [RoleID] = @RoleId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Roles_GetByProfessionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Roles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RoleID],
					[ProfessionID],
					[RoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription]
				FROM
					[dbo].[Roles]
				WHERE
					[ProfessionID] = @ProfessionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Roles_GetByRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Roles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RoleID],
					[ProfessionID],
					[RoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription]
				FROM
					[dbo].[Roles]
				WHERE
					[RoleID] = @RoleId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Roles_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Roles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [RoleID]
	, [ProfessionID]
	, [RoleName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
    FROM
	[dbo].[Roles]
    WHERE 
	 ([RoleID] = @RoleId OR @RoleId IS NULL)
	AND ([ProfessionID] = @ProfessionId OR @ProfessionId IS NULL)
	AND ([RoleName] = @RoleName OR @RoleName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [RoleID]
	, [ProfessionID]
	, [RoleName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
    FROM
	[dbo].[Roles]
    WHERE 
	 ([RoleID] = @RoleId AND @RoleId is not null)
	OR ([ProfessionID] = @ProfessionId AND @ProfessionId is not null)
	OR ([RoleName] = @RoleName AND @RoleName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Roles_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Roles table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [RoleID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [RoleID] )
				SELECT TOP {3} [RoleID]
				FROM [dbo].[Roles] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[RoleID], O.[ProfessionID], O.[RoleName], O.[Valid], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription]
				FROM
				    [dbo].[Roles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[RoleID] = PageIndex.[RoleID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Roles] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Roles_GetSiteTree"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
MetaDescription
FROM @Roles         
ORDER BY Sequence, RoleName, SiteRoleName          
          
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Roles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Roles]
					(
					[ProfessionID]
					,[RoleName]
					,[Valid]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					)
				VALUES
					(
					@ProfessionId
					,@RoleName
					,@Valid
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					)
				
				-- Get the identity value
				SET @RoleId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_GetByProfessionId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Roles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[RoleID],
					[ProfessionID],
					[RoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription]
				FROM
					[dbo].[Roles]
				WHERE
					[ProfessionID] = @ProfessionId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Roles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[RoleID],
					[ProfessionID],
					[RoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription]
				FROM
					[dbo].[Roles]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Roles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Roles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_CustomBulkInsert"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@XMLText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
T(N)  
  
DECLARE @id INT  
DECLARE @name NVARCHAR(255)  
DECLARE @friendlyurl VARCHAR(255)  
DECLARE @professionid INT  
DECLARE @action VARCHAR(20)  
  
DECLARE db_cursor CURSOR FOR    
SELECT id, name, friendlyurl, professionid, [action]  
FROM @tmpTable  
  
OPEN db_cursor     
FETCH NEXT FROM db_cursor INTO @id, @name, @friendlyurl, @professionid, @action     
  
WHILE @@FETCH_STATUS = 0     
BEGIN     
 DECLARE @NewRoleID INT  
 DECLARE @NewSiteRoleID INT  
    
      IF  @action = 'New'   
      BEGIN  
  EXEC Roles_Insert @RoleId = @NewRoleID OUTPUT,  
       @ProfessionId = @professionid,  
       @RoleName = @name,  
       @Valid =1,  
       @MetaTitle = @name,  
       @MetaKeywords = @name,  
       @MetaDescription  = @name  
    
  EXEC SiteRoles_Insert @SiteRoleId = @NewSiteRoleID,  
        @SiteId = @SiteId,  
        @RoleId = @NewRoleID,  
        @SiteRoleName = @name,  
        @Valid = 1,  
        @MetaTitle = @name,  
        @MetaKeywords = @name,  
        @MetaDescription = @name,  
        @Sequence = 0,  
        @SiteRoleFriendlyUrl = @friendlyurl,  
        @TotalJobs = 0,  
        @CanonicalUrl = ''  
      END  
        
      FETCH NEXT FROM db_cursor INTO @id, @name, @friendlyurl, @professionid, @action     
END     
  
CLOSE db_cursor     
DEALLOCATE db_cursor  
  
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Roles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Roles]
				SET
					[ProfessionID] = @ProfessionId
					,[RoleName] = @RoleName
					,[Valid] = @Valid
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
				WHERE
[RoleID] = @RoleId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Roles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [RoleID]
	, [ProfessionID]
	, [RoleName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
    FROM
	[dbo].[Roles]
    WHERE 
	 ([RoleID] = @RoleId OR @RoleId IS NULL)
	AND ([ProfessionID] = @ProfessionId OR @ProfessionId IS NULL)
	AND ([RoleName] = @RoleName OR @RoleName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [RoleID]
	, [ProfessionID]
	, [RoleName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
    FROM
	[dbo].[Roles]
    WHERE 
	 ([RoleID] = @RoleId AND @RoleId is not null)
	OR ([ProfessionID] = @ProfessionId AND @ProfessionId is not null)
	OR ([RoleName] = @RoleName AND @RoleName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Roles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Roles] WITH (ROWLOCK) 
				WHERE
					[RoleID] = @RoleId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_GetDetailWithSite"  skip="true">
			<comment><![CDATA[

]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SiteRoleFriendlyUrl,  
   
 CanonicalUrl    
FROM @Roles     
ORDER BY Sequence, RoleName, SiteRoleName    
      
END   



			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_GetByRoleId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Roles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[RoleID],
					[ProfessionID],
					[RoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription]
				FROM
					[dbo].[Roles]
				WHERE
					[RoleID] = @RoleId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Roles_GetByProfessionIdRoleId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Roles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[RoleID],
					[ProfessionID],
					[RoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription]
				FROM
					[dbo].[Roles]
				WHERE
					[ProfessionID] = @ProfessionId
					AND [RoleID] = @RoleId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="RelatedDynamicPages_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the RelatedDynamicPages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DynamicPageID],
					[RelatedDynamicPageID],
					[Sequence]
				FROM
					[dbo].[RelatedDynamicPages]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="RelatedDynamicPages_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the RelatedDynamicPages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageID] int, [RelatedDynamicPageID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([DynamicPageID], [RelatedDynamicPageID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [DynamicPageID], [RelatedDynamicPageID]'
				SET @SQL = @SQL + ' FROM [dbo].[RelatedDynamicPages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[DynamicPageID], O.[RelatedDynamicPageID], O.[Sequence]
				FROM
				    [dbo].[RelatedDynamicPages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[DynamicPageID] = PageIndex.[DynamicPageID]
					AND O.[RelatedDynamicPageID] = PageIndex.[RelatedDynamicPageID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[RelatedDynamicPages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="RelatedDynamicPages_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the RelatedDynamicPages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[RelatedDynamicPages]
					(
					[DynamicPageID]
					,[RelatedDynamicPageID]
					,[Sequence]
					)
				VALUES
					(
					@DynamicPageId
					,@RelatedDynamicPageId
					,@Sequence
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RelatedDynamicPages_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the RelatedDynamicPages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalRelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[RelatedDynamicPages]
				SET
					[DynamicPageID] = @DynamicPageId
					,[RelatedDynamicPageID] = @RelatedDynamicPageId
					,[Sequence] = @Sequence
				WHERE
[DynamicPageID] = @OriginalDynamicPageId 
AND [RelatedDynamicPageID] = @OriginalRelatedDynamicPageId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RelatedDynamicPages_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the RelatedDynamicPages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[RelatedDynamicPages] WITH (ROWLOCK) 
				WHERE
					[DynamicPageID] = @DynamicPageId
					AND [RelatedDynamicPageID] = @RelatedDynamicPageId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RelatedDynamicPages_GetByDynamicPageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RelatedDynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[RelatedDynamicPageID],
					[Sequence]
				FROM
					[dbo].[RelatedDynamicPages]
				WHERE
					[DynamicPageID] = @DynamicPageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RelatedDynamicPages_GetByRelatedDynamicPageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RelatedDynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[RelatedDynamicPageID],
					[Sequence]
				FROM
					[dbo].[RelatedDynamicPages]
				WHERE
					[RelatedDynamicPageID] = @RelatedDynamicPageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RelatedDynamicPages_GetByDynamicPageIdRelatedDynamicPageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RelatedDynamicPages table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageID],
					[RelatedDynamicPageID],
					[Sequence]
				FROM
					[dbo].[RelatedDynamicPages]
				WHERE
					[DynamicPageID] = @DynamicPageId
					AND [RelatedDynamicPageID] = @RelatedDynamicPageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="RelatedDynamicPages_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the RelatedDynamicPages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageID]
	, [RelatedDynamicPageID]
	, [Sequence]
    FROM
	[dbo].[RelatedDynamicPages]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId OR @DynamicPageId IS NULL)
	AND ([RelatedDynamicPageID] = @RelatedDynamicPageId OR @RelatedDynamicPageId IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageID]
	, [RelatedDynamicPageID]
	, [Sequence]
    FROM
	[dbo].[RelatedDynamicPages]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId AND @DynamicPageId is not null)
	OR ([RelatedDynamicPageID] = @RelatedDynamicPageId AND @RelatedDynamicPageId is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="RelatedDynamicPages_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the RelatedDynamicPages table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageID] int, [RelatedDynamicPageID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [DynamicPageID], [RelatedDynamicPageID] )
				SELECT TOP {3} [DynamicPageID], [RelatedDynamicPageID]
				FROM [dbo].[RelatedDynamicPages] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[DynamicPageID], O.[RelatedDynamicPageID], O.[Sequence]
				FROM
				    [dbo].[RelatedDynamicPages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[DynamicPageID] = PageIndex.[DynamicPageID]
				    AND O.[RelatedDynamicPageID] = PageIndex.[RelatedDynamicPageID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[RelatedDynamicPages] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="RelatedDynamicPages_CustomGetByDynamicPageID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@DynamicPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN  
 DECLARE @TempTable TABLE(DynamicPageID INT, RelatedDynamicPageID INT, Sequence INT)  
   
 INSERT INTO @TempTable  
 SELECT DynamicPageID, RelatedDynamicPageID, Sequence  
 FROM RelatedDynamicPages WITH (NOLOCK)  
 WHERE DynamicPageID = @DynamicPageID  
   
 SELECT RelatedDynamicPageID,  
 PageName,  
 PageTitle,  
 PageContent,  
 HyperLink,  
 CustomUrl,  
 OpenInNewWindow,  
 ParentDynamicPageID,  
 Valid,  
 PageFriendlyName,  
 rdp.Sequence,
 Visible,
 PublishOn  
 FROM @TempTable rdp  
 INNER JOIN DynamicPages dp WITH (NOLOCK) ON  
 rdp.RelatedDynamicPageID  = dp.DynamicPageID  
 WHERE dp.Valid = 1  
 ORDER BY rdp.Sequence  
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the RelatedDynamicPages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[RelatedDynamicPages]
					(
					[DynamicPageID]
					,[RelatedDynamicPageID]
					,[Sequence]
					)
				VALUES
					(
					@DynamicPageId
					,@RelatedDynamicPageId
					,@Sequence
					)
				
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_CustomModify"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@DynamicPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RelatedDynamicPageList" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN

DECLARE @Current TABLE (RelatedDynamiPageID INT)
INSERT INTO @Current 
SELECT RelatedDynamicPageID FROM RelatedDynamicPages WITH (NOLOCK) WHERE DynamicPageID = @DynamicPageID

DECLARE @SplitedValue TABLE(RelatedDynamiPageID INT, Sequence INT primary key identity)
INSERT INTO @SplitedValue (RelatedDynamiPageID)
SELECT CONVERT(INT, CONVERT(VARCHAR(MAX),id)) FROM [dbo].[ParseIntCSV](@RelatedDynamicPageList)

DECLARE @Joined TABLE (NewPageID INT, Sequence INT, OldPageID INT)

INSERT INTO @Joined
SELECT t1.RelatedDynamiPageID, t1.Sequence, t2.RelatedDynamiPageID
FROM @SplitedValue t1 FULL OUTER JOIN @Current t2
ON t1.RelatedDynamiPageID = t2.RelatedDynamiPageID

DECLARE @NewPageID INT
DECLARE @OldPageID INT
DECLARE @Index INT


DECLARE db_cursor CURSOR FOR
SELECT NewPageID, Sequence , OldPageID
FROM @Joined 

OPEN db_cursor   
FETCH NEXT FROM db_cursor INTO @NewPageID, @Index, @OldPageID

WHILE @@FETCH_STATUS = 0   
BEGIN   
	-- old one is gone
	IF @NewPageID IS NULL
	BEGIN
		DELETE FROM RelatedDynamicPages WHERE DynamicPageID = @DynamicPageID AND RelatedDynamicPageID = @OldPageID
	END
	ELSE
	BEGIN
		-- insert a new one
		IF @OldPageID IS NULL
		BEGIN
			INSERT INTO RelatedDynamicPages VALUES(@DynamicPageID, @NewPageID, @Index)
		END
		ELSE
		BEGIN 
			-- update original
			UPDATE RelatedDynamicPages SET Sequence = @Index WHERE DynamicPageID = @DynamicPageID AND RelatedDynamicPageID = @NewPageID
		END
	END
	

	FETCH NEXT FROM db_cursor INTO @NewPageID, @Index, @OldPageID
END   

CLOSE db_cursor   
DEALLOCATE db_cursor
  

END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_GetByDynamicPageIdRelatedDynamicPageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RelatedDynamicPages table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageID],
					[RelatedDynamicPageID],
					[Sequence]
				FROM
					[dbo].[RelatedDynamicPages]
				WHERE
					[DynamicPageID] = @DynamicPageId
					AND [RelatedDynamicPageID] = @RelatedDynamicPageId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the RelatedDynamicPages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageID],
					[RelatedDynamicPageID],
					[Sequence]
				FROM
					[dbo].[RelatedDynamicPages]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the RelatedDynamicPages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[RelatedDynamicPages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_GetByDynamicPageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RelatedDynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[RelatedDynamicPageID],
					[Sequence]
				FROM
					[dbo].[RelatedDynamicPages]
				WHERE
					[DynamicPageID] = @DynamicPageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the RelatedDynamicPages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageID]
	, [RelatedDynamicPageID]
	, [Sequence]
    FROM
	[dbo].[RelatedDynamicPages]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId OR @DynamicPageId IS NULL)
	AND ([RelatedDynamicPageID] = @RelatedDynamicPageId OR @RelatedDynamicPageId IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageID]
	, [RelatedDynamicPageID]
	, [Sequence]
    FROM
	[dbo].[RelatedDynamicPages]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId AND @DynamicPageId is not null)
	OR ([RelatedDynamicPageID] = @RelatedDynamicPageId AND @RelatedDynamicPageId is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the RelatedDynamicPages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[RelatedDynamicPages] WITH (ROWLOCK) 
				WHERE
					[DynamicPageID] = @DynamicPageId
					AND [RelatedDynamicPageID] = @RelatedDynamicPageId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the RelatedDynamicPages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OriginalDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OriginalRelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[RelatedDynamicPages]
				SET
					[DynamicPageID] = @DynamicPageId
					,[RelatedDynamicPageID] = @RelatedDynamicPageId
					,[Sequence] = @Sequence
				WHERE
[DynamicPageID] = @OriginalDynamicPageId 
AND [RelatedDynamicPageID] = @OriginalRelatedDynamicPageId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="RelatedDynamicPages_GetByRelatedDynamicPageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RelatedDynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[RelatedDynamicPageID],
					[Sequence]
				FROM
					[dbo].[RelatedDynamicPages]
				WHERE
					[RelatedDynamicPageID] = @RelatedDynamicPageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Profession_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Profession table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProfessionID],
					[ProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[ReferredSiteID]
				FROM
					[dbo].[Profession]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Profession_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Profession table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ProfessionID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ProfessionID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ProfessionID]'
				SET @SQL = @SQL + ' FROM [dbo].[Profession]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[ProfessionID], O.[ProfessionName], O.[Valid], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[ReferredSiteID]
				FROM
				    [dbo].[Profession] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ProfessionID] = PageIndex.[ProfessionID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Profession]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Profession_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Profession table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfessionName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ReferredSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Profession]
					(
					[ProfessionName]
					,[Valid]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					,[ReferredSiteID]
					)
				VALUES
					(
					@ProfessionName
					,@Valid
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					,@ReferredSiteId
					)
				
				-- Get the identity value
				SET @ProfessionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Profession_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Profession table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfessionName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ReferredSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Profession]
				SET
					[ProfessionName] = @ProfessionName
					,[Valid] = @Valid
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[ReferredSiteID] = @ReferredSiteId
				WHERE
[ProfessionID] = @ProfessionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Profession_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Profession table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Profession] WITH (ROWLOCK) 
				WHERE
					[ProfessionID] = @ProfessionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Profession_GetByReferredSiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Profession table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ReferredSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProfessionID],
					[ProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[ReferredSiteID]
				FROM
					[dbo].[Profession]
				WHERE
					[ReferredSiteID] = @ReferredSiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Profession_GetByProfessionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Profession table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProfessionID],
					[ProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[ReferredSiteID]
				FROM
					[dbo].[Profession]
				WHERE
					[ProfessionID] = @ProfessionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Profession_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Profession table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ReferredSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProfessionID]
	, [ProfessionName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [ReferredSiteID]
    FROM
	[dbo].[Profession]
    WHERE 
	 ([ProfessionID] = @ProfessionId OR @ProfessionId IS NULL)
	AND ([ProfessionName] = @ProfessionName OR @ProfessionName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([ReferredSiteID] = @ReferredSiteId OR @ReferredSiteId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProfessionID]
	, [ProfessionName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [ReferredSiteID]
    FROM
	[dbo].[Profession]
    WHERE 
	 ([ProfessionID] = @ProfessionId AND @ProfessionId is not null)
	OR ([ProfessionName] = @ProfessionName AND @ProfessionName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([ReferredSiteID] = @ReferredSiteId AND @ReferredSiteId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Profession_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Profession table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ProfessionID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ProfessionID] )
				SELECT TOP {3} [ProfessionID]
				FROM [dbo].[Profession] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[ProfessionID], O.[ProfessionName], O.[Valid], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[ReferredSiteID]
				FROM
				    [dbo].[Profession] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ProfessionID] = PageIndex.[ProfessionID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Profession] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Profession_GetSiteTree"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
MetaDescription
FROM @Professions           
ORDER BY Sequence, ProfessionName, SiteProfessionName          
            
END 

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Profession table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ReferredSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Profession]
					(
					[ProfessionName]
					,[Valid]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					,[ReferredSiteID]
					)
				VALUES
					(
					@ProfessionName
					,@Valid
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					,@ReferredSiteId
					)
				
				-- Get the identity value
				SET @ProfessionId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_GetByProfessionId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Profession table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[ProfessionID],
					[ProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[ReferredSiteID]
				FROM
					[dbo].[Profession]
				WHERE
					[ProfessionID] = @ProfessionId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Profession table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[ProfessionID],
					[ProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[ReferredSiteID]
				FROM
					[dbo].[Profession]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Profession table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Profession]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_CustomBulkInsert"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@XMLText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
T(N)  
  
DECLARE @id INT  
DECLARE @name NVARCHAR(255)  
DECLARE @friendlyurl VARCHAR(255)  
DECLARE @action VARCHAR(20)  
  
DECLARE db_cursor CURSOR FOR    
SELECT id, name, friendlyurl, [action]  
FROM @tmpTable  
  
OPEN db_cursor     
FETCH NEXT FROM db_cursor INTO @id, @name, @friendlyurl, @action     
  
WHILE @@FETCH_STATUS = 0     
BEGIN     
 DECLARE @NewProfessionID INT  
 DECLARE @NewSiteProfessionID INT  
    
      IF  @action = 'New'   
      BEGIN  
  EXEC Profession_Insert @ProfessionId=@NewProfessionID OUTPUT,  
        @ProfessionName = @name,  
        @Valid = 1,  
        @MetaTitle = @name,  
        @MetaKeywords = @name,  
        @MetaDescription = @name,  
        @ReferredSiteId = @SiteId  
    
  EXEC SiteProfession_Insert @SiteProfessionId = @NewSiteProfessionID OUTPUT,  
         @SiteId = @SiteId,  
         @ProfessionId = @NewProfessionID,  
         @SiteProfessionName = @name,  
         @Valid = 1,  
         @MetaTitle = @name,  
         @MetaKeywords = @name,  
         @MetaDescription = @name,  
         @Sequence = 0,  
         @SiteProfessionFriendlyUrl = @friendlyurl,  
         @TotalJobs = 0,  
         @CanonicalUrl = ''  
      END  
        
      FETCH NEXT FROM db_cursor INTO @id, @name, @friendlyurl, @action    
END     
  
CLOSE db_cursor     
DEALLOCATE db_cursor  
  
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Profession table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ReferredSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProfessionID]
	, [ProfessionName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [ReferredSiteID]
    FROM
	[dbo].[Profession]
    WHERE 
	 ([ProfessionID] = @ProfessionId OR @ProfessionId IS NULL)
	AND ([ProfessionName] = @ProfessionName OR @ProfessionName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([ReferredSiteID] = @ReferredSiteId OR @ReferredSiteId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProfessionID]
	, [ProfessionName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [ReferredSiteID]
    FROM
	[dbo].[Profession]
    WHERE 
	 ([ProfessionID] = @ProfessionId AND @ProfessionId is not null)
	OR ([ProfessionName] = @ProfessionName AND @ProfessionName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([ReferredSiteID] = @ReferredSiteId AND @ReferredSiteId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Profession table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Profession] WITH (ROWLOCK) 
				WHERE
					[ProfessionID] = @ProfessionId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_GetDetailWithSite"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SiteProfessionFriendlyUrl,  
   
CanonicalUrl    
FROM @Professions     
ORDER BY Sequence, ProfessionName, SiteProfessionName    
      
END  



			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Profession table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ReferredSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Profession]
				SET
					[ProfessionName] = @ProfessionName
					,[Valid] = @Valid
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[ReferredSiteID] = @ReferredSiteId
				WHERE
[ProfessionID] = @ProfessionId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Profession_GetByReferredSiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Profession table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ReferredSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[ProfessionID],
					[ProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[ReferredSiteID]
				FROM
					[dbo].[Profession]
				WHERE
					[ReferredSiteID] = @ReferredSiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="News_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the News table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[NewsID],
					[SiteID],
					[NewsCategoryID],
					[Subject],
					[Content],
					[PostDate],
					[Valid],
					[Sequence],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[Tags],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[NewsIndustryID],
					[NewsTypeIDs],
					[CustomXML],
					[ImageURL],
					[Author]
				FROM
					[dbo].[News]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="News_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the News table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [NewsID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([NewsID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [NewsID]'
				SET @SQL = @SQL + ' FROM [dbo].[News]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[NewsID], O.[SiteID], O.[NewsCategoryID], O.[Subject], O.[Content], O.[PostDate], O.[Valid], O.[Sequence], O.[LastModified], O.[LastModifiedBy], O.[SearchField], O.[Tags], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[PageFriendlyName], O.[NewsIndustryID], O.[NewsTypeIDs], O.[CustomXML], O.[ImageURL], O.[Author]
				FROM
				    [dbo].[News] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[NewsID] = PageIndex.[NewsID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[News]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="News_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the News table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Subject" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@PostDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Author" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[News]
					(
					[SiteID]
					,[NewsCategoryID]
					,[Subject]
					,[Content]
					,[PostDate]
					,[Valid]
					,[Sequence]
					,[LastModified]
					,[LastModifiedBy]
					,[SearchField]
					,[Tags]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					,[PageFriendlyName]
					,[NewsIndustryID]
					,[NewsTypeIDs]
					,[CustomXML]
					,[ImageURL]
					,[Author]
					)
				VALUES
					(
					@SiteId
					,@NewsCategoryId
					,@Subject
					,@Content
					,@PostDate
					,@Valid
					,@Sequence
					,@LastModified
					,@LastModifiedBy
					,@SearchField
					,@Tags
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					,@PageFriendlyName
					,@NewsIndustryId
					,@NewsTypeIds
					,@CustomXml
					,@ImageUrl
					,@Author
					)
				
				-- Get the identity value
				SET @NewsId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="News_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the News table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Subject" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@PostDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Author" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[News]
				SET
					[SiteID] = @SiteId
					,[NewsCategoryID] = @NewsCategoryId
					,[Subject] = @Subject
					,[Content] = @Content
					,[PostDate] = @PostDate
					,[Valid] = @Valid
					,[Sequence] = @Sequence
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
					,[SearchField] = @SearchField
					,[Tags] = @Tags
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[PageFriendlyName] = @PageFriendlyName
					,[NewsIndustryID] = @NewsIndustryId
					,[NewsTypeIDs] = @NewsTypeIds
					,[CustomXML] = @CustomXml
					,[ImageURL] = @ImageUrl
					,[Author] = @Author
				WHERE
[NewsID] = @NewsId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="News_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the News table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[News] WITH (ROWLOCK) 
				WHERE
					[NewsID] = @NewsId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="News_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the News table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[NewsID],
					[SiteID],
					[NewsCategoryID],
					[Subject],
					[Content],
					[PostDate],
					[Valid],
					[Sequence],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[Tags],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[NewsIndustryID],
					[NewsTypeIDs],
					[CustomXML],
					[ImageURL],
					[Author]
				FROM
					[dbo].[News]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="News_GetByNewsCategoryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the News table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[NewsID],
					[SiteID],
					[NewsCategoryID],
					[Subject],
					[Content],
					[PostDate],
					[Valid],
					[Sequence],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[Tags],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[NewsIndustryID],
					[NewsTypeIDs],
					[CustomXML],
					[ImageURL],
					[Author]
				FROM
					[dbo].[News]
				WHERE
					[NewsCategoryID] = @NewsCategoryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="News_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the News table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[NewsID],
					[SiteID],
					[NewsCategoryID],
					[Subject],
					[Content],
					[PostDate],
					[Valid],
					[Sequence],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[Tags],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[NewsIndustryID],
					[NewsTypeIDs],
					[CustomXML],
					[ImageURL],
					[Author]
				FROM
					[dbo].[News]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="News_GetByNewsId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the News table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[NewsID],
					[SiteID],
					[NewsCategoryID],
					[Subject],
					[Content],
					[PostDate],
					[Valid],
					[Sequence],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[Tags],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[NewsIndustryID],
					[NewsTypeIDs],
					[CustomXML],
					[ImageURL],
					[Author]
				FROM
					[dbo].[News]
				WHERE
					[NewsID] = @NewsId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="News_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the News table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Subject" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@PostDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Author" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [NewsID]
	, [SiteID]
	, [NewsCategoryID]
	, [Subject]
	, [Content]
	, [PostDate]
	, [Valid]
	, [Sequence]
	, [LastModified]
	, [LastModifiedBy]
	, [SearchField]
	, [Tags]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [PageFriendlyName]
	, [NewsIndustryID]
	, [NewsTypeIDs]
	, [CustomXML]
	, [ImageURL]
	, [Author]
    FROM
	[dbo].[News]
    WHERE 
	 ([NewsID] = @NewsId OR @NewsId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([NewsCategoryID] = @NewsCategoryId OR @NewsCategoryId IS NULL)
	AND ([Subject] = @Subject OR @Subject IS NULL)
	AND ([PostDate] = @PostDate OR @PostDate IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([SearchField] = @SearchField OR @SearchField IS NULL)
	AND ([Tags] = @Tags OR @Tags IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([PageFriendlyName] = @PageFriendlyName OR @PageFriendlyName IS NULL)
	AND ([NewsIndustryID] = @NewsIndustryId OR @NewsIndustryId IS NULL)
	AND ([NewsTypeIDs] = @NewsTypeIds OR @NewsTypeIds IS NULL)
	AND ([CustomXML] = @CustomXml OR @CustomXml IS NULL)
	AND ([ImageURL] = @ImageUrl OR @ImageUrl IS NULL)
	AND ([Author] = @Author OR @Author IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [NewsID]
	, [SiteID]
	, [NewsCategoryID]
	, [Subject]
	, [Content]
	, [PostDate]
	, [Valid]
	, [Sequence]
	, [LastModified]
	, [LastModifiedBy]
	, [SearchField]
	, [Tags]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [PageFriendlyName]
	, [NewsIndustryID]
	, [NewsTypeIDs]
	, [CustomXML]
	, [ImageURL]
	, [Author]
    FROM
	[dbo].[News]
    WHERE 
	 ([NewsID] = @NewsId AND @NewsId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([NewsCategoryID] = @NewsCategoryId AND @NewsCategoryId is not null)
	OR ([Subject] = @Subject AND @Subject is not null)
	OR ([PostDate] = @PostDate AND @PostDate is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([Tags] = @Tags AND @Tags is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([PageFriendlyName] = @PageFriendlyName AND @PageFriendlyName is not null)
	OR ([NewsIndustryID] = @NewsIndustryId AND @NewsIndustryId is not null)
	OR ([NewsTypeIDs] = @NewsTypeIds AND @NewsTypeIds is not null)
	OR ([CustomXML] = @CustomXml AND @CustomXml is not null)
	OR ([ImageURL] = @ImageUrl AND @ImageUrl is not null)
	OR ([Author] = @Author AND @Author is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="News_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the News table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [NewsID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [NewsID] )
				SELECT TOP {3} [NewsID]
				FROM [dbo].[News] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[NewsID], O.[SiteID], O.[NewsCategoryID], O.[Subject], O.[Content], O.[PostDate], O.[Valid], O.[Sequence], O.[LastModified], O.[LastModifiedBy], O.[SearchField], O.[Tags], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[PageFriendlyName], O.[NewsIndustryID], O.[NewsTypeIDs], O.[CustomXML], O.[ImageURL], O.[Author]
				FROM
				    [dbo].[News] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[NewsID] = PageIndex.[NewsID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[News] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="News_CustomGetNews"  skip="true">
			<comment><![CDATA[  
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Keyword" type="nvarchar" direction="Input" size="2500" precision="0" scale="0" param="(2500)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],  
 [SearchField],  
 [Tags],  
 [MetaTitle],  
 [MetaKeywords],  
 [MetaDescription],  
 [PageFriendlyName],  
 [NewsIndustryID],  
 [NewsTypeIDs],  
 [CustomXML],  
 [ImageURL],  
 [Author]  
FROM NewsArticles  

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the News table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Subject" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@PostDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Author" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,@SearchField
					,@Tags
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					,@PageFriendlyName
					,@NewsIndustryId
					,@NewsTypeIds
					,@CustomXml
					,@ImageUrl
					,@Author
					)
				
				-- Get the identity value
				SET @NewsId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the News table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[Tags],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[NewsIndustryID],
					[NewsTypeIDs],
					[CustomXML],
					[ImageURL],
					[Author]
				FROM
					[dbo].[News]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the News table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[Tags],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[NewsIndustryID],
					[NewsTypeIDs],
					[CustomXML],
					[ImageURL],
					[Author]
				FROM
					[dbo].[News]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the News table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[News]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the News table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Subject" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@PostDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Author" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,[SearchField] = @SearchField
					,[Tags] = @Tags
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[PageFriendlyName] = @PageFriendlyName
					,[NewsIndustryID] = @NewsIndustryId
					,[NewsTypeIDs] = @NewsTypeIds
					,[CustomXML] = @CustomXml
					,[ImageURL] = @ImageUrl
					,[Author] = @Author
				WHERE
[NewsID] = @NewsId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_GetByNewsId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the News table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[Tags],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[NewsIndustryID],
					[NewsTypeIDs],
					[CustomXML],
					[ImageURL],
					[Author]
				FROM
					[dbo].[News]
				WHERE
					[NewsID] = @NewsId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the News table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Subject" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@PostDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NewsIndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ImageUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Author" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([Tags] = @Tags AND @Tags is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([PageFriendlyName] = @PageFriendlyName AND @PageFriendlyName is not null)
	OR ([NewsIndustryID] = @NewsIndustryId AND @NewsIndustryId is not null)
	OR ([NewsTypeIDs] = @NewsTypeIds AND @NewsTypeIds is not null)
	OR ([CustomXML] = @CustomXml AND @CustomXml is not null)
	OR ([ImageURL] = @ImageUrl AND @ImageUrl is not null)
	OR ([Author] = @Author AND @Author is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the News table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[News] WITH (ROWLOCK) 
				WHERE
					[NewsID] = @NewsId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the News table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="News_GetByNewsCategoryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the News table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[Tags],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[NewsIndustryID],
					[NewsTypeIDs],
					[CustomXML],
					[ImageURL],
					[Author]
				FROM
					[dbo].[News]
				WHERE
					[NewsCategoryID] = @NewsCategoryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Members_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Members table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberID],
					[SiteID],
					[Username],
					[Password],
					[Title],
					[FirstName],
					[Surname],
					[EmailAddress],
					[Company],
					[Position],
					[HomePhone],
					[WorkPhone],
					[MobilePhone],
					[Fax],
					[Address1],
					[Address2],
					[LocationID],
					[AreaID],
					[CountryID],
					[PreferredCategoryID],
					[PreferredSubCategoryID],
					[PreferredSalaryID],
					[Subscribed],
					[MonthlyUpdate],
					[ReferringMemberID],
					[LastModifiedDate],
					[Valid],
					[EmailFormat],
					[LastLogon],
					[DateOfBirth],
					[Gender],
					[Tags],
					[Validated],
					[ValidateGUID],
					[MemberURLExtension],
					[WebsiteURL],
					[AvailabilityID],
					[AvailabilityFromDate],
					[MySpaceHeading],
					[MySpaceContent],
					[URLReferrer],
					[RequiredPasswordChange],
					[PreferredJobTitle],
					[PreferredAvailability],
					[PreferredAvailabilityType],
					[PreferredSalaryFrom],
					[PreferredSalaryTo],
					[CurrentSalaryFrom],
					[CurrentSalaryTo],
					[LookingFor],
					[Experience],
					[Skills],
					[Reasons],
					[Comments],
					[ProfileType],
					[EducationID],
					[SearchField],
					[RegisteredDate],
					[States],
					[Suburb],
					[PostCode],
					[ProfilePicture],
					[ShortBio],
					[WorkTypeID],
					[Memberships],
					[MemberStatusID],
					[LinkedInAccessToken],
					[ExternalMemberID],
					[PassportNo],
					[MailingAddress1],
					[MailingAddress2],
					[MailingStates],
					[MailingSuburb],
					[MailingPostCode],
					[MailingCountryID],
					[CountryName],
					[MailingCountryName],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ReferringSiteID],
					[MultiLingualFirstName],
					[MultiLingualSurame],
					[SecondaryEmail],
					[CandidateData],
					[EligibleToWorkIn],
					[ReferenceUponRequest],
					[PreferredLine],
					[VideoURL],
					[ProfileDataXML],
					[LastProfileSubmittedDate]
				FROM
					[dbo].[Members]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Members_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Members table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberID]'
				SET @SQL = @SQL + ' FROM [dbo].[Members]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberID], O.[SiteID], O.[Username], O.[Password], O.[Title], O.[FirstName], O.[Surname], O.[EmailAddress], O.[Company], O.[Position], O.[HomePhone], O.[WorkPhone], O.[MobilePhone], O.[Fax], O.[Address1], O.[Address2], O.[LocationID], O.[AreaID], O.[CountryID], O.[PreferredCategoryID], O.[PreferredSubCategoryID], O.[PreferredSalaryID], O.[Subscribed], O.[MonthlyUpdate], O.[ReferringMemberID], O.[LastModifiedDate], O.[Valid], O.[EmailFormat], O.[LastLogon], O.[DateOfBirth], O.[Gender], O.[Tags], O.[Validated], O.[ValidateGUID], O.[MemberURLExtension], O.[WebsiteURL], O.[AvailabilityID], O.[AvailabilityFromDate], O.[MySpaceHeading], O.[MySpaceContent], O.[URLReferrer], O.[RequiredPasswordChange], O.[PreferredJobTitle], O.[PreferredAvailability], O.[PreferredAvailabilityType], O.[PreferredSalaryFrom], O.[PreferredSalaryTo], O.[CurrentSalaryFrom], O.[CurrentSalaryTo], O.[LookingFor], O.[Experience], O.[Skills], O.[Reasons], O.[Comments], O.[ProfileType], O.[EducationID], O.[SearchField], O.[RegisteredDate], O.[States], O.[Suburb], O.[PostCode], O.[ProfilePicture], O.[ShortBio], O.[WorkTypeID], O.[Memberships], O.[MemberStatusID], O.[LinkedInAccessToken], O.[ExternalMemberID], O.[PassportNo], O.[MailingAddress1], O.[MailingAddress2], O.[MailingStates], O.[MailingSuburb], O.[MailingPostCode], O.[MailingCountryID], O.[CountryName], O.[MailingCountryName], O.[LoginAttempts], O.[LastAttemptDate], O.[Status], O.[LastTermsAndConditionsDate], O.[DefaultLanguageId], O.[ReferringSiteID], O.[MultiLingualFirstName], O.[MultiLingualSurame], O.[SecondaryEmail], O.[CandidateData], O.[EligibleToWorkIn], O.[ReferenceUponRequest], O.[PreferredLine], O.[VideoURL], O.[ProfileDataXML], O.[LastProfileSubmittedDate]
				FROM
				    [dbo].[Members] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberID] = PageIndex.[MemberID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Members]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Members_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Members table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Username" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Password" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Company" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Position" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@HomePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@WorkPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@Address1" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Address2" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@AreaId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PreferredCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PreferredSubCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PreferredSalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Subscribed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MonthlyUpdate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ReferringMemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastLogon" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DateOfBirth" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Gender" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberUrlExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WebsiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@AvailabilityId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AvailabilityFromDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@MySpaceHeading" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MySpaceContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@UrlReferrer" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@RequiredPasswordChange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PreferredJobTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@PreferredAvailability" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PreferredAvailabilityType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PreferredSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PreferredSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CurrentSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CurrentSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LookingFor" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Experience" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Reasons" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ProfileType" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@RegisteredDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@States" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Suburb" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@PostCode" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@ProfilePicture" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ShortBio" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WorkTypeId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Memberships" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInAccessToken" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExternalMemberId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PassportNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MailingAddress1" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@MailingAddress2" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@MailingStates" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@MailingSuburb" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@MailingPostCode" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@MailingCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MailingCountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReferringSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MultiLingualFirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MultiLingualSurame" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@SecondaryEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CandidateData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@EligibleToWorkIn" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ReferenceUponRequest" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PreferredLine" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@ProfileDataXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastProfileSubmittedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Members]
					(
					[SiteID]
					,[Username]
					,[Password]
					,[Title]
					,[FirstName]
					,[Surname]
					,[EmailAddress]
					,[Company]
					,[Position]
					,[HomePhone]
					,[WorkPhone]
					,[MobilePhone]
					,[Fax]
					,[Address1]
					,[Address2]
					,[LocationID]
					,[AreaID]
					,[CountryID]
					,[PreferredCategoryID]
					,[PreferredSubCategoryID]
					,[PreferredSalaryID]
					,[Subscribed]
					,[MonthlyUpdate]
					,[ReferringMemberID]
					,[LastModifiedDate]
					,[Valid]
					,[EmailFormat]
					,[LastLogon]
					,[DateOfBirth]
					,[Gender]
					,[Tags]
					,[Validated]
					,[ValidateGUID]
					,[MemberURLExtension]
					,[WebsiteURL]
					,[AvailabilityID]
					,[AvailabilityFromDate]
					,[MySpaceHeading]
					,[MySpaceContent]
					,[URLReferrer]
					,[RequiredPasswordChange]
					,[PreferredJobTitle]
					,[PreferredAvailability]
					,[PreferredAvailabilityType]
					,[PreferredSalaryFrom]
					,[PreferredSalaryTo]
					,[CurrentSalaryFrom]
					,[CurrentSalaryTo]
					,[LookingFor]
					,[Experience]
					,[Skills]
					,[Reasons]
					,[Comments]
					,[ProfileType]
					,[EducationID]
					,[SearchField]
					,[RegisteredDate]
					,[States]
					,[Suburb]
					,[PostCode]
					,[ProfilePicture]
					,[ShortBio]
					,[WorkTypeID]
					,[Memberships]
					,[MemberStatusID]
					,[LinkedInAccessToken]
					,[ExternalMemberID]
					,[PassportNo]
					,[MailingAddress1]
					,[MailingAddress2]
					,[MailingStates]
					,[MailingSuburb]
					,[MailingPostCode]
					,[MailingCountryID]
					,[CountryName]
					,[MailingCountryName]
					,[LoginAttempts]
					,[LastAttemptDate]
					,[Status]
					,[LastTermsAndConditionsDate]
					,[DefaultLanguageId]
					,[ReferringSiteID]
					,[MultiLingualFirstName]
					,[MultiLingualSurame]
					,[SecondaryEmail]
					,[CandidateData]
					,[EligibleToWorkIn]
					,[ReferenceUponRequest]
					,[PreferredLine]
					,[VideoURL]
					,[ProfileDataXML]
					,[LastProfileSubmittedDate]
					)
				VALUES
					(
					@SiteId
					,@Username
					,@Password
					,@Title
					,@FirstName
					,@Surname
					,@EmailAddress
					,@Company
					,@Position
					,@HomePhone
					,@WorkPhone
					,@MobilePhone
					,@Fax
					,@Address1
					,@Address2
					,@LocationId
					,@AreaId
					,@CountryId
					,@PreferredCategoryId
					,@PreferredSubCategoryId
					,@PreferredSalaryId
					,@Subscribed
					,@MonthlyUpdate
					,@ReferringMemberId
					,@LastModifiedDate
					,@Valid
					,@EmailFormat
					,@LastLogon
					,@DateOfBirth
					,@Gender
					,@Tags
					,@Validated
					,@ValidateGuid
					,@MemberUrlExtension
					,@WebsiteUrl
					,@AvailabilityId
					,@AvailabilityFromDate
					,@MySpaceHeading
					,@MySpaceContent
					,@UrlReferrer
					,@RequiredPasswordChange
					,@PreferredJobTitle
					,@PreferredAvailability
					,@PreferredAvailabilityType
					,@PreferredSalaryFrom
					,@PreferredSalaryTo
					,@CurrentSalaryFrom
					,@CurrentSalaryTo
					,@LookingFor
					,@Experience
					,@Skills
					,@Reasons
					,@Comments
					,@ProfileType
					,@EducationId
					,@SearchField
					,@RegisteredDate
					,@States
					,@Suburb
					,@PostCode
					,@ProfilePicture
					,@ShortBio
					,@WorkTypeId
					,@Memberships
					,@MemberStatusId
					,@LinkedInAccessToken
					,@ExternalMemberId
					,@PassportNo
					,@MailingAddress1
					,@MailingAddress2
					,@MailingStates
					,@MailingSuburb
					,@MailingPostCode
					,@MailingCountryId
					,@CountryName
					,@MailingCountryName
					,@LoginAttempts
					,@LastAttemptDate
					,@Status
					,@LastTermsAndConditionsDate
					,@DefaultLanguageId
					,@ReferringSiteId
					,@MultiLingualFirstName
					,@MultiLingualSurame
					,@SecondaryEmail
					,@CandidateData
					,@EligibleToWorkIn
					,@ReferenceUponRequest
					,@PreferredLine
					,@VideoUrl
					,@ProfileDataXml
					,@LastProfileSubmittedDate
					)
				
				-- Get the identity value
				SET @MemberId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Members_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Members table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Username" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Password" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Company" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Position" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@HomePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@WorkPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@Address1" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Address2" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@AreaId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PreferredCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PreferredSubCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PreferredSalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Subscribed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MonthlyUpdate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ReferringMemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastLogon" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DateOfBirth" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Gender" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberUrlExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WebsiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@AvailabilityId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AvailabilityFromDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@MySpaceHeading" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MySpaceContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@UrlReferrer" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@RequiredPasswordChange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PreferredJobTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@PreferredAvailability" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PreferredAvailabilityType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PreferredSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PreferredSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CurrentSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CurrentSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LookingFor" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Experience" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Reasons" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ProfileType" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@RegisteredDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@States" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Suburb" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@PostCode" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@ProfilePicture" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ShortBio" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WorkTypeId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Memberships" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInAccessToken" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExternalMemberId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PassportNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MailingAddress1" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@MailingAddress2" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@MailingStates" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@MailingSuburb" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@MailingPostCode" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@MailingCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MailingCountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReferringSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MultiLingualFirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MultiLingualSurame" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@SecondaryEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CandidateData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@EligibleToWorkIn" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ReferenceUponRequest" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PreferredLine" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@ProfileDataXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastProfileSubmittedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Members]
				SET
					[SiteID] = @SiteId
					,[Username] = @Username
					,[Password] = @Password
					,[Title] = @Title
					,[FirstName] = @FirstName
					,[Surname] = @Surname
					,[EmailAddress] = @EmailAddress
					,[Company] = @Company
					,[Position] = @Position
					,[HomePhone] = @HomePhone
					,[WorkPhone] = @WorkPhone
					,[MobilePhone] = @MobilePhone
					,[Fax] = @Fax
					,[Address1] = @Address1
					,[Address2] = @Address2
					,[LocationID] = @LocationId
					,[AreaID] = @AreaId
					,[CountryID] = @CountryId
					,[PreferredCategoryID] = @PreferredCategoryId
					,[PreferredSubCategoryID] = @PreferredSubCategoryId
					,[PreferredSalaryID] = @PreferredSalaryId
					,[Subscribed] = @Subscribed
					,[MonthlyUpdate] = @MonthlyUpdate
					,[ReferringMemberID] = @ReferringMemberId
					,[LastModifiedDate] = @LastModifiedDate
					,[Valid] = @Valid
					,[EmailFormat] = @EmailFormat
					,[LastLogon] = @LastLogon
					,[DateOfBirth] = @DateOfBirth
					,[Gender] = @Gender
					,[Tags] = @Tags
					,[Validated] = @Validated
					,[ValidateGUID] = @ValidateGuid
					,[MemberURLExtension] = @MemberUrlExtension
					,[WebsiteURL] = @WebsiteUrl
					,[AvailabilityID] = @AvailabilityId
					,[AvailabilityFromDate] = @AvailabilityFromDate
					,[MySpaceHeading] = @MySpaceHeading
					,[MySpaceContent] = @MySpaceContent
					,[URLReferrer] = @UrlReferrer
					,[RequiredPasswordChange] = @RequiredPasswordChange
					,[PreferredJobTitle] = @PreferredJobTitle
					,[PreferredAvailability] = @PreferredAvailability
					,[PreferredAvailabilityType] = @PreferredAvailabilityType
					,[PreferredSalaryFrom] = @PreferredSalaryFrom
					,[PreferredSalaryTo] = @PreferredSalaryTo
					,[CurrentSalaryFrom] = @CurrentSalaryFrom
					,[CurrentSalaryTo] = @CurrentSalaryTo
					,[LookingFor] = @LookingFor
					,[Experience] = @Experience
					,[Skills] = @Skills
					,[Reasons] = @Reasons
					,[Comments] = @Comments
					,[ProfileType] = @ProfileType
					,[EducationID] = @EducationId
					,[SearchField] = @SearchField
					,[RegisteredDate] = @RegisteredDate
					,[States] = @States
					,[Suburb] = @Suburb
					,[PostCode] = @PostCode
					,[ProfilePicture] = @ProfilePicture
					,[ShortBio] = @ShortBio
					,[WorkTypeID] = @WorkTypeId
					,[Memberships] = @Memberships
					,[MemberStatusID] = @MemberStatusId
					,[LinkedInAccessToken] = @LinkedInAccessToken
					,[ExternalMemberID] = @ExternalMemberId
					,[PassportNo] = @PassportNo
					,[MailingAddress1] = @MailingAddress1
					,[MailingAddress2] = @MailingAddress2
					,[MailingStates] = @MailingStates
					,[MailingSuburb] = @MailingSuburb
					,[MailingPostCode] = @MailingPostCode
					,[MailingCountryID] = @MailingCountryId
					,[CountryName] = @CountryName
					,[MailingCountryName] = @MailingCountryName
					,[LoginAttempts] = @LoginAttempts
					,[LastAttemptDate] = @LastAttemptDate
					,[Status] = @Status
					,[LastTermsAndConditionsDate] = @LastTermsAndConditionsDate
					,[DefaultLanguageId] = @DefaultLanguageId
					,[ReferringSiteID] = @ReferringSiteId
					,[MultiLingualFirstName] = @MultiLingualFirstName
					,[MultiLingualSurame] = @MultiLingualSurame
					,[SecondaryEmail] = @SecondaryEmail
					,[CandidateData] = @CandidateData
					,[EligibleToWorkIn] = @EligibleToWorkIn
					,[ReferenceUponRequest] = @ReferenceUponRequest
					,[PreferredLine] = @PreferredLine
					,[VideoURL] = @VideoUrl
					,[ProfileDataXML] = @ProfileDataXml
					,[LastProfileSubmittedDate] = @LastProfileSubmittedDate
				WHERE
[MemberID] = @MemberId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Members_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Members table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Members] WITH (ROWLOCK) 
				WHERE
					[MemberID] = @MemberId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Members_GetByCountryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberID],
					[SiteID],
					[Username],
					[Password],
					[Title],
					[FirstName],
					[Surname],
					[EmailAddress],
					[Company],
					[Position],
					[HomePhone],
					[WorkPhone],
					[MobilePhone],
					[Fax],
					[Address1],
					[Address2],
					[LocationID],
					[AreaID],
					[CountryID],
					[PreferredCategoryID],
					[PreferredSubCategoryID],
					[PreferredSalaryID],
					[Subscribed],
					[MonthlyUpdate],
					[ReferringMemberID],
					[LastModifiedDate],
					[Valid],
					[EmailFormat],
					[LastLogon],
					[DateOfBirth],
					[Gender],
					[Tags],
					[Validated],
					[ValidateGUID],
					[MemberURLExtension],
					[WebsiteURL],
					[AvailabilityID],
					[AvailabilityFromDate],
					[MySpaceHeading],
					[MySpaceContent],
					[URLReferrer],
					[RequiredPasswordChange],
					[PreferredJobTitle],
					[PreferredAvailability],
					[PreferredAvailabilityType],
					[PreferredSalaryFrom],
					[PreferredSalaryTo],
					[CurrentSalaryFrom],
					[CurrentSalaryTo],
					[LookingFor],
					[Experience],
					[Skills],
					[Reasons],
					[Comments],
					[ProfileType],
					[EducationID],
					[SearchField],
					[RegisteredDate],
					[States],
					[Suburb],
					[PostCode],
					[ProfilePicture],
					[ShortBio],
					[WorkTypeID],
					[Memberships],
					[MemberStatusID],
					[LinkedInAccessToken],
					[ExternalMemberID],
					[PassportNo],
					[MailingAddress1],
					[MailingAddress2],
					[MailingStates],
					[MailingSuburb],
					[MailingPostCode],
					[MailingCountryID],
					[CountryName],
					[MailingCountryName],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ReferringSiteID],
					[MultiLingualFirstName],
					[MultiLingualSurame],
					[SecondaryEmail],
					[CandidateData],
					[EligibleToWorkIn],
					[ReferenceUponRequest],
					[PreferredLine],
					[VideoURL],
					[ProfileDataXML],
					[LastProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[CountryID] = @CountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Members_GetByEducationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberID],
					[SiteID],
					[Username],
					[Password],
					[Title],
					[FirstName],
					[Surname],
					[EmailAddress],
					[Company],
					[Position],
					[HomePhone],
					[WorkPhone],
					[MobilePhone],
					[Fax],
					[Address1],
					[Address2],
					[LocationID],
					[AreaID],
					[CountryID],
					[PreferredCategoryID],
					[PreferredSubCategoryID],
					[PreferredSalaryID],
					[Subscribed],
					[MonthlyUpdate],
					[ReferringMemberID],
					[LastModifiedDate],
					[Valid],
					[EmailFormat],
					[LastLogon],
					[DateOfBirth],
					[Gender],
					[Tags],
					[Validated],
					[ValidateGUID],
					[MemberURLExtension],
					[WebsiteURL],
					[AvailabilityID],
					[AvailabilityFromDate],
					[MySpaceHeading],
					[MySpaceContent],
					[URLReferrer],
					[RequiredPasswordChange],
					[PreferredJobTitle],
					[PreferredAvailability],
					[PreferredAvailabilityType],
					[PreferredSalaryFrom],
					[PreferredSalaryTo],
					[CurrentSalaryFrom],
					[CurrentSalaryTo],
					[LookingFor],
					[Experience],
					[Skills],
					[Reasons],
					[Comments],
					[ProfileType],
					[EducationID],
					[SearchField],
					[RegisteredDate],
					[States],
					[Suburb],
					[PostCode],
					[ProfilePicture],
					[ShortBio],
					[WorkTypeID],
					[Memberships],
					[MemberStatusID],
					[LinkedInAccessToken],
					[ExternalMemberID],
					[PassportNo],
					[MailingAddress1],
					[MailingAddress2],
					[MailingStates],
					[MailingSuburb],
					[MailingPostCode],
					[MailingCountryID],
					[CountryName],
					[MailingCountryName],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ReferringSiteID],
					[MultiLingualFirstName],
					[MultiLingualSurame],
					[SecondaryEmail],
					[CandidateData],
					[EligibleToWorkIn],
					[ReferenceUponRequest],
					[PreferredLine],
					[VideoURL],
					[ProfileDataXML],
					[LastProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[EducationID] = @EducationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Members_GetByEmailFormat" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberID],
					[SiteID],
					[Username],
					[Password],
					[Title],
					[FirstName],
					[Surname],
					[EmailAddress],
					[Company],
					[Position],
					[HomePhone],
					[WorkPhone],
					[MobilePhone],
					[Fax],
					[Address1],
					[Address2],
					[LocationID],
					[AreaID],
					[CountryID],
					[PreferredCategoryID],
					[PreferredSubCategoryID],
					[PreferredSalaryID],
					[Subscribed],
					[MonthlyUpdate],
					[ReferringMemberID],
					[LastModifiedDate],
					[Valid],
					[EmailFormat],
					[LastLogon],
					[DateOfBirth],
					[Gender],
					[Tags],
					[Validated],
					[ValidateGUID],
					[MemberURLExtension],
					[WebsiteURL],
					[AvailabilityID],
					[AvailabilityFromDate],
					[MySpaceHeading],
					[MySpaceContent],
					[URLReferrer],
					[RequiredPasswordChange],
					[PreferredJobTitle],
					[PreferredAvailability],
					[PreferredAvailabilityType],
					[PreferredSalaryFrom],
					[PreferredSalaryTo],
					[CurrentSalaryFrom],
					[CurrentSalaryTo],
					[LookingFor],
					[Experience],
					[Skills],
					[Reasons],
					[Comments],
					[ProfileType],
					[EducationID],
					[SearchField],
					[RegisteredDate],
					[States],
					[Suburb],
					[PostCode],
					[ProfilePicture],
					[ShortBio],
					[WorkTypeID],
					[Memberships],
					[MemberStatusID],
					[LinkedInAccessToken],
					[ExternalMemberID],
					[PassportNo],
					[MailingAddress1],
					[MailingAddress2],
					[MailingStates],
					[MailingSuburb],
					[MailingPostCode],
					[MailingCountryID],
					[CountryName],
					[MailingCountryName],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ReferringSiteID],
					[MultiLingualFirstName],
					[MultiLingualSurame],
					[SecondaryEmail],
					[CandidateData],
					[EligibleToWorkIn],
					[ReferenceUponRequest],
					[PreferredLine],
					[VideoURL],
					[ProfileDataXML],
					[LastProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[EmailFormat] = @EmailFormat
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Members_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberID],
					[SiteID],
					[Username],
					[Password],
					[Title],
					[FirstName],
					[Surname],
					[EmailAddress],
					[Company],
					[Position],
					[HomePhone],
					[WorkPhone],
					[MobilePhone],
					[Fax],
					[Address1],
					[Address2],
					[LocationID],
					[AreaID],
					[CountryID],
					[PreferredCategoryID],
					[PreferredSubCategoryID],
					[PreferredSalaryID],
					[Subscribed],
					[MonthlyUpdate],
					[ReferringMemberID],
					[LastModifiedDate],
					[Valid],
					[EmailFormat],
					[LastLogon],
					[DateOfBirth],
					[Gender],
					[Tags],
					[Validated],
					[ValidateGUID],
					[MemberURLExtension],
					[WebsiteURL],
					[AvailabilityID],
					[AvailabilityFromDate],
					[MySpaceHeading],
					[MySpaceContent],
					[URLReferrer],
					[RequiredPasswordChange],
					[PreferredJobTitle],
					[PreferredAvailability],
					[PreferredAvailabilityType],
					[PreferredSalaryFrom],
					[PreferredSalaryTo],
					[CurrentSalaryFrom],
					[CurrentSalaryTo],
					[LookingFor],
					[Experience],
					[Skills],
					[Reasons],
					[Comments],
					[ProfileType],
					[EducationID],
					[SearchField],
					[RegisteredDate],
					[States],
					[Suburb],
					[PostCode],
					[ProfilePicture],
					[ShortBio],
					[WorkTypeID],
					[Memberships],
					[MemberStatusID],
					[LinkedInAccessToken],
					[ExternalMemberID],
					[PassportNo],
					[MailingAddress1],
					[MailingAddress2],
					[MailingStates],
					[MailingSuburb],
					[MailingPostCode],
					[MailingCountryID],
					[CountryName],
					[MailingCountryName],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ReferringSiteID],
					[MultiLingualFirstName],
					[MultiLingualSurame],
					[SecondaryEmail],
					[CandidateData],
					[EligibleToWorkIn],
					[ReferenceUponRequest],
					[PreferredLine],
					[VideoURL],
					[ProfileDataXML],
					[LastProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Members_GetBySiteIdEmailAddress" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberID],
					[SiteID],
					[Username],
					[Password],
					[Title],
					[FirstName],
					[Surname],
					[EmailAddress],
					[Company],
					[Position],
					[HomePhone],
					[WorkPhone],
					[MobilePhone],
					[Fax],
					[Address1],
					[Address2],
					[LocationID],
					[AreaID],
					[CountryID],
					[PreferredCategoryID],
					[PreferredSubCategoryID],
					[PreferredSalaryID],
					[Subscribed],
					[MonthlyUpdate],
					[ReferringMemberID],
					[LastModifiedDate],
					[Valid],
					[EmailFormat],
					[LastLogon],
					[DateOfBirth],
					[Gender],
					[Tags],
					[Validated],
					[ValidateGUID],
					[MemberURLExtension],
					[WebsiteURL],
					[AvailabilityID],
					[AvailabilityFromDate],
					[MySpaceHeading],
					[MySpaceContent],
					[URLReferrer],
					[RequiredPasswordChange],
					[PreferredJobTitle],
					[PreferredAvailability],
					[PreferredAvailabilityType],
					[PreferredSalaryFrom],
					[PreferredSalaryTo],
					[CurrentSalaryFrom],
					[CurrentSalaryTo],
					[LookingFor],
					[Experience],
					[Skills],
					[Reasons],
					[Comments],
					[ProfileType],
					[EducationID],
					[SearchField],
					[RegisteredDate],
					[States],
					[Suburb],
					[PostCode],
					[ProfilePicture],
					[ShortBio],
					[WorkTypeID],
					[Memberships],
					[MemberStatusID],
					[LinkedInAccessToken],
					[ExternalMemberID],
					[PassportNo],
					[MailingAddress1],
					[MailingAddress2],
					[MailingStates],
					[MailingSuburb],
					[MailingPostCode],
					[MailingCountryID],
					[CountryName],
					[MailingCountryName],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ReferringSiteID],
					[MultiLingualFirstName],
					[MultiLingualSurame],
					[SecondaryEmail],
					[CandidateData],
					[EligibleToWorkIn],
					[ReferenceUponRequest],
					[PreferredLine],
					[VideoURL],
					[ProfileDataXML],
					[LastProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[SiteID] = @SiteId
					AND [EmailAddress] = @EmailAddress
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Members_GetBySiteIdUsername" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Username" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberID],
					[SiteID],
					[Username],
					[Password],
					[Title],
					[FirstName],
					[Surname],
					[EmailAddress],
					[Company],
					[Position],
					[HomePhone],
					[WorkPhone],
					[MobilePhone],
					[Fax],
					[Address1],
					[Address2],
					[LocationID],
					[AreaID],
					[CountryID],
					[PreferredCategoryID],
					[PreferredSubCategoryID],
					[PreferredSalaryID],
					[Subscribed],
					[MonthlyUpdate],
					[ReferringMemberID],
					[LastModifiedDate],
					[Valid],
					[EmailFormat],
					[LastLogon],
					[DateOfBirth],
					[Gender],
					[Tags],
					[Validated],
					[ValidateGUID],
					[MemberURLExtension],
					[WebsiteURL],
					[AvailabilityID],
					[AvailabilityFromDate],
					[MySpaceHeading],
					[MySpaceContent],
					[URLReferrer],
					[RequiredPasswordChange],
					[PreferredJobTitle],
					[PreferredAvailability],
					[PreferredAvailabilityType],
					[PreferredSalaryFrom],
					[PreferredSalaryTo],
					[CurrentSalaryFrom],
					[CurrentSalaryTo],
					[LookingFor],
					[Experience],
					[Skills],
					[Reasons],
					[Comments],
					[ProfileType],
					[EducationID],
					[SearchField],
					[RegisteredDate],
					[States],
					[Suburb],
					[PostCode],
					[ProfilePicture],
					[ShortBio],
					[WorkTypeID],
					[Memberships],
					[MemberStatusID],
					[LinkedInAccessToken],
					[ExternalMemberID],
					[PassportNo],
					[MailingAddress1],
					[MailingAddress2],
					[MailingStates],
					[MailingSuburb],
					[MailingPostCode],
					[MailingCountryID],
					[CountryName],
					[MailingCountryName],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ReferringSiteID],
					[MultiLingualFirstName],
					[MultiLingualSurame],
					[SecondaryEmail],
					[CandidateData],
					[EligibleToWorkIn],
					[ReferenceUponRequest],
					[PreferredLine],
					[VideoURL],
					[ProfileDataXML],
					[LastProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[SiteID] = @SiteId
					AND [Username] = @Username
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Members_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberID],
					[SiteID],
					[Username],
					[Password],
					[Title],
					[FirstName],
					[Surname],
					[EmailAddress],
					[Company],
					[Position],
					[HomePhone],
					[WorkPhone],
					[MobilePhone],
					[Fax],
					[Address1],
					[Address2],
					[LocationID],
					[AreaID],
					[CountryID],
					[PreferredCategoryID],
					[PreferredSubCategoryID],
					[PreferredSalaryID],
					[Subscribed],
					[MonthlyUpdate],
					[ReferringMemberID],
					[LastModifiedDate],
					[Valid],
					[EmailFormat],
					[LastLogon],
					[DateOfBirth],
					[Gender],
					[Tags],
					[Validated],
					[ValidateGUID],
					[MemberURLExtension],
					[WebsiteURL],
					[AvailabilityID],
					[AvailabilityFromDate],
					[MySpaceHeading],
					[MySpaceContent],
					[URLReferrer],
					[RequiredPasswordChange],
					[PreferredJobTitle],
					[PreferredAvailability],
					[PreferredAvailabilityType],
					[PreferredSalaryFrom],
					[PreferredSalaryTo],
					[CurrentSalaryFrom],
					[CurrentSalaryTo],
					[LookingFor],
					[Experience],
					[Skills],
					[Reasons],
					[Comments],
					[ProfileType],
					[EducationID],
					[SearchField],
					[RegisteredDate],
					[States],
					[Suburb],
					[PostCode],
					[ProfilePicture],
					[ShortBio],
					[WorkTypeID],
					[Memberships],
					[MemberStatusID],
					[LinkedInAccessToken],
					[ExternalMemberID],
					[PassportNo],
					[MailingAddress1],
					[MailingAddress2],
					[MailingStates],
					[MailingSuburb],
					[MailingPostCode],
					[MailingCountryID],
					[CountryName],
					[MailingCountryName],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ReferringSiteID],
					[MultiLingualFirstName],
					[MultiLingualSurame],
					[SecondaryEmail],
					[CandidateData],
					[EligibleToWorkIn],
					[ReferenceUponRequest],
					[PreferredLine],
					[VideoURL],
					[ProfileDataXML],
					[LastProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[MemberID] = @MemberId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Members_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Members table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Username" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Password" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Company" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Position" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HomePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@WorkPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Address1" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address2" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AreaId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PreferredSubCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PreferredSalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Subscribed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MonthlyUpdate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferringMemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastLogon" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateOfBirth" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Gender" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberUrlExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WebsiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AvailabilityId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailabilityFromDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@MySpaceHeading" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MySpaceContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@UrlReferrer" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@RequiredPasswordChange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredJobTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PreferredAvailability" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@PreferredAvailabilityType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PreferredSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CurrentSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CurrentSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LookingFor" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Experience" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Reasons" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ProfileType" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RegisteredDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@States" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Suburb" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PostCode" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@ProfilePicture" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ShortBio" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Memberships" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInAccessToken" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExternalMemberId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PassportNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MailingAddress1" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@MailingAddress2" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@MailingStates" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingSuburb" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingPostCode" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MailingCountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferringSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MultiLingualFirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MultiLingualSurame" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SecondaryEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CandidateData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@EligibleToWorkIn" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ReferenceUponRequest" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredLine" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ProfileDataXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastProfileSubmittedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberID]
	, [SiteID]
	, [Username]
	, [Password]
	, [Title]
	, [FirstName]
	, [Surname]
	, [EmailAddress]
	, [Company]
	, [Position]
	, [HomePhone]
	, [WorkPhone]
	, [MobilePhone]
	, [Fax]
	, [Address1]
	, [Address2]
	, [LocationID]
	, [AreaID]
	, [CountryID]
	, [PreferredCategoryID]
	, [PreferredSubCategoryID]
	, [PreferredSalaryID]
	, [Subscribed]
	, [MonthlyUpdate]
	, [ReferringMemberID]
	, [LastModifiedDate]
	, [Valid]
	, [EmailFormat]
	, [LastLogon]
	, [DateOfBirth]
	, [Gender]
	, [Tags]
	, [Validated]
	, [ValidateGUID]
	, [MemberURLExtension]
	, [WebsiteURL]
	, [AvailabilityID]
	, [AvailabilityFromDate]
	, [MySpaceHeading]
	, [MySpaceContent]
	, [URLReferrer]
	, [RequiredPasswordChange]
	, [PreferredJobTitle]
	, [PreferredAvailability]
	, [PreferredAvailabilityType]
	, [PreferredSalaryFrom]
	, [PreferredSalaryTo]
	, [CurrentSalaryFrom]
	, [CurrentSalaryTo]
	, [LookingFor]
	, [Experience]
	, [Skills]
	, [Reasons]
	, [Comments]
	, [ProfileType]
	, [EducationID]
	, [SearchField]
	, [RegisteredDate]
	, [States]
	, [Suburb]
	, [PostCode]
	, [ProfilePicture]
	, [ShortBio]
	, [WorkTypeID]
	, [Memberships]
	, [MemberStatusID]
	, [LinkedInAccessToken]
	, [ExternalMemberID]
	, [PassportNo]
	, [MailingAddress1]
	, [MailingAddress2]
	, [MailingStates]
	, [MailingSuburb]
	, [MailingPostCode]
	, [MailingCountryID]
	, [CountryName]
	, [MailingCountryName]
	, [LoginAttempts]
	, [LastAttemptDate]
	, [Status]
	, [LastTermsAndConditionsDate]
	, [DefaultLanguageId]
	, [ReferringSiteID]
	, [MultiLingualFirstName]
	, [MultiLingualSurame]
	, [SecondaryEmail]
	, [CandidateData]
	, [EligibleToWorkIn]
	, [ReferenceUponRequest]
	, [PreferredLine]
	, [VideoURL]
	, [ProfileDataXML]
	, [LastProfileSubmittedDate]
    FROM
	[dbo].[Members]
    WHERE 
	 ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([Username] = @Username OR @Username IS NULL)
	AND ([Password] = @Password OR @Password IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([FirstName] = @FirstName OR @FirstName IS NULL)
	AND ([Surname] = @Surname OR @Surname IS NULL)
	AND ([EmailAddress] = @EmailAddress OR @EmailAddress IS NULL)
	AND ([Company] = @Company OR @Company IS NULL)
	AND ([Position] = @Position OR @Position IS NULL)
	AND ([HomePhone] = @HomePhone OR @HomePhone IS NULL)
	AND ([WorkPhone] = @WorkPhone OR @WorkPhone IS NULL)
	AND ([MobilePhone] = @MobilePhone OR @MobilePhone IS NULL)
	AND ([Fax] = @Fax OR @Fax IS NULL)
	AND ([Address1] = @Address1 OR @Address1 IS NULL)
	AND ([Address2] = @Address2 OR @Address2 IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([AreaID] = @AreaId OR @AreaId IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([PreferredCategoryID] = @PreferredCategoryId OR @PreferredCategoryId IS NULL)
	AND ([PreferredSubCategoryID] = @PreferredSubCategoryId OR @PreferredSubCategoryId IS NULL)
	AND ([PreferredSalaryID] = @PreferredSalaryId OR @PreferredSalaryId IS NULL)
	AND ([Subscribed] = @Subscribed OR @Subscribed IS NULL)
	AND ([MonthlyUpdate] = @MonthlyUpdate OR @MonthlyUpdate IS NULL)
	AND ([ReferringMemberID] = @ReferringMemberId OR @ReferringMemberId IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([EmailFormat] = @EmailFormat OR @EmailFormat IS NULL)
	AND ([LastLogon] = @LastLogon OR @LastLogon IS NULL)
	AND ([DateOfBirth] = @DateOfBirth OR @DateOfBirth IS NULL)
	AND ([Gender] = @Gender OR @Gender IS NULL)
	AND ([Tags] = @Tags OR @Tags IS NULL)
	AND ([Validated] = @Validated OR @Validated IS NULL)
	AND ([ValidateGUID] = @ValidateGuid OR @ValidateGuid IS NULL)
	AND ([MemberURLExtension] = @MemberUrlExtension OR @MemberUrlExtension IS NULL)
	AND ([WebsiteURL] = @WebsiteUrl OR @WebsiteUrl IS NULL)
	AND ([AvailabilityID] = @AvailabilityId OR @AvailabilityId IS NULL)
	AND ([AvailabilityFromDate] = @AvailabilityFromDate OR @AvailabilityFromDate IS NULL)
	AND ([URLReferrer] = @UrlReferrer OR @UrlReferrer IS NULL)
	AND ([RequiredPasswordChange] = @RequiredPasswordChange OR @RequiredPasswordChange IS NULL)
	AND ([PreferredJobTitle] = @PreferredJobTitle OR @PreferredJobTitle IS NULL)
	AND ([PreferredAvailability] = @PreferredAvailability OR @PreferredAvailability IS NULL)
	AND ([PreferredAvailabilityType] = @PreferredAvailabilityType OR @PreferredAvailabilityType IS NULL)
	AND ([PreferredSalaryFrom] = @PreferredSalaryFrom OR @PreferredSalaryFrom IS NULL)
	AND ([PreferredSalaryTo] = @PreferredSalaryTo OR @PreferredSalaryTo IS NULL)
	AND ([CurrentSalaryFrom] = @CurrentSalaryFrom OR @CurrentSalaryFrom IS NULL)
	AND ([CurrentSalaryTo] = @CurrentSalaryTo OR @CurrentSalaryTo IS NULL)
	AND ([LookingFor] = @LookingFor OR @LookingFor IS NULL)
	AND ([Experience] = @Experience OR @Experience IS NULL)
	AND ([Skills] = @Skills OR @Skills IS NULL)
	AND ([Reasons] = @Reasons OR @Reasons IS NULL)
	AND ([Comments] = @Comments OR @Comments IS NULL)
	AND ([ProfileType] = @ProfileType OR @ProfileType IS NULL)
	AND ([EducationID] = @EducationId OR @EducationId IS NULL)
	AND ([SearchField] = @SearchField OR @SearchField IS NULL)
	AND ([RegisteredDate] = @RegisteredDate OR @RegisteredDate IS NULL)
	AND ([States] = @States OR @States IS NULL)
	AND ([Suburb] = @Suburb OR @Suburb IS NULL)
	AND ([PostCode] = @PostCode OR @PostCode IS NULL)
	AND ([ProfilePicture] = @ProfilePicture OR @ProfilePicture IS NULL)
	AND ([ShortBio] = @ShortBio OR @ShortBio IS NULL)
	AND ([WorkTypeID] = @WorkTypeId OR @WorkTypeId IS NULL)
	AND ([Memberships] = @Memberships OR @Memberships IS NULL)
	AND ([MemberStatusID] = @MemberStatusId OR @MemberStatusId IS NULL)
	AND ([LinkedInAccessToken] = @LinkedInAccessToken OR @LinkedInAccessToken IS NULL)
	AND ([ExternalMemberID] = @ExternalMemberId OR @ExternalMemberId IS NULL)
	AND ([PassportNo] = @PassportNo OR @PassportNo IS NULL)
	AND ([MailingAddress1] = @MailingAddress1 OR @MailingAddress1 IS NULL)
	AND ([MailingAddress2] = @MailingAddress2 OR @MailingAddress2 IS NULL)
	AND ([MailingStates] = @MailingStates OR @MailingStates IS NULL)
	AND ([MailingSuburb] = @MailingSuburb OR @MailingSuburb IS NULL)
	AND ([MailingPostCode] = @MailingPostCode OR @MailingPostCode IS NULL)
	AND ([MailingCountryID] = @MailingCountryId OR @MailingCountryId IS NULL)
	AND ([CountryName] = @CountryName OR @CountryName IS NULL)
	AND ([MailingCountryName] = @MailingCountryName OR @MailingCountryName IS NULL)
	AND ([LoginAttempts] = @LoginAttempts OR @LoginAttempts IS NULL)
	AND ([LastAttemptDate] = @LastAttemptDate OR @LastAttemptDate IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
	AND ([LastTermsAndConditionsDate] = @LastTermsAndConditionsDate OR @LastTermsAndConditionsDate IS NULL)
	AND ([DefaultLanguageId] = @DefaultLanguageId OR @DefaultLanguageId IS NULL)
	AND ([ReferringSiteID] = @ReferringSiteId OR @ReferringSiteId IS NULL)
	AND ([MultiLingualFirstName] = @MultiLingualFirstName OR @MultiLingualFirstName IS NULL)
	AND ([MultiLingualSurame] = @MultiLingualSurame OR @MultiLingualSurame IS NULL)
	AND ([SecondaryEmail] = @SecondaryEmail OR @SecondaryEmail IS NULL)
	AND ([CandidateData] = @CandidateData OR @CandidateData IS NULL)
	AND ([EligibleToWorkIn] = @EligibleToWorkIn OR @EligibleToWorkIn IS NULL)
	AND ([ReferenceUponRequest] = @ReferenceUponRequest OR @ReferenceUponRequest IS NULL)
	AND ([PreferredLine] = @PreferredLine OR @PreferredLine IS NULL)
	AND ([VideoURL] = @VideoUrl OR @VideoUrl IS NULL)
	AND ([ProfileDataXML] = @ProfileDataXml OR @ProfileDataXml IS NULL)
	AND ([LastProfileSubmittedDate] = @LastProfileSubmittedDate OR @LastProfileSubmittedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberID]
	, [SiteID]
	, [Username]
	, [Password]
	, [Title]
	, [FirstName]
	, [Surname]
	, [EmailAddress]
	, [Company]
	, [Position]
	, [HomePhone]
	, [WorkPhone]
	, [MobilePhone]
	, [Fax]
	, [Address1]
	, [Address2]
	, [LocationID]
	, [AreaID]
	, [CountryID]
	, [PreferredCategoryID]
	, [PreferredSubCategoryID]
	, [PreferredSalaryID]
	, [Subscribed]
	, [MonthlyUpdate]
	, [ReferringMemberID]
	, [LastModifiedDate]
	, [Valid]
	, [EmailFormat]
	, [LastLogon]
	, [DateOfBirth]
	, [Gender]
	, [Tags]
	, [Validated]
	, [ValidateGUID]
	, [MemberURLExtension]
	, [WebsiteURL]
	, [AvailabilityID]
	, [AvailabilityFromDate]
	, [MySpaceHeading]
	, [MySpaceContent]
	, [URLReferrer]
	, [RequiredPasswordChange]
	, [PreferredJobTitle]
	, [PreferredAvailability]
	, [PreferredAvailabilityType]
	, [PreferredSalaryFrom]
	, [PreferredSalaryTo]
	, [CurrentSalaryFrom]
	, [CurrentSalaryTo]
	, [LookingFor]
	, [Experience]
	, [Skills]
	, [Reasons]
	, [Comments]
	, [ProfileType]
	, [EducationID]
	, [SearchField]
	, [RegisteredDate]
	, [States]
	, [Suburb]
	, [PostCode]
	, [ProfilePicture]
	, [ShortBio]
	, [WorkTypeID]
	, [Memberships]
	, [MemberStatusID]
	, [LinkedInAccessToken]
	, [ExternalMemberID]
	, [PassportNo]
	, [MailingAddress1]
	, [MailingAddress2]
	, [MailingStates]
	, [MailingSuburb]
	, [MailingPostCode]
	, [MailingCountryID]
	, [CountryName]
	, [MailingCountryName]
	, [LoginAttempts]
	, [LastAttemptDate]
	, [Status]
	, [LastTermsAndConditionsDate]
	, [DefaultLanguageId]
	, [ReferringSiteID]
	, [MultiLingualFirstName]
	, [MultiLingualSurame]
	, [SecondaryEmail]
	, [CandidateData]
	, [EligibleToWorkIn]
	, [ReferenceUponRequest]
	, [PreferredLine]
	, [VideoURL]
	, [ProfileDataXML]
	, [LastProfileSubmittedDate]
    FROM
	[dbo].[Members]
    WHERE 
	 ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([Username] = @Username AND @Username is not null)
	OR ([Password] = @Password AND @Password is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([Surname] = @Surname AND @Surname is not null)
	OR ([EmailAddress] = @EmailAddress AND @EmailAddress is not null)
	OR ([Company] = @Company AND @Company is not null)
	OR ([Position] = @Position AND @Position is not null)
	OR ([HomePhone] = @HomePhone AND @HomePhone is not null)
	OR ([WorkPhone] = @WorkPhone AND @WorkPhone is not null)
	OR ([MobilePhone] = @MobilePhone AND @MobilePhone is not null)
	OR ([Fax] = @Fax AND @Fax is not null)
	OR ([Address1] = @Address1 AND @Address1 is not null)
	OR ([Address2] = @Address2 AND @Address2 is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([AreaID] = @AreaId AND @AreaId is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([PreferredCategoryID] = @PreferredCategoryId AND @PreferredCategoryId is not null)
	OR ([PreferredSubCategoryID] = @PreferredSubCategoryId AND @PreferredSubCategoryId is not null)
	OR ([PreferredSalaryID] = @PreferredSalaryId AND @PreferredSalaryId is not null)
	OR ([Subscribed] = @Subscribed AND @Subscribed is not null)
	OR ([MonthlyUpdate] = @MonthlyUpdate AND @MonthlyUpdate is not null)
	OR ([ReferringMemberID] = @ReferringMemberId AND @ReferringMemberId is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([EmailFormat] = @EmailFormat AND @EmailFormat is not null)
	OR ([LastLogon] = @LastLogon AND @LastLogon is not null)
	OR ([DateOfBirth] = @DateOfBirth AND @DateOfBirth is not null)
	OR ([Gender] = @Gender AND @Gender is not null)
	OR ([Tags] = @Tags AND @Tags is not null)
	OR ([Validated] = @Validated AND @Validated is not null)
	OR ([ValidateGUID] = @ValidateGuid AND @ValidateGuid is not null)
	OR ([MemberURLExtension] = @MemberUrlExtension AND @MemberUrlExtension is not null)
	OR ([WebsiteURL] = @WebsiteUrl AND @WebsiteUrl is not null)
	OR ([AvailabilityID] = @AvailabilityId AND @AvailabilityId is not null)
	OR ([AvailabilityFromDate] = @AvailabilityFromDate AND @AvailabilityFromDate is not null)
	OR ([URLReferrer] = @UrlReferrer AND @UrlReferrer is not null)
	OR ([RequiredPasswordChange] = @RequiredPasswordChange AND @RequiredPasswordChange is not null)
	OR ([PreferredJobTitle] = @PreferredJobTitle AND @PreferredJobTitle is not null)
	OR ([PreferredAvailability] = @PreferredAvailability AND @PreferredAvailability is not null)
	OR ([PreferredAvailabilityType] = @PreferredAvailabilityType AND @PreferredAvailabilityType is not null)
	OR ([PreferredSalaryFrom] = @PreferredSalaryFrom AND @PreferredSalaryFrom is not null)
	OR ([PreferredSalaryTo] = @PreferredSalaryTo AND @PreferredSalaryTo is not null)
	OR ([CurrentSalaryFrom] = @CurrentSalaryFrom AND @CurrentSalaryFrom is not null)
	OR ([CurrentSalaryTo] = @CurrentSalaryTo AND @CurrentSalaryTo is not null)
	OR ([LookingFor] = @LookingFor AND @LookingFor is not null)
	OR ([Experience] = @Experience AND @Experience is not null)
	OR ([Skills] = @Skills AND @Skills is not null)
	OR ([Reasons] = @Reasons AND @Reasons is not null)
	OR ([Comments] = @Comments AND @Comments is not null)
	OR ([ProfileType] = @ProfileType AND @ProfileType is not null)
	OR ([EducationID] = @EducationId AND @EducationId is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([RegisteredDate] = @RegisteredDate AND @RegisteredDate is not null)
	OR ([States] = @States AND @States is not null)
	OR ([Suburb] = @Suburb AND @Suburb is not null)
	OR ([PostCode] = @PostCode AND @PostCode is not null)
	OR ([ProfilePicture] = @ProfilePicture AND @ProfilePicture is not null)
	OR ([ShortBio] = @ShortBio AND @ShortBio is not null)
	OR ([WorkTypeID] = @WorkTypeId AND @WorkTypeId is not null)
	OR ([Memberships] = @Memberships AND @Memberships is not null)
	OR ([MemberStatusID] = @MemberStatusId AND @MemberStatusId is not null)
	OR ([LinkedInAccessToken] = @LinkedInAccessToken AND @LinkedInAccessToken is not null)
	OR ([ExternalMemberID] = @ExternalMemberId AND @ExternalMemberId is not null)
	OR ([PassportNo] = @PassportNo AND @PassportNo is not null)
	OR ([MailingAddress1] = @MailingAddress1 AND @MailingAddress1 is not null)
	OR ([MailingAddress2] = @MailingAddress2 AND @MailingAddress2 is not null)
	OR ([MailingStates] = @MailingStates AND @MailingStates is not null)
	OR ([MailingSuburb] = @MailingSuburb AND @MailingSuburb is not null)
	OR ([MailingPostCode] = @MailingPostCode AND @MailingPostCode is not null)
	OR ([MailingCountryID] = @MailingCountryId AND @MailingCountryId is not null)
	OR ([CountryName] = @CountryName AND @CountryName is not null)
	OR ([MailingCountryName] = @MailingCountryName AND @MailingCountryName is not null)
	OR ([LoginAttempts] = @LoginAttempts AND @LoginAttempts is not null)
	OR ([LastAttemptDate] = @LastAttemptDate AND @LastAttemptDate is not null)
	OR ([Status] = @Status AND @Status is not null)
	OR ([LastTermsAndConditionsDate] = @LastTermsAndConditionsDate AND @LastTermsAndConditionsDate is not null)
	OR ([DefaultLanguageId] = @DefaultLanguageId AND @DefaultLanguageId is not null)
	OR ([ReferringSiteID] = @ReferringSiteId AND @ReferringSiteId is not null)
	OR ([MultiLingualFirstName] = @MultiLingualFirstName AND @MultiLingualFirstName is not null)
	OR ([MultiLingualSurame] = @MultiLingualSurame AND @MultiLingualSurame is not null)
	OR ([SecondaryEmail] = @SecondaryEmail AND @SecondaryEmail is not null)
	OR ([CandidateData] = @CandidateData AND @CandidateData is not null)
	OR ([EligibleToWorkIn] = @EligibleToWorkIn AND @EligibleToWorkIn is not null)
	OR ([ReferenceUponRequest] = @ReferenceUponRequest AND @ReferenceUponRequest is not null)
	OR ([PreferredLine] = @PreferredLine AND @PreferredLine is not null)
	OR ([VideoURL] = @VideoUrl AND @VideoUrl is not null)
	OR ([ProfileDataXML] = @ProfileDataXml AND @ProfileDataXml is not null)
	OR ([LastProfileSubmittedDate] = @LastProfileSubmittedDate AND @LastProfileSubmittedDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Members_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Members table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberID] )
				SELECT TOP {3} [MemberID]
				FROM [dbo].[Members] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberID], O.[SiteID], O.[Username], O.[Password], O.[Title], O.[FirstName], O.[Surname], O.[EmailAddress], O.[Company], O.[Position], O.[HomePhone], O.[WorkPhone], O.[MobilePhone], O.[Fax], O.[Address1], O.[Address2], O.[LocationID], O.[AreaID], O.[CountryID], O.[PreferredCategoryID], O.[PreferredSubCategoryID], O.[PreferredSalaryID], O.[Subscribed], O.[MonthlyUpdate], O.[ReferringMemberID], O.[LastModifiedDate], O.[Valid], O.[EmailFormat], O.[LastLogon], O.[DateOfBirth], O.[Gender], O.[Tags], O.[Validated], O.[ValidateGUID], O.[MemberURLExtension], O.[WebsiteURL], O.[AvailabilityID], O.[AvailabilityFromDate], O.[MySpaceHeading], O.[MySpaceContent], O.[URLReferrer], O.[RequiredPasswordChange], O.[PreferredJobTitle], O.[PreferredAvailability], O.[PreferredAvailabilityType], O.[PreferredSalaryFrom], O.[PreferredSalaryTo], O.[CurrentSalaryFrom], O.[CurrentSalaryTo], O.[LookingFor], O.[Experience], O.[Skills], O.[Reasons], O.[Comments], O.[ProfileType], O.[EducationID], O.[SearchField], O.[RegisteredDate], O.[States], O.[Suburb], O.[PostCode], O.[ProfilePicture], O.[ShortBio], O.[WorkTypeID], O.[Memberships], O.[MemberStatusID], O.[LinkedInAccessToken], O.[ExternalMemberID], O.[PassportNo], O.[MailingAddress1], O.[MailingAddress2], O.[MailingStates], O.[MailingSuburb], O.[MailingPostCode], O.[MailingCountryID], O.[CountryName], O.[MailingCountryName], O.[LoginAttempts], O.[LastAttemptDate], O.[Status], O.[LastTermsAndConditionsDate], O.[DefaultLanguageId], O.[ReferringSiteID], O.[MultiLingualFirstName], O.[MultiLingualSurame], O.[SecondaryEmail], O.[CandidateData], O.[EligibleToWorkIn], O.[ReferenceUponRequest], O.[PreferredLine], O.[VideoURL], O.[ProfileDataXML], O.[LastProfileSubmittedDate]
				FROM
				    [dbo].[Members] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberID] = PageIndex.[MemberID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Members] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Members_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Members table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Members]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[MemberID] = @MemberId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_GetBySiteIdEmailAddress"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[SiteID] = @SiteId
					AND [EmailAddress] = @EmailAddress
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Members table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Username" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Password" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Company" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Position" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HomePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@WorkPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Address1" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address2" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AreaId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PreferredSubCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PreferredSalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Subscribed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MonthlyUpdate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferringMemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastLogon" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateOfBirth" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Gender" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberUrlExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WebsiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AvailabilityId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailabilityFromDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@MySpaceHeading" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MySpaceContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@UrlReferrer" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@RequiredPasswordChange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredJobTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PreferredAvailability" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@PreferredAvailabilityType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PreferredSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CurrentSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CurrentSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LookingFor" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Experience" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Reasons" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ProfileType" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RegisteredDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@States" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Suburb" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PostCode" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@ProfilePicture" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ShortBio" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Memberships" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInAccessToken" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExternalMemberId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PassportNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MailingAddress1" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@MailingAddress2" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@MailingStates" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingSuburb" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingPostCode" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MailingCountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferringSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MultiLingualFirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MultiLingualSurame" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SecondaryEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CandidateData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@EligibleToWorkIn" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ReferenceUponRequest" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredLine" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ProfileDataXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastProfileSubmittedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Members table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Username" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Password" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Company" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Position" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HomePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@WorkPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Address1" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address2" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AreaId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PreferredSubCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PreferredSalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Subscribed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MonthlyUpdate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferringMemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastLogon" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateOfBirth" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Gender" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberUrlExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WebsiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AvailabilityId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailabilityFromDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@MySpaceHeading" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MySpaceContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@UrlReferrer" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@RequiredPasswordChange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredJobTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PreferredAvailability" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@PreferredAvailabilityType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PreferredSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CurrentSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CurrentSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LookingFor" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Experience" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Reasons" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ProfileType" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RegisteredDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@States" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Suburb" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PostCode" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@ProfilePicture" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ShortBio" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Memberships" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInAccessToken" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExternalMemberId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PassportNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MailingAddress1" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@MailingAddress2" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@MailingStates" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingSuburb" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingPostCode" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MailingCountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferringSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MultiLingualFirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MultiLingualSurame" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SecondaryEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CandidateData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@EligibleToWorkIn" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ReferenceUponRequest" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredLine" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ProfileDataXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastProfileSubmittedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate
				WHERE
[MemberID] = @MemberId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_GetBySiteIdUsername"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Username" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[SiteID] = @SiteId
					AND [Username] = @Username
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_GetByCountryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[CountryID] = @CountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_AdminGetPaged"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@MemberID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Username" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@pageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@pageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount    
  
 FROM  Members Members WITH(NOLOCK)    
  INNER JOIN EmailFormats EmailFormats WITH(NOLOCK) ON EmailFormats.EmailFormatID = Members.EmailFormat    
  INNER JOIN @tmpMemberID MemberSearchResult ON Members.MemberID = MemberSearchResult.MemberID    
  LEFT JOIN SiteCountries sc ON sc.SiteID = @SiteID AND sc.CountryID = Members.CountryID
  LEFT JOIN SiteCountries msc ON msc.SiteID = @SiteID AND msc.CountryID = Members.MailingCountryID
  LEFT JOIN @tmpMemberFile tmf ON tmf.MemberID = Members.MemberID
 WHERE      MemberSearchResult.RowNumber >= @PageStart      
 AND        MemberSearchResult.RowNumber <= @PageEnd       
 ORDER BY   MemberSearchResult.RowNumber      
     
END  

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Members table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Username" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Password" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Company" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Position" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HomePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@WorkPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Address1" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address2" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AreaId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PreferredSubCategoryId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PreferredSalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Subscribed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MonthlyUpdate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferringMemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastLogon" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateOfBirth" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Gender" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@Tags" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberUrlExtension" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WebsiteUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AvailabilityId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailabilityFromDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@MySpaceHeading" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MySpaceContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@UrlReferrer" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@RequiredPasswordChange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredJobTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PreferredAvailability" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@PreferredAvailabilityType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PreferredSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CurrentSalaryFrom" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CurrentSalaryTo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LookingFor" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Experience" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Reasons" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ProfileType" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RegisteredDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@States" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Suburb" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PostCode" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@ProfilePicture" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ShortBio" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Memberships" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInAccessToken" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExternalMemberId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PassportNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MailingAddress1" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@MailingAddress2" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@MailingStates" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingSuburb" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingPostCode" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@MailingCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MailingCountryName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferringSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MultiLingualFirstName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MultiLingualSurame" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@SecondaryEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CandidateData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@EligibleToWorkIn" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ReferenceUponRequest" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredLine" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ProfileDataXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastProfileSubmittedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate
					)
				
				-- Get the identity value
				SET @MemberId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_GetByEducationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[EducationID] = @EducationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Members table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Members] WITH (ROWLOCK) 
				WHERE
					[MemberID] = @MemberId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_GetByKeyword"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Keyword" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ons],
		[Comments],
		[ProfileType],
		[EducationID],
		[RegisteredDate],
		[States],
		[Suburb], 
		[PostCode]
	FROM
		[dbo].[Members] (NOLOCK)
	WHERE
		[SiteID] = @SiteID
		--AND [MemberURLExtension] = @MemberUrlExtension
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_CustomGetNewValidMembers"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate        
           
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Members table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate]
				FROM
					[dbo].[Members]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_CustomGetCV"  skip="true">
			<comment><![CDATA[-- New SPs


]]></comment>
			<parameters>
				<parameter name="@MemberID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
Headline,
	MemberStatusID,
	ShortBio,
	PreferredCategoryID,
	PreferredSubCategoryID,
	LocationID,
	AreaID,
	WorkTypeID,
	Memberships,
	Skills
	FROM Members m WITH (NOLOCK) 
	--LEFT JOIN MemberStatus ms ON m.MemberStatusID = ms.MemberStatusID AND ms.GlobalTemplate = 0
	WHERE MemberID = @MemberID
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_GetByEmailFormat"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[EmailFormat] = @EmailFormat
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Members table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tProfileSubmittedDate]
				FROM
					[dbo].[Members]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_CustomPeopleSearch"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@Keyword" type="nvarchar" direction="Input" size="2500" precision="0" scale="0" param="(2500)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeID" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ProfessionID" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RoleID" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CountryID" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LocationID" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AreaID" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EligibleToWorkIn" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@AvailabilityFromDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
[WorkTypeName],
            
Member.PreferredSalaryId,
st.SalaryTypeName,
Member.PreferredSalaryFrom,
Member.PreferredSalaryTo,
Member.AvailabilityID,
Member.AvailabilityFromDate
FROM @tmpMemberSearch tmpMemberSearch
INNER JOIN Members Member WITH (NOLOCK)
ON tmpMemberSearch.MemberId = Member.MemberID
LEFT JOIN SalaryType st WITH (NOLOCK)
ON Member.PreferredSalaryID = st.SalaryTypeID
LEFT JOIN Location loc WITH (NOLOCK) 
ON loc.LocationID = Member.LocationID
LEFT JOIN Countries country WITH (NOLOCK)
ON loc.CountryID = country.CountryID
ORDER BY RowNumber 

SELECT COUNT(*)
 FROM                                       
 Members m WITH (NOLOCK)
 WHERE m.SiteID = @SiteId
 AND ((@WorkTypeID IS NULL) OR (SELECT COUNT(*) FROM [dbo].ParseIntCSV(WorkTypeId) tbl1 INNER JOIN [dbo].ParseIntCSV(@WorkTypeID) tbl2 ON tbl1.id = tbl2.id) >= 1)
 AND ((@SalaryTypeID IS NULL) OR PreferredSalaryId = @SalaryTypeID)
 AND ((@SalaryLowerBand IS NULL) OR (LEN(PreferredSalaryFrom) > 0 AND CONVERT(NUMERIC(15,2), PreferredSalaryFrom) >= @SalaryLowerBand))
 AND ((@SalaryUpperBand IS NULL) OR (LEN(PreferredSalaryTo) > 0 AND CONVERT(NUMERIC(15,2), PreferredSalaryTo) <= @SalaryUpperBand))
 AND ((@ProfessionID IS NULL) 
		OR (SELECT COUNT(*) FROM [dbo].ParseIntCSV(PreferredCategoryId) tbl1 INNER JOIN [dbo].ParseIntCSV(@ProfessionID) tbl2 ON tbl1.id = tbl2.id) >= 1)
 AND ((@RoleID IS NULL)
	OR (SELECT COUNT(*) FROM [dbo].ParseIntCSV(PreferredSubCategoryID) tbl1 INNER JOIN [dbo].ParseIntCSV(@RoleID) tbl2 ON tbl1.id = tbl2.id) >= 1
	OR (m.SiteiD = @SiteID AND ISNULL(PreferredCategoryID, '0') != '0' AND (ISNULL(PreferredSubCategoryID, '0') = '0' OR PreferredSubCategoryID = '') AND (SELECT COUNT(*) FROM Roles tbl1 INNER JOIN [dbo].ParseIntCSV(@RoleID) tbl2 ON tbl1.RoleID = tbl2.id WHERE tbl1.ProfessionID IN (PreferredCategoryID)) >= (SELECT COUNT(*) FROM Roles WHERE ProfessionID IN (PreferredCategoryID))))
 AND ((@LocationID IS NULL) OR (SELECT COUNT(*) FROM [dbo].ParseIntCSV(LocationID) tbl1 INNER JOIN [dbo].ParseIntCSV(@LocationID) tbl2 ON tbl1.id = tbl2.id) >= 1)
 AND ((@AreaID IS NULL) 
	OR (SELECT COUNT(*) FROM [dbo].ParseIntCSV(AreaID) tbl1 INNER JOIN [dbo].ParseIntCSV(@AreaID) tbl2 ON tbl1.id = tbl2.id) >= 1
	OR (m.SiteiD = @SiteID AND ISNULL(LocationID, '0') != '0' AND (ISNULL(AreaID, '0') = '0' OR AreaID = '')  AND (SELECT COUNT(*) FROM Area tbl1 INNER JOIN [dbo].ParseIntCSV(@AreaID) tbl2 ON tbl1.AreaID = tbl2.id WHERE tbl1.LocationID IN (LocationID)) >= (SELECT COUNT(*) FROM Area WHERE LocationID IN (LocationID))))
 AND ((@EligibleToWorkIn IS NULL) OR (SELECT COUNT(*) FROM [dbo].ParseIntCSV(EligibleToWorkIn) tbl1 INNER JOIN [dbo].ParseIntCSV(@EligibleToWorkIn) tbl2 ON tbl1.id = tbl2.id) >= 1)
 AND  ((@AvailabilityFromDate IS NULL) OR @AvailabilityFromDate >= AvailabilityFromDate)
 AND ((@AvailabilityID IS NULL) OR AvailabilityID = @AvailabilityID)    
 AND ((@Keyword = '') OR FirstName LIKE '%'+@Keyword+'%' OR Surname LIKE '%'+@Keyword+'%' OR Surname LIKE '%'+@Keyword+'%' OR PreferredJobTitle LIKE '%'+@Keyword+'%' OR ShortBio LIKE '%'+@Keyword+'%' OR Skills LIKE '%'+@Keyword+'%')                 
 AND m.Validated = 1 AND m.Valid = 1
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_GetMemberCount"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],  [PreferredSalaryID]
		FROM [dbo].[Members]  (NOLOCK) WHERE 1=0
	END
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_CustomGetNewValidProfiles"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate              
                 
END 

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Members_PeopleSearch"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredSubCategoryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PreferredSalaryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@AvailabilityId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchExpression" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount      
   FROM [dbo].[Members] (NOLOCK) WHERE 1=0      
  END      
END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberWizard_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberWizard table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberWizardID],
					[SiteID],
					[MemberWizardParentID],
					[ProfileTitle],
					[CVTitle],
					[RolePreferencesTitle],
					[EducationTitle],
					[MembershipsTitle],
					[ExperienceTitle],
					[SkillsTitle],
					[ProfileEnable],
					[CVEnable],
					[RolePreferencesEnable],
					[EducationEnable],
					[MembershipsEnable],
					[ExperienceEnable],
					[SkillsEnable],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[DirectorshipTitle],
					[DirectorshipEnable],
					[Skills],
					[LicenseTypes],
					[SummaryTitle],
					[PersonalDetailsTitle],
					[LicensesTitle],
					[AttachCoverLetterTitle],
					[LanguagesTitle],
					[ReferencesTitle],
					[CustomQuestionTitle],
					[SummaryPoints],
					[PersonalDetailsPoints],
					[LicensesPoints],
					[AttachCoverLetterPoints],
					[LanguagesPoints],
					[ReferencesPoints],
					[CustomQuestionPoints],
					[ProfilePoints],
					[CVPoints],
					[RolePreferencesPoints],
					[EducationPoints],
					[MembershipsPoints],
					[ExperiencePoints],
					[SkillsPoints],
					[DirectorshipPoints],
					[WizardLanguageXML],
					[CustomQuestionsXML],
					[MinExperiencesEntry],
					[MinReferencesEntry],
					[MinEducationsEntry],
					[QualificationNames]
				FROM
					[dbo].[MemberWizard]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberWizard_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberWizard table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberWizardID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberWizardID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberWizardID]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberWizard]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberWizardID], O.[SiteID], O.[MemberWizardParentID], O.[ProfileTitle], O.[CVTitle], O.[RolePreferencesTitle], O.[EducationTitle], O.[MembershipsTitle], O.[ExperienceTitle], O.[SkillsTitle], O.[ProfileEnable], O.[CVEnable], O.[RolePreferencesEnable], O.[EducationEnable], O.[MembershipsEnable], O.[ExperienceEnable], O.[SkillsEnable], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[DirectorshipTitle], O.[DirectorshipEnable], O.[Skills], O.[LicenseTypes], O.[SummaryTitle], O.[PersonalDetailsTitle], O.[LicensesTitle], O.[AttachCoverLetterTitle], O.[LanguagesTitle], O.[ReferencesTitle], O.[CustomQuestionTitle], O.[SummaryPoints], O.[PersonalDetailsPoints], O.[LicensesPoints], O.[AttachCoverLetterPoints], O.[LanguagesPoints], O.[ReferencesPoints], O.[CustomQuestionPoints], O.[ProfilePoints], O.[CVPoints], O.[RolePreferencesPoints], O.[EducationPoints], O.[MembershipsPoints], O.[ExperiencePoints], O.[SkillsPoints], O.[DirectorshipPoints], O.[WizardLanguageXML], O.[CustomQuestionsXML], O.[MinExperiencesEntry], O.[MinReferencesEntry], O.[MinEducationsEntry], O.[QualificationNames]
				FROM
				    [dbo].[MemberWizard] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberWizardID] = PageIndex.[MemberWizardID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberWizard]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberWizard_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberWizard table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberWizardId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberWizardParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfileTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@CvTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@RolePreferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@EducationTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@MembershipsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ExperienceTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@SkillsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ProfileEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CvEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@RolePreferencesEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EducationEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MembershipsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ExperienceEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SkillsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DirectorshipTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@DirectorshipEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LicenseTypes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SummaryTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@PersonalDetailsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LicensesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@AttachCoverLetterTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LanguagesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ReferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@CustomQuestionTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@SummaryPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PersonalDetailsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LicensesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AttachCoverLetterPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguagesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomQuestionPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfilePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CvPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RolePreferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EducationPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MembershipsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExperiencePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SkillsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DirectorshipPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WizardLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CustomQuestionsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@MinExperiencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@MinReferencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@MinEducationsEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@QualificationNames" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberWizard]
					(
					[SiteID]
					,[MemberWizardParentID]
					,[ProfileTitle]
					,[CVTitle]
					,[RolePreferencesTitle]
					,[EducationTitle]
					,[MembershipsTitle]
					,[ExperienceTitle]
					,[SkillsTitle]
					,[ProfileEnable]
					,[CVEnable]
					,[RolePreferencesEnable]
					,[EducationEnable]
					,[MembershipsEnable]
					,[ExperienceEnable]
					,[SkillsEnable]
					,[GlobalTemplate]
					,[LastModifiedBy]
					,[LastModified]
					,[DirectorshipTitle]
					,[DirectorshipEnable]
					,[Skills]
					,[LicenseTypes]
					,[SummaryTitle]
					,[PersonalDetailsTitle]
					,[LicensesTitle]
					,[AttachCoverLetterTitle]
					,[LanguagesTitle]
					,[ReferencesTitle]
					,[CustomQuestionTitle]
					,[SummaryPoints]
					,[PersonalDetailsPoints]
					,[LicensesPoints]
					,[AttachCoverLetterPoints]
					,[LanguagesPoints]
					,[ReferencesPoints]
					,[CustomQuestionPoints]
					,[ProfilePoints]
					,[CVPoints]
					,[RolePreferencesPoints]
					,[EducationPoints]
					,[MembershipsPoints]
					,[ExperiencePoints]
					,[SkillsPoints]
					,[DirectorshipPoints]
					,[WizardLanguageXML]
					,[CustomQuestionsXML]
					,[MinExperiencesEntry]
					,[MinReferencesEntry]
					,[MinEducationsEntry]
					,[QualificationNames]
					)
				VALUES
					(
					@SiteId
					,@MemberWizardParentId
					,@ProfileTitle
					,@CvTitle
					,@RolePreferencesTitle
					,@EducationTitle
					,@MembershipsTitle
					,@ExperienceTitle
					,@SkillsTitle
					,@ProfileEnable
					,@CvEnable
					,@RolePreferencesEnable
					,@EducationEnable
					,@MembershipsEnable
					,@ExperienceEnable
					,@SkillsEnable
					,@GlobalTemplate
					,@LastModifiedBy
					,@LastModified
					,@DirectorshipTitle
					,@DirectorshipEnable
					,@Skills
					,@LicenseTypes
					,@SummaryTitle
					,@PersonalDetailsTitle
					,@LicensesTitle
					,@AttachCoverLetterTitle
					,@LanguagesTitle
					,@ReferencesTitle
					,@CustomQuestionTitle
					,@SummaryPoints
					,@PersonalDetailsPoints
					,@LicensesPoints
					,@AttachCoverLetterPoints
					,@LanguagesPoints
					,@ReferencesPoints
					,@CustomQuestionPoints
					,@ProfilePoints
					,@CvPoints
					,@RolePreferencesPoints
					,@EducationPoints
					,@MembershipsPoints
					,@ExperiencePoints
					,@SkillsPoints
					,@DirectorshipPoints
					,@WizardLanguageXml
					,@CustomQuestionsXml
					,@MinExperiencesEntry
					,@MinReferencesEntry
					,@MinEducationsEntry
					,@QualificationNames
					)
				
				-- Get the identity value
				SET @MemberWizardId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberWizard_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberWizard table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberWizardId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberWizardParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfileTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@CvTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@RolePreferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@EducationTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@MembershipsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ExperienceTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@SkillsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ProfileEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CvEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@RolePreferencesEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EducationEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MembershipsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ExperienceEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SkillsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DirectorshipTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@DirectorshipEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LicenseTypes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SummaryTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@PersonalDetailsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LicensesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@AttachCoverLetterTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LanguagesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ReferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@CustomQuestionTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@SummaryPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PersonalDetailsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LicensesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AttachCoverLetterPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguagesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomQuestionPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfilePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CvPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RolePreferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EducationPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MembershipsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExperiencePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SkillsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DirectorshipPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WizardLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CustomQuestionsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@MinExperiencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@MinReferencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@MinEducationsEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault=""/>
				<parameter name="@QualificationNames" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberWizard]
				SET
					[SiteID] = @SiteId
					,[MemberWizardParentID] = @MemberWizardParentId
					,[ProfileTitle] = @ProfileTitle
					,[CVTitle] = @CvTitle
					,[RolePreferencesTitle] = @RolePreferencesTitle
					,[EducationTitle] = @EducationTitle
					,[MembershipsTitle] = @MembershipsTitle
					,[ExperienceTitle] = @ExperienceTitle
					,[SkillsTitle] = @SkillsTitle
					,[ProfileEnable] = @ProfileEnable
					,[CVEnable] = @CvEnable
					,[RolePreferencesEnable] = @RolePreferencesEnable
					,[EducationEnable] = @EducationEnable
					,[MembershipsEnable] = @MembershipsEnable
					,[ExperienceEnable] = @ExperienceEnable
					,[SkillsEnable] = @SkillsEnable
					,[GlobalTemplate] = @GlobalTemplate
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[DirectorshipTitle] = @DirectorshipTitle
					,[DirectorshipEnable] = @DirectorshipEnable
					,[Skills] = @Skills
					,[LicenseTypes] = @LicenseTypes
					,[SummaryTitle] = @SummaryTitle
					,[PersonalDetailsTitle] = @PersonalDetailsTitle
					,[LicensesTitle] = @LicensesTitle
					,[AttachCoverLetterTitle] = @AttachCoverLetterTitle
					,[LanguagesTitle] = @LanguagesTitle
					,[ReferencesTitle] = @ReferencesTitle
					,[CustomQuestionTitle] = @CustomQuestionTitle
					,[SummaryPoints] = @SummaryPoints
					,[PersonalDetailsPoints] = @PersonalDetailsPoints
					,[LicensesPoints] = @LicensesPoints
					,[AttachCoverLetterPoints] = @AttachCoverLetterPoints
					,[LanguagesPoints] = @LanguagesPoints
					,[ReferencesPoints] = @ReferencesPoints
					,[CustomQuestionPoints] = @CustomQuestionPoints
					,[ProfilePoints] = @ProfilePoints
					,[CVPoints] = @CvPoints
					,[RolePreferencesPoints] = @RolePreferencesPoints
					,[EducationPoints] = @EducationPoints
					,[MembershipsPoints] = @MembershipsPoints
					,[ExperiencePoints] = @ExperiencePoints
					,[SkillsPoints] = @SkillsPoints
					,[DirectorshipPoints] = @DirectorshipPoints
					,[WizardLanguageXML] = @WizardLanguageXml
					,[CustomQuestionsXML] = @CustomQuestionsXml
					,[MinExperiencesEntry] = @MinExperiencesEntry
					,[MinReferencesEntry] = @MinReferencesEntry
					,[MinEducationsEntry] = @MinEducationsEntry
					,[QualificationNames] = @QualificationNames
				WHERE
[MemberWizardID] = @MemberWizardId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberWizard_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberWizard table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberWizardId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberWizard] WITH (ROWLOCK) 
				WHERE
					[MemberWizardID] = @MemberWizardId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberWizard_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberWizard table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberWizardID],
					[SiteID],
					[MemberWizardParentID],
					[ProfileTitle],
					[CVTitle],
					[RolePreferencesTitle],
					[EducationTitle],
					[MembershipsTitle],
					[ExperienceTitle],
					[SkillsTitle],
					[ProfileEnable],
					[CVEnable],
					[RolePreferencesEnable],
					[EducationEnable],
					[MembershipsEnable],
					[ExperienceEnable],
					[SkillsEnable],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[DirectorshipTitle],
					[DirectorshipEnable],
					[Skills],
					[LicenseTypes],
					[SummaryTitle],
					[PersonalDetailsTitle],
					[LicensesTitle],
					[AttachCoverLetterTitle],
					[LanguagesTitle],
					[ReferencesTitle],
					[CustomQuestionTitle],
					[SummaryPoints],
					[PersonalDetailsPoints],
					[LicensesPoints],
					[AttachCoverLetterPoints],
					[LanguagesPoints],
					[ReferencesPoints],
					[CustomQuestionPoints],
					[ProfilePoints],
					[CVPoints],
					[RolePreferencesPoints],
					[EducationPoints],
					[MembershipsPoints],
					[ExperiencePoints],
					[SkillsPoints],
					[DirectorshipPoints],
					[WizardLanguageXML],
					[CustomQuestionsXML],
					[MinExperiencesEntry],
					[MinReferencesEntry],
					[MinEducationsEntry],
					[QualificationNames]
				FROM
					[dbo].[MemberWizard]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberWizard_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberWizard table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberWizardID],
					[SiteID],
					[MemberWizardParentID],
					[ProfileTitle],
					[CVTitle],
					[RolePreferencesTitle],
					[EducationTitle],
					[MembershipsTitle],
					[ExperienceTitle],
					[SkillsTitle],
					[ProfileEnable],
					[CVEnable],
					[RolePreferencesEnable],
					[EducationEnable],
					[MembershipsEnable],
					[ExperienceEnable],
					[SkillsEnable],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[DirectorshipTitle],
					[DirectorshipEnable],
					[Skills],
					[LicenseTypes],
					[SummaryTitle],
					[PersonalDetailsTitle],
					[LicensesTitle],
					[AttachCoverLetterTitle],
					[LanguagesTitle],
					[ReferencesTitle],
					[CustomQuestionTitle],
					[SummaryPoints],
					[PersonalDetailsPoints],
					[LicensesPoints],
					[AttachCoverLetterPoints],
					[LanguagesPoints],
					[ReferencesPoints],
					[CustomQuestionPoints],
					[ProfilePoints],
					[CVPoints],
					[RolePreferencesPoints],
					[EducationPoints],
					[MembershipsPoints],
					[ExperiencePoints],
					[SkillsPoints],
					[DirectorshipPoints],
					[WizardLanguageXML],
					[CustomQuestionsXML],
					[MinExperiencesEntry],
					[MinReferencesEntry],
					[MinEducationsEntry],
					[QualificationNames]
				FROM
					[dbo].[MemberWizard]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberWizard_GetByMemberWizardId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberWizard table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberWizardId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberWizardID],
					[SiteID],
					[MemberWizardParentID],
					[ProfileTitle],
					[CVTitle],
					[RolePreferencesTitle],
					[EducationTitle],
					[MembershipsTitle],
					[ExperienceTitle],
					[SkillsTitle],
					[ProfileEnable],
					[CVEnable],
					[RolePreferencesEnable],
					[EducationEnable],
					[MembershipsEnable],
					[ExperienceEnable],
					[SkillsEnable],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[DirectorshipTitle],
					[DirectorshipEnable],
					[Skills],
					[LicenseTypes],
					[SummaryTitle],
					[PersonalDetailsTitle],
					[LicensesTitle],
					[AttachCoverLetterTitle],
					[LanguagesTitle],
					[ReferencesTitle],
					[CustomQuestionTitle],
					[SummaryPoints],
					[PersonalDetailsPoints],
					[LicensesPoints],
					[AttachCoverLetterPoints],
					[LanguagesPoints],
					[ReferencesPoints],
					[CustomQuestionPoints],
					[ProfilePoints],
					[CVPoints],
					[RolePreferencesPoints],
					[EducationPoints],
					[MembershipsPoints],
					[ExperiencePoints],
					[SkillsPoints],
					[DirectorshipPoints],
					[WizardLanguageXML],
					[CustomQuestionsXML],
					[MinExperiencesEntry],
					[MinReferencesEntry],
					[MinEducationsEntry],
					[QualificationNames]
				FROM
					[dbo].[MemberWizard]
				WHERE
					[MemberWizardID] = @MemberWizardId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberWizard_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberWizard table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberWizardId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberWizardParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfileTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CvTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@RolePreferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@EducationTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MembershipsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ExperienceTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SkillsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ProfileEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CvEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RolePreferencesEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MembershipsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExperienceEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SkillsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DirectorshipTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@DirectorshipEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LicenseTypes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SummaryTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PersonalDetailsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LicensesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@AttachCoverLetterTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LanguagesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ReferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CustomQuestionTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SummaryPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PersonalDetailsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LicensesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AttachCoverLetterPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguagesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomQuestionPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfilePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CvPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RolePreferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MembershipsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExperiencePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SkillsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DirectorshipPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WizardLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomQuestionsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@MinExperiencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@MinReferencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@MinEducationsEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationNames" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberWizardID]
	, [SiteID]
	, [MemberWizardParentID]
	, [ProfileTitle]
	, [CVTitle]
	, [RolePreferencesTitle]
	, [EducationTitle]
	, [MembershipsTitle]
	, [ExperienceTitle]
	, [SkillsTitle]
	, [ProfileEnable]
	, [CVEnable]
	, [RolePreferencesEnable]
	, [EducationEnable]
	, [MembershipsEnable]
	, [ExperienceEnable]
	, [SkillsEnable]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [DirectorshipTitle]
	, [DirectorshipEnable]
	, [Skills]
	, [LicenseTypes]
	, [SummaryTitle]
	, [PersonalDetailsTitle]
	, [LicensesTitle]
	, [AttachCoverLetterTitle]
	, [LanguagesTitle]
	, [ReferencesTitle]
	, [CustomQuestionTitle]
	, [SummaryPoints]
	, [PersonalDetailsPoints]
	, [LicensesPoints]
	, [AttachCoverLetterPoints]
	, [LanguagesPoints]
	, [ReferencesPoints]
	, [CustomQuestionPoints]
	, [ProfilePoints]
	, [CVPoints]
	, [RolePreferencesPoints]
	, [EducationPoints]
	, [MembershipsPoints]
	, [ExperiencePoints]
	, [SkillsPoints]
	, [DirectorshipPoints]
	, [WizardLanguageXML]
	, [CustomQuestionsXML]
	, [MinExperiencesEntry]
	, [MinReferencesEntry]
	, [MinEducationsEntry]
	, [QualificationNames]
    FROM
	[dbo].[MemberWizard]
    WHERE 
	 ([MemberWizardID] = @MemberWizardId OR @MemberWizardId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([MemberWizardParentID] = @MemberWizardParentId OR @MemberWizardParentId IS NULL)
	AND ([ProfileTitle] = @ProfileTitle OR @ProfileTitle IS NULL)
	AND ([CVTitle] = @CvTitle OR @CvTitle IS NULL)
	AND ([RolePreferencesTitle] = @RolePreferencesTitle OR @RolePreferencesTitle IS NULL)
	AND ([EducationTitle] = @EducationTitle OR @EducationTitle IS NULL)
	AND ([MembershipsTitle] = @MembershipsTitle OR @MembershipsTitle IS NULL)
	AND ([ExperienceTitle] = @ExperienceTitle OR @ExperienceTitle IS NULL)
	AND ([SkillsTitle] = @SkillsTitle OR @SkillsTitle IS NULL)
	AND ([ProfileEnable] = @ProfileEnable OR @ProfileEnable IS NULL)
	AND ([CVEnable] = @CvEnable OR @CvEnable IS NULL)
	AND ([RolePreferencesEnable] = @RolePreferencesEnable OR @RolePreferencesEnable IS NULL)
	AND ([EducationEnable] = @EducationEnable OR @EducationEnable IS NULL)
	AND ([MembershipsEnable] = @MembershipsEnable OR @MembershipsEnable IS NULL)
	AND ([ExperienceEnable] = @ExperienceEnable OR @ExperienceEnable IS NULL)
	AND ([SkillsEnable] = @SkillsEnable OR @SkillsEnable IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([DirectorshipTitle] = @DirectorshipTitle OR @DirectorshipTitle IS NULL)
	AND ([DirectorshipEnable] = @DirectorshipEnable OR @DirectorshipEnable IS NULL)
	AND ([Skills] = @Skills OR @Skills IS NULL)
	AND ([LicenseTypes] = @LicenseTypes OR @LicenseTypes IS NULL)
	AND ([SummaryTitle] = @SummaryTitle OR @SummaryTitle IS NULL)
	AND ([PersonalDetailsTitle] = @PersonalDetailsTitle OR @PersonalDetailsTitle IS NULL)
	AND ([LicensesTitle] = @LicensesTitle OR @LicensesTitle IS NULL)
	AND ([AttachCoverLetterTitle] = @AttachCoverLetterTitle OR @AttachCoverLetterTitle IS NULL)
	AND ([LanguagesTitle] = @LanguagesTitle OR @LanguagesTitle IS NULL)
	AND ([ReferencesTitle] = @ReferencesTitle OR @ReferencesTitle IS NULL)
	AND ([CustomQuestionTitle] = @CustomQuestionTitle OR @CustomQuestionTitle IS NULL)
	AND ([SummaryPoints] = @SummaryPoints OR @SummaryPoints IS NULL)
	AND ([PersonalDetailsPoints] = @PersonalDetailsPoints OR @PersonalDetailsPoints IS NULL)
	AND ([LicensesPoints] = @LicensesPoints OR @LicensesPoints IS NULL)
	AND ([AttachCoverLetterPoints] = @AttachCoverLetterPoints OR @AttachCoverLetterPoints IS NULL)
	AND ([LanguagesPoints] = @LanguagesPoints OR @LanguagesPoints IS NULL)
	AND ([ReferencesPoints] = @ReferencesPoints OR @ReferencesPoints IS NULL)
	AND ([CustomQuestionPoints] = @CustomQuestionPoints OR @CustomQuestionPoints IS NULL)
	AND ([ProfilePoints] = @ProfilePoints OR @ProfilePoints IS NULL)
	AND ([CVPoints] = @CvPoints OR @CvPoints IS NULL)
	AND ([RolePreferencesPoints] = @RolePreferencesPoints OR @RolePreferencesPoints IS NULL)
	AND ([EducationPoints] = @EducationPoints OR @EducationPoints IS NULL)
	AND ([MembershipsPoints] = @MembershipsPoints OR @MembershipsPoints IS NULL)
	AND ([ExperiencePoints] = @ExperiencePoints OR @ExperiencePoints IS NULL)
	AND ([SkillsPoints] = @SkillsPoints OR @SkillsPoints IS NULL)
	AND ([DirectorshipPoints] = @DirectorshipPoints OR @DirectorshipPoints IS NULL)
	AND ([WizardLanguageXML] = @WizardLanguageXml OR @WizardLanguageXml IS NULL)
	AND ([CustomQuestionsXML] = @CustomQuestionsXml OR @CustomQuestionsXml IS NULL)
	AND ([MinExperiencesEntry] = @MinExperiencesEntry OR @MinExperiencesEntry IS NULL)
	AND ([MinReferencesEntry] = @MinReferencesEntry OR @MinReferencesEntry IS NULL)
	AND ([MinEducationsEntry] = @MinEducationsEntry OR @MinEducationsEntry IS NULL)
	AND ([QualificationNames] = @QualificationNames OR @QualificationNames IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberWizardID]
	, [SiteID]
	, [MemberWizardParentID]
	, [ProfileTitle]
	, [CVTitle]
	, [RolePreferencesTitle]
	, [EducationTitle]
	, [MembershipsTitle]
	, [ExperienceTitle]
	, [SkillsTitle]
	, [ProfileEnable]
	, [CVEnable]
	, [RolePreferencesEnable]
	, [EducationEnable]
	, [MembershipsEnable]
	, [ExperienceEnable]
	, [SkillsEnable]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [DirectorshipTitle]
	, [DirectorshipEnable]
	, [Skills]
	, [LicenseTypes]
	, [SummaryTitle]
	, [PersonalDetailsTitle]
	, [LicensesTitle]
	, [AttachCoverLetterTitle]
	, [LanguagesTitle]
	, [ReferencesTitle]
	, [CustomQuestionTitle]
	, [SummaryPoints]
	, [PersonalDetailsPoints]
	, [LicensesPoints]
	, [AttachCoverLetterPoints]
	, [LanguagesPoints]
	, [ReferencesPoints]
	, [CustomQuestionPoints]
	, [ProfilePoints]
	, [CVPoints]
	, [RolePreferencesPoints]
	, [EducationPoints]
	, [MembershipsPoints]
	, [ExperiencePoints]
	, [SkillsPoints]
	, [DirectorshipPoints]
	, [WizardLanguageXML]
	, [CustomQuestionsXML]
	, [MinExperiencesEntry]
	, [MinReferencesEntry]
	, [MinEducationsEntry]
	, [QualificationNames]
    FROM
	[dbo].[MemberWizard]
    WHERE 
	 ([MemberWizardID] = @MemberWizardId AND @MemberWizardId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([MemberWizardParentID] = @MemberWizardParentId AND @MemberWizardParentId is not null)
	OR ([ProfileTitle] = @ProfileTitle AND @ProfileTitle is not null)
	OR ([CVTitle] = @CvTitle AND @CvTitle is not null)
	OR ([RolePreferencesTitle] = @RolePreferencesTitle AND @RolePreferencesTitle is not null)
	OR ([EducationTitle] = @EducationTitle AND @EducationTitle is not null)
	OR ([MembershipsTitle] = @MembershipsTitle AND @MembershipsTitle is not null)
	OR ([ExperienceTitle] = @ExperienceTitle AND @ExperienceTitle is not null)
	OR ([SkillsTitle] = @SkillsTitle AND @SkillsTitle is not null)
	OR ([ProfileEnable] = @ProfileEnable AND @ProfileEnable is not null)
	OR ([CVEnable] = @CvEnable AND @CvEnable is not null)
	OR ([RolePreferencesEnable] = @RolePreferencesEnable AND @RolePreferencesEnable is not null)
	OR ([EducationEnable] = @EducationEnable AND @EducationEnable is not null)
	OR ([MembershipsEnable] = @MembershipsEnable AND @MembershipsEnable is not null)
	OR ([ExperienceEnable] = @ExperienceEnable AND @ExperienceEnable is not null)
	OR ([SkillsEnable] = @SkillsEnable AND @SkillsEnable is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([DirectorshipTitle] = @DirectorshipTitle AND @DirectorshipTitle is not null)
	OR ([DirectorshipEnable] = @DirectorshipEnable AND @DirectorshipEnable is not null)
	OR ([Skills] = @Skills AND @Skills is not null)
	OR ([LicenseTypes] = @LicenseTypes AND @LicenseTypes is not null)
	OR ([SummaryTitle] = @SummaryTitle AND @SummaryTitle is not null)
	OR ([PersonalDetailsTitle] = @PersonalDetailsTitle AND @PersonalDetailsTitle is not null)
	OR ([LicensesTitle] = @LicensesTitle AND @LicensesTitle is not null)
	OR ([AttachCoverLetterTitle] = @AttachCoverLetterTitle AND @AttachCoverLetterTitle is not null)
	OR ([LanguagesTitle] = @LanguagesTitle AND @LanguagesTitle is not null)
	OR ([ReferencesTitle] = @ReferencesTitle AND @ReferencesTitle is not null)
	OR ([CustomQuestionTitle] = @CustomQuestionTitle AND @CustomQuestionTitle is not null)
	OR ([SummaryPoints] = @SummaryPoints AND @SummaryPoints is not null)
	OR ([PersonalDetailsPoints] = @PersonalDetailsPoints AND @PersonalDetailsPoints is not null)
	OR ([LicensesPoints] = @LicensesPoints AND @LicensesPoints is not null)
	OR ([AttachCoverLetterPoints] = @AttachCoverLetterPoints AND @AttachCoverLetterPoints is not null)
	OR ([LanguagesPoints] = @LanguagesPoints AND @LanguagesPoints is not null)
	OR ([ReferencesPoints] = @ReferencesPoints AND @ReferencesPoints is not null)
	OR ([CustomQuestionPoints] = @CustomQuestionPoints AND @CustomQuestionPoints is not null)
	OR ([ProfilePoints] = @ProfilePoints AND @ProfilePoints is not null)
	OR ([CVPoints] = @CvPoints AND @CvPoints is not null)
	OR ([RolePreferencesPoints] = @RolePreferencesPoints AND @RolePreferencesPoints is not null)
	OR ([EducationPoints] = @EducationPoints AND @EducationPoints is not null)
	OR ([MembershipsPoints] = @MembershipsPoints AND @MembershipsPoints is not null)
	OR ([ExperiencePoints] = @ExperiencePoints AND @ExperiencePoints is not null)
	OR ([SkillsPoints] = @SkillsPoints AND @SkillsPoints is not null)
	OR ([DirectorshipPoints] = @DirectorshipPoints AND @DirectorshipPoints is not null)
	OR ([WizardLanguageXML] = @WizardLanguageXml AND @WizardLanguageXml is not null)
	OR ([CustomQuestionsXML] = @CustomQuestionsXml AND @CustomQuestionsXml is not null)
	OR ([MinExperiencesEntry] = @MinExperiencesEntry AND @MinExperiencesEntry is not null)
	OR ([MinReferencesEntry] = @MinReferencesEntry AND @MinReferencesEntry is not null)
	OR ([MinEducationsEntry] = @MinEducationsEntry AND @MinEducationsEntry is not null)
	OR ([QualificationNames] = @QualificationNames AND @QualificationNames is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberWizard_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberWizard table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberWizardID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberWizardID] )
				SELECT TOP {3} [MemberWizardID]
				FROM [dbo].[MemberWizard] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberWizardID], O.[SiteID], O.[MemberWizardParentID], O.[ProfileTitle], O.[CVTitle], O.[RolePreferencesTitle], O.[EducationTitle], O.[MembershipsTitle], O.[ExperienceTitle], O.[SkillsTitle], O.[ProfileEnable], O.[CVEnable], O.[RolePreferencesEnable], O.[EducationEnable], O.[MembershipsEnable], O.[ExperienceEnable], O.[SkillsEnable], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[DirectorshipTitle], O.[DirectorshipEnable], O.[Skills], O.[LicenseTypes], O.[SummaryTitle], O.[PersonalDetailsTitle], O.[LicensesTitle], O.[AttachCoverLetterTitle], O.[LanguagesTitle], O.[ReferencesTitle], O.[CustomQuestionTitle], O.[SummaryPoints], O.[PersonalDetailsPoints], O.[LicensesPoints], O.[AttachCoverLetterPoints], O.[LanguagesPoints], O.[ReferencesPoints], O.[CustomQuestionPoints], O.[ProfilePoints], O.[CVPoints], O.[RolePreferencesPoints], O.[EducationPoints], O.[MembershipsPoints], O.[ExperiencePoints], O.[SkillsPoints], O.[DirectorshipPoints], O.[WizardLanguageXML], O.[CustomQuestionsXML], O.[MinExperiencesEntry], O.[MinReferencesEntry], O.[MinEducationsEntry], O.[QualificationNames]
				FROM
				    [dbo].[MemberWizard] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberWizardID] = PageIndex.[MemberWizardID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberWizard] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberWizard_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberWizard table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberWizardId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberWizardParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfileTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CvTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@RolePreferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@EducationTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MembershipsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ExperienceTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SkillsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ProfileEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CvEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RolePreferencesEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MembershipsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExperienceEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SkillsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DirectorshipTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@DirectorshipEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LicenseTypes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SummaryTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PersonalDetailsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LicensesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@AttachCoverLetterTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LanguagesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ReferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CustomQuestionTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SummaryPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PersonalDetailsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LicensesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AttachCoverLetterPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguagesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomQuestionPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfilePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CvPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RolePreferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MembershipsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExperiencePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SkillsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DirectorshipPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WizardLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomQuestionsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@MinExperiencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@MinReferencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@MinEducationsEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationNames" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,@DirectorshipTitle
					,@DirectorshipEnable
					,@Skills
					,@LicenseTypes
					,@SummaryTitle
					,@PersonalDetailsTitle
					,@LicensesTitle
					,@AttachCoverLetterTitle
					,@LanguagesTitle
					,@ReferencesTitle
					,@CustomQuestionTitle
					,@SummaryPoints
					,@PersonalDetailsPoints
					,@LicensesPoints
					,@AttachCoverLetterPoints
					,@LanguagesPoints
					,@ReferencesPoints
					,@CustomQuestionPoints
					,@ProfilePoints
					,@CvPoints
					,@RolePreferencesPoints
					,@EducationPoints
					,@MembershipsPoints
					,@ExperiencePoints
					,@SkillsPoints
					,@DirectorshipPoints
					,@WizardLanguageXml
					,@CustomQuestionsXml
					,@MinExperiencesEntry
					,@MinReferencesEntry
					,@MinEducationsEntry
					,@QualificationNames
					)
				
				-- Get the identity value
				SET @MemberWizardId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberWizard_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberWizard table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[DirectorshipTitle],
					[DirectorshipEnable],
					[Skills],
					[LicenseTypes],
					[SummaryTitle],
					[PersonalDetailsTitle],
					[LicensesTitle],
					[AttachCoverLetterTitle],
					[LanguagesTitle],
					[ReferencesTitle],
					[CustomQuestionTitle],
					[SummaryPoints],
					[PersonalDetailsPoints],
					[LicensesPoints],
					[AttachCoverLetterPoints],
					[LanguagesPoints],
					[ReferencesPoints],
					[CustomQuestionPoints],
					[ProfilePoints],
					[CVPoints],
					[RolePreferencesPoints],
					[EducationPoints],
					[MembershipsPoints],
					[ExperiencePoints],
					[SkillsPoints],
					[DirectorshipPoints],
					[WizardLanguageXML],
					[CustomQuestionsXML],
					[MinExperiencesEntry],
					[MinReferencesEntry],
					[MinEducationsEntry],
					[QualificationNames]
				FROM
					[dbo].[MemberWizard]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberWizard_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberWizard table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified],
					[DirectorshipTitle],
					[DirectorshipEnable],
					[Skills],
					[LicenseTypes],
					[SummaryTitle],
					[PersonalDetailsTitle],
					[LicensesTitle],
					[AttachCoverLetterTitle],
					[LanguagesTitle],
					[ReferencesTitle],
					[CustomQuestionTitle],
					[SummaryPoints],
					[PersonalDetailsPoints],
					[LicensesPoints],
					[AttachCoverLetterPoints],
					[LanguagesPoints],
					[ReferencesPoints],
					[CustomQuestionPoints],
					[ProfilePoints],
					[CVPoints],
					[RolePreferencesPoints],
					[EducationPoints],
					[MembershipsPoints],
					[ExperiencePoints],
					[SkillsPoints],
					[DirectorshipPoints],
					[WizardLanguageXML],
					[CustomQuestionsXML],
					[MinExperiencesEntry],
					[MinReferencesEntry],
					[MinEducationsEntry],
					[QualificationNames]
				FROM
					[dbo].[MemberWizard]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberWizard_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberWizard table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberWizard]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberWizard_GetByMemberWizardId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberWizard table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberWizardId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[DirectorshipTitle],
					[DirectorshipEnable],
					[Skills],
					[LicenseTypes],
					[SummaryTitle],
					[PersonalDetailsTitle],
					[LicensesTitle],
					[AttachCoverLetterTitle],
					[LanguagesTitle],
					[ReferencesTitle],
					[CustomQuestionTitle],
					[SummaryPoints],
					[PersonalDetailsPoints],
					[LicensesPoints],
					[AttachCoverLetterPoints],
					[LanguagesPoints],
					[ReferencesPoints],
					[CustomQuestionPoints],
					[ProfilePoints],
					[CVPoints],
					[RolePreferencesPoints],
					[EducationPoints],
					[MembershipsPoints],
					[ExperiencePoints],
					[SkillsPoints],
					[DirectorshipPoints],
					[WizardLanguageXML],
					[CustomQuestionsXML],
					[MinExperiencesEntry],
					[MinReferencesEntry],
					[MinEducationsEntry],
					[QualificationNames]
				FROM
					[dbo].[MemberWizard]
				WHERE
					[MemberWizardID] = @MemberWizardId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberWizard_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberWizard table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberWizardId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberWizardParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfileTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CvTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@RolePreferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@EducationTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MembershipsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ExperienceTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SkillsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ProfileEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CvEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RolePreferencesEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MembershipsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExperienceEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SkillsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DirectorshipTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@DirectorshipEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LicenseTypes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SummaryTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PersonalDetailsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LicensesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@AttachCoverLetterTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LanguagesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ReferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CustomQuestionTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SummaryPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PersonalDetailsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LicensesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AttachCoverLetterPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguagesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomQuestionPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfilePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CvPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RolePreferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MembershipsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExperiencePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SkillsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DirectorshipPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WizardLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomQuestionsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@MinExperiencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@MinReferencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@MinEducationsEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationNames" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,[DirectorshipTitle] = @DirectorshipTitle
					,[DirectorshipEnable] = @DirectorshipEnable
					,[Skills] = @Skills
					,[LicenseTypes] = @LicenseTypes
					,[SummaryTitle] = @SummaryTitle
					,[PersonalDetailsTitle] = @PersonalDetailsTitle
					,[LicensesTitle] = @LicensesTitle
					,[AttachCoverLetterTitle] = @AttachCoverLetterTitle
					,[LanguagesTitle] = @LanguagesTitle
					,[ReferencesTitle] = @ReferencesTitle
					,[CustomQuestionTitle] = @CustomQuestionTitle
					,[SummaryPoints] = @SummaryPoints
					,[PersonalDetailsPoints] = @PersonalDetailsPoints
					,[LicensesPoints] = @LicensesPoints
					,[AttachCoverLetterPoints] = @AttachCoverLetterPoints
					,[LanguagesPoints] = @LanguagesPoints
					,[ReferencesPoints] = @ReferencesPoints
					,[CustomQuestionPoints] = @CustomQuestionPoints
					,[ProfilePoints] = @ProfilePoints
					,[CVPoints] = @CvPoints
					,[RolePreferencesPoints] = @RolePreferencesPoints
					,[EducationPoints] = @EducationPoints
					,[MembershipsPoints] = @MembershipsPoints
					,[ExperiencePoints] = @ExperiencePoints
					,[SkillsPoints] = @SkillsPoints
					,[DirectorshipPoints] = @DirectorshipPoints
					,[WizardLanguageXML] = @WizardLanguageXml
					,[CustomQuestionsXML] = @CustomQuestionsXml
					,[MinExperiencesEntry] = @MinExperiencesEntry
					,[MinReferencesEntry] = @MinReferencesEntry
					,[MinEducationsEntry] = @MinEducationsEntry
					,[QualificationNames] = @QualificationNames
				WHERE
[MemberWizardID] = @MemberWizardId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberWizard_CustomGetMemberPoints"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@Member_Points" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
varchar)
		SET @Member_Points = @Member_Points + @ReferencesPoints		
	END	
END


--SELECT @Member_Points

END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberWizard_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberWizard table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberWizardId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberWizardParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfileTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CvTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@RolePreferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@EducationTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MembershipsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ExperienceTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SkillsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ProfileEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CvEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RolePreferencesEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MembershipsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExperienceEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SkillsEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DirectorshipTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@DirectorshipEnable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Skills" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LicenseTypes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SummaryTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PersonalDetailsTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LicensesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@AttachCoverLetterTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LanguagesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ReferencesTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CustomQuestionTitle" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SummaryPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PersonalDetailsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LicensesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AttachCoverLetterPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguagesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomQuestionPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfilePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CvPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RolePreferencesPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MembershipsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExperiencePoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SkillsPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DirectorshipPoints" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WizardLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomQuestionsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@MinExperiencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@MinReferencesEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@MinEducationsEntry" type="smallint" direction="Input" size="2" precision="5" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationNames" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	OR ([DirectorshipTitle] = @DirectorshipTitle AND @DirectorshipTitle is not null)
	OR ([DirectorshipEnable] = @DirectorshipEnable AND @DirectorshipEnable is not null)
	OR ([Skills] = @Skills AND @Skills is not null)
	OR ([LicenseTypes] = @LicenseTypes AND @LicenseTypes is not null)
	OR ([SummaryTitle] = @SummaryTitle AND @SummaryTitle is not null)
	OR ([PersonalDetailsTitle] = @PersonalDetailsTitle AND @PersonalDetailsTitle is not null)
	OR ([LicensesTitle] = @LicensesTitle AND @LicensesTitle is not null)
	OR ([AttachCoverLetterTitle] = @AttachCoverLetterTitle AND @AttachCoverLetterTitle is not null)
	OR ([LanguagesTitle] = @LanguagesTitle AND @LanguagesTitle is not null)
	OR ([ReferencesTitle] = @ReferencesTitle AND @ReferencesTitle is not null)
	OR ([CustomQuestionTitle] = @CustomQuestionTitle AND @CustomQuestionTitle is not null)
	OR ([SummaryPoints] = @SummaryPoints AND @SummaryPoints is not null)
	OR ([PersonalDetailsPoints] = @PersonalDetailsPoints AND @PersonalDetailsPoints is not null)
	OR ([LicensesPoints] = @LicensesPoints AND @LicensesPoints is not null)
	OR ([AttachCoverLetterPoints] = @AttachCoverLetterPoints AND @AttachCoverLetterPoints is not null)
	OR ([LanguagesPoints] = @LanguagesPoints AND @LanguagesPoints is not null)
	OR ([ReferencesPoints] = @ReferencesPoints AND @ReferencesPoints is not null)
	OR ([CustomQuestionPoints] = @CustomQuestionPoints AND @CustomQuestionPoints is not null)
	OR ([ProfilePoints] = @ProfilePoints AND @ProfilePoints is not null)
	OR ([CVPoints] = @CvPoints AND @CvPoints is not null)
	OR ([RolePreferencesPoints] = @RolePreferencesPoints AND @RolePreferencesPoints is not null)
	OR ([EducationPoints] = @EducationPoints AND @EducationPoints is not null)
	OR ([MembershipsPoints] = @MembershipsPoints AND @MembershipsPoints is not null)
	OR ([ExperiencePoints] = @ExperiencePoints AND @ExperiencePoints is not null)
	OR ([SkillsPoints] = @SkillsPoints AND @SkillsPoints is not null)
	OR ([DirectorshipPoints] = @DirectorshipPoints AND @DirectorshipPoints is not null)
	OR ([WizardLanguageXML] = @WizardLanguageXml AND @WizardLanguageXml is not null)
	OR ([CustomQuestionsXML] = @CustomQuestionsXml AND @CustomQuestionsXml is not null)
	OR ([MinExperiencesEntry] = @MinExperiencesEntry AND @MinExperiencesEntry is not null)
	OR ([MinReferencesEntry] = @MinReferencesEntry AND @MinReferencesEntry is not null)
	OR ([MinEducationsEntry] = @MinEducationsEntry AND @MinEducationsEntry is not null)
	OR ([QualificationNames] = @QualificationNames AND @QualificationNames is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberWizard_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberWizard table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberWizardId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberWizard] WITH (ROWLOCK) 
				WHERE
					[MemberWizardID] = @MemberWizardId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberWizard_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberWizard table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberLanguages_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberLanguages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberLanguageID],
					[MemberID],
					[Langauges],
					[Profieciency],
					[LastModifiedDate]
				FROM
					[dbo].[MemberLanguages]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberLanguages_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberLanguages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberLanguageID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberLanguageID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberLanguageID]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberLanguages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberLanguageID], O.[MemberID], O.[Langauges], O.[Profieciency], O.[LastModifiedDate]
				FROM
				    [dbo].[MemberLanguages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberLanguageID] = PageIndex.[MemberLanguageID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberLanguages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberLanguages_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberLanguages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberLanguageId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Langauges" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@Profieciency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberLanguages]
					(
					[MemberID]
					,[Langauges]
					,[Profieciency]
					,[LastModifiedDate]
					)
				VALUES
					(
					@MemberId
					,@Langauges
					,@Profieciency
					,@LastModifiedDate
					)
				
				-- Get the identity value
				SET @MemberLanguageId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberLanguages_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberLanguages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Langauges" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@Profieciency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberLanguages]
				SET
					[MemberID] = @MemberId
					,[Langauges] = @Langauges
					,[Profieciency] = @Profieciency
					,[LastModifiedDate] = @LastModifiedDate
				WHERE
[MemberLanguageID] = @MemberLanguageId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberLanguages_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberLanguages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberLanguages] WITH (ROWLOCK) 
				WHERE
					[MemberLanguageID] = @MemberLanguageId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberLanguages_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberLanguages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberLanguageID],
					[MemberID],
					[Langauges],
					[Profieciency],
					[LastModifiedDate]
				FROM
					[dbo].[MemberLanguages]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberLanguages_GetByMemberLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberLanguages table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberLanguageID],
					[MemberID],
					[Langauges],
					[Profieciency],
					[LastModifiedDate]
				FROM
					[dbo].[MemberLanguages]
				WHERE
					[MemberLanguageID] = @MemberLanguageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberLanguages_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberLanguages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Langauges" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Profieciency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberLanguageID]
	, [MemberID]
	, [Langauges]
	, [Profieciency]
	, [LastModifiedDate]
    FROM
	[dbo].[MemberLanguages]
    WHERE 
	 ([MemberLanguageID] = @MemberLanguageId OR @MemberLanguageId IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([Langauges] = @Langauges OR @Langauges IS NULL)
	AND ([Profieciency] = @Profieciency OR @Profieciency IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberLanguageID]
	, [MemberID]
	, [Langauges]
	, [Profieciency]
	, [LastModifiedDate]
    FROM
	[dbo].[MemberLanguages]
    WHERE 
	 ([MemberLanguageID] = @MemberLanguageId AND @MemberLanguageId is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([Langauges] = @Langauges AND @Langauges is not null)
	OR ([Profieciency] = @Profieciency AND @Profieciency is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberLanguages_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberLanguages table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberLanguageID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberLanguageID] )
				SELECT TOP {3} [MemberLanguageID]
				FROM [dbo].[MemberLanguages] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberLanguageID], O.[MemberID], O.[Langauges], O.[Profieciency], O.[LastModifiedDate]
				FROM
				    [dbo].[MemberLanguages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberLanguageID] = PageIndex.[MemberLanguageID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberLanguages] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberLanguages_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberLanguages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberLanguageId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Langauges" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Profieciency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					)
				
				-- Get the identity value
				SET @MemberLanguageId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLanguages_GetByMemberLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberLanguages table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[MemberLanguages]
				WHERE
					[MemberLanguageID] = @MemberLanguageId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLanguages_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberLanguages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[MemberLanguages]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLanguages_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberLanguages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberLanguages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLanguages_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberLanguages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Langauges" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Profieciency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLanguages_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberLanguages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberLanguages] WITH (ROWLOCK) 
				WHERE
					[MemberLanguageID] = @MemberLanguageId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLanguages_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberLanguages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Langauges" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Profieciency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
				WHERE
[MemberLanguageID] = @MemberLanguageId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLanguages_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberLanguages table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[MemberLanguages]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberLicenses_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberLicenses table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberLicenseID],
					[MemberID],
					[MemberLicenseName],
					[LicenseType],
					[IssueDate],
					[ExpiryDate],
					[CountryID],
					[State],
					[DoesNotExpire],
					[LastModifiedDate]
				FROM
					[dbo].[MemberLicenses]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberLicenses_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberLicenses table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberLicenseID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberLicenseID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberLicenseID]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberLicenses]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberLicenseID], O.[MemberID], O.[MemberLicenseName], O.[LicenseType], O.[IssueDate], O.[ExpiryDate], O.[CountryID], O.[State], O.[DoesNotExpire], O.[LastModifiedDate]
				FROM
				    [dbo].[MemberLicenses] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberLicenseID] = PageIndex.[MemberLicenseID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberLicenses]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberLicenses_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberLicenses table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberLicenseId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberLicenseName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LicenseType" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@IssueDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@DoesNotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberLicenses]
					(
					[MemberID]
					,[MemberLicenseName]
					,[LicenseType]
					,[IssueDate]
					,[ExpiryDate]
					,[CountryID]
					,[State]
					,[DoesNotExpire]
					,[LastModifiedDate]
					)
				VALUES
					(
					@MemberId
					,@MemberLicenseName
					,@LicenseType
					,@IssueDate
					,@ExpiryDate
					,@CountryId
					,@State
					,@DoesNotExpire
					,@LastModifiedDate
					)
				
				-- Get the identity value
				SET @MemberLicenseId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberLicenses_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberLicenses table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberLicenseId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberLicenseName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LicenseType" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@IssueDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@DoesNotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberLicenses]
				SET
					[MemberID] = @MemberId
					,[MemberLicenseName] = @MemberLicenseName
					,[LicenseType] = @LicenseType
					,[IssueDate] = @IssueDate
					,[ExpiryDate] = @ExpiryDate
					,[CountryID] = @CountryId
					,[State] = @State
					,[DoesNotExpire] = @DoesNotExpire
					,[LastModifiedDate] = @LastModifiedDate
				WHERE
[MemberLicenseID] = @MemberLicenseId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberLicenses_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberLicenses table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberLicenseId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberLicenses] WITH (ROWLOCK) 
				WHERE
					[MemberLicenseID] = @MemberLicenseId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberLicenses_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberLicenses table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberLicenseID],
					[MemberID],
					[MemberLicenseName],
					[LicenseType],
					[IssueDate],
					[ExpiryDate],
					[CountryID],
					[State],
					[DoesNotExpire],
					[LastModifiedDate]
				FROM
					[dbo].[MemberLicenses]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberLicenses_GetByMemberLicenseId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberLicenses table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberLicenseId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberLicenseID],
					[MemberID],
					[MemberLicenseName],
					[LicenseType],
					[IssueDate],
					[ExpiryDate],
					[CountryID],
					[State],
					[DoesNotExpire],
					[LastModifiedDate]
				FROM
					[dbo].[MemberLicenses]
				WHERE
					[MemberLicenseID] = @MemberLicenseId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberLicenses_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberLicenses table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberLicenseId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberLicenseName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LicenseType" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@IssueDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@DoesNotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberLicenseID]
	, [MemberID]
	, [MemberLicenseName]
	, [LicenseType]
	, [IssueDate]
	, [ExpiryDate]
	, [CountryID]
	, [State]
	, [DoesNotExpire]
	, [LastModifiedDate]
    FROM
	[dbo].[MemberLicenses]
    WHERE 
	 ([MemberLicenseID] = @MemberLicenseId OR @MemberLicenseId IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([MemberLicenseName] = @MemberLicenseName OR @MemberLicenseName IS NULL)
	AND ([LicenseType] = @LicenseType OR @LicenseType IS NULL)
	AND ([IssueDate] = @IssueDate OR @IssueDate IS NULL)
	AND ([ExpiryDate] = @ExpiryDate OR @ExpiryDate IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([State] = @State OR @State IS NULL)
	AND ([DoesNotExpire] = @DoesNotExpire OR @DoesNotExpire IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberLicenseID]
	, [MemberID]
	, [MemberLicenseName]
	, [LicenseType]
	, [IssueDate]
	, [ExpiryDate]
	, [CountryID]
	, [State]
	, [DoesNotExpire]
	, [LastModifiedDate]
    FROM
	[dbo].[MemberLicenses]
    WHERE 
	 ([MemberLicenseID] = @MemberLicenseId AND @MemberLicenseId is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([MemberLicenseName] = @MemberLicenseName AND @MemberLicenseName is not null)
	OR ([LicenseType] = @LicenseType AND @LicenseType is not null)
	OR ([IssueDate] = @IssueDate AND @IssueDate is not null)
	OR ([ExpiryDate] = @ExpiryDate AND @ExpiryDate is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([State] = @State AND @State is not null)
	OR ([DoesNotExpire] = @DoesNotExpire AND @DoesNotExpire is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberLicenses_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberLicenses table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberLicenseID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberLicenseID] )
				SELECT TOP {3} [MemberLicenseID]
				FROM [dbo].[MemberLicenses] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberLicenseID], O.[MemberID], O.[MemberLicenseName], O.[LicenseType], O.[IssueDate], O.[ExpiryDate], O.[CountryID], O.[State], O.[DoesNotExpire], O.[LastModifiedDate]
				FROM
				    [dbo].[MemberLicenses] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberLicenseID] = PageIndex.[MemberLicenseID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberLicenses] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberLicenses_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberLicenses table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberLicenseId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberLicenseName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LicenseType" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@IssueDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@DoesNotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					)
				
				-- Get the identity value
				SET @MemberLicenseId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLicenses_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberLicenses table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[MemberLicenses]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLicenses_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberLicenses table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[MemberLicenses]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLicenses_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberLicenses table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberLicenses]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLicenses_GetByMemberLicenseId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberLicenses table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberLicenseId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[MemberLicenses]
				WHERE
					[MemberLicenseID] = @MemberLicenseId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLicenses_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberLicenses table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberLicenseId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberLicenseName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LicenseType" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@IssueDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@DoesNotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLicenses_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberLicenses table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberLicenseId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberLicenses] WITH (ROWLOCK) 
				WHERE
					[MemberLicenseID] = @MemberLicenseId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberLicenses_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberLicenses table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberLicenseId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberLicenseName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LicenseType" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@IssueDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@DoesNotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
				WHERE
[MemberLicenseID] = @MemberLicenseId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberMemberships_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberMemberships table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberMembershipsID],
					[SiteID],
					[MemberMembershipsName],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberMemberships]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberMemberships_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberMemberships table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberMembershipsID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberMembershipsID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberMembershipsID]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberMemberships]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberMembershipsID], O.[SiteID], O.[MemberMembershipsName], O.[LastModifiedBy], O.[LastModified], O.[Sequence], O.[Valid]
				FROM
				    [dbo].[MemberMemberships] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberMembershipsID] = PageIndex.[MemberMembershipsID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberMemberships]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberMemberships_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberMemberships table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberMembershipsId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberMembershipsName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberMemberships]
					(
					[SiteID]
					,[MemberMembershipsName]
					,[LastModifiedBy]
					,[LastModified]
					,[Sequence]
					,[Valid]
					)
				VALUES
					(
					@SiteId
					,@MemberMembershipsName
					,@LastModifiedBy
					,@LastModified
					,@Sequence
					,@Valid
					)
				
				-- Get the identity value
				SET @MemberMembershipsId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberMemberships_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberMemberships table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberMembershipsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberMembershipsName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberMemberships]
				SET
					[SiteID] = @SiteId
					,[MemberMembershipsName] = @MemberMembershipsName
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[Sequence] = @Sequence
					,[Valid] = @Valid
				WHERE
[MemberMembershipsID] = @MemberMembershipsId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberMemberships_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberMemberships table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberMembershipsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberMemberships] WITH (ROWLOCK) 
				WHERE
					[MemberMembershipsID] = @MemberMembershipsId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberMemberships_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberMemberships table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberMembershipsID],
					[SiteID],
					[MemberMembershipsName],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberMemberships]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberMemberships_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberMemberships table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberMembershipsID],
					[SiteID],
					[MemberMembershipsName],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberMemberships]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberMemberships_GetByMemberMembershipsId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberMemberships table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberMembershipsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberMembershipsID],
					[SiteID],
					[MemberMembershipsName],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberMemberships]
				WHERE
					[MemberMembershipsID] = @MemberMembershipsId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberMemberships_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberMemberships table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberMembershipsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberMembershipsName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberMembershipsID]
	, [SiteID]
	, [MemberMembershipsName]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
	, [Valid]
    FROM
	[dbo].[MemberMemberships]
    WHERE 
	 ([MemberMembershipsID] = @MemberMembershipsId OR @MemberMembershipsId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([MemberMembershipsName] = @MemberMembershipsName OR @MemberMembershipsName IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberMembershipsID]
	, [SiteID]
	, [MemberMembershipsName]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
	, [Valid]
    FROM
	[dbo].[MemberMemberships]
    WHERE 
	 ([MemberMembershipsID] = @MemberMembershipsId AND @MemberMembershipsId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([MemberMembershipsName] = @MemberMembershipsName AND @MemberMembershipsName is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberMemberships_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberMemberships table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberMembershipsID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberMembershipsID] )
				SELECT TOP {3} [MemberMembershipsID]
				FROM [dbo].[MemberMemberships] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberMembershipsID], O.[SiteID], O.[MemberMembershipsName], O.[LastModifiedBy], O.[LastModified], O.[Sequence], O.[Valid]
				FROM
				    [dbo].[MemberMemberships] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberMembershipsID] = PageIndex.[MemberMembershipsID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberMemberships] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberMemberships_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberMemberships table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberMembershipsId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberMembershipsName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,@Sequence
					,@Valid
					)
				
				-- Get the identity value
				SET @MemberMembershipsId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberMemberships_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberMemberships table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberMemberships]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberMemberships_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberMemberships table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberMemberships]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberMemberships_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberMemberships table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberMemberships]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberMemberships_CustomGetBySiteID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified,
	Sequence,
	Valid
	FROM MemberMemberships WITH (NOLOCK)
	WHERE SiteID = @SiteID
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberMemberships_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberMemberships table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberMembershipsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberMembershipsName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,[Sequence] = @Sequence
					,[Valid] = @Valid
				WHERE
[MemberMembershipsID] = @MemberMembershipsId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberMemberships_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberMemberships table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberMembershipsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberMembershipsName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberMemberships_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberMemberships table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberMembershipsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberMemberships] WITH (ROWLOCK) 
				WHERE
					[MemberMembershipsID] = @MemberMembershipsId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberMemberships_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberMemberships table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberMemberships_GetByMemberMembershipsId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberMemberships table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberMembershipsId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberMemberships]
				WHERE
					[MemberMembershipsID] = @MemberMembershipsId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberPositions_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberPositions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberPositionId],
					[LinkedInInternalPositionId],
					[Title],
					[Summary],
					[CompanyId],
					[CompanyName],
					[CompanyIndustry],
					[StartMonth],
					[StartYear],
					[EndMonth],
					[EndYear],
					[IsCurrent],
					[MemberID],
					[OrganisationWebsite],
					[ResponsibilitiesAndAchievements],
					[TypeOfDirectorship],
					[AdditionalRolesAndResponsibilities],
					[IsDirectorship],
					[City],
					[CountryID],
					[State]
				FROM
					[dbo].[MemberPositions]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberPositions_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberPositions table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberPositionId] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberPositionId])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberPositionId]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberPositions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberPositionId], O.[LinkedInInternalPositionId], O.[Title], O.[Summary], O.[CompanyId], O.[CompanyName], O.[CompanyIndustry], O.[StartMonth], O.[StartYear], O.[EndMonth], O.[EndYear], O.[IsCurrent], O.[MemberID], O.[OrganisationWebsite], O.[ResponsibilitiesAndAchievements], O.[TypeOfDirectorship], O.[AdditionalRolesAndResponsibilities], O.[IsDirectorship], O.[City], O.[CountryID], O.[State]
				FROM
				    [dbo].[MemberPositions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberPositionId] = PageIndex.[MemberPositionId]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberPositions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberPositions_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberPositions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberPositionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInInternalPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Summary" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CompanyIndustry" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsCurrent" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrganisationWebsite" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResponsibilitiesAndAchievements" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@TypeOfDirectorship" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@AdditionalRolesAndResponsibilities" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@IsDirectorship" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberPositions]
					(
					[LinkedInInternalPositionId]
					,[Title]
					,[Summary]
					,[CompanyId]
					,[CompanyName]
					,[CompanyIndustry]
					,[StartMonth]
					,[StartYear]
					,[EndMonth]
					,[EndYear]
					,[IsCurrent]
					,[MemberID]
					,[OrganisationWebsite]
					,[ResponsibilitiesAndAchievements]
					,[TypeOfDirectorship]
					,[AdditionalRolesAndResponsibilities]
					,[IsDirectorship]
					,[City]
					,[CountryID]
					,[State]
					)
				VALUES
					(
					@LinkedInInternalPositionId
					,@Title
					,@Summary
					,@CompanyId
					,@CompanyName
					,@CompanyIndustry
					,@StartMonth
					,@StartYear
					,@EndMonth
					,@EndYear
					,@IsCurrent
					,@MemberId
					,@OrganisationWebsite
					,@ResponsibilitiesAndAchievements
					,@TypeOfDirectorship
					,@AdditionalRolesAndResponsibilities
					,@IsDirectorship
					,@City
					,@CountryId
					,@State
					)
				
				-- Get the identity value
				SET @MemberPositionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberPositions_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberPositions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInInternalPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Summary" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CompanyIndustry" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsCurrent" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrganisationWebsite" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResponsibilitiesAndAchievements" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@TypeOfDirectorship" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@AdditionalRolesAndResponsibilities" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@IsDirectorship" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberPositions]
				SET
					[LinkedInInternalPositionId] = @LinkedInInternalPositionId
					,[Title] = @Title
					,[Summary] = @Summary
					,[CompanyId] = @CompanyId
					,[CompanyName] = @CompanyName
					,[CompanyIndustry] = @CompanyIndustry
					,[StartMonth] = @StartMonth
					,[StartYear] = @StartYear
					,[EndMonth] = @EndMonth
					,[EndYear] = @EndYear
					,[IsCurrent] = @IsCurrent
					,[MemberID] = @MemberId
					,[OrganisationWebsite] = @OrganisationWebsite
					,[ResponsibilitiesAndAchievements] = @ResponsibilitiesAndAchievements
					,[TypeOfDirectorship] = @TypeOfDirectorship
					,[AdditionalRolesAndResponsibilities] = @AdditionalRolesAndResponsibilities
					,[IsDirectorship] = @IsDirectorship
					,[City] = @City
					,[CountryID] = @CountryId
					,[State] = @State
				WHERE
[MemberPositionId] = @MemberPositionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberPositions_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberPositions table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberPositions] WITH (ROWLOCK) 
				WHERE
					[MemberPositionId] = @MemberPositionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberPositions_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberPositions table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberPositionId],
					[LinkedInInternalPositionId],
					[Title],
					[Summary],
					[CompanyId],
					[CompanyName],
					[CompanyIndustry],
					[StartMonth],
					[StartYear],
					[EndMonth],
					[EndYear],
					[IsCurrent],
					[MemberID],
					[OrganisationWebsite],
					[ResponsibilitiesAndAchievements],
					[TypeOfDirectorship],
					[AdditionalRolesAndResponsibilities],
					[IsDirectorship],
					[City],
					[CountryID],
					[State]
				FROM
					[dbo].[MemberPositions]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberPositions_GetByMemberPositionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberPositions table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberPositionId],
					[LinkedInInternalPositionId],
					[Title],
					[Summary],
					[CompanyId],
					[CompanyName],
					[CompanyIndustry],
					[StartMonth],
					[StartYear],
					[EndMonth],
					[EndYear],
					[IsCurrent],
					[MemberID],
					[OrganisationWebsite],
					[ResponsibilitiesAndAchievements],
					[TypeOfDirectorship],
					[AdditionalRolesAndResponsibilities],
					[IsDirectorship],
					[City],
					[CountryID],
					[State]
				FROM
					[dbo].[MemberPositions]
				WHERE
					[MemberPositionId] = @MemberPositionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberPositions_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberPositions table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInInternalPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Summary" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CompanyIndustry" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsCurrent" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrganisationWebsite" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponsibilitiesAndAchievements" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TypeOfDirectorship" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdditionalRolesAndResponsibilities" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@IsDirectorship" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberPositionId]
	, [LinkedInInternalPositionId]
	, [Title]
	, [Summary]
	, [CompanyId]
	, [CompanyName]
	, [CompanyIndustry]
	, [StartMonth]
	, [StartYear]
	, [EndMonth]
	, [EndYear]
	, [IsCurrent]
	, [MemberID]
	, [OrganisationWebsite]
	, [ResponsibilitiesAndAchievements]
	, [TypeOfDirectorship]
	, [AdditionalRolesAndResponsibilities]
	, [IsDirectorship]
	, [City]
	, [CountryID]
	, [State]
    FROM
	[dbo].[MemberPositions]
    WHERE 
	 ([MemberPositionId] = @MemberPositionId OR @MemberPositionId IS NULL)
	AND ([LinkedInInternalPositionId] = @LinkedInInternalPositionId OR @LinkedInInternalPositionId IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([Summary] = @Summary OR @Summary IS NULL)
	AND ([CompanyId] = @CompanyId OR @CompanyId IS NULL)
	AND ([CompanyName] = @CompanyName OR @CompanyName IS NULL)
	AND ([CompanyIndustry] = @CompanyIndustry OR @CompanyIndustry IS NULL)
	AND ([StartMonth] = @StartMonth OR @StartMonth IS NULL)
	AND ([StartYear] = @StartYear OR @StartYear IS NULL)
	AND ([EndMonth] = @EndMonth OR @EndMonth IS NULL)
	AND ([EndYear] = @EndYear OR @EndYear IS NULL)
	AND ([IsCurrent] = @IsCurrent OR @IsCurrent IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([OrganisationWebsite] = @OrganisationWebsite OR @OrganisationWebsite IS NULL)
	AND ([ResponsibilitiesAndAchievements] = @ResponsibilitiesAndAchievements OR @ResponsibilitiesAndAchievements IS NULL)
	AND ([TypeOfDirectorship] = @TypeOfDirectorship OR @TypeOfDirectorship IS NULL)
	AND ([AdditionalRolesAndResponsibilities] = @AdditionalRolesAndResponsibilities OR @AdditionalRolesAndResponsibilities IS NULL)
	AND ([IsDirectorship] = @IsDirectorship OR @IsDirectorship IS NULL)
	AND ([City] = @City OR @City IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([State] = @State OR @State IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberPositionId]
	, [LinkedInInternalPositionId]
	, [Title]
	, [Summary]
	, [CompanyId]
	, [CompanyName]
	, [CompanyIndustry]
	, [StartMonth]
	, [StartYear]
	, [EndMonth]
	, [EndYear]
	, [IsCurrent]
	, [MemberID]
	, [OrganisationWebsite]
	, [ResponsibilitiesAndAchievements]
	, [TypeOfDirectorship]
	, [AdditionalRolesAndResponsibilities]
	, [IsDirectorship]
	, [City]
	, [CountryID]
	, [State]
    FROM
	[dbo].[MemberPositions]
    WHERE 
	 ([MemberPositionId] = @MemberPositionId AND @MemberPositionId is not null)
	OR ([LinkedInInternalPositionId] = @LinkedInInternalPositionId AND @LinkedInInternalPositionId is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([Summary] = @Summary AND @Summary is not null)
	OR ([CompanyId] = @CompanyId AND @CompanyId is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([CompanyIndustry] = @CompanyIndustry AND @CompanyIndustry is not null)
	OR ([StartMonth] = @StartMonth AND @StartMonth is not null)
	OR ([StartYear] = @StartYear AND @StartYear is not null)
	OR ([EndMonth] = @EndMonth AND @EndMonth is not null)
	OR ([EndYear] = @EndYear AND @EndYear is not null)
	OR ([IsCurrent] = @IsCurrent AND @IsCurrent is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([OrganisationWebsite] = @OrganisationWebsite AND @OrganisationWebsite is not null)
	OR ([ResponsibilitiesAndAchievements] = @ResponsibilitiesAndAchievements AND @ResponsibilitiesAndAchievements is not null)
	OR ([TypeOfDirectorship] = @TypeOfDirectorship AND @TypeOfDirectorship is not null)
	OR ([AdditionalRolesAndResponsibilities] = @AdditionalRolesAndResponsibilities AND @AdditionalRolesAndResponsibilities is not null)
	OR ([IsDirectorship] = @IsDirectorship AND @IsDirectorship is not null)
	OR ([City] = @City AND @City is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([State] = @State AND @State is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberPositions_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberPositions table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberPositionId] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberPositionId] )
				SELECT TOP {3} [MemberPositionId]
				FROM [dbo].[MemberPositions] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberPositionId], O.[LinkedInInternalPositionId], O.[Title], O.[Summary], O.[CompanyId], O.[CompanyName], O.[CompanyIndustry], O.[StartMonth], O.[StartYear], O.[EndMonth], O.[EndYear], O.[IsCurrent], O.[MemberID], O.[OrganisationWebsite], O.[ResponsibilitiesAndAchievements], O.[TypeOfDirectorship], O.[AdditionalRolesAndResponsibilities], O.[IsDirectorship], O.[City], O.[CountryID], O.[State]
				FROM
				    [dbo].[MemberPositions] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberPositionId] = PageIndex.[MemberPositionId]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberPositions] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberPositions_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberPositions table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberPositionId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInInternalPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Summary" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CompanyIndustry" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsCurrent" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrganisationWebsite" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponsibilitiesAndAchievements" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TypeOfDirectorship" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdditionalRolesAndResponsibilities" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@IsDirectorship" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[MemberPositions]
					(
					[LinkedInInternalPositionId]
					,[Title]
					,[Summary]
					,[CompanyId]
					,[CompanyName]
					,[CompanyIndustry]
					,[StartMonth]
					,[StartYear]
					,[EndMonth]
					,[EndYear]
					,[IsCurrent]
					,[MemberID]
					,[OrganisationWebsite]
					,[ResponsibilitiesAndAchievements]
					,[TypeOfDirectorship]
					,[AdditionalRolesAndResponsibilities]
					,[IsDirectorship]
					,[City]
					,[CountryID]
					,[State]
					)
				VALUES
					(
					@LinkedInInternalPositionId
					,@Title
					,@Summary
					,@CompanyId
					,@CompanyName
					,@CompanyIndustry
					,@StartMonth
					,@StartYear
					,@EndMonth
					,@EndYear
					,@IsCurrent
					,@MemberId
					,@OrganisationWebsite
					,@ResponsibilitiesAndAchievements
					,@TypeOfDirectorship
					,@AdditionalRolesAndResponsibilities
					,@IsDirectorship
					,@City
					,@CountryId
					,@State
					)
				
				-- Get the identity value
				SET @MemberPositionId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberPositions_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberPositions table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[MemberPositionId],
					[LinkedInInternalPositionId],
					[Title],
					[Summary],
					[CompanyId],
					[CompanyName],
					[CompanyIndustry],
					[StartMonth],
					[StartYear],
					[EndMonth],
					[EndYear],
					[IsCurrent],
					[MemberID],
					[OrganisationWebsite],
					[ResponsibilitiesAndAchievements],
					[TypeOfDirectorship],
					[AdditionalRolesAndResponsibilities],
					[IsDirectorship],
					[City],
					[CountryID],
					[State]
				FROM
					[dbo].[MemberPositions]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberPositions_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberPositions table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[MemberPositionId],
					[LinkedInInternalPositionId],
					[Title],
					[Summary],
					[CompanyId],
					[CompanyName],
					[CompanyIndustry],
					[StartMonth],
					[StartYear],
					[EndMonth],
					[EndYear],
					[IsCurrent],
					[MemberID],
					[OrganisationWebsite],
					[ResponsibilitiesAndAchievements],
					[TypeOfDirectorship],
					[AdditionalRolesAndResponsibilities],
					[IsDirectorship],
					[City],
					[CountryID],
					[State]
				FROM
					[dbo].[MemberPositions]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberPositions_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberPositions table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberPositions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberPositions_GetByMemberPositionId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberPositions table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[MemberPositionId],
					[LinkedInInternalPositionId],
					[Title],
					[Summary],
					[CompanyId],
					[CompanyName],
					[CompanyIndustry],
					[StartMonth],
					[StartYear],
					[EndMonth],
					[EndYear],
					[IsCurrent],
					[MemberID],
					[OrganisationWebsite],
					[ResponsibilitiesAndAchievements],
					[TypeOfDirectorship],
					[AdditionalRolesAndResponsibilities],
					[IsDirectorship],
					[City],
					[CountryID],
					[State]
				FROM
					[dbo].[MemberPositions]
				WHERE
					[MemberPositionId] = @MemberPositionId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberPositions_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberPositions table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInInternalPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Summary" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CompanyIndustry" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsCurrent" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrganisationWebsite" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponsibilitiesAndAchievements" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TypeOfDirectorship" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdditionalRolesAndResponsibilities" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@IsDirectorship" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberPositionId]
	, [LinkedInInternalPositionId]
	, [Title]
	, [Summary]
	, [CompanyId]
	, [CompanyName]
	, [CompanyIndustry]
	, [StartMonth]
	, [StartYear]
	, [EndMonth]
	, [EndYear]
	, [IsCurrent]
	, [MemberID]
	, [OrganisationWebsite]
	, [ResponsibilitiesAndAchievements]
	, [TypeOfDirectorship]
	, [AdditionalRolesAndResponsibilities]
	, [IsDirectorship]
	, [City]
	, [CountryID]
	, [State]
    FROM
	[dbo].[MemberPositions]
    WHERE 
	 ([MemberPositionId] = @MemberPositionId OR @MemberPositionId IS NULL)
	AND ([LinkedInInternalPositionId] = @LinkedInInternalPositionId OR @LinkedInInternalPositionId IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([Summary] = @Summary OR @Summary IS NULL)
	AND ([CompanyId] = @CompanyId OR @CompanyId IS NULL)
	AND ([CompanyName] = @CompanyName OR @CompanyName IS NULL)
	AND ([CompanyIndustry] = @CompanyIndustry OR @CompanyIndustry IS NULL)
	AND ([StartMonth] = @StartMonth OR @StartMonth IS NULL)
	AND ([StartYear] = @StartYear OR @StartYear IS NULL)
	AND ([EndMonth] = @EndMonth OR @EndMonth IS NULL)
	AND ([EndYear] = @EndYear OR @EndYear IS NULL)
	AND ([IsCurrent] = @IsCurrent OR @IsCurrent IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([OrganisationWebsite] = @OrganisationWebsite OR @OrganisationWebsite IS NULL)
	AND ([ResponsibilitiesAndAchievements] = @ResponsibilitiesAndAchievements OR @ResponsibilitiesAndAchievements IS NULL)
	AND ([TypeOfDirectorship] = @TypeOfDirectorship OR @TypeOfDirectorship IS NULL)
	AND ([AdditionalRolesAndResponsibilities] = @AdditionalRolesAndResponsibilities OR @AdditionalRolesAndResponsibilities IS NULL)
	AND ([IsDirectorship] = @IsDirectorship OR @IsDirectorship IS NULL)
	AND ([City] = @City OR @City IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([State] = @State OR @State IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberPositionId]
	, [LinkedInInternalPositionId]
	, [Title]
	, [Summary]
	, [CompanyId]
	, [CompanyName]
	, [CompanyIndustry]
	, [StartMonth]
	, [StartYear]
	, [EndMonth]
	, [EndYear]
	, [IsCurrent]
	, [MemberID]
	, [OrganisationWebsite]
	, [ResponsibilitiesAndAchievements]
	, [TypeOfDirectorship]
	, [AdditionalRolesAndResponsibilities]
	, [IsDirectorship]
	, [City]
	, [CountryID]
	, [State]
    FROM
	[dbo].[MemberPositions]
    WHERE 
	 ([MemberPositionId] = @MemberPositionId AND @MemberPositionId is not null)
	OR ([LinkedInInternalPositionId] = @LinkedInInternalPositionId AND @LinkedInInternalPositionId is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([Summary] = @Summary AND @Summary is not null)
	OR ([CompanyId] = @CompanyId AND @CompanyId is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([CompanyIndustry] = @CompanyIndustry AND @CompanyIndustry is not null)
	OR ([StartMonth] = @StartMonth AND @StartMonth is not null)
	OR ([StartYear] = @StartYear AND @StartYear is not null)
	OR ([EndMonth] = @EndMonth AND @EndMonth is not null)
	OR ([EndYear] = @EndYear AND @EndYear is not null)
	OR ([IsCurrent] = @IsCurrent AND @IsCurrent is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([OrganisationWebsite] = @OrganisationWebsite AND @OrganisationWebsite is not null)
	OR ([ResponsibilitiesAndAchievements] = @ResponsibilitiesAndAchievements AND @ResponsibilitiesAndAchievements is not null)
	OR ([TypeOfDirectorship] = @TypeOfDirectorship AND @TypeOfDirectorship is not null)
	OR ([AdditionalRolesAndResponsibilities] = @AdditionalRolesAndResponsibilities AND @AdditionalRolesAndResponsibilities is not null)
	OR ([IsDirectorship] = @IsDirectorship AND @IsDirectorship is not null)
	OR ([City] = @City AND @City is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([State] = @State AND @State is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberPositions_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberPositions table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberPositions] WITH (ROWLOCK) 
				WHERE
					[MemberPositionId] = @MemberPositionId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberPositions_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberPositions table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInInternalPositionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Summary" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CompanyIndustry" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsCurrent" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrganisationWebsite" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponsibilitiesAndAchievements" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TypeOfDirectorship" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdditionalRolesAndResponsibilities" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@IsDirectorship" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@State" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[MemberPositions]
				SET
					[LinkedInInternalPositionId] = @LinkedInInternalPositionId
					,[Title] = @Title
					,[Summary] = @Summary
					,[CompanyId] = @CompanyId
					,[CompanyName] = @CompanyName
					,[CompanyIndustry] = @CompanyIndustry
					,[StartMonth] = @StartMonth
					,[StartYear] = @StartYear
					,[EndMonth] = @EndMonth
					,[EndYear] = @EndYear
					,[IsCurrent] = @IsCurrent
					,[MemberID] = @MemberId
					,[OrganisationWebsite] = @OrganisationWebsite
					,[ResponsibilitiesAndAchievements] = @ResponsibilitiesAndAchievements
					,[TypeOfDirectorship] = @TypeOfDirectorship
					,[AdditionalRolesAndResponsibilities] = @AdditionalRolesAndResponsibilities
					,[IsDirectorship] = @IsDirectorship
					,[City] = @City
					,[CountryID] = @CountryId
					,[State] = @State
				WHERE
[MemberPositionId] = @MemberPositionId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberStatus_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberStatusID],
					[SiteID],
					[MemberStatusName],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberStatus]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberStatus_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberStatus table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberStatusID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberStatusID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberStatusID]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberStatusID], O.[SiteID], O.[MemberStatusName], O.[LastModifiedBy], O.[LastModified], O.[Sequence], O.[Valid]
				FROM
				    [dbo].[MemberStatus] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberStatusID] = PageIndex.[MemberStatusID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberStatus_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberStatusId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberStatus]
					(
					[SiteID]
					,[MemberStatusName]
					,[LastModifiedBy]
					,[LastModified]
					,[Sequence]
					,[Valid]
					)
				VALUES
					(
					@SiteId
					,@MemberStatusName
					,@LastModifiedBy
					,@LastModified
					,@Sequence
					,@Valid
					)
				
				-- Get the identity value
				SET @MemberStatusId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberStatus_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberStatus]
				SET
					[SiteID] = @SiteId
					,[MemberStatusName] = @MemberStatusName
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[Sequence] = @Sequence
					,[Valid] = @Valid
				WHERE
[MemberStatusID] = @MemberStatusId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberStatus_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberStatus] WITH (ROWLOCK) 
				WHERE
					[MemberStatusID] = @MemberStatusId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberStatus_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberStatus table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberStatusID],
					[SiteID],
					[MemberStatusName],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberStatus]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberStatus_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberStatus table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberStatusID],
					[SiteID],
					[MemberStatusName],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberStatus]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberStatus_GetByMemberStatusId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberStatus table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberStatusID],
					[SiteID],
					[MemberStatusName],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberStatus]
				WHERE
					[MemberStatusID] = @MemberStatusId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberStatus_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberStatus table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberStatusID]
	, [SiteID]
	, [MemberStatusName]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
	, [Valid]
    FROM
	[dbo].[MemberStatus]
    WHERE 
	 ([MemberStatusID] = @MemberStatusId OR @MemberStatusId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([MemberStatusName] = @MemberStatusName OR @MemberStatusName IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberStatusID]
	, [SiteID]
	, [MemberStatusName]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
	, [Valid]
    FROM
	[dbo].[MemberStatus]
    WHERE 
	 ([MemberStatusID] = @MemberStatusId AND @MemberStatusId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([MemberStatusName] = @MemberStatusName AND @MemberStatusName is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberStatus_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberStatus table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberStatusID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberStatusID] )
				SELECT TOP {3} [MemberStatusID]
				FROM [dbo].[MemberStatus] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberStatusID], O.[SiteID], O.[MemberStatusName], O.[LastModifiedBy], O.[LastModified], O.[Sequence], O.[Valid]
				FROM
				    [dbo].[MemberStatus] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberStatusID] = PageIndex.[MemberStatusID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberStatus] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberStatus_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberStatusId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,@Sequence
					,@Valid
					)
				
				-- Get the identity value
				SET @MemberStatusId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberStatus_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberStatus table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberStatus]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberStatus_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberStatus]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberStatus_GetByMemberStatusId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberStatus table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence],
					[Valid]
				FROM
					[dbo].[MemberStatus]
				WHERE
					[MemberStatusID] = @MemberStatusId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberStatus_CustomGetBySiteID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified,
	Sequence,
	Valid    
FROM MemberStatus WITH (NOLOCK)
WHERE SiteID = @SiteID  
ORDER BY Sequence    
   
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberStatus_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,[Sequence] = @Sequence
					,[Valid] = @Valid
				WHERE
[MemberStatusID] = @MemberStatusId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberStatus_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberStatus table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberStatus_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberStatus] WITH (ROWLOCK) 
				WHERE
					[MemberStatusID] = @MemberStatusId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberStatus_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberStatus table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberStatus_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberStatus table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberQualification_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberQualification table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberQualificationId],
					[LinkedInInternalEducationId],
					[SchoolName],
					[FieldOfStudy],
					[StartYear],
					[EndYear],
					[Degree],
					[Activities],
					[Notes],
					[MemberID],
					[City],
					[CountryID],
					[QualificationLevelID],
					[QualificationLevelOther],
					[Major],
					[Present],
					[StartMonth],
					[EndMonth],
					[Graduated],
					[NonGraduatedCredits]
				FROM
					[dbo].[MemberQualification]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberQualification_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberQualification table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberQualificationId] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberQualificationId])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberQualificationId]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberQualification]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberQualificationId], O.[LinkedInInternalEducationId], O.[SchoolName], O.[FieldOfStudy], O.[StartYear], O.[EndYear], O.[Degree], O.[Activities], O.[Notes], O.[MemberID], O.[City], O.[CountryID], O.[QualificationLevelID], O.[QualificationLevelOther], O.[Major], O.[Present], O.[StartMonth], O.[EndMonth], O.[Graduated], O.[NonGraduatedCredits]
				FROM
				    [dbo].[MemberQualification] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberQualificationId] = PageIndex.[MemberQualificationId]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberQualification]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberQualification_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberQualification table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberQualificationId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInInternalEducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FieldOfStudy" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Degree" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Activities" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QualificationLevelId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QualificationLevelOther" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Major" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Present" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Graduated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@NonGraduatedCredits" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberQualification]
					(
					[LinkedInInternalEducationId]
					,[SchoolName]
					,[FieldOfStudy]
					,[StartYear]
					,[EndYear]
					,[Degree]
					,[Activities]
					,[Notes]
					,[MemberID]
					,[City]
					,[CountryID]
					,[QualificationLevelID]
					,[QualificationLevelOther]
					,[Major]
					,[Present]
					,[StartMonth]
					,[EndMonth]
					,[Graduated]
					,[NonGraduatedCredits]
					)
				VALUES
					(
					@LinkedInInternalEducationId
					,@SchoolName
					,@FieldOfStudy
					,@StartYear
					,@EndYear
					,@Degree
					,@Activities
					,@Notes
					,@MemberId
					,@City
					,@CountryId
					,@QualificationLevelId
					,@QualificationLevelOther
					,@Major
					,@Present
					,@StartMonth
					,@EndMonth
					,@Graduated
					,@NonGraduatedCredits
					)
				
				-- Get the identity value
				SET @MemberQualificationId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberQualification_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberQualification table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberQualificationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInInternalEducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FieldOfStudy" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Degree" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Activities" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QualificationLevelId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QualificationLevelOther" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Major" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Present" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Graduated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@NonGraduatedCredits" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberQualification]
				SET
					[LinkedInInternalEducationId] = @LinkedInInternalEducationId
					,[SchoolName] = @SchoolName
					,[FieldOfStudy] = @FieldOfStudy
					,[StartYear] = @StartYear
					,[EndYear] = @EndYear
					,[Degree] = @Degree
					,[Activities] = @Activities
					,[Notes] = @Notes
					,[MemberID] = @MemberId
					,[City] = @City
					,[CountryID] = @CountryId
					,[QualificationLevelID] = @QualificationLevelId
					,[QualificationLevelOther] = @QualificationLevelOther
					,[Major] = @Major
					,[Present] = @Present
					,[StartMonth] = @StartMonth
					,[EndMonth] = @EndMonth
					,[Graduated] = @Graduated
					,[NonGraduatedCredits] = @NonGraduatedCredits
				WHERE
[MemberQualificationId] = @MemberQualificationId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberQualification_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberQualification table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberQualificationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberQualification] WITH (ROWLOCK) 
				WHERE
					[MemberQualificationId] = @MemberQualificationId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberQualification_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberQualification table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberQualificationId],
					[LinkedInInternalEducationId],
					[SchoolName],
					[FieldOfStudy],
					[StartYear],
					[EndYear],
					[Degree],
					[Activities],
					[Notes],
					[MemberID],
					[City],
					[CountryID],
					[QualificationLevelID],
					[QualificationLevelOther],
					[Major],
					[Present],
					[StartMonth],
					[EndMonth],
					[Graduated],
					[NonGraduatedCredits]
				FROM
					[dbo].[MemberQualification]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberQualification_GetByMemberQualificationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberQualification table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberQualificationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberQualificationId],
					[LinkedInInternalEducationId],
					[SchoolName],
					[FieldOfStudy],
					[StartYear],
					[EndYear],
					[Degree],
					[Activities],
					[Notes],
					[MemberID],
					[City],
					[CountryID],
					[QualificationLevelID],
					[QualificationLevelOther],
					[Major],
					[Present],
					[StartMonth],
					[EndMonth],
					[Graduated],
					[NonGraduatedCredits]
				FROM
					[dbo].[MemberQualification]
				WHERE
					[MemberQualificationId] = @MemberQualificationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberQualification_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberQualification table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberQualificationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInInternalEducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SchoolName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FieldOfStudy" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Degree" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Activities" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault="null"/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationLevelId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationLevelOther" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Major" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Present" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Graduated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NonGraduatedCredits" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberQualificationId]
	, [LinkedInInternalEducationId]
	, [SchoolName]
	, [FieldOfStudy]
	, [StartYear]
	, [EndYear]
	, [Degree]
	, [Activities]
	, [Notes]
	, [MemberID]
	, [City]
	, [CountryID]
	, [QualificationLevelID]
	, [QualificationLevelOther]
	, [Major]
	, [Present]
	, [StartMonth]
	, [EndMonth]
	, [Graduated]
	, [NonGraduatedCredits]
    FROM
	[dbo].[MemberQualification]
    WHERE 
	 ([MemberQualificationId] = @MemberQualificationId OR @MemberQualificationId IS NULL)
	AND ([LinkedInInternalEducationId] = @LinkedInInternalEducationId OR @LinkedInInternalEducationId IS NULL)
	AND ([SchoolName] = @SchoolName OR @SchoolName IS NULL)
	AND ([FieldOfStudy] = @FieldOfStudy OR @FieldOfStudy IS NULL)
	AND ([StartYear] = @StartYear OR @StartYear IS NULL)
	AND ([EndYear] = @EndYear OR @EndYear IS NULL)
	AND ([Degree] = @Degree OR @Degree IS NULL)
	AND ([Activities] = @Activities OR @Activities IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([City] = @City OR @City IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([QualificationLevelID] = @QualificationLevelId OR @QualificationLevelId IS NULL)
	AND ([QualificationLevelOther] = @QualificationLevelOther OR @QualificationLevelOther IS NULL)
	AND ([Major] = @Major OR @Major IS NULL)
	AND ([Present] = @Present OR @Present IS NULL)
	AND ([StartMonth] = @StartMonth OR @StartMonth IS NULL)
	AND ([EndMonth] = @EndMonth OR @EndMonth IS NULL)
	AND ([Graduated] = @Graduated OR @Graduated IS NULL)
	AND ([NonGraduatedCredits] = @NonGraduatedCredits OR @NonGraduatedCredits IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberQualificationId]
	, [LinkedInInternalEducationId]
	, [SchoolName]
	, [FieldOfStudy]
	, [StartYear]
	, [EndYear]
	, [Degree]
	, [Activities]
	, [Notes]
	, [MemberID]
	, [City]
	, [CountryID]
	, [QualificationLevelID]
	, [QualificationLevelOther]
	, [Major]
	, [Present]
	, [StartMonth]
	, [EndMonth]
	, [Graduated]
	, [NonGraduatedCredits]
    FROM
	[dbo].[MemberQualification]
    WHERE 
	 ([MemberQualificationId] = @MemberQualificationId AND @MemberQualificationId is not null)
	OR ([LinkedInInternalEducationId] = @LinkedInInternalEducationId AND @LinkedInInternalEducationId is not null)
	OR ([SchoolName] = @SchoolName AND @SchoolName is not null)
	OR ([FieldOfStudy] = @FieldOfStudy AND @FieldOfStudy is not null)
	OR ([StartYear] = @StartYear AND @StartYear is not null)
	OR ([EndYear] = @EndYear AND @EndYear is not null)
	OR ([Degree] = @Degree AND @Degree is not null)
	OR ([Activities] = @Activities AND @Activities is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([City] = @City AND @City is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([QualificationLevelID] = @QualificationLevelId AND @QualificationLevelId is not null)
	OR ([QualificationLevelOther] = @QualificationLevelOther AND @QualificationLevelOther is not null)
	OR ([Major] = @Major AND @Major is not null)
	OR ([Present] = @Present AND @Present is not null)
	OR ([StartMonth] = @StartMonth AND @StartMonth is not null)
	OR ([EndMonth] = @EndMonth AND @EndMonth is not null)
	OR ([Graduated] = @Graduated AND @Graduated is not null)
	OR ([NonGraduatedCredits] = @NonGraduatedCredits AND @NonGraduatedCredits is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberQualification_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberQualification table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberQualificationId] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberQualificationId] )
				SELECT TOP {3} [MemberQualificationId]
				FROM [dbo].[MemberQualification] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberQualificationId], O.[LinkedInInternalEducationId], O.[SchoolName], O.[FieldOfStudy], O.[StartYear], O.[EndYear], O.[Degree], O.[Activities], O.[Notes], O.[MemberID], O.[City], O.[CountryID], O.[QualificationLevelID], O.[QualificationLevelOther], O.[Major], O.[Present], O.[StartMonth], O.[EndMonth], O.[Graduated], O.[NonGraduatedCredits]
				FROM
				    [dbo].[MemberQualification] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberQualificationId] = PageIndex.[MemberQualificationId]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberQualification] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberQualification_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberQualification table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberQualificationId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInInternalEducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SchoolName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FieldOfStudy" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Degree" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Activities" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault="null"/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationLevelId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationLevelOther" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Major" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Present" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Graduated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NonGraduatedCredits" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[MemberQualification]
					(
					[LinkedInInternalEducationId]
					,[SchoolName]
					,[FieldOfStudy]
					,[StartYear]
					,[EndYear]
					,[Degree]
					,[Activities]
					,[Notes]
					,[MemberID]
					,[City]
					,[CountryID]
					,[QualificationLevelID]
					,[QualificationLevelOther]
					,[Major]
					,[Present]
					,[StartMonth]
					,[EndMonth]
					,[Graduated]
					,[NonGraduatedCredits]
					)
				VALUES
					(
					@LinkedInInternalEducationId
					,@SchoolName
					,@FieldOfStudy
					,@StartYear
					,@EndYear
					,@Degree
					,@Activities
					,@Notes
					,@MemberId
					,@City
					,@CountryId
					,@QualificationLevelId
					,@QualificationLevelOther
					,@Major
					,@Present
					,@StartMonth
					,@EndMonth
					,@Graduated
					,@NonGraduatedCredits
					)
				
				-- Get the identity value
				SET @MemberQualificationId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberQualification_GetByMemberQualificationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberQualification table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberQualificationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[MemberQualificationId],
					[LinkedInInternalEducationId],
					[SchoolName],
					[FieldOfStudy],
					[StartYear],
					[EndYear],
					[Degree],
					[Activities],
					[Notes],
					[MemberID],
					[City],
					[CountryID],
					[QualificationLevelID],
					[QualificationLevelOther],
					[Major],
					[Present],
					[StartMonth],
					[EndMonth],
					[Graduated],
					[NonGraduatedCredits]
				FROM
					[dbo].[MemberQualification]
				WHERE
					[MemberQualificationId] = @MemberQualificationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberQualification_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberQualification table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[MemberQualificationId],
					[LinkedInInternalEducationId],
					[SchoolName],
					[FieldOfStudy],
					[StartYear],
					[EndYear],
					[Degree],
					[Activities],
					[Notes],
					[MemberID],
					[City],
					[CountryID],
					[QualificationLevelID],
					[QualificationLevelOther],
					[Major],
					[Present],
					[StartMonth],
					[EndMonth],
					[Graduated],
					[NonGraduatedCredits]
				FROM
					[dbo].[MemberQualification]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberQualification_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberQualification table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[MemberQualificationId],
					[LinkedInInternalEducationId],
					[SchoolName],
					[FieldOfStudy],
					[StartYear],
					[EndYear],
					[Degree],
					[Activities],
					[Notes],
					[MemberID],
					[City],
					[CountryID],
					[QualificationLevelID],
					[QualificationLevelOther],
					[Major],
					[Present],
					[StartMonth],
					[EndMonth],
					[Graduated],
					[NonGraduatedCredits]
				FROM
					[dbo].[MemberQualification]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberQualification_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberQualification table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberQualification]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberQualification_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberQualification table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberQualificationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInInternalEducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SchoolName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FieldOfStudy" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Degree" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Activities" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault="null"/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationLevelId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationLevelOther" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Major" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Present" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Graduated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NonGraduatedCredits" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberQualificationId]
	, [LinkedInInternalEducationId]
	, [SchoolName]
	, [FieldOfStudy]
	, [StartYear]
	, [EndYear]
	, [Degree]
	, [Activities]
	, [Notes]
	, [MemberID]
	, [City]
	, [CountryID]
	, [QualificationLevelID]
	, [QualificationLevelOther]
	, [Major]
	, [Present]
	, [StartMonth]
	, [EndMonth]
	, [Graduated]
	, [NonGraduatedCredits]
    FROM
	[dbo].[MemberQualification]
    WHERE 
	 ([MemberQualificationId] = @MemberQualificationId OR @MemberQualificationId IS NULL)
	AND ([LinkedInInternalEducationId] = @LinkedInInternalEducationId OR @LinkedInInternalEducationId IS NULL)
	AND ([SchoolName] = @SchoolName OR @SchoolName IS NULL)
	AND ([FieldOfStudy] = @FieldOfStudy OR @FieldOfStudy IS NULL)
	AND ([StartYear] = @StartYear OR @StartYear IS NULL)
	AND ([EndYear] = @EndYear OR @EndYear IS NULL)
	AND ([Degree] = @Degree OR @Degree IS NULL)
	AND ([Activities] = @Activities OR @Activities IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([City] = @City OR @City IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([QualificationLevelID] = @QualificationLevelId OR @QualificationLevelId IS NULL)
	AND ([QualificationLevelOther] = @QualificationLevelOther OR @QualificationLevelOther IS NULL)
	AND ([Major] = @Major OR @Major IS NULL)
	AND ([Present] = @Present OR @Present IS NULL)
	AND ([StartMonth] = @StartMonth OR @StartMonth IS NULL)
	AND ([EndMonth] = @EndMonth OR @EndMonth IS NULL)
	AND ([Graduated] = @Graduated OR @Graduated IS NULL)
	AND ([NonGraduatedCredits] = @NonGraduatedCredits OR @NonGraduatedCredits IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberQualificationId]
	, [LinkedInInternalEducationId]
	, [SchoolName]
	, [FieldOfStudy]
	, [StartYear]
	, [EndYear]
	, [Degree]
	, [Activities]
	, [Notes]
	, [MemberID]
	, [City]
	, [CountryID]
	, [QualificationLevelID]
	, [QualificationLevelOther]
	, [Major]
	, [Present]
	, [StartMonth]
	, [EndMonth]
	, [Graduated]
	, [NonGraduatedCredits]
    FROM
	[dbo].[MemberQualification]
    WHERE 
	 ([MemberQualificationId] = @MemberQualificationId AND @MemberQualificationId is not null)
	OR ([LinkedInInternalEducationId] = @LinkedInInternalEducationId AND @LinkedInInternalEducationId is not null)
	OR ([SchoolName] = @SchoolName AND @SchoolName is not null)
	OR ([FieldOfStudy] = @FieldOfStudy AND @FieldOfStudy is not null)
	OR ([StartYear] = @StartYear AND @StartYear is not null)
	OR ([EndYear] = @EndYear AND @EndYear is not null)
	OR ([Degree] = @Degree AND @Degree is not null)
	OR ([Activities] = @Activities AND @Activities is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([City] = @City AND @City is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([QualificationLevelID] = @QualificationLevelId AND @QualificationLevelId is not null)
	OR ([QualificationLevelOther] = @QualificationLevelOther AND @QualificationLevelOther is not null)
	OR ([Major] = @Major AND @Major is not null)
	OR ([Present] = @Present AND @Present is not null)
	OR ([StartMonth] = @StartMonth AND @StartMonth is not null)
	OR ([EndMonth] = @EndMonth AND @EndMonth is not null)
	OR ([Graduated] = @Graduated AND @Graduated is not null)
	OR ([NonGraduatedCredits] = @NonGraduatedCredits AND @NonGraduatedCredits is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberQualification_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberQualification table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberQualificationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberQualification] WITH (ROWLOCK) 
				WHERE
					[MemberQualificationId] = @MemberQualificationId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberQualification_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberQualification table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberQualificationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInInternalEducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SchoolName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FieldOfStudy" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Degree" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Activities" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault="null"/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@City" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationLevelId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QualificationLevelOther" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Major" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Present" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Graduated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NonGraduatedCredits" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[MemberQualification]
				SET
					[LinkedInInternalEducationId] = @LinkedInInternalEducationId
					,[SchoolName] = @SchoolName
					,[FieldOfStudy] = @FieldOfStudy
					,[StartYear] = @StartYear
					,[EndYear] = @EndYear
					,[Degree] = @Degree
					,[Activities] = @Activities
					,[Notes] = @Notes
					,[MemberID] = @MemberId
					,[City] = @City
					,[CountryID] = @CountryId
					,[QualificationLevelID] = @QualificationLevelId
					,[QualificationLevelOther] = @QualificationLevelOther
					,[Major] = @Major
					,[Present] = @Present
					,[StartMonth] = @StartMonth
					,[EndMonth] = @EndMonth
					,[Graduated] = @Graduated
					,[NonGraduatedCredits] = @NonGraduatedCredits
				WHERE
[MemberQualificationId] = @MemberQualificationId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="AdvertiserAccountStatus_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserAccountStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdvertiserAccountStatusID],
					[AdvertiserAccountStatusName]
				FROM
					[dbo].[AdvertiserAccountStatus]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="AdvertiserAccountStatus_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserAccountStatus table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserAccountStatusID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AdvertiserAccountStatusID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AdvertiserAccountStatusID]'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserAccountStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AdvertiserAccountStatusID], O.[AdvertiserAccountStatusName]
				FROM
				    [dbo].[AdvertiserAccountStatus] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AdvertiserAccountStatusID] = PageIndex.[AdvertiserAccountStatusID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserAccountStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="AdvertiserAccountStatus_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserAccountStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserAccountStatusName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[AdvertiserAccountStatus]
					(
					[AdvertiserAccountStatusName]
					)
				VALUES
					(
					@AdvertiserAccountStatusName
					)
				
				-- Get the identity value
				SET @AdvertiserAccountStatusId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserAccountStatus_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserAccountStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserAccountStatusName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AdvertiserAccountStatus]
				SET
					[AdvertiserAccountStatusName] = @AdvertiserAccountStatusName
				WHERE
[AdvertiserAccountStatusID] = @AdvertiserAccountStatusId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserAccountStatus_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserAccountStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[AdvertiserAccountStatus] WITH (ROWLOCK) 
				WHERE
					[AdvertiserAccountStatusID] = @AdvertiserAccountStatusId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserAccountStatus_GetByAdvertiserAccountStatusId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserAccountStatus table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdvertiserAccountStatusID],
					[AdvertiserAccountStatusName]
				FROM
					[dbo].[AdvertiserAccountStatus]
				WHERE
					[AdvertiserAccountStatusID] = @AdvertiserAccountStatusId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdvertiserAccountStatus_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserAccountStatus table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserAccountStatusID]
	, [AdvertiserAccountStatusName]
    FROM
	[dbo].[AdvertiserAccountStatus]
    WHERE 
	 ([AdvertiserAccountStatusID] = @AdvertiserAccountStatusId OR @AdvertiserAccountStatusId IS NULL)
	AND ([AdvertiserAccountStatusName] = @AdvertiserAccountStatusName OR @AdvertiserAccountStatusName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserAccountStatusID]
	, [AdvertiserAccountStatusName]
    FROM
	[dbo].[AdvertiserAccountStatus]
    WHERE 
	 ([AdvertiserAccountStatusID] = @AdvertiserAccountStatusId AND @AdvertiserAccountStatusId is not null)
	OR ([AdvertiserAccountStatusName] = @AdvertiserAccountStatusName AND @AdvertiserAccountStatusName is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="AdvertiserAccountStatus_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserAccountStatus table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserAccountStatusID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AdvertiserAccountStatusID] )
				SELECT TOP {3} [AdvertiserAccountStatusID]
				FROM [dbo].[AdvertiserAccountStatus] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AdvertiserAccountStatusID], O.[AdvertiserAccountStatusName]
				FROM
				    [dbo].[AdvertiserAccountStatus] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AdvertiserAccountStatusID] = PageIndex.[AdvertiserAccountStatusID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[AdvertiserAccountStatus] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="AdvertiserAccountStatus_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserAccountStatus table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserAccountStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountStatus_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserAccountStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[AdvertiserAccountStatus] WITH (ROWLOCK) 
				WHERE
					[AdvertiserAccountStatusID] = @AdvertiserAccountStatusId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountStatus_GetByAdvertiserAccountStatusId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserAccountStatus table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AdvertiserAccountStatusID],
					[AdvertiserAccountStatusName]
				FROM
					[dbo].[AdvertiserAccountStatus]
				WHERE
					[AdvertiserAccountStatusID] = @AdvertiserAccountStatusId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountStatus_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserAccountStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[AdvertiserAccountStatus]
					(
					[AdvertiserAccountStatusName]
					)
				VALUES
					(
					@AdvertiserAccountStatusName
					)
				
				-- Get the identity value
				SET @AdvertiserAccountStatusId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountStatus_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserAccountStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[AdvertiserAccountStatus]
				SET
					[AdvertiserAccountStatusName] = @AdvertiserAccountStatusName
				WHERE
[AdvertiserAccountStatusID] = @AdvertiserAccountStatusId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountStatus_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserAccountStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AdvertiserAccountStatusID],
					[AdvertiserAccountStatusName]
				FROM
					[dbo].[AdvertiserAccountStatus]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserAccountStatus_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserAccountStatus table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserAccountStatusID]
	, [AdvertiserAccountStatusName]
    FROM
	[dbo].[AdvertiserAccountStatus]
    WHERE 
	 ([AdvertiserAccountStatusID] = @AdvertiserAccountStatusId OR @AdvertiserAccountStatusId IS NULL)
	AND ([AdvertiserAccountStatusName] = @AdvertiserAccountStatusName OR @AdvertiserAccountStatusName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserAccountStatusID]
	, [AdvertiserAccountStatusName]
    FROM
	[dbo].[AdvertiserAccountStatus]
    WHERE 
	 ([AdvertiserAccountStatusID] = @AdvertiserAccountStatusId AND @AdvertiserAccountStatusId is not null)
	OR ([AdvertiserAccountStatusName] = @AdvertiserAccountStatusName AND @AdvertiserAccountStatusName is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberReferences_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberReferences table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberReferenceID],
					[MemberID],
					[MemberReferenceName],
					[JobTitle],
					[Company],
					[Phone],
					[Relationship],
					[LastModifiedDate],
					[ReferenceEmail]
				FROM
					[dbo].[MemberReferences]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberReferences_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberReferences table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberReferenceID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberReferenceID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberReferenceID]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberReferences]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberReferenceID], O.[MemberID], O.[MemberReferenceName], O.[JobTitle], O.[Company], O.[Phone], O.[Relationship], O.[LastModifiedDate], O.[ReferenceEmail]
				FROM
				    [dbo].[MemberReferences] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberReferenceID] = PageIndex.[MemberReferenceID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberReferences]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberReferences_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberReferences table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberReferenceId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberReferenceName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@JobTitle" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Company" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Phone" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Relationship" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ReferenceEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberReferences]
					(
					[MemberID]
					,[MemberReferenceName]
					,[JobTitle]
					,[Company]
					,[Phone]
					,[Relationship]
					,[LastModifiedDate]
					,[ReferenceEmail]
					)
				VALUES
					(
					@MemberId
					,@MemberReferenceName
					,@JobTitle
					,@Company
					,@Phone
					,@Relationship
					,@LastModifiedDate
					,@ReferenceEmail
					)
				
				-- Get the identity value
				SET @MemberReferenceId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberReferences_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberReferences table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberReferenceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberReferenceName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@JobTitle" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Company" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Phone" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Relationship" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ReferenceEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberReferences]
				SET
					[MemberID] = @MemberId
					,[MemberReferenceName] = @MemberReferenceName
					,[JobTitle] = @JobTitle
					,[Company] = @Company
					,[Phone] = @Phone
					,[Relationship] = @Relationship
					,[LastModifiedDate] = @LastModifiedDate
					,[ReferenceEmail] = @ReferenceEmail
				WHERE
[MemberReferenceID] = @MemberReferenceId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberReferences_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberReferences table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberReferenceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberReferences] WITH (ROWLOCK) 
				WHERE
					[MemberReferenceID] = @MemberReferenceId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberReferences_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberReferences table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberReferenceID],
					[MemberID],
					[MemberReferenceName],
					[JobTitle],
					[Company],
					[Phone],
					[Relationship],
					[LastModifiedDate],
					[ReferenceEmail]
				FROM
					[dbo].[MemberReferences]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberReferences_GetByMemberReferenceId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberReferences table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberReferenceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberReferenceID],
					[MemberID],
					[MemberReferenceName],
					[JobTitle],
					[Company],
					[Phone],
					[Relationship],
					[LastModifiedDate],
					[ReferenceEmail]
				FROM
					[dbo].[MemberReferences]
				WHERE
					[MemberReferenceID] = @MemberReferenceId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberReferences_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberReferences table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberReferenceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberReferenceName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@JobTitle" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Company" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Phone" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Relationship" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ReferenceEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberReferenceID]
	, [MemberID]
	, [MemberReferenceName]
	, [JobTitle]
	, [Company]
	, [Phone]
	, [Relationship]
	, [LastModifiedDate]
	, [ReferenceEmail]
    FROM
	[dbo].[MemberReferences]
    WHERE 
	 ([MemberReferenceID] = @MemberReferenceId OR @MemberReferenceId IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([MemberReferenceName] = @MemberReferenceName OR @MemberReferenceName IS NULL)
	AND ([JobTitle] = @JobTitle OR @JobTitle IS NULL)
	AND ([Company] = @Company OR @Company IS NULL)
	AND ([Phone] = @Phone OR @Phone IS NULL)
	AND ([Relationship] = @Relationship OR @Relationship IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
	AND ([ReferenceEmail] = @ReferenceEmail OR @ReferenceEmail IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberReferenceID]
	, [MemberID]
	, [MemberReferenceName]
	, [JobTitle]
	, [Company]
	, [Phone]
	, [Relationship]
	, [LastModifiedDate]
	, [ReferenceEmail]
    FROM
	[dbo].[MemberReferences]
    WHERE 
	 ([MemberReferenceID] = @MemberReferenceId AND @MemberReferenceId is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([MemberReferenceName] = @MemberReferenceName AND @MemberReferenceName is not null)
	OR ([JobTitle] = @JobTitle AND @JobTitle is not null)
	OR ([Company] = @Company AND @Company is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([Relationship] = @Relationship AND @Relationship is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	OR ([ReferenceEmail] = @ReferenceEmail AND @ReferenceEmail is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberReferences_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberReferences table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberReferenceID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberReferenceID] )
				SELECT TOP {3} [MemberReferenceID]
				FROM [dbo].[MemberReferences] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberReferenceID], O.[MemberID], O.[MemberReferenceName], O.[JobTitle], O.[Company], O.[Phone], O.[Relationship], O.[LastModifiedDate], O.[ReferenceEmail]
				FROM
				    [dbo].[MemberReferences] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberReferenceID] = PageIndex.[MemberReferenceID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberReferences] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberReferences_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberReferences table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberReferenceId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberReferenceName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@JobTitle" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Company" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Phone" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Relationship" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ReferenceEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					,@ReferenceEmail
					)
				
				-- Get the identity value
				SET @MemberReferenceId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberReferences_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberReferences table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[ReferenceEmail]
				FROM
					[dbo].[MemberReferences]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberReferences_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberReferences table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[ReferenceEmail]
				FROM
					[dbo].[MemberReferences]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberReferences_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberReferences table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberReferences]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberReferences_GetByMemberReferenceId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberReferences table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberReferenceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[ReferenceEmail]
				FROM
					[dbo].[MemberReferences]
				WHERE
					[MemberReferenceID] = @MemberReferenceId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberReferences_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberReferences table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberReferenceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberReferenceName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@JobTitle" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Company" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Phone" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Relationship" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ReferenceEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	OR ([ReferenceEmail] = @ReferenceEmail AND @ReferenceEmail is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberReferences_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberReferences table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberReferenceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberReferences] WITH (ROWLOCK) 
				WHERE
					[MemberReferenceID] = @MemberReferenceId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberReferences_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberReferences table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberReferenceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberReferenceName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@JobTitle" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Company" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Phone" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Relationship" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ReferenceEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					,[ReferenceEmail] = @ReferenceEmail
				WHERE
[MemberReferenceID] = @MemberReferenceId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteAdvertiserFilter_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteAdvertiserFilter table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteAdvertiserFilter table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteAdvertiserFilterID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteAdvertiserFilterID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteAdvertiserFilterID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteAdvertiserFilter]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteAdvertiserFilterID], O.[SiteID], O.[AdvertiserID], O.[Status]
				FROM
				    [dbo].[SiteAdvertiserFilter] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteAdvertiserFilterID] = PageIndex.[SiteAdvertiserFilterID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteAdvertiserFilter]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteAdvertiserFilter_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteAdvertiserFilter table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteAdvertiserFilter]
					(
					[SiteID]
					,[AdvertiserID]
					,[Status]
					)
				VALUES
					(
					@SiteId
					,@AdvertiserId
					,@Status
					)
				
				-- Get the identity value
				SET @SiteAdvertiserFilterId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteAdvertiserFilter_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteAdvertiserFilter table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteAdvertiserFilter]
				SET
					[SiteID] = @SiteId
					,[AdvertiserID] = @AdvertiserId
					,[Status] = @Status
				WHERE
[SiteAdvertiserFilterID] = @SiteAdvertiserFilterId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteAdvertiserFilter_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteAdvertiserFilter table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteAdvertiserFilter] WITH (ROWLOCK) 
				WHERE
					[SiteAdvertiserFilterID] = @SiteAdvertiserFilterId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetByAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteAdvertiserFilter table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteAdvertiserFilter table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetBySiteIdAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteAdvertiserFilter table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
				WHERE
					[SiteID] = @SiteId
					AND [AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetBySiteAdvertiserFilterId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteAdvertiserFilter table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
				WHERE
					[SiteAdvertiserFilterID] = @SiteAdvertiserFilterId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteAdvertiserFilter_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteAdvertiserFilter table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteAdvertiserFilterID]
	, [SiteID]
	, [AdvertiserID]
	, [Status]
    FROM
	[dbo].[SiteAdvertiserFilter]
    WHERE 
	 ([SiteAdvertiserFilterID] = @SiteAdvertiserFilterId OR @SiteAdvertiserFilterId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteAdvertiserFilterID]
	, [SiteID]
	, [AdvertiserID]
	, [Status]
    FROM
	[dbo].[SiteAdvertiserFilter]
    WHERE 
	 ([SiteAdvertiserFilterID] = @SiteAdvertiserFilterId AND @SiteAdvertiserFilterId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([Status] = @Status AND @Status is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteAdvertiserFilter_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteAdvertiserFilter table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteAdvertiserFilterID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteAdvertiserFilterID] )
				SELECT TOP {3} [SiteAdvertiserFilterID]
				FROM [dbo].[SiteAdvertiserFilter] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteAdvertiserFilterID], O.[SiteID], O.[AdvertiserID], O.[Status]
				FROM
				    [dbo].[SiteAdvertiserFilter] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteAdvertiserFilterID] = PageIndex.[SiteAdvertiserFilterID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteAdvertiserFilter] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetNameBySiteId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF  
      
    SELECT  
     [SiteAdvertiserFilter].[SiteAdvertiserFilterID],  
     [SiteAdvertiserFilter].[SiteID],  
     [SiteAdvertiserFilter].[AdvertiserID],  
     [Advertisers].[CompanyName], [SiteAdvertiserFilter].[Status]   
    FROM  
     [dbo].[SiteAdvertiserFilter] (NOLOCK)  
    INNER JOIN [dbo].[Advertisers] (NOLOCK)   
    ON [SiteAdvertiserFilter].[AdvertiserID] = [Advertisers].[AdvertiserID]  
    WHERE  
     [SiteAdvertiserFilter].[SiteID] = @SiteId

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteAdvertiserFilter table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteAdvertiserFilter]
					(
					[SiteID]
					,[AdvertiserID]
					,[Status]
					)
				VALUES
					(
					@SiteId
					,@AdvertiserId
					,@Status
					)
				
				-- Get the identity value
				SET @SiteAdvertiserFilterId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetBySiteIdAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteAdvertiserFilter table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
				WHERE
					[SiteID] = @SiteId
					AND [AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteAdvertiserFilter table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteAdvertiserFilter table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteAdvertiserFilter table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteAdvertiserFilter]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetBySiteAdvertiserFilterId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteAdvertiserFilter table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
				WHERE
					[SiteAdvertiserFilterID] = @SiteAdvertiserFilterId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteAdvertiserFilter table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteAdvertiserFilterID],
					[SiteID],
					[AdvertiserID],
					[Status]
				FROM
					[dbo].[SiteAdvertiserFilter]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteAdvertiserFilter table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteAdvertiserFilterID]
	, [SiteID]
	, [AdvertiserID]
	, [Status]
    FROM
	[dbo].[SiteAdvertiserFilter]
    WHERE 
	 ([SiteAdvertiserFilterID] = @SiteAdvertiserFilterId OR @SiteAdvertiserFilterId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteAdvertiserFilterID]
	, [SiteID]
	, [AdvertiserID]
	, [Status]
    FROM
	[dbo].[SiteAdvertiserFilter]
    WHERE 
	 ([SiteAdvertiserFilterID] = @SiteAdvertiserFilterId AND @SiteAdvertiserFilterId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([Status] = @Status AND @Status is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteAdvertiserFilter table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteAdvertiserFilter] WITH (ROWLOCK) 
				WHERE
					[SiteAdvertiserFilterID] = @SiteAdvertiserFilterId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteAdvertiserFilter_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteAdvertiserFilter table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteAdvertiserFilterId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteAdvertiserFilter]
				SET
					[SiteID] = @SiteId
					,[AdvertiserID] = @AdvertiserId
					,[Status] = @Status
				WHERE
[SiteAdvertiserFilterID] = @SiteAdvertiserFilterId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteSalaryType_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteSalaryType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteSalaryTypeID],
					[SalaryTypeID],
					[SiteID],
					[SalaryTypeName],
					[Valid],
					[Sequence]
				FROM
					[dbo].[SiteSalaryType]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteSalaryType_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteSalaryType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteSalaryTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteSalaryTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteSalaryTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteSalaryType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteSalaryTypeID], O.[SalaryTypeID], O.[SiteID], O.[SalaryTypeName], O.[Valid], O.[Sequence]
				FROM
				    [dbo].[SiteSalaryType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteSalaryTypeID] = PageIndex.[SiteSalaryTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteSalaryType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteSalaryType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteSalaryType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteSalaryTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteSalaryType]
					(
					[SalaryTypeID]
					,[SiteID]
					,[SalaryTypeName]
					,[Valid]
					,[Sequence]
					)
				VALUES
					(
					@SalaryTypeId
					,@SiteId
					,@SalaryTypeName
					,@Valid
					,@Sequence
					)
				
				-- Get the identity value
				SET @SiteSalaryTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteSalaryType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteSalaryType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteSalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteSalaryType]
				SET
					[SalaryTypeID] = @SalaryTypeId
					,[SiteID] = @SiteId
					,[SalaryTypeName] = @SalaryTypeName
					,[Valid] = @Valid
					,[Sequence] = @Sequence
				WHERE
[SiteSalaryTypeID] = @SiteSalaryTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteSalaryType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteSalaryType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteSalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteSalaryType] WITH (ROWLOCK) 
				WHERE
					[SiteSalaryTypeID] = @SiteSalaryTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteSalaryType_GetBySalaryTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteSalaryType table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteSalaryTypeID],
					[SalaryTypeID],
					[SiteID],
					[SalaryTypeName],
					[Valid],
					[Sequence]
				FROM
					[dbo].[SiteSalaryType]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteSalaryType_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteSalaryType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteSalaryTypeID],
					[SalaryTypeID],
					[SiteID],
					[SalaryTypeName],
					[Valid],
					[Sequence]
				FROM
					[dbo].[SiteSalaryType]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteSalaryType_GetBySiteSalaryTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteSalaryType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteSalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteSalaryTypeID],
					[SalaryTypeID],
					[SiteID],
					[SalaryTypeName],
					[Valid],
					[Sequence]
				FROM
					[dbo].[SiteSalaryType]
				WHERE
					[SiteSalaryTypeID] = @SiteSalaryTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteSalaryType_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteSalaryType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteSalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteSalaryTypeID]
	, [SalaryTypeID]
	, [SiteID]
	, [SalaryTypeName]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[SiteSalaryType]
    WHERE 
	 ([SiteSalaryTypeID] = @SiteSalaryTypeId OR @SiteSalaryTypeId IS NULL)
	AND ([SalaryTypeID] = @SalaryTypeId OR @SalaryTypeId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([SalaryTypeName] = @SalaryTypeName OR @SalaryTypeName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteSalaryTypeID]
	, [SalaryTypeID]
	, [SiteID]
	, [SalaryTypeName]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[SiteSalaryType]
    WHERE 
	 ([SiteSalaryTypeID] = @SiteSalaryTypeId AND @SiteSalaryTypeId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([SalaryTypeName] = @SalaryTypeName AND @SalaryTypeName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteSalaryType_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteSalaryType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteSalaryTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteSalaryTypeID] )
				SELECT TOP {3} [SiteSalaryTypeID]
				FROM [dbo].[SiteSalaryType] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteSalaryTypeID], O.[SalaryTypeID], O.[SiteID], O.[SalaryTypeName], O.[Valid], O.[Sequence]
				FROM
				    [dbo].[SiteSalaryType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteSalaryTypeID] = PageIndex.[SiteSalaryTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteSalaryType] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteSalaryType_GetBySiteSalaryTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteSalaryType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteSalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteSalaryTypeID],
					[SalaryTypeID],
					[SiteID],
					[SalaryTypeName],
					[Valid],
					[Sequence]
				FROM
					[dbo].[SiteSalaryType]
				WHERE
					[SiteSalaryTypeID] = @SiteSalaryTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSalaryType_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteSalaryType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteSalaryTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteSalaryType]
					(
					[SalaryTypeID]
					,[SiteID]
					,[SalaryTypeName]
					,[Valid]
					,[Sequence]
					)
				VALUES
					(
					@SalaryTypeId
					,@SiteId
					,@SalaryTypeName
					,@Valid
					,@Sequence
					)
				
				-- Get the identity value
				SET @SiteSalaryTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSalaryType_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteSalaryType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteSalaryTypeID],
					[SalaryTypeID],
					[SiteID],
					[SalaryTypeName],
					[Valid],
					[Sequence]
				FROM
					[dbo].[SiteSalaryType]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSalaryType_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteSalaryType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteSalaryTypeID],
					[SalaryTypeID],
					[SiteID],
					[SalaryTypeName],
					[Valid],
					[Sequence]
				FROM
					[dbo].[SiteSalaryType]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSalaryType_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteSalaryType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteSalaryType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSalaryType_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteSalaryType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteSalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteSalaryTypeID]
	, [SalaryTypeID]
	, [SiteID]
	, [SalaryTypeName]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[SiteSalaryType]
    WHERE 
	 ([SiteSalaryTypeID] = @SiteSalaryTypeId OR @SiteSalaryTypeId IS NULL)
	AND ([SalaryTypeID] = @SalaryTypeId OR @SalaryTypeId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([SalaryTypeName] = @SalaryTypeName OR @SalaryTypeName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteSalaryTypeID]
	, [SalaryTypeID]
	, [SiteID]
	, [SalaryTypeName]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[SiteSalaryType]
    WHERE 
	 ([SiteSalaryTypeID] = @SiteSalaryTypeId AND @SiteSalaryTypeId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([SalaryTypeName] = @SalaryTypeName AND @SalaryTypeName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSalaryType_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteSalaryType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteSalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteSalaryType] WITH (ROWLOCK) 
				WHERE
					[SiteSalaryTypeID] = @SiteSalaryTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSalaryType_GetBySalaryTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteSalaryType table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteSalaryTypeID],
					[SalaryTypeID],
					[SiteID],
					[SalaryTypeName],
					[Valid],
					[Sequence]
				FROM
					[dbo].[SiteSalaryType]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteSalaryType_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteSalaryType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteSalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteSalaryType]
				SET
					[SalaryTypeID] = @SalaryTypeId
					,[SiteID] = @SiteId
					,[SalaryTypeName] = @SalaryTypeName
					,[Valid] = @Valid
					,[Sequence] = @Sequence
				WHERE
[SiteSalaryTypeID] = @SiteSalaryTypeId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteArea_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteArea_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteArea table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteAreaID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteAreaID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteAreaID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteArea]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteAreaID], O.[AreaID], O.[SiteID], O.[SiteAreaName], O.[Valid]
				FROM
				    [dbo].[SiteArea] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteAreaID] = PageIndex.[SiteAreaID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteArea]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteArea_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteAreaId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteAreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteArea]
					(
					[AreaID]
					,[SiteID]
					,[SiteAreaName]
					,[Valid]
					)
				VALUES
					(
					@AreaId
					,@SiteId
					,@SiteAreaName
					,@Valid
					)
				
				-- Get the identity value
				SET @SiteAreaId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteArea_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteAreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteArea]
				SET
					[AreaID] = @AreaId
					,[SiteID] = @SiteId
					,[SiteAreaName] = @SiteAreaName
					,[Valid] = @Valid
				WHERE
[SiteAreaID] = @SiteAreaId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteArea_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteArea] WITH (ROWLOCK) 
				WHERE
					[SiteAreaID] = @SiteAreaId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteArea_GetByAreaId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteArea table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
				WHERE
					[AreaID] = @AreaId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteArea_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteArea table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteArea_GetBySiteIdAreaId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteArea table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
				WHERE
					[SiteID] = @SiteId
					AND [AreaID] = @AreaId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteArea_GetBySiteAreaId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteArea table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
				WHERE
					[SiteAreaID] = @SiteAreaId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteArea_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteArea table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteAreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteAreaID]
	, [AreaID]
	, [SiteID]
	, [SiteAreaName]
	, [Valid]
    FROM
	[dbo].[SiteArea]
    WHERE 
	 ([SiteAreaID] = @SiteAreaId OR @SiteAreaId IS NULL)
	AND ([AreaID] = @AreaId OR @AreaId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([SiteAreaName] = @SiteAreaName OR @SiteAreaName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteAreaID]
	, [AreaID]
	, [SiteID]
	, [SiteAreaName]
	, [Valid]
    FROM
	[dbo].[SiteArea]
    WHERE 
	 ([SiteAreaID] = @SiteAreaId AND @SiteAreaId is not null)
	OR ([AreaID] = @AreaId AND @AreaId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([SiteAreaName] = @SiteAreaName AND @SiteAreaName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteArea_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteArea table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteAreaID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteAreaID] )
				SELECT TOP {3} [SiteAreaID]
				FROM [dbo].[SiteArea] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteAreaID], O.[AreaID], O.[SiteID], O.[SiteAreaName], O.[Valid]
				FROM
				    [dbo].[SiteArea] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteAreaID] = PageIndex.[SiteAreaID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteArea] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteArea_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteAreaId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteAreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteArea]
					(
					[AreaID]
					,[SiteID]
					,[SiteAreaName]
					,[Valid]
					)
				VALUES
					(
					@AreaId
					,@SiteId
					,@SiteAreaName
					,@Valid
					)
				
				-- Get the identity value
				SET @SiteAreaId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_GetByLocationID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
		SELECT
			[SiteArea].[SiteAreaID],
			[SiteArea].[AreaID],
			[SiteArea].[SiteID],
			[SiteArea].[SiteAreaName],
			[SiteArea].[Valid]
		FROM
			[dbo].[SiteArea] (NOLOCK) SiteArea
		INNER JOIN [dbo].[Area] (NOLOCK) Area
		ON [Area].[AreaID] = [SiteArea].[AreaID]
		WHERE
			[SiteArea].[SiteID] = @SiteId
		AND [Area].[LocationID] = @LocationId
		ORDER BY [Area].[Sequence]		

		SELECT @@ROWCOUNT
		SET ANSI_NULLS ON

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteArea table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteArea table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteArea]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_GetBySiteAreaId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteArea table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
				WHERE
					[SiteAreaID] = @SiteAreaId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_GetBySiteIdAreaId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteArea table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
				WHERE
					[SiteID] = @SiteId
					AND [AreaID] = @AreaId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteArea table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteAreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteAreaID]
	, [AreaID]
	, [SiteID]
	, [SiteAreaName]
	, [Valid]
    FROM
	[dbo].[SiteArea]
    WHERE 
	 ([SiteAreaID] = @SiteAreaId OR @SiteAreaId IS NULL)
	AND ([AreaID] = @AreaId OR @AreaId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([SiteAreaName] = @SiteAreaName OR @SiteAreaName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteAreaID]
	, [AreaID]
	, [SiteID]
	, [SiteAreaName]
	, [Valid]
    FROM
	[dbo].[SiteArea]
    WHERE 
	 ([SiteAreaID] = @SiteAreaId AND @SiteAreaId is not null)
	OR ([AreaID] = @AreaId AND @AreaId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([SiteAreaName] = @SiteAreaName AND @SiteAreaName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteArea] WITH (ROWLOCK) 
				WHERE
					[SiteAreaID] = @SiteAreaId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_GetByAreaId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteArea table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteAreaID],
					[AreaID],
					[SiteID],
					[SiteAreaName],
					[Valid]
				FROM
					[dbo].[SiteArea]
				WHERE
					[AreaID] = @AreaId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteArea_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteAreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteArea]
				SET
					[AreaID] = @AreaId
					,[SiteID] = @SiteId
					,[SiteAreaName] = @SiteAreaName
					,[Valid] = @Valid
				WHERE
[SiteAreaID] = @SiteAreaId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteWebParts_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteWebParts table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteWebParts_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteWebParts table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteWebPartID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteWebPartID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteWebPartID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteWebParts]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteWebPartID], O.[SiteID], O.[SiteWebPartName], O.[SiteWebPartTypeID], O.[SiteWebPartHTML], O.[SourceID]
				FROM
				    [dbo].[SiteWebParts] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteWebPartID] = PageIndex.[SiteWebPartID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteWebParts]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteWebParts_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteWebParts table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWebPartHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteWebParts]
					(
					[SiteID]
					,[SiteWebPartName]
					,[SiteWebPartTypeID]
					,[SiteWebPartHTML]
					,[SourceID]
					)
				VALUES
					(
					@SiteId
					,@SiteWebPartName
					,@SiteWebPartTypeId
					,@SiteWebPartHtml
					,@SourceId
					)
				
				-- Get the identity value
				SET @SiteWebPartId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebParts_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteWebParts table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWebPartHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteWebParts]
				SET
					[SiteID] = @SiteId
					,[SiteWebPartName] = @SiteWebPartName
					,[SiteWebPartTypeID] = @SiteWebPartTypeId
					,[SiteWebPartHTML] = @SiteWebPartHtml
					,[SourceID] = @SourceId
				WHERE
[SiteWebPartID] = @SiteWebPartId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebParts_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteWebParts table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteWebParts] WITH (ROWLOCK) 
				WHERE
					[SiteWebPartID] = @SiteWebPartId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebParts_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebParts table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebParts_GetBySiteWebPartTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebParts table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
				WHERE
					[SiteWebPartTypeID] = @SiteWebPartTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebParts_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebParts table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebParts_GetBySiteWebPartTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebParts table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
				WHERE
					[SiteWebPartTypeID] = @SiteWebPartTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWebParts_GetBySiteWebPartId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebParts table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
				WHERE
					[SiteWebPartID] = @SiteWebPartId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteWebParts_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteWebParts table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteWebPartID]
	, [SiteID]
	, [SiteWebPartName]
	, [SiteWebPartTypeID]
	, [SiteWebPartHTML]
	, [SourceID]
    FROM
	[dbo].[SiteWebParts]
    WHERE 
	 ([SiteWebPartID] = @SiteWebPartId OR @SiteWebPartId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([SiteWebPartName] = @SiteWebPartName OR @SiteWebPartName IS NULL)
	AND ([SiteWebPartTypeID] = @SiteWebPartTypeId OR @SiteWebPartTypeId IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteWebPartID]
	, [SiteID]
	, [SiteWebPartName]
	, [SiteWebPartTypeID]
	, [SiteWebPartHTML]
	, [SourceID]
    FROM
	[dbo].[SiteWebParts]
    WHERE 
	 ([SiteWebPartID] = @SiteWebPartId AND @SiteWebPartId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([SiteWebPartName] = @SiteWebPartName AND @SiteWebPartName is not null)
	OR ([SiteWebPartTypeID] = @SiteWebPartTypeId AND @SiteWebPartTypeId is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteWebParts_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteWebParts table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteWebPartID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteWebPartID] )
				SELECT TOP {3} [SiteWebPartID]
				FROM [dbo].[SiteWebParts] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteWebPartID], O.[SiteID], O.[SiteWebPartName], O.[SiteWebPartTypeID], O.[SiteWebPartHTML], O.[SourceID]
				FROM
				    [dbo].[SiteWebParts] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteWebPartID] = PageIndex.[SiteWebPartID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteWebParts] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteWebParts_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteWebParts table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteWebParts]
					(
					[SiteID]
					,[SiteWebPartName]
					,[SiteWebPartTypeID]
					,[SiteWebPartHTML]
					,[SourceID]
					)
				VALUES
					(
					@SiteId
					,@SiteWebPartName
					,@SiteWebPartTypeId
					,@SiteWebPartHtml
					,@SourceId
					)
				
				-- Get the identity value
				SET @SiteWebPartId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebParts table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteWebParts table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_GetByDynamicPageWebPartTemplatesLink"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT  
		DynamicPageWebPartTemplates.DynamicPageWebPartTemplateID
		,DynamicPageWebPartTemplates.DynamicPageWebPartName
		,SiteWebParts.[SiteWebPartID]
		,SiteWebParts.[SiteWebPartTypeID]
		,SiteWebParts.[SiteWebPartName]
		,DynamicPageWebPartTemplatesLink.Sequence
	FROM  DynamicPageWebPartTemplates (NOLOCK)
	INNER JOIN DynamicPageWebPartTemplatesLink (NOLOCK)
	ON DynamicPageWebPartTemplates.DynamicPageWebPartTemplateID = DynamicPageWebPartTemplatesLink.DynamicPageWebPartTemplateID 
	INNER JOIN SiteWebParts (NOLOCK)
	ON DynamicPageWebPartTemplatesLink.SiteWebPartID = SiteWebParts.SiteWebPartID
	WHERE
		  DynamicPageWebPartTemplates.DynamicPageWebPartTemplateID = @DynamicPageWebPartTemplateID
	ORDER BY
		  SiteWebParts.[SiteWebPartTypeID], DynamicPageWebPartTemplatesLink.Sequence

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_GetBySiteWebPartTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebParts table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
				WHERE
					[SiteWebPartTypeID] = @SiteWebPartTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_GetByDynamicPageContainerID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT  SiteWebParts.[SiteWebPartID]  
		,SiteWebParts.[SiteID]  
		,SiteWebParts.[SiteWebPartName]  
		,SiteWebParts.[SiteWebPartTypeID]  
		,SiteWebParts.[SiteWebPartHTML]
		,SiteWebParts.SourceID  
 FROM  DynamicPageWebPartTemplates (NOLOCK)  
 INNER JOIN DynamicPageWebPartTemplatesLink (NOLOCK)  
 ON DynamicPageWebPartTemplates.DynamicPageWebPartTemplateID = DynamicPageWebPartTemplatesLink.DynamicPageWebPartTemplateID   
 INNER JOIN SiteWebParts (NOLOCK)  
 ON DynamicPageWebPartTemplatesLink.SiteWebPartID = SiteWebParts.SiteWebPartID  
 WHERE  
  DynamicPageWebPartTemplates.DynamicPageWebPartTemplateID = @DynamicPageWebPartTemplateID  
 ORDER BY  
  SiteWebParts.[SiteWebPartTypeID], DynamicPageWebPartTemplatesLink.Sequence
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteWebParts table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteWebPartID]
	, [SiteID]
	, [SiteWebPartName]
	, [SiteWebPartTypeID]
	, [SiteWebPartHTML]
	, [SourceID]
    FROM
	[dbo].[SiteWebParts]
    WHERE 
	 ([SiteWebPartID] = @SiteWebPartId OR @SiteWebPartId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([SiteWebPartName] = @SiteWebPartName OR @SiteWebPartName IS NULL)
	AND ([SiteWebPartTypeID] = @SiteWebPartTypeId OR @SiteWebPartTypeId IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteWebPartID]
	, [SiteID]
	, [SiteWebPartName]
	, [SiteWebPartTypeID]
	, [SiteWebPartHTML]
	, [SourceID]
    FROM
	[dbo].[SiteWebParts]
    WHERE 
	 ([SiteWebPartID] = @SiteWebPartId AND @SiteWebPartId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([SiteWebPartName] = @SiteWebPartName AND @SiteWebPartName is not null)
	OR ([SiteWebPartTypeID] = @SiteWebPartTypeId AND @SiteWebPartTypeId is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_GetBySiteWebPartId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWebParts table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteWebPartID],
					[SiteID],
					[SiteWebPartName],
					[SiteWebPartTypeID],
					[SiteWebPartHTML],
					[SourceID]
				FROM
					[dbo].[SiteWebParts]
				WHERE
					[SiteWebPartID] = @SiteWebPartId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteWebParts table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteWebParts]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteWebParts table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteWebPartTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteWebParts]
				SET
					[SiteID] = @SiteId
					,[SiteWebPartName] = @SiteWebPartName
					,[SiteWebPartTypeID] = @SiteWebPartTypeId
					,[SiteWebPartHTML] = @SiteWebPartHtml
					,[SourceID] = @SourceId
				WHERE
[SiteWebPartID] = @SiteWebPartId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWebParts_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteWebParts table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteWebParts] WITH (ROWLOCK) 
				WHERE
					[SiteWebPartID] = @SiteWebPartId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Educations_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Educations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[EducationID],
					[SiteID],
					[EducationParentID],
					[EducationName],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[Sequence]
				FROM
					[dbo].[Educations]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Educations_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Educations table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [EducationID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([EducationID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [EducationID]'
				SET @SQL = @SQL + ' FROM [dbo].[Educations]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[EducationID], O.[SiteID], O.[EducationParentID], O.[EducationName], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[Sequence]
				FROM
				    [dbo].[Educations] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[EducationID] = PageIndex.[EducationID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Educations]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Educations_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Educations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EducationParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EducationName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Educations]
					(
					[SiteID]
					,[EducationParentID]
					,[EducationName]
					,[GlobalTemplate]
					,[LastModifiedBy]
					,[LastModified]
					,[Sequence]
					)
				VALUES
					(
					@SiteId
					,@EducationParentId
					,@EducationName
					,@GlobalTemplate
					,@LastModifiedBy
					,@LastModified
					,@Sequence
					)
				
				-- Get the identity value
				SET @EducationId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Educations_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Educations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EducationParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EducationName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Educations]
				SET
					[SiteID] = @SiteId
					,[EducationParentID] = @EducationParentId
					,[EducationName] = @EducationName
					,[GlobalTemplate] = @GlobalTemplate
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[Sequence] = @Sequence
				WHERE
[EducationID] = @EducationId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Educations_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Educations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Educations] WITH (ROWLOCK) 
				WHERE
					[EducationID] = @EducationId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Educations_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Educations table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[EducationID],
					[SiteID],
					[EducationParentID],
					[EducationName],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[Sequence]
				FROM
					[dbo].[Educations]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Educations_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Educations table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[EducationID],
					[SiteID],
					[EducationParentID],
					[EducationName],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[Sequence]
				FROM
					[dbo].[Educations]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Educations_GetByEducationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Educations table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[EducationID],
					[SiteID],
					[EducationParentID],
					[EducationName],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[Sequence]
				FROM
					[dbo].[Educations]
				WHERE
					[EducationID] = @EducationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Educations_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Educations table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EducationID]
	, [SiteID]
	, [EducationParentID]
	, [EducationName]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
    FROM
	[dbo].[Educations]
    WHERE 
	 ([EducationID] = @EducationId OR @EducationId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([EducationParentID] = @EducationParentId OR @EducationParentId IS NULL)
	AND ([EducationName] = @EducationName OR @EducationName IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EducationID]
	, [SiteID]
	, [EducationParentID]
	, [EducationName]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
    FROM
	[dbo].[Educations]
    WHERE 
	 ([EducationID] = @EducationId AND @EducationId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([EducationParentID] = @EducationParentId AND @EducationParentId is not null)
	OR ([EducationName] = @EducationName AND @EducationName is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Educations_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Educations table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [EducationID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [EducationID] )
				SELECT TOP {3} [EducationID]
				FROM [dbo].[Educations] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[EducationID], O.[SiteID], O.[EducationParentID], O.[EducationName], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[Sequence]
				FROM
				    [dbo].[Educations] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[EducationID] = PageIndex.[EducationID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Educations] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Educations_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Educations table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,@Sequence
					)
				
				-- Get the identity value
				SET @EducationId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Educations_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Educations table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence]
				FROM
					[dbo].[Educations]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Educations_GetByEducationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Educations table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence]
				FROM
					[dbo].[Educations]
				WHERE
					[EducationID] = @EducationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Educations_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Educations table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Educations]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Educations_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Educations table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence]
				FROM
					[dbo].[Educations]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Educations_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Educations table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,[Sequence] = @Sequence
				WHERE
[EducationID] = @EducationId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Educations_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Educations table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Educations_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Educations table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Educations] WITH (ROWLOCK) 
				WHERE
					[EducationID] = @EducationId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Educations_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Educations table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="WorkType_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the WorkType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[WorkTypeID],
					[WorkTypeName],
					[Valid]
				FROM
					[dbo].[WorkType]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="WorkType_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the WorkType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [WorkTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([WorkTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [WorkTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[WorkType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[WorkTypeID], O.[WorkTypeName], O.[Valid]
				FROM
				    [dbo].[WorkType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[WorkTypeID] = PageIndex.[WorkTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[WorkType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="WorkType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the WorkType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[WorkType]
					(
					[WorkTypeName]
					,[Valid]
					)
				VALUES
					(
					@WorkTypeName
					,@Valid
					)
				
				-- Get the identity value
				SET @WorkTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WorkType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the WorkType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[WorkType]
				SET
					[WorkTypeName] = @WorkTypeName
					,[Valid] = @Valid
				WHERE
[WorkTypeID] = @WorkTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WorkType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the WorkType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[WorkType] WITH (ROWLOCK) 
				WHERE
					[WorkTypeID] = @WorkTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WorkType_GetByWorkTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WorkType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[WorkTypeID],
					[WorkTypeName],
					[Valid]
				FROM
					[dbo].[WorkType]
				WHERE
					[WorkTypeID] = @WorkTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="WorkType_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the WorkType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [WorkTypeID]
	, [WorkTypeName]
	, [Valid]
    FROM
	[dbo].[WorkType]
    WHERE 
	 ([WorkTypeID] = @WorkTypeId OR @WorkTypeId IS NULL)
	AND ([WorkTypeName] = @WorkTypeName OR @WorkTypeName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [WorkTypeID]
	, [WorkTypeName]
	, [Valid]
    FROM
	[dbo].[WorkType]
    WHERE 
	 ([WorkTypeID] = @WorkTypeId AND @WorkTypeId is not null)
	OR ([WorkTypeName] = @WorkTypeName AND @WorkTypeName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="WorkType_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the WorkType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [WorkTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [WorkTypeID] )
				SELECT TOP {3} [WorkTypeID]
				FROM [dbo].[WorkType] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[WorkTypeID], O.[WorkTypeName], O.[Valid]
				FROM
				    [dbo].[WorkType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[WorkTypeID] = PageIndex.[WorkTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[WorkType] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="WorkType_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the WorkType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[WorkType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WorkType_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the WorkType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[WorkType] WITH (ROWLOCK) 
				WHERE
					[WorkTypeID] = @WorkTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WorkType_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the WorkType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[WorkType]
				SET
					[WorkTypeName] = @WorkTypeName
					,[Valid] = @Valid
				WHERE
[WorkTypeID] = @WorkTypeId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WorkType_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the WorkType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[WorkType]
					(
					[WorkTypeName]
					,[Valid]
					)
				VALUES
					(
					@WorkTypeName
					,@Valid
					)
				
				-- Get the identity value
				SET @WorkTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WorkType_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the WorkType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[WorkTypeID],
					[WorkTypeName],
					[Valid]
				FROM
					[dbo].[WorkType]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WorkType_GetByWorkTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WorkType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[WorkTypeID],
					[WorkTypeName],
					[Valid]
				FROM
					[dbo].[WorkType]
				WHERE
					[WorkTypeID] = @WorkTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WorkType_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the WorkType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [WorkTypeID]
	, [WorkTypeName]
	, [Valid]
    FROM
	[dbo].[WorkType]
    WHERE 
	 ([WorkTypeID] = @WorkTypeId OR @WorkTypeId IS NULL)
	AND ([WorkTypeName] = @WorkTypeName OR @WorkTypeName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [WorkTypeID]
	, [WorkTypeName]
	, [Valid]
    FROM
	[dbo].[WorkType]
    WHERE 
	 ([WorkTypeID] = @WorkTypeId AND @WorkTypeId is not null)
	OR ([WorkTypeName] = @WorkTypeName AND @WorkTypeName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="WidgetContainers_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the WidgetContainers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[WidgetID],
					[SiteID],
					[LanguageID],
					[WidgetName],
					[WidgetDomain],
					[WidgetContainerClass],
					[WidgetContainerHeaderClass],
					[WidgetItemClass],
					[WidgetJobLinkCSS],
					[WidgetItemLinkImageID],
					[Valid],
					[ShowJobs],
					[ShowCompanies],
					[ShowSite],
					[ShowPeople],
					[JobHtml],
					[CompanyHtml],
					[SiteHtml],
					[PeopleHtml],
					[Javascript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="WidgetContainers_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the WidgetContainers table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [WidgetID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([WidgetID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [WidgetID]'
				SET @SQL = @SQL + ' FROM [dbo].[WidgetContainers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[WidgetID], O.[SiteID], O.[LanguageID], O.[WidgetName], O.[WidgetDomain], O.[WidgetContainerClass], O.[WidgetContainerHeaderClass], O.[WidgetItemClass], O.[WidgetJobLinkCSS], O.[WidgetItemLinkImageID], O.[Valid], O.[ShowJobs], O.[ShowCompanies], O.[ShowSite], O.[ShowPeople], O.[JobHtml], O.[CompanyHtml], O.[SiteHtml], O.[PeopleHtml], O.[Javascript], O.[SearchCSS], O.[DefaultProfessionID], O.[DefaultCountryID], O.[DefaultLocationID], O.[Width], O.[Height], O.[OnAdvancedSearch]
				FROM
				    [dbo].[WidgetContainers] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[WidgetID] = PageIndex.[WidgetID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[WidgetContainers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="WidgetContainers_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the WidgetContainers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WidgetId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetDomain" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetContainerClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetContainerHeaderClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetItemClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetJobLinkCss" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetItemLinkImageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowPeople" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CompanyHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SiteHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@PeopleHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Javascript" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SearchCss" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@DefaultProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Width" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Height" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OnAdvancedSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[WidgetContainers]
					(
					[SiteID]
					,[LanguageID]
					,[WidgetName]
					,[WidgetDomain]
					,[WidgetContainerClass]
					,[WidgetContainerHeaderClass]
					,[WidgetItemClass]
					,[WidgetJobLinkCSS]
					,[WidgetItemLinkImageID]
					,[Valid]
					,[ShowJobs]
					,[ShowCompanies]
					,[ShowSite]
					,[ShowPeople]
					,[JobHtml]
					,[CompanyHtml]
					,[SiteHtml]
					,[PeopleHtml]
					,[Javascript]
					,[SearchCSS]
					,[DefaultProfessionID]
					,[DefaultCountryID]
					,[DefaultLocationID]
					,[Width]
					,[Height]
					,[OnAdvancedSearch]
					)
				VALUES
					(
					@SiteId
					,@LanguageId
					,@WidgetName
					,@WidgetDomain
					,@WidgetContainerClass
					,@WidgetContainerHeaderClass
					,@WidgetItemClass
					,@WidgetJobLinkCss
					,@WidgetItemLinkImageId
					,@Valid
					,@ShowJobs
					,@ShowCompanies
					,@ShowSite
					,@ShowPeople
					,@JobHtml
					,@CompanyHtml
					,@SiteHtml
					,@PeopleHtml
					,@Javascript
					,@SearchCss
					,@DefaultProfessionId
					,@DefaultCountryId
					,@DefaultLocationId
					,@Width
					,@Height
					,@OnAdvancedSearch
					)
				
				-- Get the identity value
				SET @WidgetId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WidgetContainers_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the WidgetContainers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetDomain" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetContainerClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetContainerHeaderClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetItemClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetJobLinkCss" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WidgetItemLinkImageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowPeople" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CompanyHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SiteHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@PeopleHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Javascript" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SearchCss" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@DefaultProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Width" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Height" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OnAdvancedSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[WidgetContainers]
				SET
					[SiteID] = @SiteId
					,[LanguageID] = @LanguageId
					,[WidgetName] = @WidgetName
					,[WidgetDomain] = @WidgetDomain
					,[WidgetContainerClass] = @WidgetContainerClass
					,[WidgetContainerHeaderClass] = @WidgetContainerHeaderClass
					,[WidgetItemClass] = @WidgetItemClass
					,[WidgetJobLinkCSS] = @WidgetJobLinkCss
					,[WidgetItemLinkImageID] = @WidgetItemLinkImageId
					,[Valid] = @Valid
					,[ShowJobs] = @ShowJobs
					,[ShowCompanies] = @ShowCompanies
					,[ShowSite] = @ShowSite
					,[ShowPeople] = @ShowPeople
					,[JobHtml] = @JobHtml
					,[CompanyHtml] = @CompanyHtml
					,[SiteHtml] = @SiteHtml
					,[PeopleHtml] = @PeopleHtml
					,[Javascript] = @Javascript
					,[SearchCSS] = @SearchCss
					,[DefaultProfessionID] = @DefaultProfessionId
					,[DefaultCountryID] = @DefaultCountryId
					,[DefaultLocationID] = @DefaultLocationId
					,[Width] = @Width
					,[Height] = @Height
					,[OnAdvancedSearch] = @OnAdvancedSearch
				WHERE
[WidgetID] = @WidgetId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WidgetContainers_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the WidgetContainers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[WidgetContainers] WITH (ROWLOCK) 
				WHERE
					[WidgetID] = @WidgetId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WidgetContainers_GetByDefaultProfessionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[WidgetID],
					[SiteID],
					[LanguageID],
					[WidgetName],
					[WidgetDomain],
					[WidgetContainerClass],
					[WidgetContainerHeaderClass],
					[WidgetItemClass],
					[WidgetJobLinkCSS],
					[WidgetItemLinkImageID],
					[Valid],
					[ShowJobs],
					[ShowCompanies],
					[ShowSite],
					[ShowPeople],
					[JobHtml],
					[CompanyHtml],
					[SiteHtml],
					[PeopleHtml],
					[Javascript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[DefaultProfessionID] = @DefaultProfessionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WidgetContainers_GetByDefaultCountryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[WidgetID],
					[SiteID],
					[LanguageID],
					[WidgetName],
					[WidgetDomain],
					[WidgetContainerClass],
					[WidgetContainerHeaderClass],
					[WidgetItemClass],
					[WidgetJobLinkCSS],
					[WidgetItemLinkImageID],
					[Valid],
					[ShowJobs],
					[ShowCompanies],
					[ShowSite],
					[ShowPeople],
					[JobHtml],
					[CompanyHtml],
					[SiteHtml],
					[PeopleHtml],
					[Javascript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[DefaultCountryID] = @DefaultCountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WidgetContainers_GetByDefaultLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[WidgetID],
					[SiteID],
					[LanguageID],
					[WidgetName],
					[WidgetDomain],
					[WidgetContainerClass],
					[WidgetContainerHeaderClass],
					[WidgetItemClass],
					[WidgetJobLinkCSS],
					[WidgetItemLinkImageID],
					[Valid],
					[ShowJobs],
					[ShowCompanies],
					[ShowSite],
					[ShowPeople],
					[JobHtml],
					[CompanyHtml],
					[SiteHtml],
					[PeopleHtml],
					[Javascript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[DefaultLocationID] = @DefaultLocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WidgetContainers_GetByLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[WidgetID],
					[SiteID],
					[LanguageID],
					[WidgetName],
					[WidgetDomain],
					[WidgetContainerClass],
					[WidgetContainerHeaderClass],
					[WidgetItemClass],
					[WidgetJobLinkCSS],
					[WidgetItemLinkImageID],
					[Valid],
					[ShowJobs],
					[ShowCompanies],
					[ShowSite],
					[ShowPeople],
					[JobHtml],
					[CompanyHtml],
					[SiteHtml],
					[PeopleHtml],
					[Javascript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WidgetContainers_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[WidgetID],
					[SiteID],
					[LanguageID],
					[WidgetName],
					[WidgetDomain],
					[WidgetContainerClass],
					[WidgetContainerHeaderClass],
					[WidgetItemClass],
					[WidgetJobLinkCSS],
					[WidgetItemLinkImageID],
					[Valid],
					[ShowJobs],
					[ShowCompanies],
					[ShowSite],
					[ShowPeople],
					[JobHtml],
					[CompanyHtml],
					[SiteHtml],
					[PeopleHtml],
					[Javascript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WidgetContainers_GetByWidgetId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[WidgetID],
					[SiteID],
					[LanguageID],
					[WidgetName],
					[WidgetDomain],
					[WidgetContainerClass],
					[WidgetContainerHeaderClass],
					[WidgetItemClass],
					[WidgetJobLinkCSS],
					[WidgetItemLinkImageID],
					[Valid],
					[ShowJobs],
					[ShowCompanies],
					[ShowSite],
					[ShowPeople],
					[JobHtml],
					[CompanyHtml],
					[SiteHtml],
					[PeopleHtml],
					[Javascript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[WidgetID] = @WidgetId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="WidgetContainers_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the WidgetContainers table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@WidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetDomain" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetContainerClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetContainerHeaderClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetItemClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetJobLinkCss" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetItemLinkImageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowPeople" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CompanyHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SiteHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@PeopleHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Javascript" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SearchCss" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@DefaultProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Width" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Height" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnAdvancedSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [WidgetID]
	, [SiteID]
	, [LanguageID]
	, [WidgetName]
	, [WidgetDomain]
	, [WidgetContainerClass]
	, [WidgetContainerHeaderClass]
	, [WidgetItemClass]
	, [WidgetJobLinkCSS]
	, [WidgetItemLinkImageID]
	, [Valid]
	, [ShowJobs]
	, [ShowCompanies]
	, [ShowSite]
	, [ShowPeople]
	, [JobHtml]
	, [CompanyHtml]
	, [SiteHtml]
	, [PeopleHtml]
	, [Javascript]
	, [SearchCSS]
	, [DefaultProfessionID]
	, [DefaultCountryID]
	, [DefaultLocationID]
	, [Width]
	, [Height]
	, [OnAdvancedSearch]
    FROM
	[dbo].[WidgetContainers]
    WHERE 
	 ([WidgetID] = @WidgetId OR @WidgetId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([WidgetName] = @WidgetName OR @WidgetName IS NULL)
	AND ([WidgetDomain] = @WidgetDomain OR @WidgetDomain IS NULL)
	AND ([WidgetContainerClass] = @WidgetContainerClass OR @WidgetContainerClass IS NULL)
	AND ([WidgetContainerHeaderClass] = @WidgetContainerHeaderClass OR @WidgetContainerHeaderClass IS NULL)
	AND ([WidgetItemClass] = @WidgetItemClass OR @WidgetItemClass IS NULL)
	AND ([WidgetJobLinkCSS] = @WidgetJobLinkCss OR @WidgetJobLinkCss IS NULL)
	AND ([WidgetItemLinkImageID] = @WidgetItemLinkImageId OR @WidgetItemLinkImageId IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([ShowJobs] = @ShowJobs OR @ShowJobs IS NULL)
	AND ([ShowCompanies] = @ShowCompanies OR @ShowCompanies IS NULL)
	AND ([ShowSite] = @ShowSite OR @ShowSite IS NULL)
	AND ([ShowPeople] = @ShowPeople OR @ShowPeople IS NULL)
	AND ([JobHtml] = @JobHtml OR @JobHtml IS NULL)
	AND ([CompanyHtml] = @CompanyHtml OR @CompanyHtml IS NULL)
	AND ([SiteHtml] = @SiteHtml OR @SiteHtml IS NULL)
	AND ([PeopleHtml] = @PeopleHtml OR @PeopleHtml IS NULL)
	AND ([Javascript] = @Javascript OR @Javascript IS NULL)
	AND ([SearchCSS] = @SearchCss OR @SearchCss IS NULL)
	AND ([DefaultProfessionID] = @DefaultProfessionId OR @DefaultProfessionId IS NULL)
	AND ([DefaultCountryID] = @DefaultCountryId OR @DefaultCountryId IS NULL)
	AND ([DefaultLocationID] = @DefaultLocationId OR @DefaultLocationId IS NULL)
	AND ([Width] = @Width OR @Width IS NULL)
	AND ([Height] = @Height OR @Height IS NULL)
	AND ([OnAdvancedSearch] = @OnAdvancedSearch OR @OnAdvancedSearch IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [WidgetID]
	, [SiteID]
	, [LanguageID]
	, [WidgetName]
	, [WidgetDomain]
	, [WidgetContainerClass]
	, [WidgetContainerHeaderClass]
	, [WidgetItemClass]
	, [WidgetJobLinkCSS]
	, [WidgetItemLinkImageID]
	, [Valid]
	, [ShowJobs]
	, [ShowCompanies]
	, [ShowSite]
	, [ShowPeople]
	, [JobHtml]
	, [CompanyHtml]
	, [SiteHtml]
	, [PeopleHtml]
	, [Javascript]
	, [SearchCSS]
	, [DefaultProfessionID]
	, [DefaultCountryID]
	, [DefaultLocationID]
	, [Width]
	, [Height]
	, [OnAdvancedSearch]
    FROM
	[dbo].[WidgetContainers]
    WHERE 
	 ([WidgetID] = @WidgetId AND @WidgetId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([WidgetName] = @WidgetName AND @WidgetName is not null)
	OR ([WidgetDomain] = @WidgetDomain AND @WidgetDomain is not null)
	OR ([WidgetContainerClass] = @WidgetContainerClass AND @WidgetContainerClass is not null)
	OR ([WidgetContainerHeaderClass] = @WidgetContainerHeaderClass AND @WidgetContainerHeaderClass is not null)
	OR ([WidgetItemClass] = @WidgetItemClass AND @WidgetItemClass is not null)
	OR ([WidgetJobLinkCSS] = @WidgetJobLinkCss AND @WidgetJobLinkCss is not null)
	OR ([WidgetItemLinkImageID] = @WidgetItemLinkImageId AND @WidgetItemLinkImageId is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([ShowJobs] = @ShowJobs AND @ShowJobs is not null)
	OR ([ShowCompanies] = @ShowCompanies AND @ShowCompanies is not null)
	OR ([ShowSite] = @ShowSite AND @ShowSite is not null)
	OR ([ShowPeople] = @ShowPeople AND @ShowPeople is not null)
	OR ([JobHtml] = @JobHtml AND @JobHtml is not null)
	OR ([CompanyHtml] = @CompanyHtml AND @CompanyHtml is not null)
	OR ([SiteHtml] = @SiteHtml AND @SiteHtml is not null)
	OR ([PeopleHtml] = @PeopleHtml AND @PeopleHtml is not null)
	OR ([Javascript] = @Javascript AND @Javascript is not null)
	OR ([SearchCSS] = @SearchCss AND @SearchCss is not null)
	OR ([DefaultProfessionID] = @DefaultProfessionId AND @DefaultProfessionId is not null)
	OR ([DefaultCountryID] = @DefaultCountryId AND @DefaultCountryId is not null)
	OR ([DefaultLocationID] = @DefaultLocationId AND @DefaultLocationId is not null)
	OR ([Width] = @Width AND @Width is not null)
	OR ([Height] = @Height AND @Height is not null)
	OR ([OnAdvancedSearch] = @OnAdvancedSearch AND @OnAdvancedSearch is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="WidgetContainers_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the WidgetContainers table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [WidgetID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [WidgetID] )
				SELECT TOP {3} [WidgetID]
				FROM [dbo].[WidgetContainers] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[WidgetID], O.[SiteID], O.[LanguageID], O.[WidgetName], O.[WidgetDomain], O.[WidgetContainerClass], O.[WidgetContainerHeaderClass], O.[WidgetItemClass], O.[WidgetJobLinkCSS], O.[WidgetItemLinkImageID], O.[Valid], O.[ShowJobs], O.[ShowCompanies], O.[ShowSite], O.[ShowPeople], O.[JobHtml], O.[CompanyHtml], O.[SiteHtml], O.[PeopleHtml], O.[Javascript], O.[SearchCSS], O.[DefaultProfessionID], O.[DefaultCountryID], O.[DefaultLocationID], O.[Width], O.[Height], O.[OnAdvancedSearch]
				FROM
				    [dbo].[WidgetContainers] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[WidgetID] = PageIndex.[WidgetID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[WidgetContainers] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="WidgetContainers_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the WidgetContainers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WidgetId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetDomain" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetContainerClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetContainerHeaderClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetItemClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetJobLinkCss" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetItemLinkImageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowPeople" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CompanyHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SiteHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@PeopleHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Javascript" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SearchCss" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@DefaultProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Width" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Height" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnAdvancedSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
cript
					,@SearchCss
					,@DefaultProfessionId
					,@DefaultCountryId
					,@DefaultLocationId
					,@Width
					,@Height
					,@OnAdvancedSearch
					)
				
				-- Get the identity value
				SET @WidgetId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_GetByDefaultLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
cript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[DefaultLocationID] = @DefaultLocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
cript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the WidgetContainers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
cript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_GetByDefaultProfessionId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
cript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[DefaultProfessionID] = @DefaultProfessionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_GetByWidgetId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
cript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[WidgetID] = @WidgetId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_GetByDefaultCountryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
cript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[DefaultCountryID] = @DefaultCountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the WidgetContainers table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@WidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetDomain" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetContainerClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetContainerHeaderClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetItemClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetJobLinkCss" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetItemLinkImageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowPeople" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CompanyHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SiteHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@PeopleHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Javascript" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SearchCss" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@DefaultProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Width" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Height" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnAdvancedSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
cript is not null)
	OR ([SearchCSS] = @SearchCss AND @SearchCss is not null)
	OR ([DefaultProfessionID] = @DefaultProfessionId AND @DefaultProfessionId is not null)
	OR ([DefaultCountryID] = @DefaultCountryId AND @DefaultCountryId is not null)
	OR ([DefaultLocationID] = @DefaultLocationId AND @DefaultLocationId is not null)
	OR ([Width] = @Width AND @Width is not null)
	OR ([Height] = @Height AND @Height is not null)
	OR ([OnAdvancedSearch] = @OnAdvancedSearch AND @OnAdvancedSearch is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_GetByLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WidgetContainers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
cript],
					[SearchCSS],
					[DefaultProfessionID],
					[DefaultCountryID],
					[DefaultLocationID],
					[Width],
					[Height],
					[OnAdvancedSearch]
				FROM
					[dbo].[WidgetContainers]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the WidgetContainers table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[WidgetContainers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the WidgetContainers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetDomain" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetContainerClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetContainerHeaderClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetItemClass" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetJobLinkCss" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WidgetItemLinkImageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowPeople" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CompanyHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SiteHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@PeopleHtml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Javascript" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SearchCss" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@DefaultProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Width" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Height" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnAdvancedSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
cript
					,[SearchCSS] = @SearchCss
					,[DefaultProfessionID] = @DefaultProfessionId
					,[DefaultCountryID] = @DefaultCountryId
					,[DefaultLocationID] = @DefaultLocationId
					,[Width] = @Width
					,[Height] = @Height
					,[OnAdvancedSearch] = @OnAdvancedSearch
				WHERE
[WidgetID] = @WidgetId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WidgetContainers_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the WidgetContainers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[WidgetContainers] WITH (ROWLOCK) 
				WHERE
					[WidgetID] = @WidgetId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteWorkType_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteWorkType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteWorkType_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteWorkType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteWorkTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteWorkTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteWorkTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteWorkType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteWorkTypeID], O.[SiteID], O.[WorkTypeID], O.[SiteWorkTypeName], O.[Valid], O.[Sequence], O.[SiteWorkTypeFriendlyUrl]
				FROM
				    [dbo].[SiteWorkType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteWorkTypeID] = PageIndex.[SiteWorkTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteWorkType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteWorkType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteWorkType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWorkTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWorkTypeName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWorkTypeFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteWorkType]
					(
					[SiteID]
					,[WorkTypeID]
					,[SiteWorkTypeName]
					,[Valid]
					,[Sequence]
					,[SiteWorkTypeFriendlyUrl]
					)
				VALUES
					(
					@SiteId
					,@WorkTypeId
					,@SiteWorkTypeName
					,@Valid
					,@Sequence
					,@SiteWorkTypeFriendlyUrl
					)
				
				-- Get the identity value
				SET @SiteWorkTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWorkType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteWorkType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWorkTypeName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWorkTypeFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteWorkType]
				SET
					[SiteID] = @SiteId
					,[WorkTypeID] = @WorkTypeId
					,[SiteWorkTypeName] = @SiteWorkTypeName
					,[Valid] = @Valid
					,[Sequence] = @Sequence
					,[SiteWorkTypeFriendlyUrl] = @SiteWorkTypeFriendlyUrl
				WHERE
[SiteWorkTypeID] = @SiteWorkTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWorkType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteWorkType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteWorkType] WITH (ROWLOCK) 
				WHERE
					[SiteWorkTypeID] = @SiteWorkTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWorkType_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWorkType_GetByWorkTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[WorkTypeID] = @WorkTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteWorkType_GetBySiteIdSiteWorkTypeIdWorkTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[SiteID] = @SiteId
					AND [SiteWorkTypeID] = @SiteWorkTypeId
					AND [WorkTypeID] = @WorkTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteWorkType_GetBySiteIdWorkTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[SiteID] = @SiteId
					AND [WorkTypeID] = @WorkTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteWorkType_GetBySiteWorkTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[SiteWorkTypeID] = @SiteWorkTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteWorkType_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteWorkType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteWorkTypeID]
	, [SiteID]
	, [WorkTypeID]
	, [SiteWorkTypeName]
	, [Valid]
	, [Sequence]
	, [SiteWorkTypeFriendlyUrl]
    FROM
	[dbo].[SiteWorkType]
    WHERE 
	 ([SiteWorkTypeID] = @SiteWorkTypeId OR @SiteWorkTypeId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([WorkTypeID] = @WorkTypeId OR @WorkTypeId IS NULL)
	AND ([SiteWorkTypeName] = @SiteWorkTypeName OR @SiteWorkTypeName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([SiteWorkTypeFriendlyUrl] = @SiteWorkTypeFriendlyUrl OR @SiteWorkTypeFriendlyUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteWorkTypeID]
	, [SiteID]
	, [WorkTypeID]
	, [SiteWorkTypeName]
	, [Valid]
	, [Sequence]
	, [SiteWorkTypeFriendlyUrl]
    FROM
	[dbo].[SiteWorkType]
    WHERE 
	 ([SiteWorkTypeID] = @SiteWorkTypeId AND @SiteWorkTypeId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([WorkTypeID] = @WorkTypeId AND @WorkTypeId is not null)
	OR ([SiteWorkTypeName] = @SiteWorkTypeName AND @SiteWorkTypeName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([SiteWorkTypeFriendlyUrl] = @SiteWorkTypeFriendlyUrl AND @SiteWorkTypeFriendlyUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteWorkType_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteWorkType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteWorkTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteWorkTypeID] )
				SELECT TOP {3} [SiteWorkTypeID]
				FROM [dbo].[SiteWorkType] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteWorkTypeID], O.[SiteID], O.[WorkTypeID], O.[SiteWorkTypeName], O.[Valid], O.[Sequence], O.[SiteWorkTypeFriendlyUrl]
				FROM
				    [dbo].[SiteWorkType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteWorkTypeID] = PageIndex.[SiteWorkTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteWorkType] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteWorkType_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteWorkType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWorkTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteWorkType]
					(
					[SiteID]
					,[WorkTypeID]
					,[SiteWorkTypeName]
					,[Valid]
					,[Sequence]
					,[SiteWorkTypeFriendlyUrl]
					)
				VALUES
					(
					@SiteId
					,@WorkTypeId
					,@SiteWorkTypeName
					,@Valid
					,@Sequence
					,@SiteWorkTypeFriendlyUrl
					)
				
				-- Get the identity value
				SET @SiteWorkTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_GetBySiteIdSiteWorkTypeIdWorkTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[SiteID] = @SiteId
					AND [SiteWorkTypeID] = @SiteWorkTypeId
					AND [WorkTypeID] = @WorkTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteWorkType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteWorkType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteWorkType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_GetByWorkTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[WorkTypeID] = @WorkTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_GetBySiteIdFriendlyUrl"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN 
	SELECT SiteWorkTypeID, SiteID, WorkTypeID, SiteWorkTypeName, Valid, Sequence, SiteWorkTypeFriendlyUrl
	FROM SiteWorkType (NOLOCK)
	WHERE SiteID = @SiteID AND SiteWorkTypeFriendlyUrl = @FriendlyUrl
END 

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_GetBySiteWorkTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[SiteWorkTypeID] = @SiteWorkTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_GetBySiteIdWorkTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteWorkType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteWorkTypeID],
					[SiteID],
					[WorkTypeID],
					[SiteWorkTypeName],
					[Valid],
					[Sequence],
					[SiteWorkTypeFriendlyUrl]
				FROM
					[dbo].[SiteWorkType]
				WHERE
					[SiteID] = @SiteId
					AND [WorkTypeID] = @WorkTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteWorkType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteWorkTypeID]
	, [SiteID]
	, [WorkTypeID]
	, [SiteWorkTypeName]
	, [Valid]
	, [Sequence]
	, [SiteWorkTypeFriendlyUrl]
    FROM
	[dbo].[SiteWorkType]
    WHERE 
	 ([SiteWorkTypeID] = @SiteWorkTypeId OR @SiteWorkTypeId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([WorkTypeID] = @WorkTypeId OR @WorkTypeId IS NULL)
	AND ([SiteWorkTypeName] = @SiteWorkTypeName OR @SiteWorkTypeName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([SiteWorkTypeFriendlyUrl] = @SiteWorkTypeFriendlyUrl OR @SiteWorkTypeFriendlyUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteWorkTypeID]
	, [SiteID]
	, [WorkTypeID]
	, [SiteWorkTypeName]
	, [Valid]
	, [Sequence]
	, [SiteWorkTypeFriendlyUrl]
    FROM
	[dbo].[SiteWorkType]
    WHERE 
	 ([SiteWorkTypeID] = @SiteWorkTypeId AND @SiteWorkTypeId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([WorkTypeID] = @WorkTypeId AND @WorkTypeId is not null)
	OR ([SiteWorkTypeName] = @SiteWorkTypeName AND @SiteWorkTypeName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([SiteWorkTypeFriendlyUrl] = @SiteWorkTypeFriendlyUrl AND @SiteWorkTypeFriendlyUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteWorkType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteWorkType] WITH (ROWLOCK) 
				WHERE
					[SiteWorkTypeID] = @SiteWorkTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteWorkType_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteWorkType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWorkTypeFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteWorkType]
				SET
					[SiteID] = @SiteId
					,[WorkTypeID] = @WorkTypeId
					,[SiteWorkTypeName] = @SiteWorkTypeName
					,[Valid] = @Valid
					,[Sequence] = @Sequence
					,[SiteWorkTypeFriendlyUrl] = @SiteWorkTypeFriendlyUrl
				WHERE
[SiteWorkTypeID] = @SiteWorkTypeId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteRoles_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteRoles_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteRoles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteRoleID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteRoleID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteRoleID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteRoleID], O.[SiteID], O.[RoleID], O.[SiteRoleName], O.[Valid], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[Sequence], O.[SiteRoleFriendlyUrl], O.[TotalJobs], O.[CanonicalUrl]
				FROM
				    [dbo].[SiteRoles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteRoleID] = PageIndex.[SiteRoleID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteRoles_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteRoleId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteRoleName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteRoleFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteRoles]
					(
					[SiteID]
					,[RoleID]
					,[SiteRoleName]
					,[Valid]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					,[Sequence]
					,[SiteRoleFriendlyUrl]
					,[TotalJobs]
					,[CanonicalUrl]
					)
				VALUES
					(
					@SiteId
					,@RoleId
					,@SiteRoleName
					,@Valid
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					,@Sequence
					,@SiteRoleFriendlyUrl
					,@TotalJobs
					,@CanonicalUrl
					)
				
				-- Get the identity value
				SET @SiteRoleId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteRoles_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteRoleName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteRoleFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteRoles]
				SET
					[SiteID] = @SiteId
					,[RoleID] = @RoleId
					,[SiteRoleName] = @SiteRoleName
					,[Valid] = @Valid
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[Sequence] = @Sequence
					,[SiteRoleFriendlyUrl] = @SiteRoleFriendlyUrl
					,[TotalJobs] = @TotalJobs
					,[CanonicalUrl] = @CanonicalUrl
				WHERE
[SiteRoleID] = @SiteRoleId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteRoles_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteRoles] WITH (ROWLOCK) 
				WHERE
					[SiteRoleID] = @SiteRoleId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteRoles_GetByRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[RoleID] = @RoleId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteRoles_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteRoles_GetBySiteRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[SiteRoleID] = @SiteRoleId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteRoles_GetBySiteIdSiteRoleFriendlyUrl" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteRoleFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[SiteID] = @SiteId
					AND [SiteRoleFriendlyUrl] = @SiteRoleFriendlyUrl
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteRoles_GetBySiteIdRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[SiteID] = @SiteId
					AND [RoleID] = @RoleId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteRoles_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteRoles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteRoleID]
	, [SiteID]
	, [RoleID]
	, [SiteRoleName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [Sequence]
	, [SiteRoleFriendlyUrl]
	, [TotalJobs]
	, [CanonicalUrl]
    FROM
	[dbo].[SiteRoles]
    WHERE 
	 ([SiteRoleID] = @SiteRoleId OR @SiteRoleId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([RoleID] = @RoleId OR @RoleId IS NULL)
	AND ([SiteRoleName] = @SiteRoleName OR @SiteRoleName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([SiteRoleFriendlyUrl] = @SiteRoleFriendlyUrl OR @SiteRoleFriendlyUrl IS NULL)
	AND ([TotalJobs] = @TotalJobs OR @TotalJobs IS NULL)
	AND ([CanonicalUrl] = @CanonicalUrl OR @CanonicalUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteRoleID]
	, [SiteID]
	, [RoleID]
	, [SiteRoleName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [Sequence]
	, [SiteRoleFriendlyUrl]
	, [TotalJobs]
	, [CanonicalUrl]
    FROM
	[dbo].[SiteRoles]
    WHERE 
	 ([SiteRoleID] = @SiteRoleId AND @SiteRoleId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([RoleID] = @RoleId AND @RoleId is not null)
	OR ([SiteRoleName] = @SiteRoleName AND @SiteRoleName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([SiteRoleFriendlyUrl] = @SiteRoleFriendlyUrl AND @SiteRoleFriendlyUrl is not null)
	OR ([TotalJobs] = @TotalJobs AND @TotalJobs is not null)
	OR ([CanonicalUrl] = @CanonicalUrl AND @CanonicalUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteRoles_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteRoles table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteRoleID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteRoleID] )
				SELECT TOP {3} [SiteRoleID]
				FROM [dbo].[SiteRoles] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteRoleID], O.[SiteID], O.[RoleID], O.[SiteRoleName], O.[Valid], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[Sequence], O.[SiteRoleFriendlyUrl], O.[TotalJobs], O.[CanonicalUrl]
				FROM
				    [dbo].[SiteRoles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteRoleID] = PageIndex.[SiteRoleID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteRoles] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteRoles_CustomGetBySiteIDRoleID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT
	SiteRoleID
	SiteID,
	RoleID,
	SiteRoleName,
	Valid,
	MetaTitle,
	MetaKeywords,
	MetaDescription,
	Sequence,
	SiteRoleFriendlyUrl,
	TotalJobs,
	CanonicalUrl
	FROM SiteRoles WITH (NOLOCK)
	WHERE SiteID = @SiteID AND RoleID = @RoleID 
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_GetBySiteIdSiteRoleFriendlyUrl"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[SiteID] = @SiteId
					AND [SiteRoleFriendlyUrl] = @SiteRoleFriendlyUrl
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteRoleId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteRoles]
					(
					[SiteID]
					,[RoleID]
					,[SiteRoleName]
					,[Valid]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					,[Sequence]
					,[SiteRoleFriendlyUrl]
					,[TotalJobs]
					,[CanonicalUrl]
					)
				VALUES
					(
					@SiteId
					,@RoleId
					,@SiteRoleName
					,@Valid
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					,@Sequence
					,@SiteRoleFriendlyUrl
					,@TotalJobs
					,@CanonicalUrl
					)
				
				-- Get the identity value
				SET @SiteRoleId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteRoles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteRoles]
				SET
					[SiteID] = @SiteId
					,[RoleID] = @RoleId
					,[SiteRoleName] = @SiteRoleName
					,[Valid] = @Valid
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[Sequence] = @Sequence
					,[SiteRoleFriendlyUrl] = @SiteRoleFriendlyUrl
					,[TotalJobs] = @TotalJobs
					,[CanonicalUrl] = @CanonicalUrl
				WHERE
[SiteRoleID] = @SiteRoleId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_GetBySiteIdFriendlyUrl"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN   
 SELECT SiteRoleID, SiteID, RoleID, SiteRoleName, Valid, MetaTitle, MetaKeywords, MetaDescription, Sequence,   
   SiteRoleFriendlyUrl, TotalJobs, CanonicalUrl  
 FROM SiteRoles (NOLOCK)  
 WHERE SiteID = @SiteID AND SiteRoleFriendlyUrl = @FriendlyUrl  
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_CustomBulkInsert"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@VALUES" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	EXEC ('INSERT INTO SiteRoles (SiteID, RoleID, SiteRoleName, Valid, MetaTitle, MetaKeywords, MetaDescription, Sequence, SiteRoleFriendlyUrl, TotalJobs) VALUES ' + @VALUES) 
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_CustomBulkDelete"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@VALUES" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	EXEC ('DELETE FROM SiteRoles WHERE SiteRoleID IN (' + @VALUES + ')') 
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_GetByProfessionID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT [SiteRoles].[SiteRoleID]  
      ,[SiteRoles].[SiteID]  
      ,[SiteRoles].[RoleID]  
      ,[SiteRoles].[SiteRoleName]  
      ,[SiteRoles].[Valid]  
      ,[SiteRoles].[MetaTitle]  
      ,[SiteRoles].[MetaKeywords]  
      ,[SiteRoles].[MetaDescription]  
      ,[SiteRoles].[Sequence]  
      ,[SiteRoles].[SiteRoleFriendlyUrl]  
   ,[SiteRoles].[TotalJobs],
   [SiteRoles].[CanonicalUrl]
  
   FROM [dbo].[SiteRoles] (NOLOCK) SiteRoles  
   INNER JOIN [dbo].[Roles] (NOLOCK)Roles  
   ON [SiteRoles].[RoleID] = [Roles].[RoleID]  
   AND [SiteRoles].[SiteID] = @SiteID  
   WHERE [Roles].ProfessionID = @ProfessionID

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_GetBySiteIdRoleId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[SiteID] = @SiteId
					AND [RoleID] = @RoleId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_GetBySiteRoleId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[SiteRoleID] = @SiteRoleId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteRoles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteRoleFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteRoleID]
	, [SiteID]
	, [RoleID]
	, [SiteRoleName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [Sequence]
	, [SiteRoleFriendlyUrl]
	, [TotalJobs]
	, [CanonicalUrl]
    FROM
	[dbo].[SiteRoles]
    WHERE 
	 ([SiteRoleID] = @SiteRoleId OR @SiteRoleId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([RoleID] = @RoleId OR @RoleId IS NULL)
	AND ([SiteRoleName] = @SiteRoleName OR @SiteRoleName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([SiteRoleFriendlyUrl] = @SiteRoleFriendlyUrl OR @SiteRoleFriendlyUrl IS NULL)
	AND ([TotalJobs] = @TotalJobs OR @TotalJobs IS NULL)
	AND ([CanonicalUrl] = @CanonicalUrl OR @CanonicalUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteRoleID]
	, [SiteID]
	, [RoleID]
	, [SiteRoleName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [Sequence]
	, [SiteRoleFriendlyUrl]
	, [TotalJobs]
	, [CanonicalUrl]
    FROM
	[dbo].[SiteRoles]
    WHERE 
	 ([SiteRoleID] = @SiteRoleId AND @SiteRoleId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([RoleID] = @RoleId AND @RoleId is not null)
	OR ([SiteRoleName] = @SiteRoleName AND @SiteRoleName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([SiteRoleFriendlyUrl] = @SiteRoleFriendlyUrl AND @SiteRoleFriendlyUrl is not null)
	OR ([TotalJobs] = @TotalJobs AND @TotalJobs is not null)
	OR ([CanonicalUrl] = @CanonicalUrl AND @CanonicalUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteRoles] WITH (ROWLOCK) 
				WHERE
					[SiteRoleID] = @SiteRoleId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteRoles_GetByRoleId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteRoles table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteRoleID],
					[SiteID],
					[RoleID],
					[SiteRoleName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteRoleFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteRoles]
				WHERE
					[RoleID] = @RoleId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="WebServiceLog_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the WebServiceLog table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[WebServiceLogId],
					[ClientIPAddress],
					[AdvertiserId],
					[AdvertiserUserID],
					[CreatedDate],
					[MethodInvoked],
					[InputXML],
					[OutputResponse],
					[InvalidXML],
					[TotalSent],
					[TotalUpdated],
					[TotalArchived],
					[TotalFailed],
					[SiteId],
					[FinishedDate],
					[TotalInserted]
				FROM
					[dbo].[WebServiceLog]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="WebServiceLog_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the WebServiceLog table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [WebServiceLogId] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([WebServiceLogId])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [WebServiceLogId]'
				SET @SQL = @SQL + ' FROM [dbo].[WebServiceLog]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[WebServiceLogId], O.[ClientIPAddress], O.[AdvertiserId], O.[AdvertiserUserID], O.[CreatedDate], O.[MethodInvoked], O.[InputXML], O.[OutputResponse], O.[InvalidXML], O.[TotalSent], O.[TotalUpdated], O.[TotalArchived], O.[TotalFailed], O.[SiteId], O.[FinishedDate], O.[TotalInserted]
				FROM
				    [dbo].[WebServiceLog] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[WebServiceLogId] = PageIndex.[WebServiceLogId]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[WebServiceLog]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="WebServiceLog_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the WebServiceLog table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WebServiceLogId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@MethodInvoked" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@InputXml" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@OutputResponse" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@InvalidXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@TotalSent" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalUpdated" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalArchived" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalFailed" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FinishedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@TotalInserted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[WebServiceLog]
					(
					[ClientIPAddress]
					,[AdvertiserId]
					,[AdvertiserUserID]
					,[CreatedDate]
					,[MethodInvoked]
					,[InputXML]
					,[OutputResponse]
					,[InvalidXML]
					,[TotalSent]
					,[TotalUpdated]
					,[TotalArchived]
					,[TotalFailed]
					,[SiteId]
					,[FinishedDate]
					,[TotalInserted]
					)
				VALUES
					(
					@ClientIpAddress
					,@AdvertiserId
					,@AdvertiserUserId
					,@CreatedDate
					,@MethodInvoked
					,@InputXml
					,@OutputResponse
					,@InvalidXml
					,@TotalSent
					,@TotalUpdated
					,@TotalArchived
					,@TotalFailed
					,@SiteId
					,@FinishedDate
					,@TotalInserted
					)
				
				-- Get the identity value
				SET @WebServiceLogId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WebServiceLog_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the WebServiceLog table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WebServiceLogId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@MethodInvoked" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@InputXml" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@OutputResponse" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@InvalidXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@TotalSent" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalUpdated" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalArchived" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalFailed" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FinishedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@TotalInserted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[WebServiceLog]
				SET
					[ClientIPAddress] = @ClientIpAddress
					,[AdvertiserId] = @AdvertiserId
					,[AdvertiserUserID] = @AdvertiserUserId
					,[CreatedDate] = @CreatedDate
					,[MethodInvoked] = @MethodInvoked
					,[InputXML] = @InputXml
					,[OutputResponse] = @OutputResponse
					,[InvalidXML] = @InvalidXml
					,[TotalSent] = @TotalSent
					,[TotalUpdated] = @TotalUpdated
					,[TotalArchived] = @TotalArchived
					,[TotalFailed] = @TotalFailed
					,[SiteId] = @SiteId
					,[FinishedDate] = @FinishedDate
					,[TotalInserted] = @TotalInserted
				WHERE
[WebServiceLogId] = @WebServiceLogId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WebServiceLog_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the WebServiceLog table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WebServiceLogId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[WebServiceLog] WITH (ROWLOCK) 
				WHERE
					[WebServiceLogId] = @WebServiceLogId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WebServiceLog_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WebServiceLog table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[WebServiceLogId],
					[ClientIPAddress],
					[AdvertiserId],
					[AdvertiserUserID],
					[CreatedDate],
					[MethodInvoked],
					[InputXML],
					[OutputResponse],
					[InvalidXML],
					[TotalSent],
					[TotalUpdated],
					[TotalArchived],
					[TotalFailed],
					[SiteId],
					[FinishedDate],
					[TotalInserted]
				FROM
					[dbo].[WebServiceLog]
				WHERE
					[SiteId] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="WebServiceLog_GetByWebServiceLogId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WebServiceLog table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WebServiceLogId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[WebServiceLogId],
					[ClientIPAddress],
					[AdvertiserId],
					[AdvertiserUserID],
					[CreatedDate],
					[MethodInvoked],
					[InputXML],
					[OutputResponse],
					[InvalidXML],
					[TotalSent],
					[TotalUpdated],
					[TotalArchived],
					[TotalFailed],
					[SiteId],
					[FinishedDate],
					[TotalInserted]
				FROM
					[dbo].[WebServiceLog]
				WHERE
					[WebServiceLogId] = @WebServiceLogId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="WebServiceLog_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the WebServiceLog table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@WebServiceLogId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MethodInvoked" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@InputXml" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@OutputResponse" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvalidXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TotalSent" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalUpdated" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalArchived" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalFailed" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FinishedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@TotalInserted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [WebServiceLogId]
	, [ClientIPAddress]
	, [AdvertiserId]
	, [AdvertiserUserID]
	, [CreatedDate]
	, [MethodInvoked]
	, [InputXML]
	, [OutputResponse]
	, [InvalidXML]
	, [TotalSent]
	, [TotalUpdated]
	, [TotalArchived]
	, [TotalFailed]
	, [SiteId]
	, [FinishedDate]
	, [TotalInserted]
    FROM
	[dbo].[WebServiceLog]
    WHERE 
	 ([WebServiceLogId] = @WebServiceLogId OR @WebServiceLogId IS NULL)
	AND ([ClientIPAddress] = @ClientIpAddress OR @ClientIpAddress IS NULL)
	AND ([AdvertiserId] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([MethodInvoked] = @MethodInvoked OR @MethodInvoked IS NULL)
	AND ([InvalidXML] = @InvalidXml OR @InvalidXml IS NULL)
	AND ([TotalSent] = @TotalSent OR @TotalSent IS NULL)
	AND ([TotalUpdated] = @TotalUpdated OR @TotalUpdated IS NULL)
	AND ([TotalArchived] = @TotalArchived OR @TotalArchived IS NULL)
	AND ([TotalFailed] = @TotalFailed OR @TotalFailed IS NULL)
	AND ([SiteId] = @SiteId OR @SiteId IS NULL)
	AND ([FinishedDate] = @FinishedDate OR @FinishedDate IS NULL)
	AND ([TotalInserted] = @TotalInserted OR @TotalInserted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [WebServiceLogId]
	, [ClientIPAddress]
	, [AdvertiserId]
	, [AdvertiserUserID]
	, [CreatedDate]
	, [MethodInvoked]
	, [InputXML]
	, [OutputResponse]
	, [InvalidXML]
	, [TotalSent]
	, [TotalUpdated]
	, [TotalArchived]
	, [TotalFailed]
	, [SiteId]
	, [FinishedDate]
	, [TotalInserted]
    FROM
	[dbo].[WebServiceLog]
    WHERE 
	 ([WebServiceLogId] = @WebServiceLogId AND @WebServiceLogId is not null)
	OR ([ClientIPAddress] = @ClientIpAddress AND @ClientIpAddress is not null)
	OR ([AdvertiserId] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([MethodInvoked] = @MethodInvoked AND @MethodInvoked is not null)
	OR ([InvalidXML] = @InvalidXml AND @InvalidXml is not null)
	OR ([TotalSent] = @TotalSent AND @TotalSent is not null)
	OR ([TotalUpdated] = @TotalUpdated AND @TotalUpdated is not null)
	OR ([TotalArchived] = @TotalArchived AND @TotalArchived is not null)
	OR ([TotalFailed] = @TotalFailed AND @TotalFailed is not null)
	OR ([SiteId] = @SiteId AND @SiteId is not null)
	OR ([FinishedDate] = @FinishedDate AND @FinishedDate is not null)
	OR ([TotalInserted] = @TotalInserted AND @TotalInserted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="WebServiceLog_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the WebServiceLog table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [WebServiceLogId] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [WebServiceLogId] )
				SELECT TOP {3} [WebServiceLogId]
				FROM [dbo].[WebServiceLog] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[WebServiceLogId], O.[ClientIPAddress], O.[AdvertiserId], O.[AdvertiserUserID], O.[CreatedDate], O.[MethodInvoked], O.[InputXML], O.[OutputResponse], O.[InvalidXML], O.[TotalSent], O.[TotalUpdated], O.[TotalArchived], O.[TotalFailed], O.[SiteId], O.[FinishedDate], O.[TotalInserted]
				FROM
				    [dbo].[WebServiceLog] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[WebServiceLogId] = PageIndex.[WebServiceLogId]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[WebServiceLog] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="WebServiceLog_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the WebServiceLog table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WebServiceLogId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MethodInvoked" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@InputXml" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@OutputResponse" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvalidXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TotalSent" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalUpdated" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalArchived" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalFailed" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FinishedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@TotalInserted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[WebServiceLog]
					(
					[ClientIPAddress]
					,[AdvertiserId]
					,[AdvertiserUserID]
					,[CreatedDate]
					,[MethodInvoked]
					,[InputXML]
					,[OutputResponse]
					,[InvalidXML]
					,[TotalSent]
					,[TotalUpdated]
					,[TotalArchived]
					,[TotalFailed]
					,[SiteId]
					,[FinishedDate]
					,[TotalInserted]
					)
				VALUES
					(
					@ClientIpAddress
					,@AdvertiserId
					,@AdvertiserUserId
					,@CreatedDate
					,@MethodInvoked
					,@InputXml
					,@OutputResponse
					,@InvalidXml
					,@TotalSent
					,@TotalUpdated
					,@TotalArchived
					,@TotalFailed
					,@SiteId
					,@FinishedDate
					,@TotalInserted
					)
				
				-- Get the identity value
				SET @WebServiceLogId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the WebServiceLog table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@WebServiceLogId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MethodInvoked" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@InputXml" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@OutputResponse" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvalidXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TotalSent" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalUpdated" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalArchived" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalFailed" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FinishedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@TotalInserted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [WebServiceLogId]
	, [ClientIPAddress]
	, [AdvertiserId]
	, [AdvertiserUserID]
	, [CreatedDate]
	, [MethodInvoked]
	, [InputXML]
	, [OutputResponse]
	, [InvalidXML]
	, [TotalSent]
	, [TotalUpdated]
	, [TotalArchived]
	, [TotalFailed]
	, [SiteId]
	, [FinishedDate]
	, [TotalInserted]
    FROM
	[dbo].[WebServiceLog]
    WHERE 
	 ([WebServiceLogId] = @WebServiceLogId OR @WebServiceLogId IS NULL)
	AND ([ClientIPAddress] = @ClientIpAddress OR @ClientIpAddress IS NULL)
	AND ([AdvertiserId] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([MethodInvoked] = @MethodInvoked OR @MethodInvoked IS NULL)
	AND ([InvalidXML] = @InvalidXml OR @InvalidXml IS NULL)
	AND ([TotalSent] = @TotalSent OR @TotalSent IS NULL)
	AND ([TotalUpdated] = @TotalUpdated OR @TotalUpdated IS NULL)
	AND ([TotalArchived] = @TotalArchived OR @TotalArchived IS NULL)
	AND ([TotalFailed] = @TotalFailed OR @TotalFailed IS NULL)
	AND ([SiteId] = @SiteId OR @SiteId IS NULL)
	AND ([FinishedDate] = @FinishedDate OR @FinishedDate IS NULL)
	AND ([TotalInserted] = @TotalInserted OR @TotalInserted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [WebServiceLogId]
	, [ClientIPAddress]
	, [AdvertiserId]
	, [AdvertiserUserID]
	, [CreatedDate]
	, [MethodInvoked]
	, [InputXML]
	, [OutputResponse]
	, [InvalidXML]
	, [TotalSent]
	, [TotalUpdated]
	, [TotalArchived]
	, [TotalFailed]
	, [SiteId]
	, [FinishedDate]
	, [TotalInserted]
    FROM
	[dbo].[WebServiceLog]
    WHERE 
	 ([WebServiceLogId] = @WebServiceLogId AND @WebServiceLogId is not null)
	OR ([ClientIPAddress] = @ClientIpAddress AND @ClientIpAddress is not null)
	OR ([AdvertiserId] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([MethodInvoked] = @MethodInvoked AND @MethodInvoked is not null)
	OR ([InvalidXML] = @InvalidXml AND @InvalidXml is not null)
	OR ([TotalSent] = @TotalSent AND @TotalSent is not null)
	OR ([TotalUpdated] = @TotalUpdated AND @TotalUpdated is not null)
	OR ([TotalArchived] = @TotalArchived AND @TotalArchived is not null)
	OR ([TotalFailed] = @TotalFailed AND @TotalFailed is not null)
	OR ([SiteId] = @SiteId AND @SiteId is not null)
	OR ([FinishedDate] = @FinishedDate AND @FinishedDate is not null)
	OR ([TotalInserted] = @TotalInserted AND @TotalInserted is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WebServiceLog table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[WebServiceLogId],
					[ClientIPAddress],
					[AdvertiserId],
					[AdvertiserUserID],
					[CreatedDate],
					[MethodInvoked],
					[InputXML],
					[OutputResponse],
					[InvalidXML],
					[TotalSent],
					[TotalUpdated],
					[TotalArchived],
					[TotalFailed],
					[SiteId],
					[FinishedDate],
					[TotalInserted]
				FROM
					[dbo].[WebServiceLog]
				WHERE
					[SiteId] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the WebServiceLog table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[WebServiceLogId],
					[ClientIPAddress],
					[AdvertiserId],
					[AdvertiserUserID],
					[CreatedDate],
					[MethodInvoked],
					[InputXML],
					[OutputResponse],
					[InvalidXML],
					[TotalSent],
					[TotalUpdated],
					[TotalArchived],
					[TotalFailed],
					[SiteId],
					[FinishedDate],
					[TotalInserted]
				FROM
					[dbo].[WebServiceLog]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_CustomGetInputXML"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@WebServiceLogID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT InputXML FROM WebServiceLog WITH (NOLOCK) WHERE WebServiceLogId = @WebServiceLogID
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_CustomGetExportList"  skip="true">
			<comment><![CDATA[
             
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
sification = 0 AND p.ReferredSiteID IS NULL AND sp.SiteID = @SiteID AND sr.SiteID = @SiteID))    
    
-- WorkType    
SELECT WorkTypeID, SiteWorkTypeName FROM  SiteWorkType WITH (NOLOCK)     
WHERE SiteID = @SiteID AND Valid = 1    
    
-- Country    
-- Location    
-- Area     
    
SELECT sc.CountryID, sc.SiteCountryName, sl.LocationID, sl.SiteLocationName, sa.AreaID, sa.SiteAreaName FROM SiteCountries sc WITH (NOLOCK)    
INNER JOIN Location l WITH (NOLOCK) ON sc.CountryID = l.CountryID    
INNER JOIN SiteLocation sl WITH (NOLOCK) ON l.LocationID = sl.LocationID     
INNER JOIN Area a WITH (NOLOCK) ON sl.LocationID = a.LocationID    
INNER JOIN SiteArea sa WITH (NOLOCK) ON a.AreaID = sa.AreaID    
WHERE sc.SiteID = @SiteID AND sl.SiteID = @SiteID AND sa.SiteID = @SiteID    
END    



			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_CustomGetWebServiceLogPaged"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateFrom" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateTo" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ShowFailedOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount      
   FROM   WebServiceLog WebServiceLog WITH(NOLOCK)    
   INNER JOIN Sites Sites WITH(NOLOCK) ON WebServiceLog.SiteID = Sites.SiteID  
   INNER JOIN Advertisers Advertisers WITH(NOLOCK)   ON WebServiceLog.AdvertiserID = Advertisers.AdvertiserID  
   INNER JOIN @tmpWebServiceLog WebServiceLogResult ON WebServiceLog.WebServiceLogID = WebServiceLogResult.WebServiceLogID    
   WHERE      WebServiceLogResult.RowNumber >= @PageStart        
   AND        WebServiceLogResult.RowNumber <= @PageEnd         
   ORDER BY   WebServiceLogResult.RowNumber   
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_CustomGetWebServiceLogByID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@WebServiceLogID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
[InvalidXML]
      ,[TotalSent]
      ,[TotalUpdated]
      ,[TotalArchived]
      ,[TotalFailed]
      ,[SiteId]
      ,[FinishedDate]
      ,[TotalInserted]
  FROM [WebServiceLog] (NOLOCK)
            WHERE
                  WebServiceLogId = @WebServiceLogId
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_CustomGetOutputResponse"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@WebServiceLogID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT OutputResponse FROM WebServiceLog WITH (NOLOCK) WHERE WebServiceLogId = @WebServiceLogID
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_CustomGetInvalidXML"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@WebServiceLogID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT InvalidXML FROM WebServiceLog WITH (NOLOCK) WHERE WebServiceLogId = @WebServiceLogID
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the WebServiceLog table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[WebServiceLog]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the WebServiceLog table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WebServiceLogId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientIpAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MethodInvoked" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@InputXml" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@OutputResponse" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvalidXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TotalSent" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalUpdated" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalArchived" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalFailed" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FinishedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@TotalInserted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[WebServiceLog]
				SET
					[ClientIPAddress] = @ClientIpAddress
					,[AdvertiserId] = @AdvertiserId
					,[AdvertiserUserID] = @AdvertiserUserId
					,[CreatedDate] = @CreatedDate
					,[MethodInvoked] = @MethodInvoked
					,[InputXML] = @InputXml
					,[OutputResponse] = @OutputResponse
					,[InvalidXML] = @InvalidXml
					,[TotalSent] = @TotalSent
					,[TotalUpdated] = @TotalUpdated
					,[TotalArchived] = @TotalArchived
					,[TotalFailed] = @TotalFailed
					,[SiteId] = @SiteId
					,[FinishedDate] = @FinishedDate
					,[TotalInserted] = @TotalInserted
				WHERE
[WebServiceLogId] = @WebServiceLogId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_GetByWebServiceLogId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the WebServiceLog table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WebServiceLogId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[WebServiceLogId],
					[ClientIPAddress],
					[AdvertiserId],
					[AdvertiserUserID],
					[CreatedDate],
					[MethodInvoked],
					[InputXML],
					[OutputResponse],
					[InvalidXML],
					[TotalSent],
					[TotalUpdated],
					[TotalArchived],
					[TotalFailed],
					[SiteId],
					[FinishedDate],
					[TotalInserted]
				FROM
					[dbo].[WebServiceLog]
				WHERE
					[WebServiceLogId] = @WebServiceLogId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="WebServiceLog_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the WebServiceLog table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WebServiceLogId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[WebServiceLog] WITH (ROWLOCK) 
				WHERE
					[WebServiceLogId] = @WebServiceLogId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteResourcesXML_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteResourcesXML table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteResourceXMLID],
					[SiteID],
					[LanguageID],
					[ResourceType],
					[ResourceXML],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResourcesXML]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteResourcesXML_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteResourcesXML table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteResourceXMLID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteResourceXMLID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteResourceXMLID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteResourcesXML]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteResourceXMLID], O.[SiteID], O.[LanguageID], O.[ResourceType], O.[ResourceXML], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[SiteResourcesXML] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteResourceXMLID] = PageIndex.[SiteResourceXMLID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteResourcesXML]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteResourcesXML_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteResourcesXML table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteResourceXmlid" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteResourcesXML]
					(
					[SiteID]
					,[LanguageID]
					,[ResourceType]
					,[ResourceXML]
					,[LastModified]
					,[LastModifiedBy]
					)
				VALUES
					(
					@SiteId
					,@LanguageId
					,@ResourceType
					,@ResourceXml
					,@LastModified
					,@LastModifiedBy
					)
				
				-- Get the identity value
				SET @SiteResourceXmlid = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResourcesXML_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteResourcesXML table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteResourceXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteResourcesXML]
				SET
					[SiteID] = @SiteId
					,[LanguageID] = @LanguageId
					,[ResourceType] = @ResourceType
					,[ResourceXML] = @ResourceXml
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
				WHERE
[SiteResourceXMLID] = @SiteResourceXmlid 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResourcesXML_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteResourcesXML table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteResourceXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteResourcesXML] WITH (ROWLOCK) 
				WHERE
					[SiteResourceXMLID] = @SiteResourceXmlid
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResourcesXML_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResourcesXML table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteResourceXMLID],
					[SiteID],
					[LanguageID],
					[ResourceType],
					[ResourceXML],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResourcesXML]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResourcesXML_GetBySiteResourceXmlid" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResourcesXML table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteResourceXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteResourceXMLID],
					[SiteID],
					[LanguageID],
					[ResourceType],
					[ResourceXML],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResourcesXML]
				WHERE
					[SiteResourceXMLID] = @SiteResourceXmlid
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteResourcesXML_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteResourcesXML table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteResourceXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteResourceXMLID]
	, [SiteID]
	, [LanguageID]
	, [ResourceType]
	, [ResourceXML]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[SiteResourcesXML]
    WHERE 
	 ([SiteResourceXMLID] = @SiteResourceXmlid OR @SiteResourceXmlid IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([ResourceType] = @ResourceType OR @ResourceType IS NULL)
	AND ([ResourceXML] = @ResourceXml OR @ResourceXml IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteResourceXMLID]
	, [SiteID]
	, [LanguageID]
	, [ResourceType]
	, [ResourceXML]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[SiteResourcesXML]
    WHERE 
	 ([SiteResourceXMLID] = @SiteResourceXmlid AND @SiteResourceXmlid is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([ResourceType] = @ResourceType AND @ResourceType is not null)
	OR ([ResourceXML] = @ResourceXml AND @ResourceXml is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteResourcesXML_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteResourcesXML table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteResourceXMLID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteResourceXMLID] )
				SELECT TOP {3} [SiteResourceXMLID]
				FROM [dbo].[SiteResourcesXML] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteResourceXMLID], O.[SiteID], O.[LanguageID], O.[ResourceType], O.[ResourceXML], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[SiteResourcesXML] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteResourceXMLID] = PageIndex.[SiteResourceXMLID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteResourcesXML] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteResourcesXML_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteResourcesXML table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteResourceXmlid" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					)
				
				-- Get the identity value
				SET @SiteResourceXmlid = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResourcesXML_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResourcesXML table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResourcesXML]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResourcesXML_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteResourcesXML table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResourcesXML]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResourcesXML_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteResourcesXML table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteResourcesXML]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResourcesXML_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteResourcesXML table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteResourceXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResourcesXML_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteResourcesXML table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteResourceXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteResourcesXML] WITH (ROWLOCK) 
				WHERE
					[SiteResourceXMLID] = @SiteResourceXmlid
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResourcesXML_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteResourcesXML table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteResourceXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				WHERE
[SiteResourceXMLID] = @SiteResourceXmlid 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResourcesXML_GetBySiteResourceXmlid"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResourcesXML table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteResourceXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResourcesXML]
				WHERE
					[SiteResourceXMLID] = @SiteResourceXmlid
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteCurrencies_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteCurrencies table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteCurrencies_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteCurrencies table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteCurrencyID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteCurrencyID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteCurrencyID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteCurrencies]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteCurrencyID], O.[SiteID], O.[CurrencyID]
				FROM
				    [dbo].[SiteCurrencies] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteCurrencyID] = PageIndex.[SiteCurrencyID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteCurrencies]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteCurrencies_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteCurrencies table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCurrencyId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteCurrencies]
					(
					[SiteID]
					,[CurrencyID]
					)
				VALUES
					(
					@SiteId
					,@CurrencyId
					)
				
				-- Get the identity value
				SET @SiteCurrencyId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCurrencies_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteCurrencies table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteCurrencies]
				SET
					[SiteID] = @SiteId
					,[CurrencyID] = @CurrencyId
				WHERE
[SiteCurrencyID] = @SiteCurrencyId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCurrencies_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteCurrencies table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteCurrencies] WITH (ROWLOCK) 
				WHERE
					[SiteCurrencyID] = @SiteCurrencyId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCurrencies_GetByCurrencyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCurrencies table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCurrencies_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCurrencies table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCurrencies_GetBySiteCurrencyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCurrencies table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
				WHERE
					[SiteCurrencyID] = @SiteCurrencyId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteCurrencies_GetBySiteIdCurrencyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCurrencies table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
				WHERE
					[SiteID] = @SiteId
					AND [CurrencyID] = @CurrencyId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteCurrencies_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteCurrencies table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteCurrencyID]
	, [SiteID]
	, [CurrencyID]
    FROM
	[dbo].[SiteCurrencies]
    WHERE 
	 ([SiteCurrencyID] = @SiteCurrencyId OR @SiteCurrencyId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteCurrencyID]
	, [SiteID]
	, [CurrencyID]
    FROM
	[dbo].[SiteCurrencies]
    WHERE 
	 ([SiteCurrencyID] = @SiteCurrencyId AND @SiteCurrencyId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteCurrencies_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteCurrencies table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteCurrencyID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteCurrencyID] )
				SELECT TOP {3} [SiteCurrencyID]
				FROM [dbo].[SiteCurrencies] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteCurrencyID], O.[SiteID], O.[CurrencyID]
				FROM
				    [dbo].[SiteCurrencies] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteCurrencyID] = PageIndex.[SiteCurrencyID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteCurrencies] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteCurrencies_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteCurrencies table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCurrencyId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteCurrencies]
					(
					[SiteID]
					,[CurrencyID]
					)
				VALUES
					(
					@SiteId
					,@CurrencyId
					)
				
				-- Get the identity value
				SET @SiteCurrencyId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCurrencies_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCurrencies table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCurrencies_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteCurrencies table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCurrencies_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteCurrencies table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteCurrencies]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCurrencies_GetBySiteIdCurrencyId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCurrencies table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
				WHERE
					[SiteID] = @SiteId
					AND [CurrencyID] = @CurrencyId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCurrencies_GetBySiteCurrencyId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCurrencies table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
				WHERE
					[SiteCurrencyID] = @SiteCurrencyId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCurrencies_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteCurrencies table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteCurrencyID]
	, [SiteID]
	, [CurrencyID]
    FROM
	[dbo].[SiteCurrencies]
    WHERE 
	 ([SiteCurrencyID] = @SiteCurrencyId OR @SiteCurrencyId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteCurrencyID]
	, [SiteID]
	, [CurrencyID]
    FROM
	[dbo].[SiteCurrencies]
    WHERE 
	 ([SiteCurrencyID] = @SiteCurrencyId AND @SiteCurrencyId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCurrencies_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteCurrencies table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteCurrencies] WITH (ROWLOCK) 
				WHERE
					[SiteCurrencyID] = @SiteCurrencyId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCurrencies_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteCurrencies table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteCurrencies]
				SET
					[SiteID] = @SiteId
					,[CurrencyID] = @CurrencyId
				WHERE
[SiteCurrencyID] = @SiteCurrencyId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCurrencies_GetByCurrencyId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCurrencies table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteCurrencyID],
					[SiteID],
					[CurrencyID]
				FROM
					[dbo].[SiteCurrencies]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteResources_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteResources table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteResourceID],
					[SiteID],
					[LanguageID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResources]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteResources_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteResources table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteResourceID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteResourceID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteResourceID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteResources]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteResourceID], O.[SiteID], O.[LanguageID], O.[ResourceCode], O.[ResourceFileID], O.[ResourceText], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[SiteResources] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteResourceID] = PageIndex.[SiteResourceID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteResources]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteResources_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteResources table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteResourceId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteResources]
					(
					[SiteID]
					,[LanguageID]
					,[ResourceCode]
					,[ResourceFileID]
					,[ResourceText]
					,[LastModified]
					,[LastModifiedBy]
					)
				VALUES
					(
					@SiteId
					,@LanguageId
					,@ResourceCode
					,@ResourceFileId
					,@ResourceText
					,@LastModified
					,@LastModifiedBy
					)
				
				-- Get the identity value
				SET @SiteResourceId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResources_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteResources table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteResources]
				SET
					[SiteID] = @SiteId
					,[LanguageID] = @LanguageId
					,[ResourceCode] = @ResourceCode
					,[ResourceFileID] = @ResourceFileId
					,[ResourceText] = @ResourceText
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
				WHERE
[SiteResourceID] = @SiteResourceId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResources_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteResources table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteResources] WITH (ROWLOCK) 
				WHERE
					[SiteResourceID] = @SiteResourceId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResources_GetByLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteResourceID],
					[SiteID],
					[LanguageID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResources_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteResourceID],
					[SiteID],
					[LanguageID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResources_GetByResourceCode" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteResourceID],
					[SiteID],
					[LanguageID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[ResourceCode] = @ResourceCode
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResources_GetByResourceFileId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteResourceID],
					[SiteID],
					[LanguageID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[ResourceFileID] = @ResourceFileId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResources_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteResourceID],
					[SiteID],
					[LanguageID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResources_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteResourceID],
					[SiteID],
					[LanguageID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteResources_GetBySiteIdLanguageIdResourceCode" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteResourceID],
					[SiteID],
					[LanguageID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[SiteID] = @SiteId
					AND [LanguageID] = @LanguageId
					AND [ResourceCode] = @ResourceCode
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteResources_GetBySiteResourceId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteResourceID],
					[SiteID],
					[LanguageID],
					[ResourceCode],
					[ResourceFileID],
					[ResourceText],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[SiteResourceID] = @SiteResourceId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteResources_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteResources table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteResourceID]
	, [SiteID]
	, [LanguageID]
	, [ResourceCode]
	, [ResourceFileID]
	, [ResourceText]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[SiteResources]
    WHERE 
	 ([SiteResourceID] = @SiteResourceId OR @SiteResourceId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([ResourceCode] = @ResourceCode OR @ResourceCode IS NULL)
	AND ([ResourceFileID] = @ResourceFileId OR @ResourceFileId IS NULL)
	AND ([ResourceText] = @ResourceText OR @ResourceText IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteResourceID]
	, [SiteID]
	, [LanguageID]
	, [ResourceCode]
	, [ResourceFileID]
	, [ResourceText]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[SiteResources]
    WHERE 
	 ([SiteResourceID] = @SiteResourceId AND @SiteResourceId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([ResourceCode] = @ResourceCode AND @ResourceCode is not null)
	OR ([ResourceFileID] = @ResourceFileId AND @ResourceFileId is not null)
	OR ([ResourceText] = @ResourceText AND @ResourceText is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteResources_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteResources table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteResourceID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteResourceID] )
				SELECT TOP {3} [SiteResourceID]
				FROM [dbo].[SiteResources] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteResourceID], O.[SiteID], O.[LanguageID], O.[ResourceCode], O.[ResourceFileID], O.[ResourceText], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[SiteResources] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteResourceID] = PageIndex.[SiteResourceID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteResources] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteResources_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteResources table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteResourceId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					)
				
				-- Get the identity value
				SET @SiteResourceId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteResources table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteResources] WITH (ROWLOCK) 
				WHERE
					[SiteResourceID] = @SiteResourceId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteResources table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResources]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_GetByResourceCode"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[ResourceCode] = @ResourceCode
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteResources table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteResources]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_GetBySiteIdLanguageIdResourceCode"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[SiteID] = @SiteId
					AND [LanguageID] = @LanguageId
					AND [ResourceCode] = @ResourceCode
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteResources table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				WHERE
[SiteResourceID] = @SiteResourceId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteResources table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResourceText" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_GetByLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_GetBySiteResourceId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteResourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[SiteResourceID] = @SiteResourceId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteResources_GetByResourceFileId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteResources table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ResourceFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[SiteResources]
				WHERE
					[ResourceFileID] = @ResourceFileId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteCustomMapping_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteCustomMapping table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteCustomMappingID],
					[SiteID],
					[MasterSiteID]
				FROM
					[dbo].[SiteCustomMapping]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteCustomMapping_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteCustomMapping table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteCustomMappingID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteCustomMappingID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteCustomMappingID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteCustomMapping]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteCustomMappingID], O.[SiteID], O.[MasterSiteID]
				FROM
				    [dbo].[SiteCustomMapping] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteCustomMappingID] = PageIndex.[SiteCustomMappingID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteCustomMapping]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteCustomMapping_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteCustomMapping table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCustomMappingId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteCustomMapping]
					(
					[SiteID]
					,[MasterSiteID]
					)
				VALUES
					(
					@SiteId
					,@MasterSiteId
					)
				
				-- Get the identity value
				SET @SiteCustomMappingId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCustomMapping_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteCustomMapping table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCustomMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteCustomMapping]
				SET
					[SiteID] = @SiteId
					,[MasterSiteID] = @MasterSiteId
				WHERE
[SiteCustomMappingID] = @SiteCustomMappingId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCustomMapping_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteCustomMapping table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCustomMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteCustomMapping] WITH (ROWLOCK) 
				WHERE
					[SiteCustomMappingID] = @SiteCustomMappingId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCustomMapping_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCustomMapping table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteCustomMappingID],
					[SiteID],
					[MasterSiteID]
				FROM
					[dbo].[SiteCustomMapping]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCustomMapping_GetBySiteCustomMappingId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCustomMapping table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCustomMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteCustomMappingID],
					[SiteID],
					[MasterSiteID]
				FROM
					[dbo].[SiteCustomMapping]
				WHERE
					[SiteCustomMappingID] = @SiteCustomMappingId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteCustomMapping_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteCustomMapping table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCustomMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteCustomMappingID]
	, [SiteID]
	, [MasterSiteID]
    FROM
	[dbo].[SiteCustomMapping]
    WHERE 
	 ([SiteCustomMappingID] = @SiteCustomMappingId OR @SiteCustomMappingId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([MasterSiteID] = @MasterSiteId OR @MasterSiteId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteCustomMappingID]
	, [SiteID]
	, [MasterSiteID]
    FROM
	[dbo].[SiteCustomMapping]
    WHERE 
	 ([SiteCustomMappingID] = @SiteCustomMappingId AND @SiteCustomMappingId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([MasterSiteID] = @MasterSiteId AND @MasterSiteId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteCustomMapping_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteCustomMapping table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteCustomMappingID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteCustomMappingID] )
				SELECT TOP {3} [SiteCustomMappingID]
				FROM [dbo].[SiteCustomMapping] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteCustomMappingID], O.[SiteID], O.[MasterSiteID]
				FROM
				    [dbo].[SiteCustomMapping] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteCustomMappingID] = PageIndex.[SiteCustomMappingID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteCustomMapping] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteCustomMapping_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteCustomMapping table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCustomMappingId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteId
					)
				
				-- Get the identity value
				SET @SiteCustomMappingId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCustomMapping_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCustomMapping table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteID]
				FROM
					[dbo].[SiteCustomMapping]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCustomMapping_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteCustomMapping table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
terSiteID]
				FROM
					[dbo].[SiteCustomMapping]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCustomMapping_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteCustomMapping table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteCustomMapping]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCustomMapping_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteCustomMapping table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCustomMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCustomMapping_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteCustomMapping table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCustomMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteCustomMapping] WITH (ROWLOCK) 
				WHERE
					[SiteCustomMappingID] = @SiteCustomMappingId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCustomMapping_GetBySiteCustomMappingId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCustomMapping table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCustomMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteID]
				FROM
					[dbo].[SiteCustomMapping]
				WHERE
					[SiteCustomMappingID] = @SiteCustomMappingId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCustomMapping_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteCustomMapping table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCustomMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteId
				WHERE
[SiteCustomMappingID] = @SiteCustomMappingId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteCountries_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteCountries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteCountries_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteCountries table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteCountryID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteCountryID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteCountryID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteCountries]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteCountryID], O.[SiteID], O.[CountryID], O.[SiteCountryName], O.[SiteCountryFriendlyUrl], O.[Currency], O.[Sequence]
				FROM
				    [dbo].[SiteCountries] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteCountryID] = PageIndex.[SiteCountryID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteCountries]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteCountries_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteCountries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCountryId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteCountryName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteCountryFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteCountries]
					(
					[SiteID]
					,[CountryID]
					,[SiteCountryName]
					,[SiteCountryFriendlyUrl]
					,[Currency]
					,[Sequence]
					)
				VALUES
					(
					@SiteId
					,@CountryId
					,@SiteCountryName
					,@SiteCountryFriendlyUrl
					,@Currency
					,@Sequence
					)
				
				-- Get the identity value
				SET @SiteCountryId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCountries_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteCountries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteCountryName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteCountryFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteCountries]
				SET
					[SiteID] = @SiteId
					,[CountryID] = @CountryId
					,[SiteCountryName] = @SiteCountryName
					,[SiteCountryFriendlyUrl] = @SiteCountryFriendlyUrl
					,[Currency] = @Currency
					,[Sequence] = @Sequence
				WHERE
[SiteCountryID] = @SiteCountryId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCountries_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteCountries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteCountries] WITH (ROWLOCK) 
				WHERE
					[SiteCountryID] = @SiteCountryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCountries_GetByCountryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCountries table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
				WHERE
					[CountryID] = @CountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCountries_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCountries table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteCountries_GetBySiteIdCountryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCountries table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
				WHERE
					[SiteID] = @SiteId
					AND [CountryID] = @CountryId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteCountries_GetBySiteCountryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCountries table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
				WHERE
					[SiteCountryID] = @SiteCountryId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteCountries_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteCountries table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCountryName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteCountryFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteCountryID]
	, [SiteID]
	, [CountryID]
	, [SiteCountryName]
	, [SiteCountryFriendlyUrl]
	, [Currency]
	, [Sequence]
    FROM
	[dbo].[SiteCountries]
    WHERE 
	 ([SiteCountryID] = @SiteCountryId OR @SiteCountryId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([SiteCountryName] = @SiteCountryName OR @SiteCountryName IS NULL)
	AND ([SiteCountryFriendlyUrl] = @SiteCountryFriendlyUrl OR @SiteCountryFriendlyUrl IS NULL)
	AND ([Currency] = @Currency OR @Currency IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteCountryID]
	, [SiteID]
	, [CountryID]
	, [SiteCountryName]
	, [SiteCountryFriendlyUrl]
	, [Currency]
	, [Sequence]
    FROM
	[dbo].[SiteCountries]
    WHERE 
	 ([SiteCountryID] = @SiteCountryId AND @SiteCountryId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([SiteCountryName] = @SiteCountryName AND @SiteCountryName is not null)
	OR ([SiteCountryFriendlyUrl] = @SiteCountryFriendlyUrl AND @SiteCountryFriendlyUrl is not null)
	OR ([Currency] = @Currency AND @Currency is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteCountries_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteCountries table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteCountryID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteCountryID] )
				SELECT TOP {3} [SiteCountryID]
				FROM [dbo].[SiteCountries] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteCountryID], O.[SiteID], O.[CountryID], O.[SiteCountryName], O.[SiteCountryFriendlyUrl], O.[Currency], O.[Sequence]
				FROM
				    [dbo].[SiteCountries] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteCountryID] = PageIndex.[SiteCountryID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteCountries] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteCountries_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteCountries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCountryId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCountryName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteCountryFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteCountries]
					(
					[SiteID]
					,[CountryID]
					,[SiteCountryName]
					,[SiteCountryFriendlyUrl]
					,[Currency]
					,[Sequence]
					)
				VALUES
					(
					@SiteId
					,@CountryId
					,@SiteCountryName
					,@SiteCountryFriendlyUrl
					,@Currency
					,@Sequence
					)
				
				-- Get the identity value
				SET @SiteCountryId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_GetBySiteIdCountryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCountries table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
				WHERE
					[SiteID] = @SiteId
					AND [CountryID] = @CountryId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCountries table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteCountries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_GetBySiteCountryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCountries table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
				WHERE
					[SiteCountryID] = @SiteCountryId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_GetBySiteIdFriendlyUrl"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN 
	SELECT SiteCountryID, SiteID, CountryID, SiteCountryName
	FROM SiteCountries (NOLOCK)
	WHERE SiteID = @SiteID AND SiteCountryFriendlyUrl = @FriendlyUrl
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_CustomDeleteBySiteIDCountryID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	DECLARE @TempLocationTable TABLE(LocationID INT);
	DECLARE @TempAreaTable TABLE(AreaID INT);
	
	INSERT INTO @TempLocationTable(LocationID)
	SELECT sl.LocationID FROM SiteLocation sl WITH (NOLOCK)
	INNER JOIN Location l ON sl.LocationID = l.LocationID
	WHERE sl.SiteID = @SiteID AND l.CountryID = @CountryID
	
	INSERT INTO @TempAreaTable(AreaID)
	SELECT sa.AreaID FROM SiteArea sa WITH (NOLOCK)
	INNER JOIN Area a ON sa.AreaID = a.AreaID
	WHERE sa.SiteID = @SiteID AND a.LocationID IN (SELECT LocationID FROM @TempLocationTable) 
	
	-- DELETE
	
	DELETE FROM SiteArea WHERE AreaID IN (SELECT AreaID FROM @TempAreaTable) AND SiteID = @SiteID
	DELETE FROM SiteLocation WHERE LocationID IN (SELECT LocationID FROM @TempLocationTable) AND SiteID = @SiteID
	DELETE FROM SiteCountries WHERE CountryID = @CountryID AND SiteID = @SiteID
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_GetByCountryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteCountries table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteCountryID],
					[SiteID],
					[CountryID],
					[SiteCountryName],
					[SiteCountryFriendlyUrl],
					[Currency],
					[Sequence]
				FROM
					[dbo].[SiteCountries]
				WHERE
					[CountryID] = @CountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteCountries table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCountryName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteCountryFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteCountryID]
	, [SiteID]
	, [CountryID]
	, [SiteCountryName]
	, [SiteCountryFriendlyUrl]
	, [Currency]
	, [Sequence]
    FROM
	[dbo].[SiteCountries]
    WHERE 
	 ([SiteCountryID] = @SiteCountryId OR @SiteCountryId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
	AND ([SiteCountryName] = @SiteCountryName OR @SiteCountryName IS NULL)
	AND ([SiteCountryFriendlyUrl] = @SiteCountryFriendlyUrl OR @SiteCountryFriendlyUrl IS NULL)
	AND ([Currency] = @Currency OR @Currency IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteCountryID]
	, [SiteID]
	, [CountryID]
	, [SiteCountryName]
	, [SiteCountryFriendlyUrl]
	, [Currency]
	, [Sequence]
    FROM
	[dbo].[SiteCountries]
    WHERE 
	 ([SiteCountryID] = @SiteCountryId AND @SiteCountryId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	OR ([SiteCountryName] = @SiteCountryName AND @SiteCountryName is not null)
	OR ([SiteCountryFriendlyUrl] = @SiteCountryFriendlyUrl AND @SiteCountryFriendlyUrl is not null)
	OR ([Currency] = @Currency AND @Currency is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteCountries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteCountries] WITH (ROWLOCK) 
				WHERE
					[SiteCountryID] = @SiteCountryId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteCountries table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteCountries]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteCountries_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteCountries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteCountryName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteCountryFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Currency" type="nvarchar" direction="Input" size="5" precision="0" scale="0" param="(5)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteCountries]
				SET
					[SiteID] = @SiteId
					,[CountryID] = @CountryId
					,[SiteCountryName] = @SiteCountryName
					,[SiteCountryFriendlyUrl] = @SiteCountryFriendlyUrl
					,[Currency] = @Currency
					,[Sequence] = @Sequence
				WHERE
[SiteCountryID] = @SiteCountryId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteLanguages_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteLanguages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteLanguages_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteLanguages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteLanguageID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteLanguageID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteLanguageID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteLanguages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteLanguageID], O.[SiteID], O.[LanguageID], O.[SiteLanguageName], O.[ResourceFileName]
				FROM
				    [dbo].[SiteLanguages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteLanguageID] = PageIndex.[SiteLanguageID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteLanguages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteLanguages_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteLanguages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteLanguageId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteLanguageName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResourceFileName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteLanguages]
					(
					[SiteID]
					,[LanguageID]
					,[SiteLanguageName]
					,[ResourceFileName]
					)
				VALUES
					(
					@SiteId
					,@LanguageId
					,@SiteLanguageName
					,@ResourceFileName
					)
				
				-- Get the identity value
				SET @SiteLanguageId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLanguages_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteLanguages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteLanguageName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResourceFileName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteLanguages]
				SET
					[SiteID] = @SiteId
					,[LanguageID] = @LanguageId
					,[SiteLanguageName] = @SiteLanguageName
					,[ResourceFileName] = @ResourceFileName
				WHERE
[SiteLanguageID] = @SiteLanguageId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLanguages_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteLanguages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteLanguages] WITH (ROWLOCK) 
				WHERE
					[SiteLanguageID] = @SiteLanguageId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLanguages_GetByLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLanguages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLanguages_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLanguages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLanguages_GetBySiteIdLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLanguages table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
				WHERE
					[SiteID] = @SiteId
					AND [LanguageID] = @LanguageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteLanguages_GetBySiteLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLanguages table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
				WHERE
					[SiteLanguageID] = @SiteLanguageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteLanguages_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteLanguages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLanguageName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteLanguageID]
	, [SiteID]
	, [LanguageID]
	, [SiteLanguageName]
	, [ResourceFileName]
    FROM
	[dbo].[SiteLanguages]
    WHERE 
	 ([SiteLanguageID] = @SiteLanguageId OR @SiteLanguageId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([SiteLanguageName] = @SiteLanguageName OR @SiteLanguageName IS NULL)
	AND ([ResourceFileName] = @ResourceFileName OR @ResourceFileName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteLanguageID]
	, [SiteID]
	, [LanguageID]
	, [SiteLanguageName]
	, [ResourceFileName]
    FROM
	[dbo].[SiteLanguages]
    WHERE 
	 ([SiteLanguageID] = @SiteLanguageId AND @SiteLanguageId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([SiteLanguageName] = @SiteLanguageName AND @SiteLanguageName is not null)
	OR ([ResourceFileName] = @ResourceFileName AND @ResourceFileName is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteLanguages_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteLanguages table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteLanguageID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteLanguageID] )
				SELECT TOP {3} [SiteLanguageID]
				FROM [dbo].[SiteLanguages] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteLanguageID], O.[SiteID], O.[LanguageID], O.[SiteLanguageName], O.[ResourceFileName]
				FROM
				    [dbo].[SiteLanguages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteLanguageID] = PageIndex.[SiteLanguageID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteLanguages] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteLanguages_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteLanguages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteLanguageId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLanguageName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteLanguages]
					(
					[SiteID]
					,[LanguageID]
					,[SiteLanguageName]
					,[ResourceFileName]
					)
				VALUES
					(
					@SiteId
					,@LanguageId
					,@SiteLanguageName
					,@ResourceFileName
					)
				
				-- Get the identity value
				SET @SiteLanguageId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLanguages_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteLanguages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteLanguages] WITH (ROWLOCK) 
				WHERE
					[SiteLanguageID] = @SiteLanguageId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLanguages_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLanguages table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLanguages_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteLanguages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLanguages_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteLanguages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteLanguages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLanguages_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteLanguages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLanguageName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteLanguageID]
	, [SiteID]
	, [LanguageID]
	, [SiteLanguageName]
	, [ResourceFileName]
    FROM
	[dbo].[SiteLanguages]
    WHERE 
	 ([SiteLanguageID] = @SiteLanguageId OR @SiteLanguageId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([SiteLanguageName] = @SiteLanguageName OR @SiteLanguageName IS NULL)
	AND ([ResourceFileName] = @ResourceFileName OR @ResourceFileName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteLanguageID]
	, [SiteID]
	, [LanguageID]
	, [SiteLanguageName]
	, [ResourceFileName]
    FROM
	[dbo].[SiteLanguages]
    WHERE 
	 ([SiteLanguageID] = @SiteLanguageId AND @SiteLanguageId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([SiteLanguageName] = @SiteLanguageName AND @SiteLanguageName is not null)
	OR ([ResourceFileName] = @ResourceFileName AND @ResourceFileName is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLanguages_GetByLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLanguages table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLanguages_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteLanguages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLanguageName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResourceFileName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteLanguages]
				SET
					[SiteID] = @SiteId
					,[LanguageID] = @LanguageId
					,[SiteLanguageName] = @SiteLanguageName
					,[ResourceFileName] = @ResourceFileName
				WHERE
[SiteLanguageID] = @SiteLanguageId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLanguages_GetBySiteLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLanguages table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
				WHERE
					[SiteLanguageID] = @SiteLanguageId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLanguages_GetBySiteIdLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLanguages table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteLanguageID],
					[SiteID],
					[LanguageID],
					[SiteLanguageName],
					[ResourceFileName]
				FROM
					[dbo].[SiteLanguages]
				WHERE
					[SiteID] = @SiteId
					AND [LanguageID] = @LanguageId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteProfession_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteProfession table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteProfession_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteProfession table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteProfessionID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteProfessionID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteProfessionID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteProfession]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteProfessionID], O.[SiteID], O.[ProfessionID], O.[SiteProfessionName], O.[Valid], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[Sequence], O.[SiteProfessionFriendlyUrl], O.[TotalJobs], O.[CanonicalUrl]
				FROM
				    [dbo].[SiteProfession] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteProfessionID] = PageIndex.[SiteProfessionID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteProfession]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteProfession_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteProfession table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteProfessionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteProfessionName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteProfessionFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteProfession]
					(
					[SiteID]
					,[ProfessionID]
					,[SiteProfessionName]
					,[Valid]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					,[Sequence]
					,[SiteProfessionFriendlyUrl]
					,[TotalJobs]
					,[CanonicalUrl]
					)
				VALUES
					(
					@SiteId
					,@ProfessionId
					,@SiteProfessionName
					,@Valid
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					,@Sequence
					,@SiteProfessionFriendlyUrl
					,@TotalJobs
					,@CanonicalUrl
					)
				
				-- Get the identity value
				SET @SiteProfessionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteProfession_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteProfession table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteProfessionName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteProfessionFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteProfession]
				SET
					[SiteID] = @SiteId
					,[ProfessionID] = @ProfessionId
					,[SiteProfessionName] = @SiteProfessionName
					,[Valid] = @Valid
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[Sequence] = @Sequence
					,[SiteProfessionFriendlyUrl] = @SiteProfessionFriendlyUrl
					,[TotalJobs] = @TotalJobs
					,[CanonicalUrl] = @CanonicalUrl
				WHERE
[SiteProfessionID] = @SiteProfessionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteProfession_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteProfession table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteProfession] WITH (ROWLOCK) 
				WHERE
					[SiteProfessionID] = @SiteProfessionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteProfession_GetBySiteIdProfessionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteProfession table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
				WHERE
					[SiteID] = @SiteId
					AND [ProfessionID] = @ProfessionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteProfession_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteProfession table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteProfession_GetByProfessionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteProfession table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
				WHERE
					[ProfessionID] = @ProfessionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteProfession_GetBySiteProfessionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteProfession table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
				WHERE
					[SiteProfessionID] = @SiteProfessionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteProfession_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteProfession table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteProfessionID]
	, [SiteID]
	, [ProfessionID]
	, [SiteProfessionName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [Sequence]
	, [SiteProfessionFriendlyUrl]
	, [TotalJobs]
	, [CanonicalUrl]
    FROM
	[dbo].[SiteProfession]
    WHERE 
	 ([SiteProfessionID] = @SiteProfessionId OR @SiteProfessionId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([ProfessionID] = @ProfessionId OR @ProfessionId IS NULL)
	AND ([SiteProfessionName] = @SiteProfessionName OR @SiteProfessionName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([SiteProfessionFriendlyUrl] = @SiteProfessionFriendlyUrl OR @SiteProfessionFriendlyUrl IS NULL)
	AND ([TotalJobs] = @TotalJobs OR @TotalJobs IS NULL)
	AND ([CanonicalUrl] = @CanonicalUrl OR @CanonicalUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteProfessionID]
	, [SiteID]
	, [ProfessionID]
	, [SiteProfessionName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [Sequence]
	, [SiteProfessionFriendlyUrl]
	, [TotalJobs]
	, [CanonicalUrl]
    FROM
	[dbo].[SiteProfession]
    WHERE 
	 ([SiteProfessionID] = @SiteProfessionId AND @SiteProfessionId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([ProfessionID] = @ProfessionId AND @ProfessionId is not null)
	OR ([SiteProfessionName] = @SiteProfessionName AND @SiteProfessionName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([SiteProfessionFriendlyUrl] = @SiteProfessionFriendlyUrl AND @SiteProfessionFriendlyUrl is not null)
	OR ([TotalJobs] = @TotalJobs AND @TotalJobs is not null)
	OR ([CanonicalUrl] = @CanonicalUrl AND @CanonicalUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteProfession_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteProfession table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteProfessionID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteProfessionID] )
				SELECT TOP {3} [SiteProfessionID]
				FROM [dbo].[SiteProfession] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteProfessionID], O.[SiteID], O.[ProfessionID], O.[SiteProfessionName], O.[Valid], O.[MetaTitle], O.[MetaKeywords], O.[MetaDescription], O.[Sequence], O.[SiteProfessionFriendlyUrl], O.[TotalJobs], O.[CanonicalUrl]
				FROM
				    [dbo].[SiteProfession] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteProfessionID] = PageIndex.[SiteProfessionID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteProfession] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteProfession_CustomGetBySiteIDFriendlyUrl"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
SELECT
SiteProfessionID,
SiteID,
ProfessionID,
SiteProfessionName,
Valid,
MetaTitle,
MetaKeywords,
MetaDescription,
Sequence,
SiteProfessionFriendlyUrl,
TotalJobs,
CanonicalUrl
FROM SiteProfession WITH (NOLOCK)
WHERE SiteID = @SiteID and SiteProfessionFriendlyUrl = @SiteProfessionFriendlyUrl
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_GetBySiteIdProfessionId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteProfession table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
				WHERE
					[SiteID] = @SiteId
					AND [ProfessionID] = @ProfessionId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteProfession table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteProfessionId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteProfession]
					(
					[SiteID]
					,[ProfessionID]
					,[SiteProfessionName]
					,[Valid]
					,[MetaTitle]
					,[MetaKeywords]
					,[MetaDescription]
					,[Sequence]
					,[SiteProfessionFriendlyUrl]
					,[TotalJobs]
					,[CanonicalUrl]
					)
				VALUES
					(
					@SiteId
					,@ProfessionId
					,@SiteProfessionName
					,@Valid
					,@MetaTitle
					,@MetaKeywords
					,@MetaDescription
					,@Sequence
					,@SiteProfessionFriendlyUrl
					,@TotalJobs
					,@CanonicalUrl
					)
				
				-- Get the identity value
				SET @SiteProfessionId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_GetByProfessionId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteProfession table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
				WHERE
					[ProfessionID] = @ProfessionId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteProfession table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
				WHERE
					[SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteProfession table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteProfession table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteProfession]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_GetBySiteIdFriendlyUrl"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN 
	SELECT SiteProfessionID, SiteID, ProfessionID, SiteProfessionName, Valid, SiteProfessionFriendlyUrl, TotalJobs
	FROM SiteProfession (NOLOCK)
	WHERE SiteID = @SiteID AND SiteProfessionFriendlyUrl = @FriendlyUrl
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_CustomBulkInsert"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@VALUES" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	EXEC ('INSERT INTO SiteProfession (SiteID, ProfessionID, SiteProfessionName, Valid, MetaTitle, MetaKeywords, MetaDescription, Sequence, SiteProfessionFriendlyUrl, TotalJobs) VALUES ' + @VALUES) 
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_CustomBulkDelete"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@VALUES" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	EXEC ('DELETE FROM SiteProfession WHERE SiteProfessionID IN (' + @VALUES + ')') 
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_CustomGetBySiteIDProfessionID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT
	SiteProfessionID,
	SiteID,
	ProfessionID,
	SiteProfessionName,
	Valid,
	MetaTitle,
	MetaKeywords,
	MetaDescription,
	Sequence,
	SiteProfessionFriendlyUrl,
	TotalJobs,
	CanonicalUrl
	FROM SiteProfession WITH (NOLOCK)
	WHERE SiteID = @SiteID AND ProfessionID = @ProfessionID 
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_GetBySiteProfessionId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteProfession table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteProfessionID],
					[SiteID],
					[ProfessionID],
					[SiteProfessionName],
					[Valid],
					[MetaTitle],
					[MetaKeywords],
					[MetaDescription],
					[Sequence],
					[SiteProfessionFriendlyUrl],
					[TotalJobs],
					[CanonicalUrl]
				FROM
					[dbo].[SiteProfession]
				WHERE
					[SiteProfessionID] = @SiteProfessionId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteProfession table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteProfessionID]
	, [SiteID]
	, [ProfessionID]
	, [SiteProfessionName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [Sequence]
	, [SiteProfessionFriendlyUrl]
	, [TotalJobs]
	, [CanonicalUrl]
    FROM
	[dbo].[SiteProfession]
    WHERE 
	 ([SiteProfessionID] = @SiteProfessionId OR @SiteProfessionId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([ProfessionID] = @ProfessionId OR @ProfessionId IS NULL)
	AND ([SiteProfessionName] = @SiteProfessionName OR @SiteProfessionName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([SiteProfessionFriendlyUrl] = @SiteProfessionFriendlyUrl OR @SiteProfessionFriendlyUrl IS NULL)
	AND ([TotalJobs] = @TotalJobs OR @TotalJobs IS NULL)
	AND ([CanonicalUrl] = @CanonicalUrl OR @CanonicalUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteProfessionID]
	, [SiteID]
	, [ProfessionID]
	, [SiteProfessionName]
	, [Valid]
	, [MetaTitle]
	, [MetaKeywords]
	, [MetaDescription]
	, [Sequence]
	, [SiteProfessionFriendlyUrl]
	, [TotalJobs]
	, [CanonicalUrl]
    FROM
	[dbo].[SiteProfession]
    WHERE 
	 ([SiteProfessionID] = @SiteProfessionId AND @SiteProfessionId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([ProfessionID] = @ProfessionId AND @ProfessionId is not null)
	OR ([SiteProfessionName] = @SiteProfessionName AND @SiteProfessionName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([SiteProfessionFriendlyUrl] = @SiteProfessionFriendlyUrl AND @SiteProfessionFriendlyUrl is not null)
	OR ([TotalJobs] = @TotalJobs AND @TotalJobs is not null)
	OR ([CanonicalUrl] = @CanonicalUrl AND @CanonicalUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteProfession table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteProfession] WITH (ROWLOCK) 
				WHERE
					[SiteProfessionID] = @SiteProfessionId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteProfession_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteProfession table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteProfessionFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@TotalJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CanonicalUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteProfession]
				SET
					[SiteID] = @SiteId
					,[ProfessionID] = @ProfessionId
					,[SiteProfessionName] = @SiteProfessionName
					,[Valid] = @Valid
					,[MetaTitle] = @MetaTitle
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[Sequence] = @Sequence
					,[SiteProfessionFriendlyUrl] = @SiteProfessionFriendlyUrl
					,[TotalJobs] = @TotalJobs
					,[CanonicalUrl] = @CanonicalUrl
				WHERE
[SiteProfessionID] = @SiteProfessionId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteLocation_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteLocation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteLocation_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteLocation table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteLocationID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteLocationID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteLocationID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteLocation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteLocationID], O.[LocationID], O.[SiteID], O.[SiteLocationName], O.[Valid], O.[SiteLocationFriendlyUrl]
				FROM
				    [dbo].[SiteLocation] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteLocationID] = PageIndex.[SiteLocationID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteLocation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteLocation_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteLocation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteLocationId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteLocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteLocationFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteLocation]
					(
					[LocationID]
					,[SiteID]
					,[SiteLocationName]
					,[Valid]
					,[SiteLocationFriendlyUrl]
					)
				VALUES
					(
					@LocationId
					,@SiteId
					,@SiteLocationName
					,@Valid
					,@SiteLocationFriendlyUrl
					)
				
				-- Get the identity value
				SET @SiteLocationId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLocation_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteLocation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteLocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteLocationFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteLocation]
				SET
					[LocationID] = @LocationId
					,[SiteID] = @SiteId
					,[SiteLocationName] = @SiteLocationName
					,[Valid] = @Valid
					,[SiteLocationFriendlyUrl] = @SiteLocationFriendlyUrl
				WHERE
[SiteLocationID] = @SiteLocationId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLocation_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteLocation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteLocation] WITH (ROWLOCK) 
				WHERE
					[SiteLocationID] = @SiteLocationId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLocation_GetByLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLocation_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteLocation_GetBySiteIdLocationIdSiteLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[SiteID] = @SiteId
					AND [LocationID] = @LocationId
					AND [SiteLocationID] = @SiteLocationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteLocation_GetBySiteIdLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[SiteID] = @SiteId
					AND [LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteLocation_GetBySiteLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[SiteLocationID] = @SiteLocationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteLocation_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteLocation table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteLocationID]
	, [LocationID]
	, [SiteID]
	, [SiteLocationName]
	, [Valid]
	, [SiteLocationFriendlyUrl]
    FROM
	[dbo].[SiteLocation]
    WHERE 
	 ([SiteLocationID] = @SiteLocationId OR @SiteLocationId IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([SiteLocationName] = @SiteLocationName OR @SiteLocationName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([SiteLocationFriendlyUrl] = @SiteLocationFriendlyUrl OR @SiteLocationFriendlyUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteLocationID]
	, [LocationID]
	, [SiteID]
	, [SiteLocationName]
	, [Valid]
	, [SiteLocationFriendlyUrl]
    FROM
	[dbo].[SiteLocation]
    WHERE 
	 ([SiteLocationID] = @SiteLocationId AND @SiteLocationId is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([SiteLocationName] = @SiteLocationName AND @SiteLocationName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([SiteLocationFriendlyUrl] = @SiteLocationFriendlyUrl AND @SiteLocationFriendlyUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteLocation_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteLocation table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteLocationID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteLocationID] )
				SELECT TOP {3} [SiteLocationID]
				FROM [dbo].[SiteLocation] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteLocationID], O.[LocationID], O.[SiteID], O.[SiteLocationName], O.[Valid], O.[SiteLocationFriendlyUrl]
				FROM
				    [dbo].[SiteLocation] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteLocationID] = PageIndex.[SiteLocationID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteLocation] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteLocation_GetByCountryID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT  
  [SiteLocation].[SiteLocationID],  
  [SiteLocation].[LocationID],  
  [SiteLocation].[SiteID],  
  [SiteLocation].[SiteLocationName],  
  [SiteLocation].[Valid],
  [SiteLocation].[SiteLocationFriendlyUrl]  
 FROM  
  [dbo].[SiteLocation] (NOLOCK) SiteLocation  
 INNER JOIN [dbo].[Location] (NOLOCK) Location  
 ON [SiteLocation].LocationID = [Location].LocationID  
 AND [SiteLocation].SiteID = @SiteID  
 WHERE [Location].CountryID = @CountryID
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteLocation table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteLocationId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[SiteLocation]
					(
					[LocationID]
					,[SiteID]
					,[SiteLocationName]
					,[Valid]
					,[SiteLocationFriendlyUrl]
					)
				VALUES
					(
					@LocationId
					,@SiteId
					,@SiteLocationName
					,@Valid
					,@SiteLocationFriendlyUrl
					)
				
				-- Get the identity value
				SET @SiteLocationId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_GetByLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteLocation table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteLocation table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteLocation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_GetBySiteIdLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[SiteID] = @SiteId
					AND [LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_GetBySiteIdFriendlyUrl"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN 
	SELECT SiteLocation.SiteLocationID, SiteLocation.SiteID, SiteLocation.LocationID, SiteLocation.SiteLocationName, 
		   SiteLocation.Valid, SiteLocation.SiteLocationFriendlyUrl
	FROM SiteLocation (NOLOCK)
	INNER JOIN Location ON Location.LocationID = SiteLocation.LocationID
	WHERE SiteLocation.SiteID = @SiteID AND SiteLocation.SiteLocationFriendlyUrl = @FriendlyUrl
	ORDER BY Location.Sequence
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_CustomDeleteBySiteIDLocationID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	DECLARE @TempAreaTable TABLE(AreaID INT);
	
	INSERT INTO @TempAreaTable(AreaID)
	SELECT sa.AreaID FROM SiteArea sa WITH (NOLOCK)
	INNER JOIN Area a ON sa.AreaID = a.AreaID
	WHERE sa.SiteID = @SiteID AND a.LocationID = @LocationID
	
	-- DELETE
	
	DELETE FROM SiteArea WHERE AreaID IN (SELECT AreaID FROM @TempAreaTable) AND SiteID = @SiteID
	DELETE FROM SiteLocation WHERE LocationID = @LocationID AND SiteID = @SiteID
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_GetBySiteLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[SiteLocationID] = @SiteLocationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteLocation table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[SiteLocation]
				SET
					[LocationID] = @LocationId
					,[SiteID] = @SiteId
					,[SiteLocationName] = @SiteLocationName
					,[Valid] = @Valid
					,[SiteLocationFriendlyUrl] = @SiteLocationFriendlyUrl
				WHERE
[SiteLocationID] = @SiteLocationId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteLocation table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationFriendlyUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteLocationID]
	, [LocationID]
	, [SiteID]
	, [SiteLocationName]
	, [Valid]
	, [SiteLocationFriendlyUrl]
    FROM
	[dbo].[SiteLocation]
    WHERE 
	 ([SiteLocationID] = @SiteLocationId OR @SiteLocationId IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([SiteLocationName] = @SiteLocationName OR @SiteLocationName IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([SiteLocationFriendlyUrl] = @SiteLocationFriendlyUrl OR @SiteLocationFriendlyUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteLocationID]
	, [LocationID]
	, [SiteID]
	, [SiteLocationName]
	, [Valid]
	, [SiteLocationFriendlyUrl]
    FROM
	[dbo].[SiteLocation]
    WHERE 
	 ([SiteLocationID] = @SiteLocationId AND @SiteLocationId is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([SiteLocationName] = @SiteLocationName AND @SiteLocationName is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([SiteLocationFriendlyUrl] = @SiteLocationFriendlyUrl AND @SiteLocationFriendlyUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteLocation table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteLocation] WITH (ROWLOCK) 
				WHERE
					[SiteLocationID] = @SiteLocationId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_GetBySiteIdLocationIdSiteLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteLocation table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteLocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[SiteLocationID],
					[LocationID],
					[SiteID],
					[SiteLocationName],
					[Valid],
					[SiteLocationFriendlyUrl]
				FROM
					[dbo].[SiteLocation]
				WHERE
					[SiteID] = @SiteId
					AND [LocationID] = @LocationId
					AND [SiteLocationID] = @SiteLocationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteLocation_CustomGetBySiteID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN  
 SELECT SiteLocationID, sl.LocationID, SiteID, SiteLocationName, sl.Valid, SiteLocationFriendlyUrl,CountryID   
 FROM SiteLocation sl WITH (NOLOCK)  
 INNER JOIN Location l WITH (NOLOCK)  
 ON sl.LocationID = l.LocationID  
 WHERE SiteID = @SiteID AND (@CountryID = 0 OR CountryID = @CountryID)  
END  

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserJobTemplateLogo table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdvertiserJobTemplateLogoID],
					[AdvertiserID],
					[JobLogoName],
					[JobTemplateLogo],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[AdvertiserJobTemplateLogo]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserJobTemplateLogo table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserJobTemplateLogoID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AdvertiserJobTemplateLogoID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AdvertiserJobTemplateLogoID]'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserJobTemplateLogo]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AdvertiserJobTemplateLogoID], O.[AdvertiserID], O.[JobLogoName], O.[JobTemplateLogo], O.[JobTemplateLogoUrl]
				FROM
				    [dbo].[AdvertiserJobTemplateLogo] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AdvertiserJobTemplateLogoID] = PageIndex.[AdvertiserJobTemplateLogoID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserJobTemplateLogo]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserJobTemplateLogo table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLogoName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[AdvertiserJobTemplateLogo]
					(
					[AdvertiserID]
					,[JobLogoName]
					,[JobTemplateLogo]
					,[JobTemplateLogoUrl]
					)
				VALUES
					(
					@AdvertiserId
					,@JobLogoName
					,@JobTemplateLogo
					,@JobTemplateLogoUrl
					)
				
				-- Get the identity value
				SET @AdvertiserJobTemplateLogoId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserJobTemplateLogo table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLogoName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AdvertiserJobTemplateLogo]
				SET
					[AdvertiserID] = @AdvertiserId
					,[JobLogoName] = @JobLogoName
					,[JobTemplateLogo] = @JobTemplateLogo
					,[JobTemplateLogoUrl] = @JobTemplateLogoUrl
				WHERE
[AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserJobTemplateLogo table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[AdvertiserJobTemplateLogo] WITH (ROWLOCK) 
				WHERE
					[AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_GetByAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobTemplateLogo table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserJobTemplateLogoID],
					[AdvertiserID],
					[JobLogoName],
					[JobTemplateLogo],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[AdvertiserJobTemplateLogo]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_GetByAdvertiserJobTemplateLogoId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobTemplateLogo table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdvertiserJobTemplateLogoID],
					[AdvertiserID],
					[JobLogoName],
					[JobTemplateLogo],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[AdvertiserJobTemplateLogo]
				WHERE
					[AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserJobTemplateLogo table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLogoName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserJobTemplateLogoID]
	, [AdvertiserID]
	, [JobLogoName]
	, [JobTemplateLogo]
	, [JobTemplateLogoUrl]
    FROM
	[dbo].[AdvertiserJobTemplateLogo]
    WHERE 
	 ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId OR @AdvertiserJobTemplateLogoId IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([JobLogoName] = @JobLogoName OR @JobLogoName IS NULL)
	AND ([JobTemplateLogoUrl] = @JobTemplateLogoUrl OR @JobTemplateLogoUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserJobTemplateLogoID]
	, [AdvertiserID]
	, [JobLogoName]
	, [JobTemplateLogo]
	, [JobTemplateLogoUrl]
    FROM
	[dbo].[AdvertiserJobTemplateLogo]
    WHERE 
	 ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId AND @AdvertiserJobTemplateLogoId is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([JobLogoName] = @JobLogoName AND @JobLogoName is not null)
	OR ([JobTemplateLogoUrl] = @JobTemplateLogoUrl AND @JobTemplateLogoUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserJobTemplateLogo table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserJobTemplateLogoID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AdvertiserJobTemplateLogoID] )
				SELECT TOP {3} [AdvertiserJobTemplateLogoID]
				FROM [dbo].[AdvertiserJobTemplateLogo] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AdvertiserJobTemplateLogoID], O.[AdvertiserID], O.[JobLogoName], O.[JobTemplateLogo], O.[JobTemplateLogoUrl]
				FROM
				    [dbo].[AdvertiserJobTemplateLogo] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AdvertiserJobTemplateLogoID] = PageIndex.[AdvertiserJobTemplateLogoID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[AdvertiserJobTemplateLogo] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserJobTemplateLogo table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLogoName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[AdvertiserJobTemplateLogo]
					(
					[AdvertiserID]
					,[JobLogoName]
					,[JobTemplateLogo]
					,[JobTemplateLogoUrl]
					)
				VALUES
					(
					@AdvertiserId
					,@JobLogoName
					,@JobTemplateLogo
					,@JobTemplateLogoUrl
					)
				
				-- Get the identity value
				SET @AdvertiserJobTemplateLogoId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserJobTemplateLogo table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AdvertiserJobTemplateLogoID],
					[AdvertiserID],
					[JobLogoName],
					[JobTemplateLogo],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[AdvertiserJobTemplateLogo]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserJobTemplateLogo table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserJobTemplateLogo]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_GetPagingByAdvertiserId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount
 FROM	AdvertiserJobTemplateLogo AdvertiserJobTemplateLogo WITH(NOLOCK)  
 INNER JOIN @tmpGetPagingByAdvertiserId GetPagingByAdvertiserId
		ON  AdvertiserJobTemplateLogo.AdvertiserJobTemplateLogoID = GetPagingByAdvertiserId.AdvertiserJobTemplateLogoID
 WHERE  GetPagingByAdvertiserId.RowNumber >= @PageStart  
 AND    GetPagingByAdvertiserId.RowNumber <= @PageEnd      
 ORDER BY GetPagingByAdvertiserId.RowNumber

END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobTemplateLogo table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserJobTemplateLogoID],
					[AdvertiserID],
					[JobLogoName],
					[JobTemplateLogo],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[AdvertiserJobTemplateLogo]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_GetByAdvertiserJobTemplateLogoId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserJobTemplateLogo table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AdvertiserJobTemplateLogoID],
					[AdvertiserID],
					[JobLogoName],
					[JobTemplateLogo],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[AdvertiserJobTemplateLogo]
				WHERE
					[AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserJobTemplateLogo table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLogoName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserJobTemplateLogoID]
	, [AdvertiserID]
	, [JobLogoName]
	, [JobTemplateLogo]
	, [JobTemplateLogoUrl]
    FROM
	[dbo].[AdvertiserJobTemplateLogo]
    WHERE 
	 ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId OR @AdvertiserJobTemplateLogoId IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([JobLogoName] = @JobLogoName OR @JobLogoName IS NULL)
	AND ([JobTemplateLogoUrl] = @JobTemplateLogoUrl OR @JobTemplateLogoUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserJobTemplateLogoID]
	, [AdvertiserID]
	, [JobLogoName]
	, [JobTemplateLogo]
	, [JobTemplateLogoUrl]
    FROM
	[dbo].[AdvertiserJobTemplateLogo]
    WHERE 
	 ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId AND @AdvertiserJobTemplateLogoId is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([JobLogoName] = @JobLogoName AND @JobLogoName is not null)
	OR ([JobTemplateLogoUrl] = @JobTemplateLogoUrl AND @JobTemplateLogoUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserJobTemplateLogo table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[AdvertiserJobTemplateLogo] WITH (ROWLOCK) 
				WHERE
					[AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserJobTemplateLogo_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserJobTemplateLogo table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLogoName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[AdvertiserJobTemplateLogo]
				SET
					[AdvertiserID] = @AdvertiserId
					,[JobLogoName] = @JobLogoName
					,[JobTemplateLogo] = @JobTemplateLogo
					,[JobTemplateLogoUrl] = @JobTemplateLogoUrl
				WHERE
[AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="SiteMappings_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteMappings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiteMappingID],
					[SiteID],
					[MasterSiteID]
				FROM
					[dbo].[SiteMappings]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="SiteMappings_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteMappings table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteMappingID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([SiteMappingID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [SiteMappingID]'
				SET @SQL = @SQL + ' FROM [dbo].[SiteMappings]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[SiteMappingID], O.[SiteID], O.[MasterSiteID]
				FROM
				    [dbo].[SiteMappings] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[SiteMappingID] = PageIndex.[SiteMappingID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteMappings]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="SiteMappings_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteMappings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteMappingId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SiteMappings]
					(
					[SiteID]
					,[MasterSiteID]
					)
				VALUES
					(
					@SiteId
					,@MasterSiteId
					)
				
				-- Get the identity value
				SET @SiteMappingId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteMappings_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteMappings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SiteMappings]
				SET
					[SiteID] = @SiteId
					,[MasterSiteID] = @MasterSiteId
				WHERE
[SiteMappingID] = @SiteMappingId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteMappings_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteMappings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SiteMappings] WITH (ROWLOCK) 
				WHERE
					[SiteMappingID] = @SiteMappingId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteMappings_GetByMasterSiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteMappings table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteMappingID],
					[SiteID],
					[MasterSiteID]
				FROM
					[dbo].[SiteMappings]
				WHERE
					[MasterSiteID] = @MasterSiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteMappings_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteMappings table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiteMappingID],
					[SiteID],
					[MasterSiteID]
				FROM
					[dbo].[SiteMappings]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="SiteMappings_GetBySiteMappingId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteMappings table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiteMappingID],
					[SiteID],
					[MasterSiteID]
				FROM
					[dbo].[SiteMappings]
				WHERE
					[SiteMappingID] = @SiteMappingId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="SiteMappings_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteMappings table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiteMappingID]
	, [SiteID]
	, [MasterSiteID]
    FROM
	[dbo].[SiteMappings]
    WHERE 
	 ([SiteMappingID] = @SiteMappingId OR @SiteMappingId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([MasterSiteID] = @MasterSiteId OR @MasterSiteId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiteMappingID]
	, [SiteID]
	, [MasterSiteID]
    FROM
	[dbo].[SiteMappings]
    WHERE 
	 ([SiteMappingID] = @SiteMappingId AND @SiteMappingId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([MasterSiteID] = @MasterSiteId AND @MasterSiteId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="SiteMappings_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteMappings table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [SiteMappingID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [SiteMappingID] )
				SELECT TOP {3} [SiteMappingID]
				FROM [dbo].[SiteMappings] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[SiteMappingID], O.[SiteID], O.[MasterSiteID]
				FROM
				    [dbo].[SiteMappings] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[SiteMappingID] = PageIndex.[SiteMappingID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SiteMappings] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="SiteMappings_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the SiteMappings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteMappingId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteId
					)
				
				-- Get the identity value
				SET @SiteMappingId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteMappings_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteMappings table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteID]
				FROM
					[dbo].[SiteMappings]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteMappings_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the SiteMappings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
terSiteID]
				FROM
					[dbo].[SiteMappings]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteMappings_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the SiteMappings table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SiteMappings]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteMappings_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the SiteMappings table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteMappings_GetBySiteMappingId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteMappings table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteID]
				FROM
					[dbo].[SiteMappings]
				WHERE
					[SiteMappingID] = @SiteMappingId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteMappings_GetByMasterSiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the SiteMappings table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteMappings_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the SiteMappings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MasterSiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
terSiteId
				WHERE
[SiteMappingID] = @SiteMappingId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="SiteMappings_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the SiteMappings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[SiteMappings] WITH (ROWLOCK) 
				WHERE
					[SiteMappingID] = @SiteMappingId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberFiles_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberFiles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberFileID],
					[MemberID],
					[MemberFileTypeID],
					[MemberFileName],
					[MemberFileSearchExtension],
					[MemberFileContent],
					[MemberFileTitle],
					[LastModifiedDate],
					[DocumentTypeID],
					[MemberFileUrl]
				FROM
					[dbo].[MemberFiles]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberFiles_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberFiles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberFileID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberFileID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberFileID]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberFiles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberFileID], O.[MemberID], O.[MemberFileTypeID], O.[MemberFileName], O.[MemberFileSearchExtension], O.[MemberFileContent], O.[MemberFileTitle], O.[LastModifiedDate], O.[DocumentTypeID], O.[MemberFileUrl]
				FROM
				    [dbo].[MemberFiles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberFileID] = PageIndex.[MemberFileID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberFiles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberFiles_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberFiles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberFileId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@MemberFileSearchExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault=""/>
				<parameter name="@MemberFileContent" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileTitle" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DocumentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberFiles]
					(
					[MemberID]
					,[MemberFileTypeID]
					,[MemberFileName]
					,[MemberFileSearchExtension]
					,[MemberFileContent]
					,[MemberFileTitle]
					,[LastModifiedDate]
					,[DocumentTypeID]
					,[MemberFileUrl]
					)
				VALUES
					(
					@MemberId
					,@MemberFileTypeId
					,@MemberFileName
					,@MemberFileSearchExtension
					,@MemberFileContent
					,@MemberFileTitle
					,@LastModifiedDate
					,@DocumentTypeId
					,@MemberFileUrl
					)
				
				-- Get the identity value
				SET @MemberFileId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberFiles_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberFiles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@MemberFileSearchExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault=""/>
				<parameter name="@MemberFileContent" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileTitle" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DocumentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberFileUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberFiles]
				SET
					[MemberID] = @MemberId
					,[MemberFileTypeID] = @MemberFileTypeId
					,[MemberFileName] = @MemberFileName
					,[MemberFileSearchExtension] = @MemberFileSearchExtension
					,[MemberFileContent] = @MemberFileContent
					,[MemberFileTitle] = @MemberFileTitle
					,[LastModifiedDate] = @LastModifiedDate
					,[DocumentTypeID] = @DocumentTypeId
					,[MemberFileUrl] = @MemberFileUrl
				WHERE
[MemberFileID] = @MemberFileId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberFiles_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberFiles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberFiles] WITH (ROWLOCK) 
				WHERE
					[MemberFileID] = @MemberFileId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberFiles_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberFiles table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberFileID],
					[MemberID],
					[MemberFileTypeID],
					[MemberFileName],
					[MemberFileSearchExtension],
					[MemberFileContent],
					[MemberFileTitle],
					[LastModifiedDate],
					[DocumentTypeID],
					[MemberFileUrl]
				FROM
					[dbo].[MemberFiles]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberFiles_GetByMemberFileTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberFiles table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberFileID],
					[MemberID],
					[MemberFileTypeID],
					[MemberFileName],
					[MemberFileSearchExtension],
					[MemberFileContent],
					[MemberFileTitle],
					[LastModifiedDate],
					[DocumentTypeID],
					[MemberFileUrl]
				FROM
					[dbo].[MemberFiles]
				WHERE
					[MemberFileTypeID] = @MemberFileTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberFiles_GetByMemberFileId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberFiles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberFileID],
					[MemberID],
					[MemberFileTypeID],
					[MemberFileName],
					[MemberFileSearchExtension],
					[MemberFileContent],
					[MemberFileTitle],
					[LastModifiedDate],
					[DocumentTypeID],
					[MemberFileUrl]
				FROM
					[dbo].[MemberFiles]
				WHERE
					[MemberFileID] = @MemberFileId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberFiles_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberFiles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@MemberFileSearchExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@MemberFileContent" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTitle" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DocumentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberFileID]
	, [MemberID]
	, [MemberFileTypeID]
	, [MemberFileName]
	, [MemberFileSearchExtension]
	, [MemberFileContent]
	, [MemberFileTitle]
	, [LastModifiedDate]
	, [DocumentTypeID]
	, [MemberFileUrl]
    FROM
	[dbo].[MemberFiles]
    WHERE 
	 ([MemberFileID] = @MemberFileId OR @MemberFileId IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([MemberFileTypeID] = @MemberFileTypeId OR @MemberFileTypeId IS NULL)
	AND ([MemberFileName] = @MemberFileName OR @MemberFileName IS NULL)
	AND ([MemberFileSearchExtension] = @MemberFileSearchExtension OR @MemberFileSearchExtension IS NULL)
	AND ([MemberFileTitle] = @MemberFileTitle OR @MemberFileTitle IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
	AND ([DocumentTypeID] = @DocumentTypeId OR @DocumentTypeId IS NULL)
	AND ([MemberFileUrl] = @MemberFileUrl OR @MemberFileUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberFileID]
	, [MemberID]
	, [MemberFileTypeID]
	, [MemberFileName]
	, [MemberFileSearchExtension]
	, [MemberFileContent]
	, [MemberFileTitle]
	, [LastModifiedDate]
	, [DocumentTypeID]
	, [MemberFileUrl]
    FROM
	[dbo].[MemberFiles]
    WHERE 
	 ([MemberFileID] = @MemberFileId AND @MemberFileId is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([MemberFileTypeID] = @MemberFileTypeId AND @MemberFileTypeId is not null)
	OR ([MemberFileName] = @MemberFileName AND @MemberFileName is not null)
	OR ([MemberFileSearchExtension] = @MemberFileSearchExtension AND @MemberFileSearchExtension is not null)
	OR ([MemberFileTitle] = @MemberFileTitle AND @MemberFileTitle is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	OR ([DocumentTypeID] = @DocumentTypeId AND @DocumentTypeId is not null)
	OR ([MemberFileUrl] = @MemberFileUrl AND @MemberFileUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberFiles_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberFiles table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberFileID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberFileID] )
				SELECT TOP {3} [MemberFileID]
				FROM [dbo].[MemberFiles] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberFileID], O.[MemberID], O.[MemberFileTypeID], O.[MemberFileName], O.[MemberFileSearchExtension], O.[MemberFileContent], O.[MemberFileTitle], O.[LastModifiedDate], O.[DocumentTypeID], O.[MemberFileUrl]
				FROM
				    [dbo].[MemberFiles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberFileID] = PageIndex.[MemberFileID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberFiles] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberFiles_GetByMemberFileId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberFiles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[DocumentTypeID],
					[MemberFileUrl]
				FROM
					[dbo].[MemberFiles]
				WHERE
					[MemberFileID] = @MemberFileId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberFiles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberFileId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@MemberFileSearchExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@MemberFileContent" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTitle" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DocumentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					,@DocumentTypeId
					,@MemberFileUrl
					)
				
				-- Get the identity value
				SET @MemberFileId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberFiles table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[DocumentTypeID],
					[MemberFileUrl]
				FROM
					[dbo].[MemberFiles]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberFiles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[DocumentTypeID],
					[MemberFileUrl]
				FROM
					[dbo].[MemberFiles]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberFiles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberFiles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberFiles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@MemberFileSearchExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@MemberFileContent" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTitle" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DocumentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					,[DocumentTypeID] = @DocumentTypeId
					,[MemberFileUrl] = @MemberFileUrl
				WHERE
[MemberFileID] = @MemberFileId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberFiles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@MemberFileSearchExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@MemberFileContent" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileTitle" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DocumentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	OR ([DocumentTypeID] = @DocumentTypeId AND @DocumentTypeId is not null)
	OR ([MemberFileUrl] = @MemberFileUrl AND @MemberFileUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberFiles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberFiles] WITH (ROWLOCK) 
				WHERE
					[MemberFileID] = @MemberFileId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_GetPagingByMemberId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount
 FROM   MemberFiles MemberFiles(NOLOCK)
 INNER JOIN @tmpGetPagingByMemberId GetPagingByMemberId 
 		ON MemberFiles.MemberFileID = GetPagingByMemberId.MemberFileID
 WHERE  GetPagingByMemberId.RowNumber >= @PageStart  
 AND    GetPagingByMemberId.RowNumber <= @PageEnd      
 ORDER BY GetPagingByMemberId.RowNumber

END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_GetByMemberIdMemberFileName"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberFileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[DocumentTypeID],
					[MemberFileUrl]
				FROM
					[dbo].[MemberFiles] (NOLOCK)
				WHERE
					[MemberID] = @MemberId
					AND [MemberFileName] = @MemberFileName
				SELECT @@ROWCOUNT
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberFiles_GetByMemberFileTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberFiles table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberFileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[DocumentTypeID],
					[MemberFileUrl]
				FROM
					[dbo].[MemberFiles]
				WHERE
					[MemberFileTypeID] = @MemberFileTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Files_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Files table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[FileID],
					[SiteID],
					[FolderID],
					[FileName],
					[FileSystemName],
					[FileTypeID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Files_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Files table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [FileID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([FileID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [FileID]'
				SET @SQL = @SQL + ' FROM [dbo].[Files]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[FileID], O.[SiteID], O.[FolderID], O.[FileName], O.[FileSystemName], O.[FileTypeID], O.[LastModified], O.[LastModifiedBy], O.[SourceID]
				FROM
				    [dbo].[Files] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[FileID] = PageIndex.[FileID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Files]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Files_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Files table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@FileSystemName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Files]
					(
					[SiteID]
					,[FolderID]
					,[FileName]
					,[FileSystemName]
					,[FileTypeID]
					,[LastModified]
					,[LastModifiedBy]
					,[SourceID]
					)
				VALUES
					(
					@SiteId
					,@FolderId
					,@FileName
					,@FileSystemName
					,@FileTypeId
					,@LastModified
					,@LastModifiedBy
					,@SourceId
					)
				
				-- Get the identity value
				SET @FileId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Files_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Files table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@FileSystemName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Files]
				SET
					[SiteID] = @SiteId
					,[FolderID] = @FolderId
					,[FileName] = @FileName
					,[FileSystemName] = @FileSystemName
					,[FileTypeID] = @FileTypeId
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
					,[SourceID] = @SourceId
				WHERE
[FileID] = @FileId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Files_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Files table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Files] WITH (ROWLOCK) 
				WHERE
					[FileID] = @FileId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Files_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[FileID],
					[SiteID],
					[FolderID],
					[FileName],
					[FileSystemName],
					[FileTypeID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Files_GetByFileTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[FileID],
					[SiteID],
					[FolderID],
					[FileName],
					[FileSystemName],
					[FileTypeID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[FileTypeID] = @FileTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Files_GetByFolderId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[FileID],
					[SiteID],
					[FolderID],
					[FileName],
					[FileSystemName],
					[FileTypeID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[FolderID] = @FolderId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Files_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[FileID],
					[SiteID],
					[FolderID],
					[FileName],
					[FileSystemName],
					[FileTypeID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Files_GetByFolderIdSiteIdFileName" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[FileID],
					[SiteID],
					[FolderID],
					[FileName],
					[FileSystemName],
					[FileTypeID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[FolderID] = @FolderId
					AND [SiteID] = @SiteId
					AND [FileName] = @FileName
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Files_GetByFileId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[FileID],
					[SiteID],
					[FolderID],
					[FileName],
					[FileSystemName],
					[FileTypeID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[FileID] = @FileId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Files_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Files table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@FileSystemName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [FileID]
	, [SiteID]
	, [FolderID]
	, [FileName]
	, [FileSystemName]
	, [FileTypeID]
	, [LastModified]
	, [LastModifiedBy]
	, [SourceID]
    FROM
	[dbo].[Files]
    WHERE 
	 ([FileID] = @FileId OR @FileId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([FolderID] = @FolderId OR @FolderId IS NULL)
	AND ([FileName] = @FileName OR @FileName IS NULL)
	AND ([FileSystemName] = @FileSystemName OR @FileSystemName IS NULL)
	AND ([FileTypeID] = @FileTypeId OR @FileTypeId IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [FileID]
	, [SiteID]
	, [FolderID]
	, [FileName]
	, [FileSystemName]
	, [FileTypeID]
	, [LastModified]
	, [LastModifiedBy]
	, [SourceID]
    FROM
	[dbo].[Files]
    WHERE 
	 ([FileID] = @FileId AND @FileId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([FolderID] = @FolderId AND @FolderId is not null)
	OR ([FileName] = @FileName AND @FileName is not null)
	OR ([FileSystemName] = @FileSystemName AND @FileSystemName is not null)
	OR ([FileTypeID] = @FileTypeId AND @FileTypeId is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Files_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Files table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [FileID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [FileID] )
				SELECT TOP {3} [FileID]
				FROM [dbo].[Files] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[FileID], O.[SiteID], O.[FolderID], O.[FileName], O.[FileSystemName], O.[FileTypeID], O.[LastModified], O.[LastModifiedBy], O.[SourceID]
				FROM
				    [dbo].[Files] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[FileID] = PageIndex.[FileID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Files] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Files_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Files table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@FileSystemName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,@SourceId
					)
				
				-- Get the identity value
				SET @FileId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_GetByFolderIdSiteIdFileName"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[FolderID] = @FolderId
					AND [SiteID] = @SiteId
					AND [FileName] = @FileName
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_GetByFileId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[FileID] = @FileId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Files table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_GetBySiteIDPageNameFileTypeID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy] 
	,Files.[SourceID]   
 FROM DynamicPageFiles (NOLOCK) DynamicPageFiles    
 INNER JOIN Files (NOLOCK) Files    
 ON DynamicPageFiles.FileID = Files.FileID    
 WHERE DynamicPageFiles.PageName = @PageName    
 AND DynamicPageFiles.SiteID = @SiteID    
  AND Files.[FileTypeID] = @FileTypeID   
End    
    
SET ANSI_NULLS ON    

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_GetByFolderId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[FolderID] = @FolderId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Files table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@FileSystemName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,[SourceID] = @SourceId
				WHERE
[FileID] = @FileId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Files table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@FileSystemName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Files table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Files] WITH (ROWLOCK) 
				WHERE
					[FileID] = @FileId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Files table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Files]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Files_GetByFileTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Files table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SourceID]
				FROM
					[dbo].[Files]
				WHERE
					[FileTypeID] = @FileTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="MemberCertificateMemberships_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberCertificateMemberships table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MemberCertificateMembershipID],
					[MemberID],
					[MemberCertificateMembershipName],
					[CertificationAuthority],
					[LicenseNumber],
					[CertificationURL],
					[StartMonth],
					[StartYear],
					[EndMonth],
					[EndYear],
					[DoesnotExpire],
					[LastModifiedDate]
				FROM
					[dbo].[MemberCertificateMemberships]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MemberCertificateMemberships_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberCertificateMemberships table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberCertificateMembershipID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([MemberCertificateMembershipID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [MemberCertificateMembershipID]'
				SET @SQL = @SQL + ' FROM [dbo].[MemberCertificateMemberships]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[MemberCertificateMembershipID], O.[MemberID], O.[MemberCertificateMembershipName], O.[CertificationAuthority], O.[LicenseNumber], O.[CertificationURL], O.[StartMonth], O.[StartYear], O.[EndMonth], O.[EndYear], O.[DoesnotExpire], O.[LastModifiedDate]
				FROM
				    [dbo].[MemberCertificateMemberships] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[MemberCertificateMembershipID] = PageIndex.[MemberCertificateMembershipID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberCertificateMemberships]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MemberCertificateMemberships_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberCertificateMemberships table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberCertificateMembershipName" type="nvarchar" direction="Input" size="600" precision="0" scale="0" param="(600)" nulldefault=""/>
				<parameter name="@CertificationAuthority" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LicenseNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CertificationUrl" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault=""/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DoesnotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MemberCertificateMemberships]
					(
					[MemberID]
					,[MemberCertificateMembershipName]
					,[CertificationAuthority]
					,[LicenseNumber]
					,[CertificationURL]
					,[StartMonth]
					,[StartYear]
					,[EndMonth]
					,[EndYear]
					,[DoesnotExpire]
					,[LastModifiedDate]
					)
				VALUES
					(
					@MemberId
					,@MemberCertificateMembershipName
					,@CertificationAuthority
					,@LicenseNumber
					,@CertificationUrl
					,@StartMonth
					,@StartYear
					,@EndMonth
					,@EndYear
					,@DoesnotExpire
					,@LastModifiedDate
					)
				
				-- Get the identity value
				SET @MemberCertificateMembershipId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberCertificateMemberships_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberCertificateMemberships table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberCertificateMembershipName" type="nvarchar" direction="Input" size="600" precision="0" scale="0" param="(600)" nulldefault=""/>
				<parameter name="@CertificationAuthority" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LicenseNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CertificationUrl" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault=""/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DoesnotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MemberCertificateMemberships]
				SET
					[MemberID] = @MemberId
					,[MemberCertificateMembershipName] = @MemberCertificateMembershipName
					,[CertificationAuthority] = @CertificationAuthority
					,[LicenseNumber] = @LicenseNumber
					,[CertificationURL] = @CertificationUrl
					,[StartMonth] = @StartMonth
					,[StartYear] = @StartYear
					,[EndMonth] = @EndMonth
					,[EndYear] = @EndYear
					,[DoesnotExpire] = @DoesnotExpire
					,[LastModifiedDate] = @LastModifiedDate
				WHERE
[MemberCertificateMembershipID] = @MemberCertificateMembershipId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberCertificateMemberships_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberCertificateMemberships table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MemberCertificateMemberships] WITH (ROWLOCK) 
				WHERE
					[MemberCertificateMembershipID] = @MemberCertificateMembershipId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberCertificateMemberships_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberCertificateMemberships table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[MemberCertificateMembershipID],
					[MemberID],
					[MemberCertificateMembershipName],
					[CertificationAuthority],
					[LicenseNumber],
					[CertificationURL],
					[StartMonth],
					[StartYear],
					[EndMonth],
					[EndYear],
					[DoesnotExpire],
					[LastModifiedDate]
				FROM
					[dbo].[MemberCertificateMemberships]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MemberCertificateMemberships_GetByMemberCertificateMembershipId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberCertificateMemberships table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MemberCertificateMembershipID],
					[MemberID],
					[MemberCertificateMembershipName],
					[CertificationAuthority],
					[LicenseNumber],
					[CertificationURL],
					[StartMonth],
					[StartYear],
					[EndMonth],
					[EndYear],
					[DoesnotExpire],
					[LastModifiedDate]
				FROM
					[dbo].[MemberCertificateMemberships]
				WHERE
					[MemberCertificateMembershipID] = @MemberCertificateMembershipId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MemberCertificateMemberships_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberCertificateMemberships table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberCertificateMembershipName" type="nvarchar" direction="Input" size="600" precision="0" scale="0" param="(600)" nulldefault="null"/>
				<parameter name="@CertificationAuthority" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LicenseNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CertificationUrl" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DoesnotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MemberCertificateMembershipID]
	, [MemberID]
	, [MemberCertificateMembershipName]
	, [CertificationAuthority]
	, [LicenseNumber]
	, [CertificationURL]
	, [StartMonth]
	, [StartYear]
	, [EndMonth]
	, [EndYear]
	, [DoesnotExpire]
	, [LastModifiedDate]
    FROM
	[dbo].[MemberCertificateMemberships]
    WHERE 
	 ([MemberCertificateMembershipID] = @MemberCertificateMembershipId OR @MemberCertificateMembershipId IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([MemberCertificateMembershipName] = @MemberCertificateMembershipName OR @MemberCertificateMembershipName IS NULL)
	AND ([CertificationAuthority] = @CertificationAuthority OR @CertificationAuthority IS NULL)
	AND ([LicenseNumber] = @LicenseNumber OR @LicenseNumber IS NULL)
	AND ([CertificationURL] = @CertificationUrl OR @CertificationUrl IS NULL)
	AND ([StartMonth] = @StartMonth OR @StartMonth IS NULL)
	AND ([StartYear] = @StartYear OR @StartYear IS NULL)
	AND ([EndMonth] = @EndMonth OR @EndMonth IS NULL)
	AND ([EndYear] = @EndYear OR @EndYear IS NULL)
	AND ([DoesnotExpire] = @DoesnotExpire OR @DoesnotExpire IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MemberCertificateMembershipID]
	, [MemberID]
	, [MemberCertificateMembershipName]
	, [CertificationAuthority]
	, [LicenseNumber]
	, [CertificationURL]
	, [StartMonth]
	, [StartYear]
	, [EndMonth]
	, [EndYear]
	, [DoesnotExpire]
	, [LastModifiedDate]
    FROM
	[dbo].[MemberCertificateMemberships]
    WHERE 
	 ([MemberCertificateMembershipID] = @MemberCertificateMembershipId AND @MemberCertificateMembershipId is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([MemberCertificateMembershipName] = @MemberCertificateMembershipName AND @MemberCertificateMembershipName is not null)
	OR ([CertificationAuthority] = @CertificationAuthority AND @CertificationAuthority is not null)
	OR ([LicenseNumber] = @LicenseNumber AND @LicenseNumber is not null)
	OR ([CertificationURL] = @CertificationUrl AND @CertificationUrl is not null)
	OR ([StartMonth] = @StartMonth AND @StartMonth is not null)
	OR ([StartYear] = @StartYear AND @StartYear is not null)
	OR ([EndMonth] = @EndMonth AND @EndMonth is not null)
	OR ([EndYear] = @EndYear AND @EndYear is not null)
	OR ([DoesnotExpire] = @DoesnotExpire AND @DoesnotExpire is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MemberCertificateMemberships_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberCertificateMemberships table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [MemberCertificateMembershipID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [MemberCertificateMembershipID] )
				SELECT TOP {3} [MemberCertificateMembershipID]
				FROM [dbo].[MemberCertificateMemberships] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[MemberCertificateMembershipID], O.[MemberID], O.[MemberCertificateMembershipName], O.[CertificationAuthority], O.[LicenseNumber], O.[CertificationURL], O.[StartMonth], O.[StartYear], O.[EndMonth], O.[EndYear], O.[DoesnotExpire], O.[LastModifiedDate]
				FROM
				    [dbo].[MemberCertificateMemberships] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[MemberCertificateMembershipID] = PageIndex.[MemberCertificateMembershipID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MemberCertificateMemberships] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="MemberCertificateMemberships_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the MemberCertificateMemberships table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberCertificateMembershipName" type="nvarchar" direction="Input" size="600" precision="0" scale="0" param="(600)" nulldefault="null"/>
				<parameter name="@CertificationAuthority" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LicenseNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CertificationUrl" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DoesnotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					)
				
				-- Get the identity value
				SET @MemberCertificateMembershipId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberCertificateMemberships_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberCertificateMemberships table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[MemberCertificateMemberships]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberCertificateMemberships_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the MemberCertificateMemberships table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[MemberCertificateMemberships]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberCertificateMemberships_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the MemberCertificateMemberships table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MemberCertificateMemberships]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberCertificateMemberships_GetByMemberCertificateMembershipId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the MemberCertificateMemberships table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[MemberCertificateMemberships]
				WHERE
					[MemberCertificateMembershipID] = @MemberCertificateMembershipId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberCertificateMemberships_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the MemberCertificateMemberships table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberCertificateMembershipName" type="nvarchar" direction="Input" size="600" precision="0" scale="0" param="(600)" nulldefault="null"/>
				<parameter name="@CertificationAuthority" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LicenseNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CertificationUrl" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DoesnotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberCertificateMemberships_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the MemberCertificateMemberships table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[MemberCertificateMemberships] WITH (ROWLOCK) 
				WHERE
					[MemberCertificateMembershipID] = @MemberCertificateMembershipId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="MemberCertificateMemberships_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the MemberCertificateMemberships table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberCertificateMembershipId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberCertificateMembershipName" type="nvarchar" direction="Input" size="600" precision="0" scale="0" param="(600)" nulldefault="null"/>
				<parameter name="@CertificationAuthority" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LicenseNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CertificationUrl" type="nvarchar" direction="Input" size="256" precision="0" scale="0" param="(256)" nulldefault="null"/>
				<parameter name="@StartMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EndYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DoesnotExpire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
				WHERE
[MemberCertificateMembershipID] = @MemberCertificateMembershipId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="CustomPayment_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the CustomPayment table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CustomPaymentID],
					[CustomPaymentGuid],
					[Name],
					[EmailAddress],
					[InvoiceNumber],
					[Amount],
					[Comments],
					[CreatedDate],
					[IpAddress],
					[Response],
					[SecurePay],
					[Paypal],
					[Paid],
					[PaymentNameOnCard],
					[PaymentCardNumber],
					[PaymentCCV],
					[PaymentExpiry],
					[PaymentType],
					[SiteID]
				FROM
					[dbo].[CustomPayment]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CustomPayment_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CustomPayment table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CustomPaymentID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([CustomPaymentID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [CustomPaymentID]'
				SET @SQL = @SQL + ' FROM [dbo].[CustomPayment]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[CustomPaymentID], O.[CustomPaymentGuid], O.[Name], O.[EmailAddress], O.[InvoiceNumber], O.[Amount], O.[Comments], O.[CreatedDate], O.[IpAddress], O.[Response], O.[SecurePay], O.[Paypal], O.[Paid], O.[PaymentNameOnCard], O.[PaymentCardNumber], O.[PaymentCCV], O.[PaymentExpiry], O.[PaymentType], O.[SiteID]
				FROM
				    [dbo].[CustomPayment] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[CustomPaymentID] = PageIndex.[CustomPaymentID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CustomPayment]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="CustomPayment_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the CustomPayment table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomPaymentId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomPaymentGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@EmailAddress" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@InvoiceNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Amount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@IpAddress" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@Response" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SecurePay" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Paypal" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Paid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PaymentNameOnCard" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@PaymentCardNumber" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PaymentCcv" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PaymentExpiry" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@PaymentType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[CustomPayment]
					(
					[CustomPaymentGuid]
					,[Name]
					,[EmailAddress]
					,[InvoiceNumber]
					,[Amount]
					,[Comments]
					,[CreatedDate]
					,[IpAddress]
					,[Response]
					,[SecurePay]
					,[Paypal]
					,[Paid]
					,[PaymentNameOnCard]
					,[PaymentCardNumber]
					,[PaymentCCV]
					,[PaymentExpiry]
					,[PaymentType]
					,[SiteID]
					)
				VALUES
					(
					@CustomPaymentGuid
					,@Name
					,@EmailAddress
					,@InvoiceNumber
					,@Amount
					,@Comments
					,@CreatedDate
					,@IpAddress
					,@Response
					,@SecurePay
					,@Paypal
					,@Paid
					,@PaymentNameOnCard
					,@PaymentCardNumber
					,@PaymentCcv
					,@PaymentExpiry
					,@PaymentType
					,@SiteId
					)
				
				-- Get the identity value
				SET @CustomPaymentId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomPayment_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the CustomPayment table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomPaymentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomPaymentGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@EmailAddress" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@InvoiceNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Amount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@IpAddress" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@Response" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SecurePay" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Paypal" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Paid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PaymentNameOnCard" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@PaymentCardNumber" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PaymentCcv" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PaymentExpiry" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@PaymentType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[CustomPayment]
				SET
					[CustomPaymentGuid] = @CustomPaymentGuid
					,[Name] = @Name
					,[EmailAddress] = @EmailAddress
					,[InvoiceNumber] = @InvoiceNumber
					,[Amount] = @Amount
					,[Comments] = @Comments
					,[CreatedDate] = @CreatedDate
					,[IpAddress] = @IpAddress
					,[Response] = @Response
					,[SecurePay] = @SecurePay
					,[Paypal] = @Paypal
					,[Paid] = @Paid
					,[PaymentNameOnCard] = @PaymentNameOnCard
					,[PaymentCardNumber] = @PaymentCardNumber
					,[PaymentCCV] = @PaymentCcv
					,[PaymentExpiry] = @PaymentExpiry
					,[PaymentType] = @PaymentType
					,[SiteID] = @SiteId
				WHERE
[CustomPaymentID] = @CustomPaymentId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomPayment_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the CustomPayment table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomPaymentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[CustomPayment] WITH (ROWLOCK) 
				WHERE
					[CustomPaymentID] = @CustomPaymentId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomPayment_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomPayment table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CustomPaymentID],
					[CustomPaymentGuid],
					[Name],
					[EmailAddress],
					[InvoiceNumber],
					[Amount],
					[Comments],
					[CreatedDate],
					[IpAddress],
					[Response],
					[SecurePay],
					[Paypal],
					[Paid],
					[PaymentNameOnCard],
					[PaymentCardNumber],
					[PaymentCCV],
					[PaymentExpiry],
					[PaymentType],
					[SiteID]
				FROM
					[dbo].[CustomPayment]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomPayment_GetByCustomPaymentId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomPayment table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomPaymentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CustomPaymentID],
					[CustomPaymentGuid],
					[Name],
					[EmailAddress],
					[InvoiceNumber],
					[Amount],
					[Comments],
					[CreatedDate],
					[IpAddress],
					[Response],
					[SecurePay],
					[Paypal],
					[Paid],
					[PaymentNameOnCard],
					[PaymentCardNumber],
					[PaymentCCV],
					[PaymentExpiry],
					[PaymentType],
					[SiteID]
				FROM
					[dbo].[CustomPayment]
				WHERE
					[CustomPaymentID] = @CustomPaymentId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="CustomPayment_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the CustomPayment table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomPaymentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomPaymentGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@InvoiceNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Amount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@IpAddress" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@Response" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SecurePay" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Paypal" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Paid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PaymentNameOnCard" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@PaymentCardNumber" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PaymentCcv" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PaymentExpiry" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@PaymentType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomPaymentID]
	, [CustomPaymentGuid]
	, [Name]
	, [EmailAddress]
	, [InvoiceNumber]
	, [Amount]
	, [Comments]
	, [CreatedDate]
	, [IpAddress]
	, [Response]
	, [SecurePay]
	, [Paypal]
	, [Paid]
	, [PaymentNameOnCard]
	, [PaymentCardNumber]
	, [PaymentCCV]
	, [PaymentExpiry]
	, [PaymentType]
	, [SiteID]
    FROM
	[dbo].[CustomPayment]
    WHERE 
	 ([CustomPaymentID] = @CustomPaymentId OR @CustomPaymentId IS NULL)
	AND ([CustomPaymentGuid] = @CustomPaymentGuid OR @CustomPaymentGuid IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([EmailAddress] = @EmailAddress OR @EmailAddress IS NULL)
	AND ([InvoiceNumber] = @InvoiceNumber OR @InvoiceNumber IS NULL)
	AND ([Amount] = @Amount OR @Amount IS NULL)
	AND ([Comments] = @Comments OR @Comments IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([IpAddress] = @IpAddress OR @IpAddress IS NULL)
	AND ([Response] = @Response OR @Response IS NULL)
	AND ([SecurePay] = @SecurePay OR @SecurePay IS NULL)
	AND ([Paypal] = @Paypal OR @Paypal IS NULL)
	AND ([Paid] = @Paid OR @Paid IS NULL)
	AND ([PaymentNameOnCard] = @PaymentNameOnCard OR @PaymentNameOnCard IS NULL)
	AND ([PaymentCardNumber] = @PaymentCardNumber OR @PaymentCardNumber IS NULL)
	AND ([PaymentCCV] = @PaymentCcv OR @PaymentCcv IS NULL)
	AND ([PaymentExpiry] = @PaymentExpiry OR @PaymentExpiry IS NULL)
	AND ([PaymentType] = @PaymentType OR @PaymentType IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomPaymentID]
	, [CustomPaymentGuid]
	, [Name]
	, [EmailAddress]
	, [InvoiceNumber]
	, [Amount]
	, [Comments]
	, [CreatedDate]
	, [IpAddress]
	, [Response]
	, [SecurePay]
	, [Paypal]
	, [Paid]
	, [PaymentNameOnCard]
	, [PaymentCardNumber]
	, [PaymentCCV]
	, [PaymentExpiry]
	, [PaymentType]
	, [SiteID]
    FROM
	[dbo].[CustomPayment]
    WHERE 
	 ([CustomPaymentID] = @CustomPaymentId AND @CustomPaymentId is not null)
	OR ([CustomPaymentGuid] = @CustomPaymentGuid AND @CustomPaymentGuid is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([EmailAddress] = @EmailAddress AND @EmailAddress is not null)
	OR ([InvoiceNumber] = @InvoiceNumber AND @InvoiceNumber is not null)
	OR ([Amount] = @Amount AND @Amount is not null)
	OR ([Comments] = @Comments AND @Comments is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([IpAddress] = @IpAddress AND @IpAddress is not null)
	OR ([Response] = @Response AND @Response is not null)
	OR ([SecurePay] = @SecurePay AND @SecurePay is not null)
	OR ([Paypal] = @Paypal AND @Paypal is not null)
	OR ([Paid] = @Paid AND @Paid is not null)
	OR ([PaymentNameOnCard] = @PaymentNameOnCard AND @PaymentNameOnCard is not null)
	OR ([PaymentCardNumber] = @PaymentCardNumber AND @PaymentCardNumber is not null)
	OR ([PaymentCCV] = @PaymentCcv AND @PaymentCcv is not null)
	OR ([PaymentExpiry] = @PaymentExpiry AND @PaymentExpiry is not null)
	OR ([PaymentType] = @PaymentType AND @PaymentType is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="CustomPayment_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CustomPayment table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CustomPaymentID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [CustomPaymentID] )
				SELECT TOP {3} [CustomPaymentID]
				FROM [dbo].[CustomPayment] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[CustomPaymentID], O.[CustomPaymentGuid], O.[Name], O.[EmailAddress], O.[InvoiceNumber], O.[Amount], O.[Comments], O.[CreatedDate], O.[IpAddress], O.[Response], O.[SecurePay], O.[Paypal], O.[Paid], O.[PaymentNameOnCard], O.[PaymentCardNumber], O.[PaymentCCV], O.[PaymentExpiry], O.[PaymentType], O.[SiteID]
				FROM
				    [dbo].[CustomPayment] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[CustomPaymentID] = PageIndex.[CustomPaymentID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[CustomPayment] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="CustomPayment_CustomGetOrderDetails"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateFrom" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateTo" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@IsPaid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PaymentType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
	SET @SQL = @SQL + ' FROM [dbo].[CustomPayment]'
	IF LEN(@WhereClause) > 0
	BEGIN
		SET @SQL = @SQL + ' WHERE ' + @WhereClause
	END
	EXEC sp_executesql @SQL

END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomPayment_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the CustomPayment table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomPaymentId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomPaymentGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@InvoiceNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Amount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@IpAddress" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@Response" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SecurePay" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Paypal" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Paid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PaymentNameOnCard" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@PaymentCardNumber" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PaymentCcv" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PaymentExpiry" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@PaymentType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[CustomPayment]
					(
					[CustomPaymentGuid]
					,[Name]
					,[EmailAddress]
					,[InvoiceNumber]
					,[Amount]
					,[Comments]
					,[CreatedDate]
					,[IpAddress]
					,[Response]
					,[SecurePay]
					,[Paypal]
					,[Paid]
					,[PaymentNameOnCard]
					,[PaymentCardNumber]
					,[PaymentCCV]
					,[PaymentExpiry]
					,[PaymentType]
					,[SiteID]
					)
				VALUES
					(
					@CustomPaymentGuid
					,@Name
					,@EmailAddress
					,@InvoiceNumber
					,@Amount
					,@Comments
					,@CreatedDate
					,@IpAddress
					,@Response
					,@SecurePay
					,@Paypal
					,@Paid
					,@PaymentNameOnCard
					,@PaymentCardNumber
					,@PaymentCcv
					,@PaymentExpiry
					,@PaymentType
					,@SiteId
					)
				
				-- Get the identity value
				SET @CustomPaymentId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomPayment_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomPayment table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[CustomPaymentID],
					[CustomPaymentGuid],
					[Name],
					[EmailAddress],
					[InvoiceNumber],
					[Amount],
					[Comments],
					[CreatedDate],
					[IpAddress],
					[Response],
					[SecurePay],
					[Paypal],
					[Paid],
					[PaymentNameOnCard],
					[PaymentCardNumber],
					[PaymentCCV],
					[PaymentExpiry],
					[PaymentType],
					[SiteID]
				FROM
					[dbo].[CustomPayment]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomPayment_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the CustomPayment table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[CustomPaymentID],
					[CustomPaymentGuid],
					[Name],
					[EmailAddress],
					[InvoiceNumber],
					[Amount],
					[Comments],
					[CreatedDate],
					[IpAddress],
					[Response],
					[SecurePay],
					[Paypal],
					[Paid],
					[PaymentNameOnCard],
					[PaymentCardNumber],
					[PaymentCCV],
					[PaymentExpiry],
					[PaymentType],
					[SiteID]
				FROM
					[dbo].[CustomPayment]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomPayment_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CustomPayment table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CustomPayment]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomPayment_GetByCustomPaymentId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomPayment table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomPaymentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[CustomPaymentID],
					[CustomPaymentGuid],
					[Name],
					[EmailAddress],
					[InvoiceNumber],
					[Amount],
					[Comments],
					[CreatedDate],
					[IpAddress],
					[Response],
					[SecurePay],
					[Paypal],
					[Paid],
					[PaymentNameOnCard],
					[PaymentCardNumber],
					[PaymentCCV],
					[PaymentExpiry],
					[PaymentType],
					[SiteID]
				FROM
					[dbo].[CustomPayment]
				WHERE
					[CustomPaymentID] = @CustomPaymentId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomPayment_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the CustomPayment table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomPaymentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomPaymentGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@InvoiceNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Amount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@IpAddress" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@Response" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SecurePay" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Paypal" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Paid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PaymentNameOnCard" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@PaymentCardNumber" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PaymentCcv" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PaymentExpiry" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@PaymentType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomPaymentID]
	, [CustomPaymentGuid]
	, [Name]
	, [EmailAddress]
	, [InvoiceNumber]
	, [Amount]
	, [Comments]
	, [CreatedDate]
	, [IpAddress]
	, [Response]
	, [SecurePay]
	, [Paypal]
	, [Paid]
	, [PaymentNameOnCard]
	, [PaymentCardNumber]
	, [PaymentCCV]
	, [PaymentExpiry]
	, [PaymentType]
	, [SiteID]
    FROM
	[dbo].[CustomPayment]
    WHERE 
	 ([CustomPaymentID] = @CustomPaymentId OR @CustomPaymentId IS NULL)
	AND ([CustomPaymentGuid] = @CustomPaymentGuid OR @CustomPaymentGuid IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([EmailAddress] = @EmailAddress OR @EmailAddress IS NULL)
	AND ([InvoiceNumber] = @InvoiceNumber OR @InvoiceNumber IS NULL)
	AND ([Amount] = @Amount OR @Amount IS NULL)
	AND ([Comments] = @Comments OR @Comments IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([IpAddress] = @IpAddress OR @IpAddress IS NULL)
	AND ([Response] = @Response OR @Response IS NULL)
	AND ([SecurePay] = @SecurePay OR @SecurePay IS NULL)
	AND ([Paypal] = @Paypal OR @Paypal IS NULL)
	AND ([Paid] = @Paid OR @Paid IS NULL)
	AND ([PaymentNameOnCard] = @PaymentNameOnCard OR @PaymentNameOnCard IS NULL)
	AND ([PaymentCardNumber] = @PaymentCardNumber OR @PaymentCardNumber IS NULL)
	AND ([PaymentCCV] = @PaymentCcv OR @PaymentCcv IS NULL)
	AND ([PaymentExpiry] = @PaymentExpiry OR @PaymentExpiry IS NULL)
	AND ([PaymentType] = @PaymentType OR @PaymentType IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomPaymentID]
	, [CustomPaymentGuid]
	, [Name]
	, [EmailAddress]
	, [InvoiceNumber]
	, [Amount]
	, [Comments]
	, [CreatedDate]
	, [IpAddress]
	, [Response]
	, [SecurePay]
	, [Paypal]
	, [Paid]
	, [PaymentNameOnCard]
	, [PaymentCardNumber]
	, [PaymentCCV]
	, [PaymentExpiry]
	, [PaymentType]
	, [SiteID]
    FROM
	[dbo].[CustomPayment]
    WHERE 
	 ([CustomPaymentID] = @CustomPaymentId AND @CustomPaymentId is not null)
	OR ([CustomPaymentGuid] = @CustomPaymentGuid AND @CustomPaymentGuid is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([EmailAddress] = @EmailAddress AND @EmailAddress is not null)
	OR ([InvoiceNumber] = @InvoiceNumber AND @InvoiceNumber is not null)
	OR ([Amount] = @Amount AND @Amount is not null)
	OR ([Comments] = @Comments AND @Comments is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([IpAddress] = @IpAddress AND @IpAddress is not null)
	OR ([Response] = @Response AND @Response is not null)
	OR ([SecurePay] = @SecurePay AND @SecurePay is not null)
	OR ([Paypal] = @Paypal AND @Paypal is not null)
	OR ([Paid] = @Paid AND @Paid is not null)
	OR ([PaymentNameOnCard] = @PaymentNameOnCard AND @PaymentNameOnCard is not null)
	OR ([PaymentCardNumber] = @PaymentCardNumber AND @PaymentCardNumber is not null)
	OR ([PaymentCCV] = @PaymentCcv AND @PaymentCcv is not null)
	OR ([PaymentExpiry] = @PaymentExpiry AND @PaymentExpiry is not null)
	OR ([PaymentType] = @PaymentType AND @PaymentType is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomPayment_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the CustomPayment table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomPaymentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[CustomPayment] WITH (ROWLOCK) 
				WHERE
					[CustomPaymentID] = @CustomPaymentId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomPayment_CustomGetByGuid"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@CustomPaymentGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
SELECT	CustomPaymentID,
		CustomPaymentGuid,
		Name,
		EmailAddress,
		InvoiceNumber,
		Amount,
		Comments,
		CreatedDate,
		IpAddress,
		Response,
		SecurePay,
		Paypal,
		Paid,
		PaymentNameOnCard,
		PaymentCardNumber,
		PaymentCCV,
		PaymentExpiry,
		PaymentType
FROM CustomPayment WITH (NOLOCK)
WHERE CustomPaymentGuid = @CustomPaymentGuid

END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomPayment_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the CustomPayment table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomPaymentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomPaymentGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@InvoiceNumber" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Amount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Comments" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@IpAddress" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@Response" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SecurePay" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Paypal" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Paid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PaymentNameOnCard" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@PaymentCardNumber" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PaymentCcv" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PaymentExpiry" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@PaymentType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[CustomPayment]
				SET
					[CustomPaymentGuid] = @CustomPaymentGuid
					,[Name] = @Name
					,[EmailAddress] = @EmailAddress
					,[InvoiceNumber] = @InvoiceNumber
					,[Amount] = @Amount
					,[Comments] = @Comments
					,[CreatedDate] = @CreatedDate
					,[IpAddress] = @IpAddress
					,[Response] = @Response
					,[SecurePay] = @SecurePay
					,[Paypal] = @Paypal
					,[Paid] = @Paid
					,[PaymentNameOnCard] = @PaymentNameOnCard
					,[PaymentCardNumber] = @PaymentCardNumber
					,[PaymentCCV] = @PaymentCcv
					,[PaymentExpiry] = @PaymentExpiry
					,[PaymentType] = @PaymentType
					,[SiteID] = @SiteId
				WHERE
[CustomPaymentID] = @CustomPaymentId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Currencies_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Currencies table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CurrencyID],
					[CurrencySymbol]
				FROM
					[dbo].[Currencies]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Currencies_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Currencies table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CurrencyID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([CurrencyID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [CurrencyID]'
				SET @SQL = @SQL + ' FROM [dbo].[Currencies]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[CurrencyID], O.[CurrencySymbol]
				FROM
				    [dbo].[Currencies] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[CurrencyID] = PageIndex.[CurrencyID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Currencies]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Currencies_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Currencies table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Currencies]
					(
					[CurrencySymbol]
					)
				VALUES
					(
					@CurrencySymbol
					)
				
				-- Get the identity value
				SET @CurrencyId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Currencies_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Currencies table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Currencies]
				SET
					[CurrencySymbol] = @CurrencySymbol
				WHERE
[CurrencyID] = @CurrencyId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Currencies_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Currencies table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Currencies] WITH (ROWLOCK) 
				WHERE
					[CurrencyID] = @CurrencyId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Currencies_GetByCurrencyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Currencies table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CurrencyID],
					[CurrencySymbol]
				FROM
					[dbo].[Currencies]
				WHERE
					[CurrencyID] = @CurrencyId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Currencies_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Currencies table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CurrencyID]
	, [CurrencySymbol]
    FROM
	[dbo].[Currencies]
    WHERE 
	 ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([CurrencySymbol] = @CurrencySymbol OR @CurrencySymbol IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CurrencyID]
	, [CurrencySymbol]
    FROM
	[dbo].[Currencies]
    WHERE 
	 ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([CurrencySymbol] = @CurrencySymbol AND @CurrencySymbol is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Currencies_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Currencies table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CurrencyID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [CurrencyID] )
				SELECT TOP {3} [CurrencyID]
				FROM [dbo].[Currencies] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[CurrencyID], O.[CurrencySymbol]
				FROM
				    [dbo].[Currencies] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[CurrencyID] = PageIndex.[CurrencyID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Currencies] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Currencies_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Currencies table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Currencies]
					(
					[CurrencySymbol]
					)
				VALUES
					(
					@CurrencySymbol
					)
				
				-- Get the identity value
				SET @CurrencyId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Currencies_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Currencies table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[CurrencyID],
					[CurrencySymbol]
				FROM
					[dbo].[Currencies]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Currencies_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Currencies table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Currencies]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Currencies_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Currencies table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Currencies]
				SET
					[CurrencySymbol] = @CurrencySymbol
				WHERE
[CurrencyID] = @CurrencyId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Currencies_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Currencies table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="6" precision="0" scale="0" param="(6)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CurrencyID]
	, [CurrencySymbol]
    FROM
	[dbo].[Currencies]
    WHERE 
	 ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([CurrencySymbol] = @CurrencySymbol OR @CurrencySymbol IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CurrencyID]
	, [CurrencySymbol]
    FROM
	[dbo].[Currencies]
    WHERE 
	 ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([CurrencySymbol] = @CurrencySymbol AND @CurrencySymbol is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Currencies_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Currencies table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Currencies] WITH (ROWLOCK) 
				WHERE
					[CurrencyID] = @CurrencyId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Currencies_GetBySiteIdCustom"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
		Currencies.[CurrencyID],
		Currencies.[CurrencySymbol]
	FROM
		[dbo].[Currencies] (NOLOCK)
	INNER JOIN [dbo].[SiteCurrencies] (NOLOCK) ON Currencies.CurrencyID = SiteCurrencies.CurrencyID
	WHERE
		[SiteCurrencies].SiteID = @SiteID

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Currencies_GetByCurrencyId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Currencies table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[CurrencyID],
					[CurrencySymbol]
				FROM
					[dbo].[Currencies]
				WHERE
					[CurrencyID] = @CurrencyId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Enquiries_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Enquiries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[EnquiryID],
					[SiteID],
					[Name],
					[Email],
					[ContactPhone],
					[Content],
					[Date],
					[IpAddress]
				FROM
					[dbo].[Enquiries]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Enquiries_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Enquiries table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [EnquiryID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([EnquiryID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [EnquiryID]'
				SET @SQL = @SQL + ' FROM [dbo].[Enquiries]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[EnquiryID], O.[SiteID], O.[Name], O.[Email], O.[ContactPhone], O.[Content], O.[Date], O.[IpAddress]
				FROM
				    [dbo].[Enquiries] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[EnquiryID] = PageIndex.[EnquiryID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Enquiries]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Enquiries_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Enquiries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EnquiryId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@ContactPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Date" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@IpAddress" type="varchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Enquiries]
					(
					[SiteID]
					,[Name]
					,[Email]
					,[ContactPhone]
					,[Content]
					,[Date]
					,[IpAddress]
					)
				VALUES
					(
					@SiteId
					,@Name
					,@Email
					,@ContactPhone
					,@Content
					,@Date
					,@IpAddress
					)
				
				-- Get the identity value
				SET @EnquiryId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Enquiries_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Enquiries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EnquiryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@ContactPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Date" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@IpAddress" type="varchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Enquiries]
				SET
					[SiteID] = @SiteId
					,[Name] = @Name
					,[Email] = @Email
					,[ContactPhone] = @ContactPhone
					,[Content] = @Content
					,[Date] = @Date
					,[IpAddress] = @IpAddress
				WHERE
[EnquiryID] = @EnquiryId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Enquiries_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Enquiries table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EnquiryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Enquiries] WITH (ROWLOCK) 
				WHERE
					[EnquiryID] = @EnquiryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Enquiries_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Enquiries table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[EnquiryID],
					[SiteID],
					[Name],
					[Email],
					[ContactPhone],
					[Content],
					[Date],
					[IpAddress]
				FROM
					[dbo].[Enquiries]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Enquiries_GetByEnquiryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Enquiries table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EnquiryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[EnquiryID],
					[SiteID],
					[Name],
					[Email],
					[ContactPhone],
					[Content],
					[Date],
					[IpAddress]
				FROM
					[dbo].[Enquiries]
				WHERE
					[EnquiryID] = @EnquiryId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Enquiries_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Enquiries table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnquiryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ContactPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Date" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@IpAddress" type="varchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EnquiryID]
	, [SiteID]
	, [Name]
	, [Email]
	, [ContactPhone]
	, [Content]
	, [Date]
	, [IpAddress]
    FROM
	[dbo].[Enquiries]
    WHERE 
	 ([EnquiryID] = @EnquiryId OR @EnquiryId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([ContactPhone] = @ContactPhone OR @ContactPhone IS NULL)
	AND ([Date] = @Date OR @Date IS NULL)
	AND ([IpAddress] = @IpAddress OR @IpAddress IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EnquiryID]
	, [SiteID]
	, [Name]
	, [Email]
	, [ContactPhone]
	, [Content]
	, [Date]
	, [IpAddress]
    FROM
	[dbo].[Enquiries]
    WHERE 
	 ([EnquiryID] = @EnquiryId AND @EnquiryId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([ContactPhone] = @ContactPhone AND @ContactPhone is not null)
	OR ([Date] = @Date AND @Date is not null)
	OR ([IpAddress] = @IpAddress AND @IpAddress is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Enquiries_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Enquiries table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [EnquiryID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [EnquiryID] )
				SELECT TOP {3} [EnquiryID]
				FROM [dbo].[Enquiries] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[EnquiryID], O.[SiteID], O.[Name], O.[Email], O.[ContactPhone], O.[Content], O.[Date], O.[IpAddress]
				FROM
				    [dbo].[Enquiries] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[EnquiryID] = PageIndex.[EnquiryID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Enquiries] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Enquiries_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Enquiries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EnquiryId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ContactPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Date" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@IpAddress" type="varchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Enquiries]
					(
					[SiteID]
					,[Name]
					,[Email]
					,[ContactPhone]
					,[Content]
					,[Date]
					,[IpAddress]
					)
				VALUES
					(
					@SiteId
					,@Name
					,@Email
					,@ContactPhone
					,@Content
					,@Date
					,@IpAddress
					)
				
				-- Get the identity value
				SET @EnquiryId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Enquiries_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Enquiries table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[EnquiryID],
					[SiteID],
					[Name],
					[Email],
					[ContactPhone],
					[Content],
					[Date],
					[IpAddress]
				FROM
					[dbo].[Enquiries]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Enquiries_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Enquiries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[EnquiryID],
					[SiteID],
					[Name],
					[Email],
					[ContactPhone],
					[Content],
					[Date],
					[IpAddress]
				FROM
					[dbo].[Enquiries]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Enquiries_GetByEnquiryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Enquiries table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EnquiryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[EnquiryID],
					[SiteID],
					[Name],
					[Email],
					[ContactPhone],
					[Content],
					[Date],
					[IpAddress]
				FROM
					[dbo].[Enquiries]
				WHERE
					[EnquiryID] = @EnquiryId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Enquiries_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Enquiries table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnquiryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ContactPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Date" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@IpAddress" type="varchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EnquiryID]
	, [SiteID]
	, [Name]
	, [Email]
	, [ContactPhone]
	, [Content]
	, [Date]
	, [IpAddress]
    FROM
	[dbo].[Enquiries]
    WHERE 
	 ([EnquiryID] = @EnquiryId OR @EnquiryId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([ContactPhone] = @ContactPhone OR @ContactPhone IS NULL)
	AND ([Date] = @Date OR @Date IS NULL)
	AND ([IpAddress] = @IpAddress OR @IpAddress IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EnquiryID]
	, [SiteID]
	, [Name]
	, [Email]
	, [ContactPhone]
	, [Content]
	, [Date]
	, [IpAddress]
    FROM
	[dbo].[Enquiries]
    WHERE 
	 ([EnquiryID] = @EnquiryId AND @EnquiryId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([ContactPhone] = @ContactPhone AND @ContactPhone is not null)
	OR ([Date] = @Date AND @Date is not null)
	OR ([IpAddress] = @IpAddress AND @IpAddress is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Enquiries_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Enquiries table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Enquiries]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Enquiries_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Enquiries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EnquiryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ContactPhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Date" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@IpAddress" type="varchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Enquiries]
				SET
					[SiteID] = @SiteId
					,[Name] = @Name
					,[Email] = @Email
					,[ContactPhone] = @ContactPhone
					,[Content] = @Content
					,[Date] = @Date
					,[IpAddress] = @IpAddress
				WHERE
[EnquiryID] = @EnquiryId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Enquiries_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Enquiries table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EnquiryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Enquiries] WITH (ROWLOCK) 
				WHERE
					[EnquiryID] = @EnquiryId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the CustomWidgetCSSSelector table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CustomWidgetCSSSelectorID],
					[SiteID],
					[CustomWidgetCSSSelectorName],
					[CustomWidgetCSSSelectorClassName],
					[Active],
					[ModifiedDate],
					[ModifiedBy],
					[SourceID]
				FROM
					[dbo].[CustomWidgetCSSSelector]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CustomWidgetCSSSelector_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CustomWidgetCSSSelector table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CustomWidgetCSSSelectorID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([CustomWidgetCSSSelectorID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [CustomWidgetCSSSelectorID]'
				SET @SQL = @SQL + ' FROM [dbo].[CustomWidgetCSSSelector]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[CustomWidgetCSSSelectorID], O.[SiteID], O.[CustomWidgetCSSSelectorName], O.[CustomWidgetCSSSelectorClassName], O.[Active], O.[ModifiedDate], O.[ModifiedBy], O.[SourceID]
				FROM
				    [dbo].[CustomWidgetCSSSelector] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[CustomWidgetCSSSelectorID] = PageIndex.[CustomWidgetCSSSelectorID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CustomWidgetCSSSelector]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the CustomWidgetCSSSelector table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetCssSelectorName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CustomWidgetCssSelectorClassName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[CustomWidgetCSSSelector]
					(
					[SiteID]
					,[CustomWidgetCSSSelectorName]
					,[CustomWidgetCSSSelectorClassName]
					,[Active]
					,[ModifiedDate]
					,[ModifiedBy]
					,[SourceID]
					)
				VALUES
					(
					@SiteId
					,@CustomWidgetCssSelectorName
					,@CustomWidgetCssSelectorClassName
					,@Active
					,@ModifiedDate
					,@ModifiedBy
					,@SourceId
					)
				
				-- Get the identity value
				SET @CustomWidgetCssSelectorId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the CustomWidgetCSSSelector table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetCssSelectorName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CustomWidgetCssSelectorClassName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[CustomWidgetCSSSelector]
				SET
					[SiteID] = @SiteId
					,[CustomWidgetCSSSelectorName] = @CustomWidgetCssSelectorName
					,[CustomWidgetCSSSelectorClassName] = @CustomWidgetCssSelectorClassName
					,[Active] = @Active
					,[ModifiedDate] = @ModifiedDate
					,[ModifiedBy] = @ModifiedBy
					,[SourceID] = @SourceId
				WHERE
[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the CustomWidgetCSSSelector table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[CustomWidgetCSSSelector] WITH (ROWLOCK) 
				WHERE
					[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomWidgetCSSSelector_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidgetCSSSelector table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CustomWidgetCSSSelectorID],
					[SiteID],
					[CustomWidgetCSSSelectorName],
					[CustomWidgetCSSSelectorClassName],
					[Active],
					[ModifiedDate],
					[ModifiedBy],
					[SourceID]
				FROM
					[dbo].[CustomWidgetCSSSelector]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomWidgetCSSSelector_GetByCustomWidgetCssSelectorId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidgetCSSSelector table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CustomWidgetCSSSelectorID],
					[SiteID],
					[CustomWidgetCSSSelectorName],
					[CustomWidgetCSSSelectorClassName],
					[Active],
					[ModifiedDate],
					[ModifiedBy],
					[SourceID]
				FROM
					[dbo].[CustomWidgetCSSSelector]
				WHERE
					[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the CustomWidgetCSSSelector table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorClassName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomWidgetCSSSelectorID]
	, [SiteID]
	, [CustomWidgetCSSSelectorName]
	, [CustomWidgetCSSSelectorClassName]
	, [Active]
	, [ModifiedDate]
	, [ModifiedBy]
	, [SourceID]
    FROM
	[dbo].[CustomWidgetCSSSelector]
    WHERE 
	 ([CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId OR @CustomWidgetCssSelectorId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([CustomWidgetCSSSelectorName] = @CustomWidgetCssSelectorName OR @CustomWidgetCssSelectorName IS NULL)
	AND ([CustomWidgetCSSSelectorClassName] = @CustomWidgetCssSelectorClassName OR @CustomWidgetCssSelectorClassName IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
	AND ([ModifiedBy] = @ModifiedBy OR @ModifiedBy IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomWidgetCSSSelectorID]
	, [SiteID]
	, [CustomWidgetCSSSelectorName]
	, [CustomWidgetCSSSelectorClassName]
	, [Active]
	, [ModifiedDate]
	, [ModifiedBy]
	, [SourceID]
    FROM
	[dbo].[CustomWidgetCSSSelector]
    WHERE 
	 ([CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId AND @CustomWidgetCssSelectorId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([CustomWidgetCSSSelectorName] = @CustomWidgetCssSelectorName AND @CustomWidgetCssSelectorName is not null)
	OR ([CustomWidgetCSSSelectorClassName] = @CustomWidgetCssSelectorClassName AND @CustomWidgetCssSelectorClassName is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	OR ([ModifiedBy] = @ModifiedBy AND @ModifiedBy is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CustomWidgetCSSSelector table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CustomWidgetCSSSelectorID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [CustomWidgetCSSSelectorID] )
				SELECT TOP {3} [CustomWidgetCSSSelectorID]
				FROM [dbo].[CustomWidgetCSSSelector] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[CustomWidgetCSSSelectorID], O.[SiteID], O.[CustomWidgetCSSSelectorName], O.[CustomWidgetCSSSelectorClassName], O.[Active], O.[ModifiedDate], O.[ModifiedBy], O.[SourceID]
				FROM
				    [dbo].[CustomWidgetCSSSelector] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[CustomWidgetCSSSelectorID] = PageIndex.[CustomWidgetCSSSelectorID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[CustomWidgetCSSSelector] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the CustomWidgetCSSSelector table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorClassName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
sName
					,@Active
					,@ModifiedDate
					,@ModifiedBy
					,@SourceId
					)
				
				-- Get the identity value
				SET @CustomWidgetCssSelectorId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidgetCSSSelector_GetByCustomWidgetCssSelectorId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidgetCSSSelector table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
sName],
					[Active],
					[ModifiedDate],
					[ModifiedBy],
					[SourceID]
				FROM
					[dbo].[CustomWidgetCSSSelector]
				WHERE
					[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidgetCSSSelector_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidgetCSSSelector table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
sName],
					[Active],
					[ModifiedDate],
					[ModifiedBy],
					[SourceID]
				FROM
					[dbo].[CustomWidgetCSSSelector]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the CustomWidgetCSSSelector table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
sName],
					[Active],
					[ModifiedDate],
					[ModifiedBy],
					[SourceID]
				FROM
					[dbo].[CustomWidgetCSSSelector]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidgetCSSSelector_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CustomWidgetCSSSelector table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CustomWidgetCSSSelector]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the CustomWidgetCSSSelector table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorClassName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
sName
					,[Active] = @Active
					,[ModifiedDate] = @ModifiedDate
					,[ModifiedBy] = @ModifiedBy
					,[SourceID] = @SourceId
				WHERE
[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the CustomWidgetCSSSelector table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorClassName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
sName is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	OR ([ModifiedBy] = @ModifiedBy AND @ModifiedBy is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidgetCSSSelector_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the CustomWidgetCSSSelector table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[CustomWidgetCSSSelector] WITH (ROWLOCK) 
				WHERE
					[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidgetCSSSelector_CustomGetBySiteID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
COUNT 
FROM @tblSelector
END  

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Folders_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Folders table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[FolderID],
					[ParentFolderID],
					[SiteID],
					[FolderName],
					[SourceID]
				FROM
					[dbo].[Folders]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Folders_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Folders table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [FolderID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([FolderID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [FolderID]'
				SET @SQL = @SQL + ' FROM [dbo].[Folders]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[FolderID], O.[ParentFolderID], O.[SiteID], O.[FolderName], O.[SourceID]
				FROM
				    [dbo].[Folders] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[FolderID] = PageIndex.[FolderID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Folders]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Folders_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Folders table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentFolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FolderName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Folders]
					(
					[ParentFolderID]
					,[SiteID]
					,[FolderName]
					,[SourceID]
					)
				VALUES
					(
					@ParentFolderId
					,@SiteId
					,@FolderName
					,@SourceId
					)
				
				-- Get the identity value
				SET @FolderId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Folders_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Folders table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentFolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FolderName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Folders]
				SET
					[ParentFolderID] = @ParentFolderId
					,[SiteID] = @SiteId
					,[FolderName] = @FolderName
					,[SourceID] = @SourceId
				WHERE
[FolderID] = @FolderId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Folders_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Folders table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Folders] WITH (ROWLOCK) 
				WHERE
					[FolderID] = @FolderId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Folders_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Folders table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[FolderID],
					[ParentFolderID],
					[SiteID],
					[FolderName],
					[SourceID]
				FROM
					[dbo].[Folders]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Folders_GetBySiteIdFolderIdParentFolderId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Folders table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentFolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[FolderID],
					[ParentFolderID],
					[SiteID],
					[FolderName],
					[SourceID]
				FROM
					[dbo].[Folders]
				WHERE
					[SiteID] = @SiteId
					AND [FolderID] = @FolderId
					AND [ParentFolderID] = @ParentFolderId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Folders_GetByFolderId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Folders table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[FolderID],
					[ParentFolderID],
					[SiteID],
					[FolderName],
					[SourceID]
				FROM
					[dbo].[Folders]
				WHERE
					[FolderID] = @FolderId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Folders_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Folders table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentFolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [FolderID]
	, [ParentFolderID]
	, [SiteID]
	, [FolderName]
	, [SourceID]
    FROM
	[dbo].[Folders]
    WHERE 
	 ([FolderID] = @FolderId OR @FolderId IS NULL)
	AND ([ParentFolderID] = @ParentFolderId OR @ParentFolderId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([FolderName] = @FolderName OR @FolderName IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [FolderID]
	, [ParentFolderID]
	, [SiteID]
	, [FolderName]
	, [SourceID]
    FROM
	[dbo].[Folders]
    WHERE 
	 ([FolderID] = @FolderId AND @FolderId is not null)
	OR ([ParentFolderID] = @ParentFolderId AND @ParentFolderId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([FolderName] = @FolderName AND @FolderName is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Folders_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Folders table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [FolderID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [FolderID] )
				SELECT TOP {3} [FolderID]
				FROM [dbo].[Folders] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[FolderID], O.[ParentFolderID], O.[SiteID], O.[FolderName], O.[SourceID]
				FROM
				    [dbo].[Folders] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[FolderID] = PageIndex.[FolderID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Folders] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Folders_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Folders table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentFolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Folders]
					(
					[ParentFolderID]
					,[SiteID]
					,[FolderName]
					,[SourceID]
					)
				VALUES
					(
					@ParentFolderId
					,@SiteId
					,@FolderName
					,@SourceId
					)
				
				-- Get the identity value
				SET @FolderId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Folders_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Folders table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[FolderID],
					[ParentFolderID],
					[SiteID],
					[FolderName],
					[SourceID]
				FROM
					[dbo].[Folders]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Folders_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Folders table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[FolderID],
					[ParentFolderID],
					[SiteID],
					[FolderName],
					[SourceID]
				FROM
					[dbo].[Folders]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Folders_GetByFolderId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Folders table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[FolderID],
					[ParentFolderID],
					[SiteID],
					[FolderName],
					[SourceID]
				FROM
					[dbo].[Folders]
				WHERE
					[FolderID] = @FolderId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Folders_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Folders table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentFolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [FolderID]
	, [ParentFolderID]
	, [SiteID]
	, [FolderName]
	, [SourceID]
    FROM
	[dbo].[Folders]
    WHERE 
	 ([FolderID] = @FolderId OR @FolderId IS NULL)
	AND ([ParentFolderID] = @ParentFolderId OR @ParentFolderId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([FolderName] = @FolderName OR @FolderName IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [FolderID]
	, [ParentFolderID]
	, [SiteID]
	, [FolderName]
	, [SourceID]
    FROM
	[dbo].[Folders]
    WHERE 
	 ([FolderID] = @FolderId AND @FolderId is not null)
	OR ([ParentFolderID] = @ParentFolderId AND @ParentFolderId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([FolderName] = @FolderName AND @FolderName is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Folders_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Folders table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Folders]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Folders_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Folders table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentFolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Folders]
				SET
					[ParentFolderID] = @ParentFolderId
					,[SiteID] = @SiteId
					,[FolderName] = @FolderName
					,[SourceID] = @SourceId
				WHERE
[FolderID] = @FolderId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Folders_GetBySiteIdFolderIdParentFolderId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Folders table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentFolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[FolderID],
					[ParentFolderID],
					[SiteID],
					[FolderName],
					[SourceID]
				FROM
					[dbo].[Folders]
				WHERE
					[SiteID] = @SiteId
					AND [FolderID] = @FolderId
					AND [ParentFolderID] = @ParentFolderId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Folders_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Folders table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FolderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Folders] WITH (ROWLOCK) 
				WHERE
					[FolderID] = @FolderId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="GlobalSettings_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the GlobalSettings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="GlobalSettings_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the GlobalSettings table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [GlobalSettingID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([GlobalSettingID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [GlobalSettingID]'
				SET @SQL = @SQL + ' FROM [dbo].[GlobalSettings]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[GlobalSettingID], O.[SiteID], O.[DefaultLanguageID], O.[DefaultDynamicPageID], O.[PublicJobsSearch], O.[PublicMembersSearch], O.[PublicCompaniesSearch], O.[PublicSponsoredAdverts], O.[PrivateJobs], O.[PrivateMembers], O.[PrivateCompanies], O.[LastModifiedBy], O.[LastModified], O.[PageTitlePrefix], O.[PageTitleSuffix], O.[DefaultTitle], O.[HomeTitle], O.[DefaultDescription], O.[HomeDescription], O.[DefaultKeywords], O.[HomeKeywords], O.[ShowFaceBookButton], O.[UseAdvertiserFilter], O.[MerchantID], O.[ShowTwitterButton], O.[ShowJobAlertButton], O.[ShowLinkedInButton], O.[SiteFavIconID], O.[SiteDocType], O.[CurrencySymbol], O.[FtpFolderLocation], O.[MetaTags], O.[SystemMetaTags], O.[MemberRegistrationNotification], O.[LinkedInAPI], O.[LinkedInLogo], O.[LinkedInCompanyID], O.[LinkedInEmail], O.[PrivacySettings], O.[WWWRedirect], O.[AllowAdvertiser], O.[LinkedInAPISecret], O.[GoogleClientID], O.[GoogleClientSecret], O.[FacebookAppID], O.[FacebookAppSecret], O.[LinkedInButtonSize], O.[DefaultCountryID], O.[PayPalUsername], O.[PayPalPassword], O.[PayPalSignature], O.[SecurePayMerchantID], O.[SecurePayPassword], O.[UsingSSL], O.[UseCustomProfessionRole], O.[GenerateJobXML], O.[IsPrivateSite], O.[PrivateRedirectUrl], O.[EnableJobCustomQuestionnaire], O.[JobApplicationTypeID], O.[JobScreeningProcess], O.[AdvertiserApprovalProcess], O.[SiteType], O.[EnableSSL], O.[GST], O.[GSTLabel], O.[NumberOfPremiumJobs], O.[PremiumJobDays], O.[DisplayPremiumJobsOnResults], O.[JobExpiryNotification], O.[CurrencyID], O.[PayPalClientID], O.[PayPalClientSecret], O.[PaypalUser], O.[PaypalProPassword], O.[PaypalVendor], O.[PaypalPartner], O.[InvoiceSiteInfo], O.[InvoiceSiteFooter], O.[EnableTermsAndConditions], O.[DefaultEmailLanguageId], O.[GoogleTagManager], O.[GoogleAnalytics], O.[GoogleWebMaster], O.[EnablePeopleSearch], O.[GlobalDateFormat], O.[TimeZone], O.[GlobalFolder], O.[EnableScreeningQuestions]
				FROM
				    [dbo].[GlobalSettings] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[GlobalSettingID] = PageIndex.[GlobalSettingID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[GlobalSettings]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="GlobalSettings_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the GlobalSettings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GlobalSettingId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicMembersSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicCompaniesSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicSponsoredAdverts" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PrivateJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PrivateMembers" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PrivateCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PageTitlePrefix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@PageTitleSuffix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@DefaultTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@HomeTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@DefaultDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@HomeDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@DefaultKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@HomeKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@ShowFaceBookButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UseAdvertiserFilter" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MerchantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowTwitterButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowJobAlertButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowLinkedInButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteFavIconId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteDocType" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@FtpFolderLocation" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaTags" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SystemMetaTags" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault=""/>
				<parameter name="@MemberRegistrationNotification" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInApi" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInCompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PrivacySettings" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault=""/>
				<parameter name="@WwwRedirect" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AllowAdvertiser" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInApiSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@GoogleClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@GoogleClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FacebookAppId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FacebookAppSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInButtonSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PayPalUsername" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PayPalPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PayPalSignature" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@SecurePayMerchantId" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@SecurePayPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@UsingSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UseCustomProfessionRole" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@GenerateJobXml" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@IsPrivateSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PrivateRedirectUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EnableJobCustomQuestionnaire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobScreeningProcess" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserApprovalProcess" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EnableSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Gst" type="decimal" direction="Input" size="5" precision="5" scale="2" param="(5, 2)" nulldefault=""/>
				<parameter name="@GstLabel" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@NumberOfPremiumJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PremiumJobDays" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayPremiumJobsOnResults" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PayPalClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PayPalClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PaypalUser" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PaypalProPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PaypalVendor" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PaypalPartner" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@InvoiceSiteInfo" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@InvoiceSiteFooter" type="nvarchar" direction="Input" size="1500" precision="0" scale="0" param="(1500)" nulldefault=""/>
				<parameter name="@EnableTermsAndConditions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultEmailLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GoogleTagManager" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@GoogleAnalytics" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@GoogleWebMaster" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@EnablePeopleSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalDateFormat" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@TimeZone" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@GlobalFolder" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EnableScreeningQuestions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[GlobalSettings]
					(
					[SiteID]
					,[DefaultLanguageID]
					,[DefaultDynamicPageID]
					,[PublicJobsSearch]
					,[PublicMembersSearch]
					,[PublicCompaniesSearch]
					,[PublicSponsoredAdverts]
					,[PrivateJobs]
					,[PrivateMembers]
					,[PrivateCompanies]
					,[LastModifiedBy]
					,[LastModified]
					,[PageTitlePrefix]
					,[PageTitleSuffix]
					,[DefaultTitle]
					,[HomeTitle]
					,[DefaultDescription]
					,[HomeDescription]
					,[DefaultKeywords]
					,[HomeKeywords]
					,[ShowFaceBookButton]
					,[UseAdvertiserFilter]
					,[MerchantID]
					,[ShowTwitterButton]
					,[ShowJobAlertButton]
					,[ShowLinkedInButton]
					,[SiteFavIconID]
					,[SiteDocType]
					,[CurrencySymbol]
					,[FtpFolderLocation]
					,[MetaTags]
					,[SystemMetaTags]
					,[MemberRegistrationNotification]
					,[LinkedInAPI]
					,[LinkedInLogo]
					,[LinkedInCompanyID]
					,[LinkedInEmail]
					,[PrivacySettings]
					,[WWWRedirect]
					,[AllowAdvertiser]
					,[LinkedInAPISecret]
					,[GoogleClientID]
					,[GoogleClientSecret]
					,[FacebookAppID]
					,[FacebookAppSecret]
					,[LinkedInButtonSize]
					,[DefaultCountryID]
					,[PayPalUsername]
					,[PayPalPassword]
					,[PayPalSignature]
					,[SecurePayMerchantID]
					,[SecurePayPassword]
					,[UsingSSL]
					,[UseCustomProfessionRole]
					,[GenerateJobXML]
					,[IsPrivateSite]
					,[PrivateRedirectUrl]
					,[EnableJobCustomQuestionnaire]
					,[JobApplicationTypeID]
					,[JobScreeningProcess]
					,[AdvertiserApprovalProcess]
					,[SiteType]
					,[EnableSSL]
					,[GST]
					,[GSTLabel]
					,[NumberOfPremiumJobs]
					,[PremiumJobDays]
					,[DisplayPremiumJobsOnResults]
					,[JobExpiryNotification]
					,[CurrencyID]
					,[PayPalClientID]
					,[PayPalClientSecret]
					,[PaypalUser]
					,[PaypalProPassword]
					,[PaypalVendor]
					,[PaypalPartner]
					,[InvoiceSiteInfo]
					,[InvoiceSiteFooter]
					,[EnableTermsAndConditions]
					,[DefaultEmailLanguageId]
					,[GoogleTagManager]
					,[GoogleAnalytics]
					,[GoogleWebMaster]
					,[EnablePeopleSearch]
					,[GlobalDateFormat]
					,[TimeZone]
					,[GlobalFolder]
					,[EnableScreeningQuestions]
					)
				VALUES
					(
					@SiteId
					,@DefaultLanguageId
					,@DefaultDynamicPageId
					,@PublicJobsSearch
					,@PublicMembersSearch
					,@PublicCompaniesSearch
					,@PublicSponsoredAdverts
					,@PrivateJobs
					,@PrivateMembers
					,@PrivateCompanies
					,@LastModifiedBy
					,@LastModified
					,@PageTitlePrefix
					,@PageTitleSuffix
					,@DefaultTitle
					,@HomeTitle
					,@DefaultDescription
					,@HomeDescription
					,@DefaultKeywords
					,@HomeKeywords
					,@ShowFaceBookButton
					,@UseAdvertiserFilter
					,@MerchantId
					,@ShowTwitterButton
					,@ShowJobAlertButton
					,@ShowLinkedInButton
					,@SiteFavIconId
					,@SiteDocType
					,@CurrencySymbol
					,@FtpFolderLocation
					,@MetaTags
					,@SystemMetaTags
					,@MemberRegistrationNotification
					,@LinkedInApi
					,@LinkedInLogo
					,@LinkedInCompanyId
					,@LinkedInEmail
					,@PrivacySettings
					,@WwwRedirect
					,@AllowAdvertiser
					,@LinkedInApiSecret
					,@GoogleClientId
					,@GoogleClientSecret
					,@FacebookAppId
					,@FacebookAppSecret
					,@LinkedInButtonSize
					,@DefaultCountryId
					,@PayPalUsername
					,@PayPalPassword
					,@PayPalSignature
					,@SecurePayMerchantId
					,@SecurePayPassword
					,@UsingSsl
					,@UseCustomProfessionRole
					,@GenerateJobXml
					,@IsPrivateSite
					,@PrivateRedirectUrl
					,@EnableJobCustomQuestionnaire
					,@JobApplicationTypeId
					,@JobScreeningProcess
					,@AdvertiserApprovalProcess
					,@SiteType
					,@EnableSsl
					,@Gst
					,@GstLabel
					,@NumberOfPremiumJobs
					,@PremiumJobDays
					,@DisplayPremiumJobsOnResults
					,@JobExpiryNotification
					,@CurrencyId
					,@PayPalClientId
					,@PayPalClientSecret
					,@PaypalUser
					,@PaypalProPassword
					,@PaypalVendor
					,@PaypalPartner
					,@InvoiceSiteInfo
					,@InvoiceSiteFooter
					,@EnableTermsAndConditions
					,@DefaultEmailLanguageId
					,@GoogleTagManager
					,@GoogleAnalytics
					,@GoogleWebMaster
					,@EnablePeopleSearch
					,@GlobalDateFormat
					,@TimeZone
					,@GlobalFolder
					,@EnableScreeningQuestions
					)
				
				-- Get the identity value
				SET @GlobalSettingId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the GlobalSettings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicMembersSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicCompaniesSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicSponsoredAdverts" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PrivateJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PrivateMembers" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PrivateCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PageTitlePrefix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@PageTitleSuffix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@DefaultTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@HomeTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@DefaultDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@HomeDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@DefaultKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@HomeKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@ShowFaceBookButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UseAdvertiserFilter" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MerchantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowTwitterButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowJobAlertButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowLinkedInButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteFavIconId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteDocType" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@FtpFolderLocation" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MetaTags" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SystemMetaTags" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault=""/>
				<parameter name="@MemberRegistrationNotification" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInApi" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInCompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PrivacySettings" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault=""/>
				<parameter name="@WwwRedirect" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AllowAdvertiser" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInApiSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@GoogleClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@GoogleClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FacebookAppId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FacebookAppSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInButtonSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PayPalUsername" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PayPalPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@PayPalSignature" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@SecurePayMerchantId" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@SecurePayPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@UsingSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UseCustomProfessionRole" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@GenerateJobXml" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@IsPrivateSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PrivateRedirectUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EnableJobCustomQuestionnaire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobScreeningProcess" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserApprovalProcess" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EnableSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Gst" type="decimal" direction="Input" size="5" precision="5" scale="2" param="(5, 2)" nulldefault=""/>
				<parameter name="@GstLabel" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@NumberOfPremiumJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PremiumJobDays" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayPremiumJobsOnResults" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PayPalClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PayPalClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PaypalUser" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PaypalProPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PaypalVendor" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PaypalPartner" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@InvoiceSiteInfo" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@InvoiceSiteFooter" type="nvarchar" direction="Input" size="1500" precision="0" scale="0" param="(1500)" nulldefault=""/>
				<parameter name="@EnableTermsAndConditions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultEmailLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GoogleTagManager" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@GoogleAnalytics" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@GoogleWebMaster" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@EnablePeopleSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalDateFormat" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@TimeZone" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@GlobalFolder" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EnableScreeningQuestions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[GlobalSettings]
				SET
					[SiteID] = @SiteId
					,[DefaultLanguageID] = @DefaultLanguageId
					,[DefaultDynamicPageID] = @DefaultDynamicPageId
					,[PublicJobsSearch] = @PublicJobsSearch
					,[PublicMembersSearch] = @PublicMembersSearch
					,[PublicCompaniesSearch] = @PublicCompaniesSearch
					,[PublicSponsoredAdverts] = @PublicSponsoredAdverts
					,[PrivateJobs] = @PrivateJobs
					,[PrivateMembers] = @PrivateMembers
					,[PrivateCompanies] = @PrivateCompanies
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[PageTitlePrefix] = @PageTitlePrefix
					,[PageTitleSuffix] = @PageTitleSuffix
					,[DefaultTitle] = @DefaultTitle
					,[HomeTitle] = @HomeTitle
					,[DefaultDescription] = @DefaultDescription
					,[HomeDescription] = @HomeDescription
					,[DefaultKeywords] = @DefaultKeywords
					,[HomeKeywords] = @HomeKeywords
					,[ShowFaceBookButton] = @ShowFaceBookButton
					,[UseAdvertiserFilter] = @UseAdvertiserFilter
					,[MerchantID] = @MerchantId
					,[ShowTwitterButton] = @ShowTwitterButton
					,[ShowJobAlertButton] = @ShowJobAlertButton
					,[ShowLinkedInButton] = @ShowLinkedInButton
					,[SiteFavIconID] = @SiteFavIconId
					,[SiteDocType] = @SiteDocType
					,[CurrencySymbol] = @CurrencySymbol
					,[FtpFolderLocation] = @FtpFolderLocation
					,[MetaTags] = @MetaTags
					,[SystemMetaTags] = @SystemMetaTags
					,[MemberRegistrationNotification] = @MemberRegistrationNotification
					,[LinkedInAPI] = @LinkedInApi
					,[LinkedInLogo] = @LinkedInLogo
					,[LinkedInCompanyID] = @LinkedInCompanyId
					,[LinkedInEmail] = @LinkedInEmail
					,[PrivacySettings] = @PrivacySettings
					,[WWWRedirect] = @WwwRedirect
					,[AllowAdvertiser] = @AllowAdvertiser
					,[LinkedInAPISecret] = @LinkedInApiSecret
					,[GoogleClientID] = @GoogleClientId
					,[GoogleClientSecret] = @GoogleClientSecret
					,[FacebookAppID] = @FacebookAppId
					,[FacebookAppSecret] = @FacebookAppSecret
					,[LinkedInButtonSize] = @LinkedInButtonSize
					,[DefaultCountryID] = @DefaultCountryId
					,[PayPalUsername] = @PayPalUsername
					,[PayPalPassword] = @PayPalPassword
					,[PayPalSignature] = @PayPalSignature
					,[SecurePayMerchantID] = @SecurePayMerchantId
					,[SecurePayPassword] = @SecurePayPassword
					,[UsingSSL] = @UsingSsl
					,[UseCustomProfessionRole] = @UseCustomProfessionRole
					,[GenerateJobXML] = @GenerateJobXml
					,[IsPrivateSite] = @IsPrivateSite
					,[PrivateRedirectUrl] = @PrivateRedirectUrl
					,[EnableJobCustomQuestionnaire] = @EnableJobCustomQuestionnaire
					,[JobApplicationTypeID] = @JobApplicationTypeId
					,[JobScreeningProcess] = @JobScreeningProcess
					,[AdvertiserApprovalProcess] = @AdvertiserApprovalProcess
					,[SiteType] = @SiteType
					,[EnableSSL] = @EnableSsl
					,[GST] = @Gst
					,[GSTLabel] = @GstLabel
					,[NumberOfPremiumJobs] = @NumberOfPremiumJobs
					,[PremiumJobDays] = @PremiumJobDays
					,[DisplayPremiumJobsOnResults] = @DisplayPremiumJobsOnResults
					,[JobExpiryNotification] = @JobExpiryNotification
					,[CurrencyID] = @CurrencyId
					,[PayPalClientID] = @PayPalClientId
					,[PayPalClientSecret] = @PayPalClientSecret
					,[PaypalUser] = @PaypalUser
					,[PaypalProPassword] = @PaypalProPassword
					,[PaypalVendor] = @PaypalVendor
					,[PaypalPartner] = @PaypalPartner
					,[InvoiceSiteInfo] = @InvoiceSiteInfo
					,[InvoiceSiteFooter] = @InvoiceSiteFooter
					,[EnableTermsAndConditions] = @EnableTermsAndConditions
					,[DefaultEmailLanguageId] = @DefaultEmailLanguageId
					,[GoogleTagManager] = @GoogleTagManager
					,[GoogleAnalytics] = @GoogleAnalytics
					,[GoogleWebMaster] = @GoogleWebMaster
					,[EnablePeopleSearch] = @EnablePeopleSearch
					,[GlobalDateFormat] = @GlobalDateFormat
					,[TimeZone] = @TimeZone
					,[GlobalFolder] = @GlobalFolder
					,[EnableScreeningQuestions] = @EnableScreeningQuestions
				WHERE
[GlobalSettingID] = @GlobalSettingId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the GlobalSettings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[GlobalSettings] WITH (ROWLOCK) 
				WHERE
					[GlobalSettingID] = @GlobalSettingId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetByDefaultCountryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[DefaultCountryID] = @DefaultCountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetByDefaultLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[DefaultLanguageID] = @DefaultLanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetByDefaultDynamicPageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DefaultDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[DefaultDynamicPageID] = @DefaultDynamicPageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetBySiteFavIconId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteFavIconId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteFavIconID] = @SiteFavIconId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetBySiteIdGlobalSettingId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteID] = @SiteId
					AND [GlobalSettingID] = @GlobalSettingId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetBySiteIdPublicJobsSearch" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteID] = @SiteId
					AND [PublicJobsSearch] = @PublicJobsSearch
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetBySiteIdUseAdvertiserFilter" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UseAdvertiserFilter" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteID] = @SiteId
					AND [UseAdvertiserFilter] = @UseAdvertiserFilter
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetByPublicJobsSearchPrivateJobsSiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PrivateJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[PublicJobsSearch] = @PublicJobsSearch
					AND [PrivateJobs] = @PrivateJobs
					AND [SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_GetByGlobalSettingId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[GlobalSettingID],
					[SiteID],
					[DefaultLanguageID],
					[DefaultDynamicPageID],
					[PublicJobsSearch],
					[PublicMembersSearch],
					[PublicCompaniesSearch],
					[PublicSponsoredAdverts],
					[PrivateJobs],
					[PrivateMembers],
					[PrivateCompanies],
					[LastModifiedBy],
					[LastModified],
					[PageTitlePrefix],
					[PageTitleSuffix],
					[DefaultTitle],
					[HomeTitle],
					[DefaultDescription],
					[HomeDescription],
					[DefaultKeywords],
					[HomeKeywords],
					[ShowFaceBookButton],
					[UseAdvertiserFilter],
					[MerchantID],
					[ShowTwitterButton],
					[ShowJobAlertButton],
					[ShowLinkedInButton],
					[SiteFavIconID],
					[SiteDocType],
					[CurrencySymbol],
					[FtpFolderLocation],
					[MetaTags],
					[SystemMetaTags],
					[MemberRegistrationNotification],
					[LinkedInAPI],
					[LinkedInLogo],
					[LinkedInCompanyID],
					[LinkedInEmail],
					[PrivacySettings],
					[WWWRedirect],
					[AllowAdvertiser],
					[LinkedInAPISecret],
					[GoogleClientID],
					[GoogleClientSecret],
					[FacebookAppID],
					[FacebookAppSecret],
					[LinkedInButtonSize],
					[DefaultCountryID],
					[PayPalUsername],
					[PayPalPassword],
					[PayPalSignature],
					[SecurePayMerchantID],
					[SecurePayPassword],
					[UsingSSL],
					[UseCustomProfessionRole],
					[GenerateJobXML],
					[IsPrivateSite],
					[PrivateRedirectUrl],
					[EnableJobCustomQuestionnaire],
					[JobApplicationTypeID],
					[JobScreeningProcess],
					[AdvertiserApprovalProcess],
					[SiteType],
					[EnableSSL],
					[GST],
					[GSTLabel],
					[NumberOfPremiumJobs],
					[PremiumJobDays],
					[DisplayPremiumJobsOnResults],
					[JobExpiryNotification],
					[CurrencyID],
					[PayPalClientID],
					[PayPalClientSecret],
					[PaypalUser],
					[PaypalProPassword],
					[PaypalVendor],
					[PaypalPartner],
					[InvoiceSiteInfo],
					[InvoiceSiteFooter],
					[EnableTermsAndConditions],
					[DefaultEmailLanguageId],
					[GoogleTagManager],
					[GoogleAnalytics],
					[GoogleWebMaster],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[GlobalSettingID] = @GlobalSettingId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="GlobalSettings_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the GlobalSettings table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicMembersSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicCompaniesSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicSponsoredAdverts" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateMembers" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PageTitlePrefix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageTitleSuffix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@ShowFaceBookButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseAdvertiserFilter" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MerchantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowTwitterButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowJobAlertButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLinkedInButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteFavIconId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteDocType" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@FtpFolderLocation" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaTags" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SystemMetaTags" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@MemberRegistrationNotification" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInApi" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInCompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PrivacySettings" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@WwwRedirect" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AllowAdvertiser" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInApiSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GoogleClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GoogleClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FacebookAppId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FacebookAppSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInButtonSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PayPalUsername" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PayPalPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PayPalSignature" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SecurePayMerchantId" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SecurePayPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@UsingSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseCustomProfessionRole" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GenerateJobXml" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPrivateSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateRedirectUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EnableJobCustomQuestionnaire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobScreeningProcess" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserApprovalProcess" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnableSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Gst" type="decimal" direction="Input" size="5" precision="5" scale="2" param="(5, 2)" nulldefault="null"/>
				<parameter name="@GstLabel" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NumberOfPremiumJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PremiumJobDays" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayPremiumJobsOnResults" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PayPalClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PayPalClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalUser" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalProPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalVendor" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalPartner" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@InvoiceSiteInfo" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@InvoiceSiteFooter" type="nvarchar" direction="Input" size="1500" precision="0" scale="0" param="(1500)" nulldefault="null"/>
				<parameter name="@EnableTermsAndConditions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultEmailLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GoogleTagManager" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@GoogleAnalytics" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@GoogleWebMaster" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@EnablePeopleSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalDateFormat" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@TimeZone" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalFolder" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EnableScreeningQuestions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [GlobalSettingID]
	, [SiteID]
	, [DefaultLanguageID]
	, [DefaultDynamicPageID]
	, [PublicJobsSearch]
	, [PublicMembersSearch]
	, [PublicCompaniesSearch]
	, [PublicSponsoredAdverts]
	, [PrivateJobs]
	, [PrivateMembers]
	, [PrivateCompanies]
	, [LastModifiedBy]
	, [LastModified]
	, [PageTitlePrefix]
	, [PageTitleSuffix]
	, [DefaultTitle]
	, [HomeTitle]
	, [DefaultDescription]
	, [HomeDescription]
	, [DefaultKeywords]
	, [HomeKeywords]
	, [ShowFaceBookButton]
	, [UseAdvertiserFilter]
	, [MerchantID]
	, [ShowTwitterButton]
	, [ShowJobAlertButton]
	, [ShowLinkedInButton]
	, [SiteFavIconID]
	, [SiteDocType]
	, [CurrencySymbol]
	, [FtpFolderLocation]
	, [MetaTags]
	, [SystemMetaTags]
	, [MemberRegistrationNotification]
	, [LinkedInAPI]
	, [LinkedInLogo]
	, [LinkedInCompanyID]
	, [LinkedInEmail]
	, [PrivacySettings]
	, [WWWRedirect]
	, [AllowAdvertiser]
	, [LinkedInAPISecret]
	, [GoogleClientID]
	, [GoogleClientSecret]
	, [FacebookAppID]
	, [FacebookAppSecret]
	, [LinkedInButtonSize]
	, [DefaultCountryID]
	, [PayPalUsername]
	, [PayPalPassword]
	, [PayPalSignature]
	, [SecurePayMerchantID]
	, [SecurePayPassword]
	, [UsingSSL]
	, [UseCustomProfessionRole]
	, [GenerateJobXML]
	, [IsPrivateSite]
	, [PrivateRedirectUrl]
	, [EnableJobCustomQuestionnaire]
	, [JobApplicationTypeID]
	, [JobScreeningProcess]
	, [AdvertiserApprovalProcess]
	, [SiteType]
	, [EnableSSL]
	, [GST]
	, [GSTLabel]
	, [NumberOfPremiumJobs]
	, [PremiumJobDays]
	, [DisplayPremiumJobsOnResults]
	, [JobExpiryNotification]
	, [CurrencyID]
	, [PayPalClientID]
	, [PayPalClientSecret]
	, [PaypalUser]
	, [PaypalProPassword]
	, [PaypalVendor]
	, [PaypalPartner]
	, [InvoiceSiteInfo]
	, [InvoiceSiteFooter]
	, [EnableTermsAndConditions]
	, [DefaultEmailLanguageId]
	, [GoogleTagManager]
	, [GoogleAnalytics]
	, [GoogleWebMaster]
	, [EnablePeopleSearch]
	, [GlobalDateFormat]
	, [TimeZone]
	, [GlobalFolder]
	, [EnableScreeningQuestions]
    FROM
	[dbo].[GlobalSettings]
    WHERE 
	 ([GlobalSettingID] = @GlobalSettingId OR @GlobalSettingId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([DefaultLanguageID] = @DefaultLanguageId OR @DefaultLanguageId IS NULL)
	AND ([DefaultDynamicPageID] = @DefaultDynamicPageId OR @DefaultDynamicPageId IS NULL)
	AND ([PublicJobsSearch] = @PublicJobsSearch OR @PublicJobsSearch IS NULL)
	AND ([PublicMembersSearch] = @PublicMembersSearch OR @PublicMembersSearch IS NULL)
	AND ([PublicCompaniesSearch] = @PublicCompaniesSearch OR @PublicCompaniesSearch IS NULL)
	AND ([PublicSponsoredAdverts] = @PublicSponsoredAdverts OR @PublicSponsoredAdverts IS NULL)
	AND ([PrivateJobs] = @PrivateJobs OR @PrivateJobs IS NULL)
	AND ([PrivateMembers] = @PrivateMembers OR @PrivateMembers IS NULL)
	AND ([PrivateCompanies] = @PrivateCompanies OR @PrivateCompanies IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([PageTitlePrefix] = @PageTitlePrefix OR @PageTitlePrefix IS NULL)
	AND ([PageTitleSuffix] = @PageTitleSuffix OR @PageTitleSuffix IS NULL)
	AND ([DefaultTitle] = @DefaultTitle OR @DefaultTitle IS NULL)
	AND ([HomeTitle] = @HomeTitle OR @HomeTitle IS NULL)
	AND ([DefaultDescription] = @DefaultDescription OR @DefaultDescription IS NULL)
	AND ([HomeDescription] = @HomeDescription OR @HomeDescription IS NULL)
	AND ([DefaultKeywords] = @DefaultKeywords OR @DefaultKeywords IS NULL)
	AND ([HomeKeywords] = @HomeKeywords OR @HomeKeywords IS NULL)
	AND ([ShowFaceBookButton] = @ShowFaceBookButton OR @ShowFaceBookButton IS NULL)
	AND ([UseAdvertiserFilter] = @UseAdvertiserFilter OR @UseAdvertiserFilter IS NULL)
	AND ([MerchantID] = @MerchantId OR @MerchantId IS NULL)
	AND ([ShowTwitterButton] = @ShowTwitterButton OR @ShowTwitterButton IS NULL)
	AND ([ShowJobAlertButton] = @ShowJobAlertButton OR @ShowJobAlertButton IS NULL)
	AND ([ShowLinkedInButton] = @ShowLinkedInButton OR @ShowLinkedInButton IS NULL)
	AND ([SiteFavIconID] = @SiteFavIconId OR @SiteFavIconId IS NULL)
	AND ([SiteDocType] = @SiteDocType OR @SiteDocType IS NULL)
	AND ([CurrencySymbol] = @CurrencySymbol OR @CurrencySymbol IS NULL)
	AND ([FtpFolderLocation] = @FtpFolderLocation OR @FtpFolderLocation IS NULL)
	AND ([MetaTags] = @MetaTags OR @MetaTags IS NULL)
	AND ([SystemMetaTags] = @SystemMetaTags OR @SystemMetaTags IS NULL)
	AND ([MemberRegistrationNotification] = @MemberRegistrationNotification OR @MemberRegistrationNotification IS NULL)
	AND ([LinkedInAPI] = @LinkedInApi OR @LinkedInApi IS NULL)
	AND ([LinkedInLogo] = @LinkedInLogo OR @LinkedInLogo IS NULL)
	AND ([LinkedInCompanyID] = @LinkedInCompanyId OR @LinkedInCompanyId IS NULL)
	AND ([LinkedInEmail] = @LinkedInEmail OR @LinkedInEmail IS NULL)
	AND ([PrivacySettings] = @PrivacySettings OR @PrivacySettings IS NULL)
	AND ([WWWRedirect] = @WwwRedirect OR @WwwRedirect IS NULL)
	AND ([AllowAdvertiser] = @AllowAdvertiser OR @AllowAdvertiser IS NULL)
	AND ([LinkedInAPISecret] = @LinkedInApiSecret OR @LinkedInApiSecret IS NULL)
	AND ([GoogleClientID] = @GoogleClientId OR @GoogleClientId IS NULL)
	AND ([GoogleClientSecret] = @GoogleClientSecret OR @GoogleClientSecret IS NULL)
	AND ([FacebookAppID] = @FacebookAppId OR @FacebookAppId IS NULL)
	AND ([FacebookAppSecret] = @FacebookAppSecret OR @FacebookAppSecret IS NULL)
	AND ([LinkedInButtonSize] = @LinkedInButtonSize OR @LinkedInButtonSize IS NULL)
	AND ([DefaultCountryID] = @DefaultCountryId OR @DefaultCountryId IS NULL)
	AND ([PayPalUsername] = @PayPalUsername OR @PayPalUsername IS NULL)
	AND ([PayPalPassword] = @PayPalPassword OR @PayPalPassword IS NULL)
	AND ([PayPalSignature] = @PayPalSignature OR @PayPalSignature IS NULL)
	AND ([SecurePayMerchantID] = @SecurePayMerchantId OR @SecurePayMerchantId IS NULL)
	AND ([SecurePayPassword] = @SecurePayPassword OR @SecurePayPassword IS NULL)
	AND ([UsingSSL] = @UsingSsl OR @UsingSsl IS NULL)
	AND ([UseCustomProfessionRole] = @UseCustomProfessionRole OR @UseCustomProfessionRole IS NULL)
	AND ([GenerateJobXML] = @GenerateJobXml OR @GenerateJobXml IS NULL)
	AND ([IsPrivateSite] = @IsPrivateSite OR @IsPrivateSite IS NULL)
	AND ([PrivateRedirectUrl] = @PrivateRedirectUrl OR @PrivateRedirectUrl IS NULL)
	AND ([EnableJobCustomQuestionnaire] = @EnableJobCustomQuestionnaire OR @EnableJobCustomQuestionnaire IS NULL)
	AND ([JobApplicationTypeID] = @JobApplicationTypeId OR @JobApplicationTypeId IS NULL)
	AND ([JobScreeningProcess] = @JobScreeningProcess OR @JobScreeningProcess IS NULL)
	AND ([AdvertiserApprovalProcess] = @AdvertiserApprovalProcess OR @AdvertiserApprovalProcess IS NULL)
	AND ([SiteType] = @SiteType OR @SiteType IS NULL)
	AND ([EnableSSL] = @EnableSsl OR @EnableSsl IS NULL)
	AND ([GST] = @Gst OR @Gst IS NULL)
	AND ([GSTLabel] = @GstLabel OR @GstLabel IS NULL)
	AND ([NumberOfPremiumJobs] = @NumberOfPremiumJobs OR @NumberOfPremiumJobs IS NULL)
	AND ([PremiumJobDays] = @PremiumJobDays OR @PremiumJobDays IS NULL)
	AND ([DisplayPremiumJobsOnResults] = @DisplayPremiumJobsOnResults OR @DisplayPremiumJobsOnResults IS NULL)
	AND ([JobExpiryNotification] = @JobExpiryNotification OR @JobExpiryNotification IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([PayPalClientID] = @PayPalClientId OR @PayPalClientId IS NULL)
	AND ([PayPalClientSecret] = @PayPalClientSecret OR @PayPalClientSecret IS NULL)
	AND ([PaypalUser] = @PaypalUser OR @PaypalUser IS NULL)
	AND ([PaypalProPassword] = @PaypalProPassword OR @PaypalProPassword IS NULL)
	AND ([PaypalVendor] = @PaypalVendor OR @PaypalVendor IS NULL)
	AND ([PaypalPartner] = @PaypalPartner OR @PaypalPartner IS NULL)
	AND ([InvoiceSiteInfo] = @InvoiceSiteInfo OR @InvoiceSiteInfo IS NULL)
	AND ([InvoiceSiteFooter] = @InvoiceSiteFooter OR @InvoiceSiteFooter IS NULL)
	AND ([EnableTermsAndConditions] = @EnableTermsAndConditions OR @EnableTermsAndConditions IS NULL)
	AND ([DefaultEmailLanguageId] = @DefaultEmailLanguageId OR @DefaultEmailLanguageId IS NULL)
	AND ([GoogleTagManager] = @GoogleTagManager OR @GoogleTagManager IS NULL)
	AND ([GoogleAnalytics] = @GoogleAnalytics OR @GoogleAnalytics IS NULL)
	AND ([GoogleWebMaster] = @GoogleWebMaster OR @GoogleWebMaster IS NULL)
	AND ([EnablePeopleSearch] = @EnablePeopleSearch OR @EnablePeopleSearch IS NULL)
	AND ([GlobalDateFormat] = @GlobalDateFormat OR @GlobalDateFormat IS NULL)
	AND ([TimeZone] = @TimeZone OR @TimeZone IS NULL)
	AND ([GlobalFolder] = @GlobalFolder OR @GlobalFolder IS NULL)
	AND ([EnableScreeningQuestions] = @EnableScreeningQuestions OR @EnableScreeningQuestions IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [GlobalSettingID]
	, [SiteID]
	, [DefaultLanguageID]
	, [DefaultDynamicPageID]
	, [PublicJobsSearch]
	, [PublicMembersSearch]
	, [PublicCompaniesSearch]
	, [PublicSponsoredAdverts]
	, [PrivateJobs]
	, [PrivateMembers]
	, [PrivateCompanies]
	, [LastModifiedBy]
	, [LastModified]
	, [PageTitlePrefix]
	, [PageTitleSuffix]
	, [DefaultTitle]
	, [HomeTitle]
	, [DefaultDescription]
	, [HomeDescription]
	, [DefaultKeywords]
	, [HomeKeywords]
	, [ShowFaceBookButton]
	, [UseAdvertiserFilter]
	, [MerchantID]
	, [ShowTwitterButton]
	, [ShowJobAlertButton]
	, [ShowLinkedInButton]
	, [SiteFavIconID]
	, [SiteDocType]
	, [CurrencySymbol]
	, [FtpFolderLocation]
	, [MetaTags]
	, [SystemMetaTags]
	, [MemberRegistrationNotification]
	, [LinkedInAPI]
	, [LinkedInLogo]
	, [LinkedInCompanyID]
	, [LinkedInEmail]
	, [PrivacySettings]
	, [WWWRedirect]
	, [AllowAdvertiser]
	, [LinkedInAPISecret]
	, [GoogleClientID]
	, [GoogleClientSecret]
	, [FacebookAppID]
	, [FacebookAppSecret]
	, [LinkedInButtonSize]
	, [DefaultCountryID]
	, [PayPalUsername]
	, [PayPalPassword]
	, [PayPalSignature]
	, [SecurePayMerchantID]
	, [SecurePayPassword]
	, [UsingSSL]
	, [UseCustomProfessionRole]
	, [GenerateJobXML]
	, [IsPrivateSite]
	, [PrivateRedirectUrl]
	, [EnableJobCustomQuestionnaire]
	, [JobApplicationTypeID]
	, [JobScreeningProcess]
	, [AdvertiserApprovalProcess]
	, [SiteType]
	, [EnableSSL]
	, [GST]
	, [GSTLabel]
	, [NumberOfPremiumJobs]
	, [PremiumJobDays]
	, [DisplayPremiumJobsOnResults]
	, [JobExpiryNotification]
	, [CurrencyID]
	, [PayPalClientID]
	, [PayPalClientSecret]
	, [PaypalUser]
	, [PaypalProPassword]
	, [PaypalVendor]
	, [PaypalPartner]
	, [InvoiceSiteInfo]
	, [InvoiceSiteFooter]
	, [EnableTermsAndConditions]
	, [DefaultEmailLanguageId]
	, [GoogleTagManager]
	, [GoogleAnalytics]
	, [GoogleWebMaster]
	, [EnablePeopleSearch]
	, [GlobalDateFormat]
	, [TimeZone]
	, [GlobalFolder]
	, [EnableScreeningQuestions]
    FROM
	[dbo].[GlobalSettings]
    WHERE 
	 ([GlobalSettingID] = @GlobalSettingId AND @GlobalSettingId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([DefaultLanguageID] = @DefaultLanguageId AND @DefaultLanguageId is not null)
	OR ([DefaultDynamicPageID] = @DefaultDynamicPageId AND @DefaultDynamicPageId is not null)
	OR ([PublicJobsSearch] = @PublicJobsSearch AND @PublicJobsSearch is not null)
	OR ([PublicMembersSearch] = @PublicMembersSearch AND @PublicMembersSearch is not null)
	OR ([PublicCompaniesSearch] = @PublicCompaniesSearch AND @PublicCompaniesSearch is not null)
	OR ([PublicSponsoredAdverts] = @PublicSponsoredAdverts AND @PublicSponsoredAdverts is not null)
	OR ([PrivateJobs] = @PrivateJobs AND @PrivateJobs is not null)
	OR ([PrivateMembers] = @PrivateMembers AND @PrivateMembers is not null)
	OR ([PrivateCompanies] = @PrivateCompanies AND @PrivateCompanies is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([PageTitlePrefix] = @PageTitlePrefix AND @PageTitlePrefix is not null)
	OR ([PageTitleSuffix] = @PageTitleSuffix AND @PageTitleSuffix is not null)
	OR ([DefaultTitle] = @DefaultTitle AND @DefaultTitle is not null)
	OR ([HomeTitle] = @HomeTitle AND @HomeTitle is not null)
	OR ([DefaultDescription] = @DefaultDescription AND @DefaultDescription is not null)
	OR ([HomeDescription] = @HomeDescription AND @HomeDescription is not null)
	OR ([DefaultKeywords] = @DefaultKeywords AND @DefaultKeywords is not null)
	OR ([HomeKeywords] = @HomeKeywords AND @HomeKeywords is not null)
	OR ([ShowFaceBookButton] = @ShowFaceBookButton AND @ShowFaceBookButton is not null)
	OR ([UseAdvertiserFilter] = @UseAdvertiserFilter AND @UseAdvertiserFilter is not null)
	OR ([MerchantID] = @MerchantId AND @MerchantId is not null)
	OR ([ShowTwitterButton] = @ShowTwitterButton AND @ShowTwitterButton is not null)
	OR ([ShowJobAlertButton] = @ShowJobAlertButton AND @ShowJobAlertButton is not null)
	OR ([ShowLinkedInButton] = @ShowLinkedInButton AND @ShowLinkedInButton is not null)
	OR ([SiteFavIconID] = @SiteFavIconId AND @SiteFavIconId is not null)
	OR ([SiteDocType] = @SiteDocType AND @SiteDocType is not null)
	OR ([CurrencySymbol] = @CurrencySymbol AND @CurrencySymbol is not null)
	OR ([FtpFolderLocation] = @FtpFolderLocation AND @FtpFolderLocation is not null)
	OR ([MetaTags] = @MetaTags AND @MetaTags is not null)
	OR ([SystemMetaTags] = @SystemMetaTags AND @SystemMetaTags is not null)
	OR ([MemberRegistrationNotification] = @MemberRegistrationNotification AND @MemberRegistrationNotification is not null)
	OR ([LinkedInAPI] = @LinkedInApi AND @LinkedInApi is not null)
	OR ([LinkedInLogo] = @LinkedInLogo AND @LinkedInLogo is not null)
	OR ([LinkedInCompanyID] = @LinkedInCompanyId AND @LinkedInCompanyId is not null)
	OR ([LinkedInEmail] = @LinkedInEmail AND @LinkedInEmail is not null)
	OR ([PrivacySettings] = @PrivacySettings AND @PrivacySettings is not null)
	OR ([WWWRedirect] = @WwwRedirect AND @WwwRedirect is not null)
	OR ([AllowAdvertiser] = @AllowAdvertiser AND @AllowAdvertiser is not null)
	OR ([LinkedInAPISecret] = @LinkedInApiSecret AND @LinkedInApiSecret is not null)
	OR ([GoogleClientID] = @GoogleClientId AND @GoogleClientId is not null)
	OR ([GoogleClientSecret] = @GoogleClientSecret AND @GoogleClientSecret is not null)
	OR ([FacebookAppID] = @FacebookAppId AND @FacebookAppId is not null)
	OR ([FacebookAppSecret] = @FacebookAppSecret AND @FacebookAppSecret is not null)
	OR ([LinkedInButtonSize] = @LinkedInButtonSize AND @LinkedInButtonSize is not null)
	OR ([DefaultCountryID] = @DefaultCountryId AND @DefaultCountryId is not null)
	OR ([PayPalUsername] = @PayPalUsername AND @PayPalUsername is not null)
	OR ([PayPalPassword] = @PayPalPassword AND @PayPalPassword is not null)
	OR ([PayPalSignature] = @PayPalSignature AND @PayPalSignature is not null)
	OR ([SecurePayMerchantID] = @SecurePayMerchantId AND @SecurePayMerchantId is not null)
	OR ([SecurePayPassword] = @SecurePayPassword AND @SecurePayPassword is not null)
	OR ([UsingSSL] = @UsingSsl AND @UsingSsl is not null)
	OR ([UseCustomProfessionRole] = @UseCustomProfessionRole AND @UseCustomProfessionRole is not null)
	OR ([GenerateJobXML] = @GenerateJobXml AND @GenerateJobXml is not null)
	OR ([IsPrivateSite] = @IsPrivateSite AND @IsPrivateSite is not null)
	OR ([PrivateRedirectUrl] = @PrivateRedirectUrl AND @PrivateRedirectUrl is not null)
	OR ([EnableJobCustomQuestionnaire] = @EnableJobCustomQuestionnaire AND @EnableJobCustomQuestionnaire is not null)
	OR ([JobApplicationTypeID] = @JobApplicationTypeId AND @JobApplicationTypeId is not null)
	OR ([JobScreeningProcess] = @JobScreeningProcess AND @JobScreeningProcess is not null)
	OR ([AdvertiserApprovalProcess] = @AdvertiserApprovalProcess AND @AdvertiserApprovalProcess is not null)
	OR ([SiteType] = @SiteType AND @SiteType is not null)
	OR ([EnableSSL] = @EnableSsl AND @EnableSsl is not null)
	OR ([GST] = @Gst AND @Gst is not null)
	OR ([GSTLabel] = @GstLabel AND @GstLabel is not null)
	OR ([NumberOfPremiumJobs] = @NumberOfPremiumJobs AND @NumberOfPremiumJobs is not null)
	OR ([PremiumJobDays] = @PremiumJobDays AND @PremiumJobDays is not null)
	OR ([DisplayPremiumJobsOnResults] = @DisplayPremiumJobsOnResults AND @DisplayPremiumJobsOnResults is not null)
	OR ([JobExpiryNotification] = @JobExpiryNotification AND @JobExpiryNotification is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([PayPalClientID] = @PayPalClientId AND @PayPalClientId is not null)
	OR ([PayPalClientSecret] = @PayPalClientSecret AND @PayPalClientSecret is not null)
	OR ([PaypalUser] = @PaypalUser AND @PaypalUser is not null)
	OR ([PaypalProPassword] = @PaypalProPassword AND @PaypalProPassword is not null)
	OR ([PaypalVendor] = @PaypalVendor AND @PaypalVendor is not null)
	OR ([PaypalPartner] = @PaypalPartner AND @PaypalPartner is not null)
	OR ([InvoiceSiteInfo] = @InvoiceSiteInfo AND @InvoiceSiteInfo is not null)
	OR ([InvoiceSiteFooter] = @InvoiceSiteFooter AND @InvoiceSiteFooter is not null)
	OR ([EnableTermsAndConditions] = @EnableTermsAndConditions AND @EnableTermsAndConditions is not null)
	OR ([DefaultEmailLanguageId] = @DefaultEmailLanguageId AND @DefaultEmailLanguageId is not null)
	OR ([GoogleTagManager] = @GoogleTagManager AND @GoogleTagManager is not null)
	OR ([GoogleAnalytics] = @GoogleAnalytics AND @GoogleAnalytics is not null)
	OR ([GoogleWebMaster] = @GoogleWebMaster AND @GoogleWebMaster is not null)
	OR ([EnablePeopleSearch] = @EnablePeopleSearch AND @EnablePeopleSearch is not null)
	OR ([GlobalDateFormat] = @GlobalDateFormat AND @GlobalDateFormat is not null)
	OR ([TimeZone] = @TimeZone AND @TimeZone is not null)
	OR ([GlobalFolder] = @GlobalFolder AND @GlobalFolder is not null)
	OR ([EnableScreeningQuestions] = @EnableScreeningQuestions AND @EnableScreeningQuestions is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="GlobalSettings_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the GlobalSettings table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [GlobalSettingID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [GlobalSettingID] )
				SELECT TOP {3} [GlobalSettingID]
				FROM [dbo].[GlobalSettings] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[GlobalSettingID], O.[SiteID], O.[DefaultLanguageID], O.[DefaultDynamicPageID], O.[PublicJobsSearch], O.[PublicMembersSearch], O.[PublicCompaniesSearch], O.[PublicSponsoredAdverts], O.[PrivateJobs], O.[PrivateMembers], O.[PrivateCompanies], O.[LastModifiedBy], O.[LastModified], O.[PageTitlePrefix], O.[PageTitleSuffix], O.[DefaultTitle], O.[HomeTitle], O.[DefaultDescription], O.[HomeDescription], O.[DefaultKeywords], O.[HomeKeywords], O.[ShowFaceBookButton], O.[UseAdvertiserFilter], O.[MerchantID], O.[ShowTwitterButton], O.[ShowJobAlertButton], O.[ShowLinkedInButton], O.[SiteFavIconID], O.[SiteDocType], O.[CurrencySymbol], O.[FtpFolderLocation], O.[MetaTags], O.[SystemMetaTags], O.[MemberRegistrationNotification], O.[LinkedInAPI], O.[LinkedInLogo], O.[LinkedInCompanyID], O.[LinkedInEmail], O.[PrivacySettings], O.[WWWRedirect], O.[AllowAdvertiser], O.[LinkedInAPISecret], O.[GoogleClientID], O.[GoogleClientSecret], O.[FacebookAppID], O.[FacebookAppSecret], O.[LinkedInButtonSize], O.[DefaultCountryID], O.[PayPalUsername], O.[PayPalPassword], O.[PayPalSignature], O.[SecurePayMerchantID], O.[SecurePayPassword], O.[UsingSSL], O.[UseCustomProfessionRole], O.[GenerateJobXML], O.[IsPrivateSite], O.[PrivateRedirectUrl], O.[EnableJobCustomQuestionnaire], O.[JobApplicationTypeID], O.[JobScreeningProcess], O.[AdvertiserApprovalProcess], O.[SiteType], O.[EnableSSL], O.[GST], O.[GSTLabel], O.[NumberOfPremiumJobs], O.[PremiumJobDays], O.[DisplayPremiumJobsOnResults], O.[JobExpiryNotification], O.[CurrencyID], O.[PayPalClientID], O.[PayPalClientSecret], O.[PaypalUser], O.[PaypalProPassword], O.[PaypalVendor], O.[PaypalPartner], O.[InvoiceSiteInfo], O.[InvoiceSiteFooter], O.[EnableTermsAndConditions], O.[DefaultEmailLanguageId], O.[GoogleTagManager], O.[GoogleAnalytics], O.[GoogleWebMaster], O.[EnablePeopleSearch], O.[GlobalDateFormat], O.[TimeZone], O.[GlobalFolder], O.[EnableScreeningQuestions]
				FROM
				    [dbo].[GlobalSettings] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[GlobalSettingID] = PageIndex.[GlobalSettingID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[GlobalSettings] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="GlobalSettings_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the GlobalSettings table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[GlobalSettings]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetByPublicJobsSearchPrivateJobsSiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[PublicJobsSearch] = @PublicJobsSearch
					AND [PrivateJobs] = @PrivateJobs
					AND [SiteID] = @SiteId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the GlobalSettings table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicMembersSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicCompaniesSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicSponsoredAdverts" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateMembers" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PageTitlePrefix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageTitleSuffix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@ShowFaceBookButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseAdvertiserFilter" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MerchantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowTwitterButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowJobAlertButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLinkedInButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteFavIconId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteDocType" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@FtpFolderLocation" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaTags" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SystemMetaTags" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@MemberRegistrationNotification" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInApi" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInCompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PrivacySettings" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@WwwRedirect" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AllowAdvertiser" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInApiSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GoogleClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GoogleClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FacebookAppId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FacebookAppSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInButtonSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PayPalUsername" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PayPalPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PayPalSignature" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SecurePayMerchantId" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SecurePayPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@UsingSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseCustomProfessionRole" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GenerateJobXml" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPrivateSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateRedirectUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EnableJobCustomQuestionnaire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobScreeningProcess" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserApprovalProcess" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnableSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Gst" type="decimal" direction="Input" size="5" precision="5" scale="2" param="(5, 2)" nulldefault="null"/>
				<parameter name="@GstLabel" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NumberOfPremiumJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PremiumJobDays" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayPremiumJobsOnResults" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PayPalClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PayPalClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalUser" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalProPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalVendor" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalPartner" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@InvoiceSiteInfo" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@InvoiceSiteFooter" type="nvarchar" direction="Input" size="1500" precision="0" scale="0" param="(1500)" nulldefault="null"/>
				<parameter name="@EnableTermsAndConditions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultEmailLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GoogleTagManager" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@GoogleAnalytics" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@GoogleWebMaster" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@EnablePeopleSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalDateFormat" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@TimeZone" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalFolder" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EnableScreeningQuestions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter is not null)
	OR ([EnablePeopleSearch] = @EnablePeopleSearch AND @EnablePeopleSearch is not null)
	OR ([GlobalDateFormat] = @GlobalDateFormat AND @GlobalDateFormat is not null)
	OR ([TimeZone] = @TimeZone AND @TimeZone is not null)
	OR ([GlobalFolder] = @GlobalFolder AND @GlobalFolder is not null)
	OR ([EnableScreeningQuestions] = @EnableScreeningQuestions AND @EnableScreeningQuestions is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetByGlobalSettingId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[GlobalSettingID] = @GlobalSettingId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_Update"  skip="true">
			<comment><![CDATA[  
/*  
----------------------------------------------------------------------------------------------------  
  
-- Created By:  ()  
-- Purpose: Updates a record in the GlobalSettings table  
----------------------------------------------------------------------------------------------------  
*/  
  
  
]]></comment>
			<parameters>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicMembersSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicCompaniesSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicSponsoredAdverts" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateMembers" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PageTitlePrefix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageTitleSuffix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@ShowFaceBookButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseAdvertiserFilter" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MerchantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowTwitterButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowJobAlertButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLinkedInButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteFavIconId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteDocType" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@FtpFolderLocation" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaTags" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SystemMetaTags" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@MemberRegistrationNotification" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInApi" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInCompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PrivacySettings" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@WwwRedirect" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AllowAdvertiser" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInApiSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GoogleClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GoogleClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FacebookAppId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FacebookAppSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInButtonSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PayPalUsername" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PayPalPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PayPalSignature" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SecurePayMerchantId" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SecurePayPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@UsingSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseCustomProfessionRole" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GenerateJobXml" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPrivateSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateRedirectUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EnableJobCustomQuestionnaire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobScreeningProcess" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserApprovalProcess" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnableSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Gst" type="decimal" direction="Input" size="5" precision="5" scale="2" param="(5, 2)" nulldefault="null"/>
				<parameter name="@GstLabel" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NumberOfPremiumJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PremiumJobDays" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayPremiumJobsOnResults" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PayPalClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PayPalClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalUser" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalProPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalVendor" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalPartner" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@InvoiceSiteInfo" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@InvoiceSiteFooter" type="nvarchar" direction="Input" size="1500" precision="0" scale="0" param="(1500)" nulldefault="null"/>
				<parameter name="@EnableTermsAndConditions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultEmailLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GoogleTagManager" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@GoogleAnalytics" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@GoogleWebMaster" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@EnablePeopleSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalDateFormat" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@TimeZone" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalFolder" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EnableScreeningQuestions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter  
     ,[EnablePeopleSearch] = @EnablePeopleSearch  
     ,[GlobalDateFormat] = @GlobalDateFormat  
     ,[TimeZone] = @TimeZone  
     ,[GlobalFolder] = @GlobalFolder  
     ,[EnableScreeningQuestions] = @EnableScreeningQuestions
    WHERE  
[GlobalSettingID] = @GlobalSettingId   
      
     

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetByDefaultCountryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[DefaultCountryID] = @DefaultCountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetByDefaultLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[DefaultLanguageID] = @DefaultLanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the GlobalSettings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@GlobalSettingId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicMembersSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicCompaniesSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicSponsoredAdverts" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateMembers" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateCompanies" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PageTitlePrefix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageTitleSuffix" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeDescription" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DefaultKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@HomeKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@ShowFaceBookButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseAdvertiserFilter" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MerchantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowTwitterButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowJobAlertButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLinkedInButton" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteFavIconId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteDocType" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@CurrencySymbol" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@FtpFolderLocation" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MetaTags" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SystemMetaTags" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@MemberRegistrationNotification" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInApi" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInCompanyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PrivacySettings" type="nvarchar" direction="Input" size="4000" precision="0" scale="0" param="(4000)" nulldefault="null"/>
				<parameter name="@WwwRedirect" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AllowAdvertiser" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInApiSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GoogleClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GoogleClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FacebookAppId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FacebookAppSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInButtonSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultCountryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PayPalUsername" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PayPalPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@PayPalSignature" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SecurePayMerchantId" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SecurePayPassword" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@UsingSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseCustomProfessionRole" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GenerateJobXml" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPrivateSite" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrivateRedirectUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EnableJobCustomQuestionnaire" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobScreeningProcess" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserApprovalProcess" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnableSsl" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Gst" type="decimal" direction="Input" size="5" precision="5" scale="2" param="(5, 2)" nulldefault="null"/>
				<parameter name="@GstLabel" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NumberOfPremiumJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PremiumJobDays" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayPremiumJobsOnResults" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PayPalClientId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PayPalClientSecret" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalUser" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalProPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalVendor" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PaypalPartner" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@InvoiceSiteInfo" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@InvoiceSiteFooter" type="nvarchar" direction="Input" size="1500" precision="0" scale="0" param="(1500)" nulldefault="null"/>
				<parameter name="@EnableTermsAndConditions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultEmailLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GoogleTagManager" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@GoogleAnalytics" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@GoogleWebMaster" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@EnablePeopleSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalDateFormat" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@TimeZone" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalFolder" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EnableScreeningQuestions" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter
					,@EnablePeopleSearch
					,@GlobalDateFormat
					,@TimeZone
					,@GlobalFolder
					,@EnableScreeningQuestions
					)
				
				-- Get the identity value
				SET @GlobalSettingId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the GlobalSettings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetBySiteFavIconId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteFavIconId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteFavIconID] = @SiteFavIconId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_CustomGetPaymentDetail"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
sword
	FROM GlobalSettings WITH (NOLOCK)
	WHERE SiteID = @SiteID
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetBySiteIdPublicJobsSearch"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicJobsSearch" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteID] = @SiteId
					AND [PublicJobsSearch] = @PublicJobsSearch
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the GlobalSettings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[GlobalSettings] WITH (ROWLOCK) 
				WHERE
					[GlobalSettingID] = @GlobalSettingId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetBySiteIdGlobalSettingId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalSettingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteID] = @SiteId
					AND [GlobalSettingID] = @GlobalSettingId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetBySiteIdUseAdvertiserFilter"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UseAdvertiserFilter" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[SiteID] = @SiteId
					AND [UseAdvertiserFilter] = @UseAdvertiserFilter
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="GlobalSettings_GetByDefaultDynamicPageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the GlobalSettings table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DefaultDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter],
					[EnablePeopleSearch],
					[GlobalDateFormat],
					[TimeZone],
					[GlobalFolder],
					[EnableScreeningQuestions]
				FROM
					[dbo].[GlobalSettings]
				WHERE
					[DefaultDynamicPageID] = @DefaultDynamicPageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Consultants_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Consultants table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ConsultantID],
					[SiteID],
					[LanguageID],
					[Title],
					[FirstName],
					[Email],
					[Phone],
					[Mobile],
					[PositionTitle],
					[OfficeLocation],
					[Categories],
					[Location],
					[FriendlyURL],
					[ShortDescription],
					[Testimonial],
					[FullDescription],
					[ConsultantData],
					[LinkedInURL],
					[TwitterURL],
					[FacebookURL],
					[GoogleURL],
					[Link],
					[WechatURL],
					[FeaturedTeamMember],
					[ImageURL],
					[VideoURL],
					[BlogRSS],
					[NewsRSS],
					[JobRSS],
					[TestimonialsRSS],
					[Valid],
					[MetaTitle],
					[MetaDescription],
					[MetaKeywords],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[LastName],
					[ConsultantsXML],
					[ConsultantImageUrl]
				FROM
					[dbo].[Consultants]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Consultants_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Consultants table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ConsultantID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ConsultantID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ConsultantID]'
				SET @SQL = @SQL + ' FROM [dbo].[Consultants]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[ConsultantID], O.[SiteID], O.[LanguageID], O.[Title], O.[FirstName], O.[Email], O.[Phone], O.[Mobile], O.[PositionTitle], O.[OfficeLocation], O.[Categories], O.[Location], O.[FriendlyURL], O.[ShortDescription], O.[Testimonial], O.[FullDescription], O.[ConsultantData], O.[LinkedInURL], O.[TwitterURL], O.[FacebookURL], O.[GoogleURL], O.[Link], O.[WechatURL], O.[FeaturedTeamMember], O.[ImageURL], O.[VideoURL], O.[BlogRSS], O.[NewsRSS], O.[JobRSS], O.[TestimonialsRSS], O.[Valid], O.[MetaTitle], O.[MetaDescription], O.[MetaKeywords], O.[LastModifiedBy], O.[LastModified], O.[Sequence], O.[LastName], O.[ConsultantsXML], O.[ConsultantImageUrl]
				FROM
				    [dbo].[Consultants] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ConsultantID] = PageIndex.[ConsultantID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Consultants]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Consultants_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Consultants table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ConsultantId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Mobile" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@PositionTitle" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault=""/>
				<parameter name="@OfficeLocation" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@Categories" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@Location" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault=""/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Testimonial" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ConsultantData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LinkedInUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@TwitterUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@FacebookUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@GoogleUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Link" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@WechatUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@FeaturedTeamMember" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageUrl" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@BlogRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@NewsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@JobRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@TestimonialsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ConsultantsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ConsultantImageUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Consultants]
					(
					[SiteID]
					,[LanguageID]
					,[Title]
					,[FirstName]
					,[Email]
					,[Phone]
					,[Mobile]
					,[PositionTitle]
					,[OfficeLocation]
					,[Categories]
					,[Location]
					,[FriendlyURL]
					,[ShortDescription]
					,[Testimonial]
					,[FullDescription]
					,[ConsultantData]
					,[LinkedInURL]
					,[TwitterURL]
					,[FacebookURL]
					,[GoogleURL]
					,[Link]
					,[WechatURL]
					,[FeaturedTeamMember]
					,[ImageURL]
					,[VideoURL]
					,[BlogRSS]
					,[NewsRSS]
					,[JobRSS]
					,[TestimonialsRSS]
					,[Valid]
					,[MetaTitle]
					,[MetaDescription]
					,[MetaKeywords]
					,[LastModifiedBy]
					,[LastModified]
					,[Sequence]
					,[LastName]
					,[ConsultantsXML]
					,[ConsultantImageUrl]
					)
				VALUES
					(
					@SiteId
					,@LanguageId
					,@Title
					,@FirstName
					,@Email
					,@Phone
					,@Mobile
					,@PositionTitle
					,@OfficeLocation
					,@Categories
					,@Location
					,@FriendlyUrl
					,@ShortDescription
					,@Testimonial
					,@FullDescription
					,@ConsultantData
					,@LinkedInUrl
					,@TwitterUrl
					,@FacebookUrl
					,@GoogleUrl
					,@Link
					,@WechatUrl
					,@FeaturedTeamMember
					,@ImageUrl
					,@VideoUrl
					,@BlogRss
					,@NewsRss
					,@JobRss
					,@TestimonialsRss
					,@Valid
					,@MetaTitle
					,@MetaDescription
					,@MetaKeywords
					,@LastModifiedBy
					,@LastModified
					,@Sequence
					,@LastName
					,@ConsultantsXml
					,@ConsultantImageUrl
					)
				
				-- Get the identity value
				SET @ConsultantId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Consultants_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Consultants table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ConsultantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Mobile" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@PositionTitle" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault=""/>
				<parameter name="@OfficeLocation" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@Categories" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@Location" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault=""/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Testimonial" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ConsultantData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LinkedInUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@TwitterUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@FacebookUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@GoogleUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Link" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@WechatUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@FeaturedTeamMember" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageUrl" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@BlogRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@NewsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@JobRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@TestimonialsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@ConsultantsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ConsultantImageUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Consultants]
				SET
					[SiteID] = @SiteId
					,[LanguageID] = @LanguageId
					,[Title] = @Title
					,[FirstName] = @FirstName
					,[Email] = @Email
					,[Phone] = @Phone
					,[Mobile] = @Mobile
					,[PositionTitle] = @PositionTitle
					,[OfficeLocation] = @OfficeLocation
					,[Categories] = @Categories
					,[Location] = @Location
					,[FriendlyURL] = @FriendlyUrl
					,[ShortDescription] = @ShortDescription
					,[Testimonial] = @Testimonial
					,[FullDescription] = @FullDescription
					,[ConsultantData] = @ConsultantData
					,[LinkedInURL] = @LinkedInUrl
					,[TwitterURL] = @TwitterUrl
					,[FacebookURL] = @FacebookUrl
					,[GoogleURL] = @GoogleUrl
					,[Link] = @Link
					,[WechatURL] = @WechatUrl
					,[FeaturedTeamMember] = @FeaturedTeamMember
					,[ImageURL] = @ImageUrl
					,[VideoURL] = @VideoUrl
					,[BlogRSS] = @BlogRss
					,[NewsRSS] = @NewsRss
					,[JobRSS] = @JobRss
					,[TestimonialsRSS] = @TestimonialsRss
					,[Valid] = @Valid
					,[MetaTitle] = @MetaTitle
					,[MetaDescription] = @MetaDescription
					,[MetaKeywords] = @MetaKeywords
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[Sequence] = @Sequence
					,[LastName] = @LastName
					,[ConsultantsXML] = @ConsultantsXml
					,[ConsultantImageUrl] = @ConsultantImageUrl
				WHERE
[ConsultantID] = @ConsultantId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Consultants_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Consultants table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ConsultantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Consultants] WITH (ROWLOCK) 
				WHERE
					[ConsultantID] = @ConsultantId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Consultants_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Consultants table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ConsultantID],
					[SiteID],
					[LanguageID],
					[Title],
					[FirstName],
					[Email],
					[Phone],
					[Mobile],
					[PositionTitle],
					[OfficeLocation],
					[Categories],
					[Location],
					[FriendlyURL],
					[ShortDescription],
					[Testimonial],
					[FullDescription],
					[ConsultantData],
					[LinkedInURL],
					[TwitterURL],
					[FacebookURL],
					[GoogleURL],
					[Link],
					[WechatURL],
					[FeaturedTeamMember],
					[ImageURL],
					[VideoURL],
					[BlogRSS],
					[NewsRSS],
					[JobRSS],
					[TestimonialsRSS],
					[Valid],
					[MetaTitle],
					[MetaDescription],
					[MetaKeywords],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[LastName],
					[ConsultantsXML],
					[ConsultantImageUrl]
				FROM
					[dbo].[Consultants]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Consultants_GetByConsultantId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Consultants table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ConsultantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ConsultantID],
					[SiteID],
					[LanguageID],
					[Title],
					[FirstName],
					[Email],
					[Phone],
					[Mobile],
					[PositionTitle],
					[OfficeLocation],
					[Categories],
					[Location],
					[FriendlyURL],
					[ShortDescription],
					[Testimonial],
					[FullDescription],
					[ConsultantData],
					[LinkedInURL],
					[TwitterURL],
					[FacebookURL],
					[GoogleURL],
					[Link],
					[WechatURL],
					[FeaturedTeamMember],
					[ImageURL],
					[VideoURL],
					[BlogRSS],
					[NewsRSS],
					[JobRSS],
					[TestimonialsRSS],
					[Valid],
					[MetaTitle],
					[MetaDescription],
					[MetaKeywords],
					[LastModifiedBy],
					[LastModified],
					[Sequence],
					[LastName],
					[ConsultantsXML],
					[ConsultantImageUrl]
				FROM
					[dbo].[Consultants]
				WHERE
					[ConsultantID] = @ConsultantId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Consultants_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Consultants table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ConsultantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Phone" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Mobile" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PositionTitle" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@OfficeLocation" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@Categories" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@Location" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Testimonial" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ConsultantData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LinkedInUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@TwitterUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@FacebookUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GoogleUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Link" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@WechatUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@FeaturedTeamMember" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageUrl" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@BlogRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@NewsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@JobRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@TestimonialsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ConsultantsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ConsultantImageUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ConsultantID]
	, [SiteID]
	, [LanguageID]
	, [Title]
	, [FirstName]
	, [Email]
	, [Phone]
	, [Mobile]
	, [PositionTitle]
	, [OfficeLocation]
	, [Categories]
	, [Location]
	, [FriendlyURL]
	, [ShortDescription]
	, [Testimonial]
	, [FullDescription]
	, [ConsultantData]
	, [LinkedInURL]
	, [TwitterURL]
	, [FacebookURL]
	, [GoogleURL]
	, [Link]
	, [WechatURL]
	, [FeaturedTeamMember]
	, [ImageURL]
	, [VideoURL]
	, [BlogRSS]
	, [NewsRSS]
	, [JobRSS]
	, [TestimonialsRSS]
	, [Valid]
	, [MetaTitle]
	, [MetaDescription]
	, [MetaKeywords]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
	, [LastName]
	, [ConsultantsXML]
	, [ConsultantImageUrl]
    FROM
	[dbo].[Consultants]
    WHERE 
	 ([ConsultantID] = @ConsultantId OR @ConsultantId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([FirstName] = @FirstName OR @FirstName IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([Phone] = @Phone OR @Phone IS NULL)
	AND ([Mobile] = @Mobile OR @Mobile IS NULL)
	AND ([PositionTitle] = @PositionTitle OR @PositionTitle IS NULL)
	AND ([OfficeLocation] = @OfficeLocation OR @OfficeLocation IS NULL)
	AND ([Categories] = @Categories OR @Categories IS NULL)
	AND ([Location] = @Location OR @Location IS NULL)
	AND ([FriendlyURL] = @FriendlyUrl OR @FriendlyUrl IS NULL)
	AND ([ShortDescription] = @ShortDescription OR @ShortDescription IS NULL)
	AND ([Testimonial] = @Testimonial OR @Testimonial IS NULL)
	AND ([FullDescription] = @FullDescription OR @FullDescription IS NULL)
	AND ([ConsultantData] = @ConsultantData OR @ConsultantData IS NULL)
	AND ([LinkedInURL] = @LinkedInUrl OR @LinkedInUrl IS NULL)
	AND ([TwitterURL] = @TwitterUrl OR @TwitterUrl IS NULL)
	AND ([FacebookURL] = @FacebookUrl OR @FacebookUrl IS NULL)
	AND ([GoogleURL] = @GoogleUrl OR @GoogleUrl IS NULL)
	AND ([Link] = @Link OR @Link IS NULL)
	AND ([WechatURL] = @WechatUrl OR @WechatUrl IS NULL)
	AND ([FeaturedTeamMember] = @FeaturedTeamMember OR @FeaturedTeamMember IS NULL)
	AND ([VideoURL] = @VideoUrl OR @VideoUrl IS NULL)
	AND ([BlogRSS] = @BlogRss OR @BlogRss IS NULL)
	AND ([NewsRSS] = @NewsRss OR @NewsRss IS NULL)
	AND ([JobRSS] = @JobRss OR @JobRss IS NULL)
	AND ([TestimonialsRSS] = @TestimonialsRss OR @TestimonialsRss IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([LastName] = @LastName OR @LastName IS NULL)
	AND ([ConsultantsXML] = @ConsultantsXml OR @ConsultantsXml IS NULL)
	AND ([ConsultantImageUrl] = @ConsultantImageUrl OR @ConsultantImageUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ConsultantID]
	, [SiteID]
	, [LanguageID]
	, [Title]
	, [FirstName]
	, [Email]
	, [Phone]
	, [Mobile]
	, [PositionTitle]
	, [OfficeLocation]
	, [Categories]
	, [Location]
	, [FriendlyURL]
	, [ShortDescription]
	, [Testimonial]
	, [FullDescription]
	, [ConsultantData]
	, [LinkedInURL]
	, [TwitterURL]
	, [FacebookURL]
	, [GoogleURL]
	, [Link]
	, [WechatURL]
	, [FeaturedTeamMember]
	, [ImageURL]
	, [VideoURL]
	, [BlogRSS]
	, [NewsRSS]
	, [JobRSS]
	, [TestimonialsRSS]
	, [Valid]
	, [MetaTitle]
	, [MetaDescription]
	, [MetaKeywords]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
	, [LastName]
	, [ConsultantsXML]
	, [ConsultantImageUrl]
    FROM
	[dbo].[Consultants]
    WHERE 
	 ([ConsultantID] = @ConsultantId AND @ConsultantId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([Mobile] = @Mobile AND @Mobile is not null)
	OR ([PositionTitle] = @PositionTitle AND @PositionTitle is not null)
	OR ([OfficeLocation] = @OfficeLocation AND @OfficeLocation is not null)
	OR ([Categories] = @Categories AND @Categories is not null)
	OR ([Location] = @Location AND @Location is not null)
	OR ([FriendlyURL] = @FriendlyUrl AND @FriendlyUrl is not null)
	OR ([ShortDescription] = @ShortDescription AND @ShortDescription is not null)
	OR ([Testimonial] = @Testimonial AND @Testimonial is not null)
	OR ([FullDescription] = @FullDescription AND @FullDescription is not null)
	OR ([ConsultantData] = @ConsultantData AND @ConsultantData is not null)
	OR ([LinkedInURL] = @LinkedInUrl AND @LinkedInUrl is not null)
	OR ([TwitterURL] = @TwitterUrl AND @TwitterUrl is not null)
	OR ([FacebookURL] = @FacebookUrl AND @FacebookUrl is not null)
	OR ([GoogleURL] = @GoogleUrl AND @GoogleUrl is not null)
	OR ([Link] = @Link AND @Link is not null)
	OR ([WechatURL] = @WechatUrl AND @WechatUrl is not null)
	OR ([FeaturedTeamMember] = @FeaturedTeamMember AND @FeaturedTeamMember is not null)
	OR ([VideoURL] = @VideoUrl AND @VideoUrl is not null)
	OR ([BlogRSS] = @BlogRss AND @BlogRss is not null)
	OR ([NewsRSS] = @NewsRss AND @NewsRss is not null)
	OR ([JobRSS] = @JobRss AND @JobRss is not null)
	OR ([TestimonialsRSS] = @TestimonialsRss AND @TestimonialsRss is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([LastName] = @LastName AND @LastName is not null)
	OR ([ConsultantsXML] = @ConsultantsXml AND @ConsultantsXml is not null)
	OR ([ConsultantImageUrl] = @ConsultantImageUrl AND @ConsultantImageUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Consultants_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Consultants table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ConsultantID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ConsultantID] )
				SELECT TOP {3} [ConsultantID]
				FROM [dbo].[Consultants] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[ConsultantID], O.[SiteID], O.[LanguageID], O.[Title], O.[FirstName], O.[Email], O.[Phone], O.[Mobile], O.[PositionTitle], O.[OfficeLocation], O.[Categories], O.[Location], O.[FriendlyURL], O.[ShortDescription], O.[Testimonial], O.[FullDescription], O.[ConsultantData], O.[LinkedInURL], O.[TwitterURL], O.[FacebookURL], O.[GoogleURL], O.[Link], O.[WechatURL], O.[FeaturedTeamMember], O.[ImageURL], O.[VideoURL], O.[BlogRSS], O.[NewsRSS], O.[JobRSS], O.[TestimonialsRSS], O.[Valid], O.[MetaTitle], O.[MetaDescription], O.[MetaKeywords], O.[LastModifiedBy], O.[LastModified], O.[Sequence], O.[LastName], O.[ConsultantsXML], O.[ConsultantImageUrl]
				FROM
				    [dbo].[Consultants] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ConsultantID] = PageIndex.[ConsultantID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Consultants] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Consultants_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Consultants table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ConsultantId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Phone" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Mobile" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PositionTitle" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@OfficeLocation" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@Categories" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@Location" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Testimonial" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ConsultantData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LinkedInUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@TwitterUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@FacebookUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GoogleUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Link" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@WechatUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@FeaturedTeamMember" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageUrl" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@BlogRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@NewsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@JobRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@TestimonialsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ConsultantsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ConsultantImageUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName
					,@ConsultantsXml
					,@ConsultantImageUrl
					)
				
				-- Get the identity value
				SET @ConsultantId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Consultants_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Consultants table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName],
					[ConsultantsXML],
					[ConsultantImageUrl]
				FROM
					[dbo].[Consultants]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Consultants_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Consultants table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tName],
					[ConsultantsXML],
					[ConsultantImageUrl]
				FROM
					[dbo].[Consultants]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Consultants_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Consultants table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Consultants]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Consultants_GetByConsultantId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Consultants table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ConsultantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName],
					[ConsultantsXML],
					[ConsultantImageUrl]
				FROM
					[dbo].[Consultants]
				WHERE
					[ConsultantID] = @ConsultantId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Consultants_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Consultants table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ConsultantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Phone" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Mobile" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PositionTitle" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@OfficeLocation" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@Categories" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@Location" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Testimonial" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ConsultantData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LinkedInUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@TwitterUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@FacebookUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GoogleUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Link" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@WechatUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@FeaturedTeamMember" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageUrl" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@BlogRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@NewsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@JobRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@TestimonialsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ConsultantsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ConsultantImageUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName is not null)
	OR ([ConsultantsXML] = @ConsultantsXml AND @ConsultantsXml is not null)
	OR ([ConsultantImageUrl] = @ConsultantImageUrl AND @ConsultantImageUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Consultants_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Consultants table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ConsultantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Consultants] WITH (ROWLOCK) 
				WHERE
					[ConsultantID] = @ConsultantId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Consultants_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Consultants table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ConsultantId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Phone" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Mobile" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@PositionTitle" type="nvarchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@OfficeLocation" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@Categories" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@Location" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@FriendlyUrl" type="varchar" direction="Input" size="128" precision="0" scale="0" param="(128)" nulldefault="null"/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Testimonial" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ConsultantData" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LinkedInUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@TwitterUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@FacebookUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GoogleUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Link" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@WechatUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@FeaturedTeamMember" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageUrl" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@VideoUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@BlogRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@NewsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@JobRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@TestimonialsRss" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@Valid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@ConsultantsXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ConsultantImageUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName
					,[ConsultantsXML] = @ConsultantsXml
					,[ConsultantImageUrl] = @ConsultantImageUrl
				WHERE
[ConsultantID] = @ConsultantId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="EmailTemplates_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the EmailTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[EmailTemplateID],
					[SiteID],
					[EmailTemplateParentID],
					[EmailCode],
					[EmailDescription],
					[EmailSubject],
					[EmailBodyText],
					[EmailBodyHTML],
					[EmailFields],
					[EmailAddressName],
					[EmailAddressFrom],
					[EmailAddressCC],
					[EmailAddressBCC],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="EmailTemplates_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the EmailTemplates table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [EmailTemplateID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([EmailTemplateID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [EmailTemplateID]'
				SET @SQL = @SQL + ' FROM [dbo].[EmailTemplates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[EmailTemplateID], O.[SiteID], O.[EmailTemplateParentID], O.[EmailCode], O.[EmailDescription], O.[EmailSubject], O.[EmailBodyText], O.[EmailBodyHTML], O.[EmailFields], O.[EmailAddressName], O.[EmailAddressFrom], O.[EmailAddressCC], O.[EmailAddressBCC], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[EmailAddressTo], O.[EmailAddressToName], O.[EmailAddressToMandatory], O.[LanguageID]
				FROM
				    [dbo].[EmailTemplates] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[EmailTemplateID] = PageIndex.[EmailTemplateID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[EmailTemplates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="EmailTemplates_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the EmailTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailTemplateId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailTemplateParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailSubject" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@EmailBodyText" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailBodyHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFields" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailAddressName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@EmailAddressFrom" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailAddressCc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@EmailAddressBcc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@EmailAddressTo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailAddressToName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@EmailAddressToMandatory" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[EmailTemplates]
					(
					[SiteID]
					,[EmailTemplateParentID]
					,[EmailCode]
					,[EmailDescription]
					,[EmailSubject]
					,[EmailBodyText]
					,[EmailBodyHTML]
					,[EmailFields]
					,[EmailAddressName]
					,[EmailAddressFrom]
					,[EmailAddressCC]
					,[EmailAddressBCC]
					,[GlobalTemplate]
					,[LastModifiedBy]
					,[LastModified]
					,[EmailAddressTo]
					,[EmailAddressToName]
					,[EmailAddressToMandatory]
					,[LanguageID]
					)
				VALUES
					(
					@SiteId
					,@EmailTemplateParentId
					,@EmailCode
					,@EmailDescription
					,@EmailSubject
					,@EmailBodyText
					,@EmailBodyHtml
					,@EmailFields
					,@EmailAddressName
					,@EmailAddressFrom
					,@EmailAddressCc
					,@EmailAddressBcc
					,@GlobalTemplate
					,@LastModifiedBy
					,@LastModified
					,@EmailAddressTo
					,@EmailAddressToName
					,@EmailAddressToMandatory
					,@LanguageId
					)
				
				-- Get the identity value
				SET @EmailTemplateId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="EmailTemplates_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the EmailTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailTemplateParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailSubject" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@EmailBodyText" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailBodyHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFields" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailAddressName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@EmailAddressFrom" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailAddressCc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@EmailAddressBcc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@EmailAddressTo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailAddressToName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@EmailAddressToMandatory" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[EmailTemplates]
				SET
					[SiteID] = @SiteId
					,[EmailTemplateParentID] = @EmailTemplateParentId
					,[EmailCode] = @EmailCode
					,[EmailDescription] = @EmailDescription
					,[EmailSubject] = @EmailSubject
					,[EmailBodyText] = @EmailBodyText
					,[EmailBodyHTML] = @EmailBodyHtml
					,[EmailFields] = @EmailFields
					,[EmailAddressName] = @EmailAddressName
					,[EmailAddressFrom] = @EmailAddressFrom
					,[EmailAddressCC] = @EmailAddressCc
					,[EmailAddressBCC] = @EmailAddressBcc
					,[GlobalTemplate] = @GlobalTemplate
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[EmailAddressTo] = @EmailAddressTo
					,[EmailAddressToName] = @EmailAddressToName
					,[EmailAddressToMandatory] = @EmailAddressToMandatory
					,[LanguageID] = @LanguageId
				WHERE
[EmailTemplateID] = @EmailTemplateId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="EmailTemplates_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the EmailTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[EmailTemplates] WITH (ROWLOCK) 
				WHERE
					[EmailTemplateID] = @EmailTemplateId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="EmailTemplates_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[EmailTemplateID],
					[SiteID],
					[EmailTemplateParentID],
					[EmailCode],
					[EmailDescription],
					[EmailSubject],
					[EmailBodyText],
					[EmailBodyHTML],
					[EmailFields],
					[EmailAddressName],
					[EmailAddressFrom],
					[EmailAddressCC],
					[EmailAddressBCC],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="EmailTemplates_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[EmailTemplateID],
					[SiteID],
					[EmailTemplateParentID],
					[EmailCode],
					[EmailDescription],
					[EmailSubject],
					[EmailBodyText],
					[EmailBodyHTML],
					[EmailFields],
					[EmailAddressName],
					[EmailAddressFrom],
					[EmailAddressCC],
					[EmailAddressBCC],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="EmailTemplates_GetByLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[EmailTemplateID],
					[SiteID],
					[EmailTemplateParentID],
					[EmailCode],
					[EmailDescription],
					[EmailSubject],
					[EmailBodyText],
					[EmailBodyHTML],
					[EmailFields],
					[EmailAddressName],
					[EmailAddressFrom],
					[EmailAddressCC],
					[EmailAddressBCC],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="EmailTemplates_GetBySiteIdEmailCodeGlobalTemplateLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[EmailTemplateID],
					[SiteID],
					[EmailTemplateParentID],
					[EmailCode],
					[EmailDescription],
					[EmailSubject],
					[EmailBodyText],
					[EmailBodyHTML],
					[EmailFields],
					[EmailAddressName],
					[EmailAddressFrom],
					[EmailAddressCC],
					[EmailAddressBCC],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[SiteID] = @SiteId
					AND [EmailCode] = @EmailCode
					AND [GlobalTemplate] = @GlobalTemplate
					AND [LanguageID] = @LanguageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="EmailTemplates_GetByEmailTemplateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[EmailTemplateID],
					[SiteID],
					[EmailTemplateParentID],
					[EmailCode],
					[EmailDescription],
					[EmailSubject],
					[EmailBodyText],
					[EmailBodyHTML],
					[EmailFields],
					[EmailAddressName],
					[EmailAddressFrom],
					[EmailAddressCC],
					[EmailAddressBCC],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[EmailTemplateID] = @EmailTemplateId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="EmailTemplates_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the EmailTemplates table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailTemplateParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailSubject" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailBodyText" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailBodyHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFields" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailAddressName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddressFrom" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddressCc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@EmailAddressBcc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@EmailAddressTo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddressToName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddressToMandatory" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EmailTemplateID]
	, [SiteID]
	, [EmailTemplateParentID]
	, [EmailCode]
	, [EmailDescription]
	, [EmailSubject]
	, [EmailBodyText]
	, [EmailBodyHTML]
	, [EmailFields]
	, [EmailAddressName]
	, [EmailAddressFrom]
	, [EmailAddressCC]
	, [EmailAddressBCC]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [EmailAddressTo]
	, [EmailAddressToName]
	, [EmailAddressToMandatory]
	, [LanguageID]
    FROM
	[dbo].[EmailTemplates]
    WHERE 
	 ([EmailTemplateID] = @EmailTemplateId OR @EmailTemplateId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([EmailTemplateParentID] = @EmailTemplateParentId OR @EmailTemplateParentId IS NULL)
	AND ([EmailCode] = @EmailCode OR @EmailCode IS NULL)
	AND ([EmailDescription] = @EmailDescription OR @EmailDescription IS NULL)
	AND ([EmailSubject] = @EmailSubject OR @EmailSubject IS NULL)
	AND ([EmailAddressName] = @EmailAddressName OR @EmailAddressName IS NULL)
	AND ([EmailAddressFrom] = @EmailAddressFrom OR @EmailAddressFrom IS NULL)
	AND ([EmailAddressCC] = @EmailAddressCc OR @EmailAddressCc IS NULL)
	AND ([EmailAddressBCC] = @EmailAddressBcc OR @EmailAddressBcc IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([EmailAddressTo] = @EmailAddressTo OR @EmailAddressTo IS NULL)
	AND ([EmailAddressToName] = @EmailAddressToName OR @EmailAddressToName IS NULL)
	AND ([EmailAddressToMandatory] = @EmailAddressToMandatory OR @EmailAddressToMandatory IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EmailTemplateID]
	, [SiteID]
	, [EmailTemplateParentID]
	, [EmailCode]
	, [EmailDescription]
	, [EmailSubject]
	, [EmailBodyText]
	, [EmailBodyHTML]
	, [EmailFields]
	, [EmailAddressName]
	, [EmailAddressFrom]
	, [EmailAddressCC]
	, [EmailAddressBCC]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [EmailAddressTo]
	, [EmailAddressToName]
	, [EmailAddressToMandatory]
	, [LanguageID]
    FROM
	[dbo].[EmailTemplates]
    WHERE 
	 ([EmailTemplateID] = @EmailTemplateId AND @EmailTemplateId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([EmailTemplateParentID] = @EmailTemplateParentId AND @EmailTemplateParentId is not null)
	OR ([EmailCode] = @EmailCode AND @EmailCode is not null)
	OR ([EmailDescription] = @EmailDescription AND @EmailDescription is not null)
	OR ([EmailSubject] = @EmailSubject AND @EmailSubject is not null)
	OR ([EmailAddressName] = @EmailAddressName AND @EmailAddressName is not null)
	OR ([EmailAddressFrom] = @EmailAddressFrom AND @EmailAddressFrom is not null)
	OR ([EmailAddressCC] = @EmailAddressCc AND @EmailAddressCc is not null)
	OR ([EmailAddressBCC] = @EmailAddressBcc AND @EmailAddressBcc is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([EmailAddressTo] = @EmailAddressTo AND @EmailAddressTo is not null)
	OR ([EmailAddressToName] = @EmailAddressToName AND @EmailAddressToName is not null)
	OR ([EmailAddressToMandatory] = @EmailAddressToMandatory AND @EmailAddressToMandatory is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="EmailTemplates_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the EmailTemplates table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [EmailTemplateID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [EmailTemplateID] )
				SELECT TOP {3} [EmailTemplateID]
				FROM [dbo].[EmailTemplates] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[EmailTemplateID], O.[SiteID], O.[EmailTemplateParentID], O.[EmailCode], O.[EmailDescription], O.[EmailSubject], O.[EmailBodyText], O.[EmailBodyHTML], O.[EmailFields], O.[EmailAddressName], O.[EmailAddressFrom], O.[EmailAddressCC], O.[EmailAddressBCC], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[EmailAddressTo], O.[EmailAddressToName], O.[EmailAddressToMandatory], O.[LanguageID]
				FROM
				    [dbo].[EmailTemplates] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[EmailTemplateID] = PageIndex.[EmailTemplateID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[EmailTemplates] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="EmailTemplates_GetBySiteIdEmailCodeGlobalTemplateLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[SiteID] = @SiteId
					AND [EmailCode] = @EmailCode
					AND [GlobalTemplate] = @GlobalTemplate
					AND [LanguageID] = @LanguageId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_GetBySiteIdEmailCode"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],  
 [EmailAddressTo],  
 [EmailAddressToName],  
 [EmailAddressToMandatory],
 [LanguageID]
      
    FROM    
     [dbo].[EmailTemplates] (NOLOCK)    
    WHERE    
     [SiteID] = @SiteId    
     AND [EmailCode] = @EmailCode    
    SELECT @@ROWCOUNT    
End

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_GetBySiteIdEmailCodeGlobalTemplate"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[SiteID] = @SiteId
					AND [EmailCode] = @EmailCode
					AND [GlobalTemplate] = @GlobalTemplate
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_GetByLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the EmailTemplates table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[EmailTemplates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the EmailTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailTemplateId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailTemplateParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailSubject" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailBodyText" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailBodyHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFields" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailAddressName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddressFrom" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddressCc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@EmailAddressBcc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@EmailAddressTo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddressToName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddressToMandatory" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,@EmailAddressTo
					,@EmailAddressToName
					,@EmailAddressToMandatory
					,@LanguageId
					)
				
				-- Get the identity value
				SET @EmailTemplateId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_GetByEmailTemplateId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
				WHERE
					[EmailTemplateID] = @EmailTemplateId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the EmailTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified],
					[EmailAddressTo],
					[EmailAddressToName],
					[EmailAddressToMandatory],
					[LanguageID]
				FROM
					[dbo].[EmailTemplates]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the EmailTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailTemplateParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailSubject" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailBodyText" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailBodyHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFields" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailAddressName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddressFrom" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddressCc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@EmailAddressBcc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@EmailAddressTo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddressToName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddressToMandatory" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,[EmailAddressTo] = @EmailAddressTo
					,[EmailAddressToName] = @EmailAddressToName
					,[EmailAddressToMandatory] = @EmailAddressToMandatory
					,[LanguageID] = @LanguageId
				WHERE
[EmailTemplateID] = @EmailTemplateId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the EmailTemplates table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailTemplateParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailSubject" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailBodyText" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailBodyHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFields" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailAddressName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddressFrom" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddressCc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@EmailAddressBcc" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@EmailAddressTo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddressToName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@EmailAddressToMandatory" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	OR ([EmailAddressTo] = @EmailAddressTo AND @EmailAddressTo is not null)
	OR ([EmailAddressToName] = @EmailAddressToName AND @EmailAddressToName is not null)
	OR ([EmailAddressToMandatory] = @EmailAddressToMandatory AND @EmailAddressToMandatory is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the EmailTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[EmailTemplates] WITH (ROWLOCK) 
				WHERE
					[EmailTemplateID] = @EmailTemplateId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the EmailTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="EmailTemplates_CustomGetByEmailCode"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@EmailCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified,
			EmailAddressTo,
			EmailAddressToName,
			EmailAddressToMandatory,
			LanguageID
	FROM EmailTemplates WITH (NOLOCK)
	WHERE EmailCode = @EmailCode AND GlobalTemplate = 0
END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="InvoiceOrder_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the InvoiceOrder table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[OrderID],
					[AdvertiserUserID],
					[CreatedDate],
					[PaymentTypeID],
					[IsPayable],
					[IsPaid],
					[DatePaid],
					[PaidByAdvertiserUserID],
					[TotalAmount],
					[GST],
					[CurrencyID],
					[DiscountAmount],
					[DiscountGST],
					[responseCode],
					[responseText],
					[bankTransactionID],
					[ResponseXML],
					[Success],
					[CardName],
					[CardNumber],
					[ExpiryMonth],
					[ExpiryYear],
					[CVV]
				FROM
					[dbo].[InvoiceOrder]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="InvoiceOrder_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the InvoiceOrder table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [OrderID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([OrderID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [OrderID]'
				SET @SQL = @SQL + ' FROM [dbo].[InvoiceOrder]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[OrderID], O.[AdvertiserUserID], O.[CreatedDate], O.[PaymentTypeID], O.[IsPayable], O.[IsPaid], O.[DatePaid], O.[PaidByAdvertiserUserID], O.[TotalAmount], O.[GST], O.[CurrencyID], O.[DiscountAmount], O.[DiscountGST], O.[responseCode], O.[responseText], O.[bankTransactionID], O.[ResponseXML], O.[Success], O.[CardName], O.[CardNumber], O.[ExpiryMonth], O.[ExpiryYear], O.[CVV]
				FROM
				    [dbo].[InvoiceOrder] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[OrderID] = PageIndex.[OrderID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[InvoiceOrder]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="InvoiceOrder_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the InvoiceOrder table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PaymentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsPayable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@IsPaid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DatePaid" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PaidByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@Gst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@DiscountGst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@ResponseCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResponseText" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@BankTransactionId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResponseXml" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Success" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CardName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CardNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExpiryMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Cvv" type="varchar" direction="Input" size="4" precision="0" scale="0" param="(4)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[InvoiceOrder]
					(
					[AdvertiserUserID]
					,[CreatedDate]
					,[PaymentTypeID]
					,[IsPayable]
					,[IsPaid]
					,[DatePaid]
					,[PaidByAdvertiserUserID]
					,[TotalAmount]
					,[GST]
					,[CurrencyID]
					,[DiscountAmount]
					,[DiscountGST]
					,[responseCode]
					,[responseText]
					,[bankTransactionID]
					,[ResponseXML]
					,[Success]
					,[CardName]
					,[CardNumber]
					,[ExpiryMonth]
					,[ExpiryYear]
					,[CVV]
					)
				VALUES
					(
					@AdvertiserUserId
					,@CreatedDate
					,@PaymentTypeId
					,@IsPayable
					,@IsPaid
					,@DatePaid
					,@PaidByAdvertiserUserId
					,@TotalAmount
					,@Gst
					,@CurrencyId
					,@DiscountAmount
					,@DiscountGst
					,@ResponseCode
					,@ResponseText
					,@BankTransactionId
					,@ResponseXml
					,@Success
					,@CardName
					,@CardNumber
					,@ExpiryMonth
					,@ExpiryYear
					,@Cvv
					)
				
				-- Get the identity value
				SET @OrderId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceOrder_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the InvoiceOrder table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PaymentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsPayable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@IsPaid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DatePaid" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@PaidByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@Gst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@DiscountGst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@ResponseCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResponseText" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@BankTransactionId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ResponseXml" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Success" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CardName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CardNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExpiryMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Cvv" type="varchar" direction="Input" size="4" precision="0" scale="0" param="(4)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[InvoiceOrder]
				SET
					[AdvertiserUserID] = @AdvertiserUserId
					,[CreatedDate] = @CreatedDate
					,[PaymentTypeID] = @PaymentTypeId
					,[IsPayable] = @IsPayable
					,[IsPaid] = @IsPaid
					,[DatePaid] = @DatePaid
					,[PaidByAdvertiserUserID] = @PaidByAdvertiserUserId
					,[TotalAmount] = @TotalAmount
					,[GST] = @Gst
					,[CurrencyID] = @CurrencyId
					,[DiscountAmount] = @DiscountAmount
					,[DiscountGST] = @DiscountGst
					,[responseCode] = @ResponseCode
					,[responseText] = @ResponseText
					,[bankTransactionID] = @BankTransactionId
					,[ResponseXML] = @ResponseXml
					,[Success] = @Success
					,[CardName] = @CardName
					,[CardNumber] = @CardNumber
					,[ExpiryMonth] = @ExpiryMonth
					,[ExpiryYear] = @ExpiryYear
					,[CVV] = @Cvv
				WHERE
[OrderID] = @OrderId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceOrder_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the InvoiceOrder table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[InvoiceOrder] WITH (ROWLOCK) 
				WHERE
					[OrderID] = @OrderId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceOrder_GetByAdvertiserUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceOrder table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OrderID],
					[AdvertiserUserID],
					[CreatedDate],
					[PaymentTypeID],
					[IsPayable],
					[IsPaid],
					[DatePaid],
					[PaidByAdvertiserUserID],
					[TotalAmount],
					[GST],
					[CurrencyID],
					[DiscountAmount],
					[DiscountGST],
					[responseCode],
					[responseText],
					[bankTransactionID],
					[ResponseXML],
					[Success],
					[CardName],
					[CardNumber],
					[ExpiryMonth],
					[ExpiryYear],
					[CVV]
				FROM
					[dbo].[InvoiceOrder]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceOrder_GetByOrderId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceOrder table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OrderID],
					[AdvertiserUserID],
					[CreatedDate],
					[PaymentTypeID],
					[IsPayable],
					[IsPaid],
					[DatePaid],
					[PaidByAdvertiserUserID],
					[TotalAmount],
					[GST],
					[CurrencyID],
					[DiscountAmount],
					[DiscountGST],
					[responseCode],
					[responseText],
					[bankTransactionID],
					[ResponseXML],
					[Success],
					[CardName],
					[CardNumber],
					[ExpiryMonth],
					[ExpiryYear],
					[CVV]
				FROM
					[dbo].[InvoiceOrder]
				WHERE
					[OrderID] = @OrderId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="InvoiceOrder_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the InvoiceOrder table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PaymentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPayable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPaid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePaid" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PaidByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Gst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DiscountGst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@ResponseCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponseText" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BankTransactionId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponseXml" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Success" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CardName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CardNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExpiryMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Cvv" type="varchar" direction="Input" size="4" precision="0" scale="0" param="(4)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OrderID]
	, [AdvertiserUserID]
	, [CreatedDate]
	, [PaymentTypeID]
	, [IsPayable]
	, [IsPaid]
	, [DatePaid]
	, [PaidByAdvertiserUserID]
	, [TotalAmount]
	, [GST]
	, [CurrencyID]
	, [DiscountAmount]
	, [DiscountGST]
	, [responseCode]
	, [responseText]
	, [bankTransactionID]
	, [ResponseXML]
	, [Success]
	, [CardName]
	, [CardNumber]
	, [ExpiryMonth]
	, [ExpiryYear]
	, [CVV]
    FROM
	[dbo].[InvoiceOrder]
    WHERE 
	 ([OrderID] = @OrderId OR @OrderId IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([PaymentTypeID] = @PaymentTypeId OR @PaymentTypeId IS NULL)
	AND ([IsPayable] = @IsPayable OR @IsPayable IS NULL)
	AND ([IsPaid] = @IsPaid OR @IsPaid IS NULL)
	AND ([DatePaid] = @DatePaid OR @DatePaid IS NULL)
	AND ([PaidByAdvertiserUserID] = @PaidByAdvertiserUserId OR @PaidByAdvertiserUserId IS NULL)
	AND ([TotalAmount] = @TotalAmount OR @TotalAmount IS NULL)
	AND ([GST] = @Gst OR @Gst IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([DiscountAmount] = @DiscountAmount OR @DiscountAmount IS NULL)
	AND ([DiscountGST] = @DiscountGst OR @DiscountGst IS NULL)
	AND ([responseCode] = @ResponseCode OR @ResponseCode IS NULL)
	AND ([responseText] = @ResponseText OR @ResponseText IS NULL)
	AND ([bankTransactionID] = @BankTransactionId OR @BankTransactionId IS NULL)
	AND ([ResponseXML] = @ResponseXml OR @ResponseXml IS NULL)
	AND ([Success] = @Success OR @Success IS NULL)
	AND ([CardName] = @CardName OR @CardName IS NULL)
	AND ([CardNumber] = @CardNumber OR @CardNumber IS NULL)
	AND ([ExpiryMonth] = @ExpiryMonth OR @ExpiryMonth IS NULL)
	AND ([ExpiryYear] = @ExpiryYear OR @ExpiryYear IS NULL)
	AND ([CVV] = @Cvv OR @Cvv IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OrderID]
	, [AdvertiserUserID]
	, [CreatedDate]
	, [PaymentTypeID]
	, [IsPayable]
	, [IsPaid]
	, [DatePaid]
	, [PaidByAdvertiserUserID]
	, [TotalAmount]
	, [GST]
	, [CurrencyID]
	, [DiscountAmount]
	, [DiscountGST]
	, [responseCode]
	, [responseText]
	, [bankTransactionID]
	, [ResponseXML]
	, [Success]
	, [CardName]
	, [CardNumber]
	, [ExpiryMonth]
	, [ExpiryYear]
	, [CVV]
    FROM
	[dbo].[InvoiceOrder]
    WHERE 
	 ([OrderID] = @OrderId AND @OrderId is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([PaymentTypeID] = @PaymentTypeId AND @PaymentTypeId is not null)
	OR ([IsPayable] = @IsPayable AND @IsPayable is not null)
	OR ([IsPaid] = @IsPaid AND @IsPaid is not null)
	OR ([DatePaid] = @DatePaid AND @DatePaid is not null)
	OR ([PaidByAdvertiserUserID] = @PaidByAdvertiserUserId AND @PaidByAdvertiserUserId is not null)
	OR ([TotalAmount] = @TotalAmount AND @TotalAmount is not null)
	OR ([GST] = @Gst AND @Gst is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([DiscountAmount] = @DiscountAmount AND @DiscountAmount is not null)
	OR ([DiscountGST] = @DiscountGst AND @DiscountGst is not null)
	OR ([responseCode] = @ResponseCode AND @ResponseCode is not null)
	OR ([responseText] = @ResponseText AND @ResponseText is not null)
	OR ([bankTransactionID] = @BankTransactionId AND @BankTransactionId is not null)
	OR ([ResponseXML] = @ResponseXml AND @ResponseXml is not null)
	OR ([Success] = @Success AND @Success is not null)
	OR ([CardName] = @CardName AND @CardName is not null)
	OR ([CardNumber] = @CardNumber AND @CardNumber is not null)
	OR ([ExpiryMonth] = @ExpiryMonth AND @ExpiryMonth is not null)
	OR ([ExpiryYear] = @ExpiryYear AND @ExpiryYear is not null)
	OR ([CVV] = @Cvv AND @Cvv is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="InvoiceOrder_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the InvoiceOrder table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [OrderID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [OrderID] )
				SELECT TOP {3} [OrderID]
				FROM [dbo].[InvoiceOrder] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[OrderID], O.[AdvertiserUserID], O.[CreatedDate], O.[PaymentTypeID], O.[IsPayable], O.[IsPaid], O.[DatePaid], O.[PaidByAdvertiserUserID], O.[TotalAmount], O.[GST], O.[CurrencyID], O.[DiscountAmount], O.[DiscountGST], O.[responseCode], O.[responseText], O.[bankTransactionID], O.[ResponseXML], O.[Success], O.[CardName], O.[CardNumber], O.[ExpiryMonth], O.[ExpiryYear], O.[CVV]
				FROM
				    [dbo].[InvoiceOrder] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[OrderID] = PageIndex.[OrderID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[InvoiceOrder] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="InvoiceOrder_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the InvoiceOrder table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PaymentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPayable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPaid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePaid" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PaidByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Gst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DiscountGst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@ResponseCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponseText" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BankTransactionId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponseXml" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Success" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CardName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CardNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExpiryMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Cvv" type="varchar" direction="Input" size="4" precision="0" scale="0" param="(4)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[InvoiceOrder]
					(
					[AdvertiserUserID]
					,[CreatedDate]
					,[PaymentTypeID]
					,[IsPayable]
					,[IsPaid]
					,[DatePaid]
					,[PaidByAdvertiserUserID]
					,[TotalAmount]
					,[GST]
					,[CurrencyID]
					,[DiscountAmount]
					,[DiscountGST]
					,[responseCode]
					,[responseText]
					,[bankTransactionID]
					,[ResponseXML]
					,[Success]
					,[CardName]
					,[CardNumber]
					,[ExpiryMonth]
					,[ExpiryYear]
					,[CVV]
					)
				VALUES
					(
					@AdvertiserUserId
					,@CreatedDate
					,@PaymentTypeId
					,@IsPayable
					,@IsPaid
					,@DatePaid
					,@PaidByAdvertiserUserId
					,@TotalAmount
					,@Gst
					,@CurrencyId
					,@DiscountAmount
					,@DiscountGst
					,@ResponseCode
					,@ResponseText
					,@BankTransactionId
					,@ResponseXml
					,@Success
					,@CardName
					,@CardNumber
					,@ExpiryMonth
					,@ExpiryYear
					,@Cvv
					)
				
				-- Get the identity value
				SET @OrderId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceOrder_GetByAdvertiserUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceOrder table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[OrderID],
					[AdvertiserUserID],
					[CreatedDate],
					[PaymentTypeID],
					[IsPayable],
					[IsPaid],
					[DatePaid],
					[PaidByAdvertiserUserID],
					[TotalAmount],
					[GST],
					[CurrencyID],
					[DiscountAmount],
					[DiscountGST],
					[responseCode],
					[responseText],
					[bankTransactionID],
					[ResponseXML],
					[Success],
					[CardName],
					[CardNumber],
					[ExpiryMonth],
					[ExpiryYear],
					[CVV]
				FROM
					[dbo].[InvoiceOrder]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceOrder_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the InvoiceOrder table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[OrderID],
					[AdvertiserUserID],
					[CreatedDate],
					[PaymentTypeID],
					[IsPayable],
					[IsPaid],
					[DatePaid],
					[PaidByAdvertiserUserID],
					[TotalAmount],
					[GST],
					[CurrencyID],
					[DiscountAmount],
					[DiscountGST],
					[responseCode],
					[responseText],
					[bankTransactionID],
					[ResponseXML],
					[Success],
					[CardName],
					[CardNumber],
					[ExpiryMonth],
					[ExpiryYear],
					[CVV]
				FROM
					[dbo].[InvoiceOrder]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceOrder_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the InvoiceOrder table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[InvoiceOrder]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceOrder_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the InvoiceOrder table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PaymentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPayable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPaid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePaid" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PaidByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Gst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DiscountGst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@ResponseCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponseText" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BankTransactionId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponseXml" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Success" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CardName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CardNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExpiryMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Cvv" type="varchar" direction="Input" size="4" precision="0" scale="0" param="(4)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OrderID]
	, [AdvertiserUserID]
	, [CreatedDate]
	, [PaymentTypeID]
	, [IsPayable]
	, [IsPaid]
	, [DatePaid]
	, [PaidByAdvertiserUserID]
	, [TotalAmount]
	, [GST]
	, [CurrencyID]
	, [DiscountAmount]
	, [DiscountGST]
	, [responseCode]
	, [responseText]
	, [bankTransactionID]
	, [ResponseXML]
	, [Success]
	, [CardName]
	, [CardNumber]
	, [ExpiryMonth]
	, [ExpiryYear]
	, [CVV]
    FROM
	[dbo].[InvoiceOrder]
    WHERE 
	 ([OrderID] = @OrderId OR @OrderId IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([PaymentTypeID] = @PaymentTypeId OR @PaymentTypeId IS NULL)
	AND ([IsPayable] = @IsPayable OR @IsPayable IS NULL)
	AND ([IsPaid] = @IsPaid OR @IsPaid IS NULL)
	AND ([DatePaid] = @DatePaid OR @DatePaid IS NULL)
	AND ([PaidByAdvertiserUserID] = @PaidByAdvertiserUserId OR @PaidByAdvertiserUserId IS NULL)
	AND ([TotalAmount] = @TotalAmount OR @TotalAmount IS NULL)
	AND ([GST] = @Gst OR @Gst IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([DiscountAmount] = @DiscountAmount OR @DiscountAmount IS NULL)
	AND ([DiscountGST] = @DiscountGst OR @DiscountGst IS NULL)
	AND ([responseCode] = @ResponseCode OR @ResponseCode IS NULL)
	AND ([responseText] = @ResponseText OR @ResponseText IS NULL)
	AND ([bankTransactionID] = @BankTransactionId OR @BankTransactionId IS NULL)
	AND ([ResponseXML] = @ResponseXml OR @ResponseXml IS NULL)
	AND ([Success] = @Success OR @Success IS NULL)
	AND ([CardName] = @CardName OR @CardName IS NULL)
	AND ([CardNumber] = @CardNumber OR @CardNumber IS NULL)
	AND ([ExpiryMonth] = @ExpiryMonth OR @ExpiryMonth IS NULL)
	AND ([ExpiryYear] = @ExpiryYear OR @ExpiryYear IS NULL)
	AND ([CVV] = @Cvv OR @Cvv IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OrderID]
	, [AdvertiserUserID]
	, [CreatedDate]
	, [PaymentTypeID]
	, [IsPayable]
	, [IsPaid]
	, [DatePaid]
	, [PaidByAdvertiserUserID]
	, [TotalAmount]
	, [GST]
	, [CurrencyID]
	, [DiscountAmount]
	, [DiscountGST]
	, [responseCode]
	, [responseText]
	, [bankTransactionID]
	, [ResponseXML]
	, [Success]
	, [CardName]
	, [CardNumber]
	, [ExpiryMonth]
	, [ExpiryYear]
	, [CVV]
    FROM
	[dbo].[InvoiceOrder]
    WHERE 
	 ([OrderID] = @OrderId AND @OrderId is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([PaymentTypeID] = @PaymentTypeId AND @PaymentTypeId is not null)
	OR ([IsPayable] = @IsPayable AND @IsPayable is not null)
	OR ([IsPaid] = @IsPaid AND @IsPaid is not null)
	OR ([DatePaid] = @DatePaid AND @DatePaid is not null)
	OR ([PaidByAdvertiserUserID] = @PaidByAdvertiserUserId AND @PaidByAdvertiserUserId is not null)
	OR ([TotalAmount] = @TotalAmount AND @TotalAmount is not null)
	OR ([GST] = @Gst AND @Gst is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([DiscountAmount] = @DiscountAmount AND @DiscountAmount is not null)
	OR ([DiscountGST] = @DiscountGst AND @DiscountGst is not null)
	OR ([responseCode] = @ResponseCode AND @ResponseCode is not null)
	OR ([responseText] = @ResponseText AND @ResponseText is not null)
	OR ([bankTransactionID] = @BankTransactionId AND @BankTransactionId is not null)
	OR ([ResponseXML] = @ResponseXml AND @ResponseXml is not null)
	OR ([Success] = @Success AND @Success is not null)
	OR ([CardName] = @CardName AND @CardName is not null)
	OR ([CardNumber] = @CardNumber AND @CardNumber is not null)
	OR ([ExpiryMonth] = @ExpiryMonth AND @ExpiryMonth is not null)
	OR ([ExpiryYear] = @ExpiryYear AND @ExpiryYear is not null)
	OR ([CVV] = @Cvv AND @Cvv is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceOrder_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the InvoiceOrder table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[InvoiceOrder] WITH (ROWLOCK) 
				WHERE
					[OrderID] = @OrderId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceOrder_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the InvoiceOrder table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PaymentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPayable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPaid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePaid" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PaidByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Gst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DiscountGst" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@ResponseCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponseText" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BankTransactionId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ResponseXml" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Success" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CardName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CardNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExpiryMonth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryYear" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Cvv" type="varchar" direction="Input" size="4" precision="0" scale="0" param="(4)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[InvoiceOrder]
				SET
					[AdvertiserUserID] = @AdvertiserUserId
					,[CreatedDate] = @CreatedDate
					,[PaymentTypeID] = @PaymentTypeId
					,[IsPayable] = @IsPayable
					,[IsPaid] = @IsPaid
					,[DatePaid] = @DatePaid
					,[PaidByAdvertiserUserID] = @PaidByAdvertiserUserId
					,[TotalAmount] = @TotalAmount
					,[GST] = @Gst
					,[CurrencyID] = @CurrencyId
					,[DiscountAmount] = @DiscountAmount
					,[DiscountGST] = @DiscountGst
					,[responseCode] = @ResponseCode
					,[responseText] = @ResponseText
					,[bankTransactionID] = @BankTransactionId
					,[ResponseXML] = @ResponseXml
					,[Success] = @Success
					,[CardName] = @CardName
					,[CardNumber] = @CardNumber
					,[ExpiryMonth] = @ExpiryMonth
					,[ExpiryYear] = @ExpiryYear
					,[CVV] = @Cvv
				WHERE
[OrderID] = @OrderId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceOrder_GetByOrderId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceOrder table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[OrderID],
					[AdvertiserUserID],
					[CreatedDate],
					[PaymentTypeID],
					[IsPayable],
					[IsPaid],
					[DatePaid],
					[PaidByAdvertiserUserID],
					[TotalAmount],
					[GST],
					[CurrencyID],
					[DiscountAmount],
					[DiscountGST],
					[responseCode],
					[responseText],
					[bankTransactionID],
					[ResponseXML],
					[Success],
					[CardName],
					[CardNumber],
					[ExpiryMonth],
					[ExpiryYear],
					[CVV]
				FROM
					[dbo].[InvoiceOrder]
				WHERE
					[OrderID] = @OrderId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="AdvertiserUsers_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserUsers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdvertiserUserID],
					[AdvertiserID],
					[PrimaryAccount],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[ApplicationEmailAddress],
					[Phone],
					[Fax],
					[AccountStatus],
					[Newsletter],
					[NewsletterFormat],
					[EmailFormat],
					[Validated],
					[ValidateGUID],
					[Description],
					[LastLoginDate],
					[LastModified],
					[LastModifiedBy],
					[JobExpiryNotification],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="AdvertiserUsers_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserUsers table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserUserID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AdvertiserUserID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AdvertiserUserID]'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserUsers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AdvertiserUserID], O.[AdvertiserID], O.[PrimaryAccount], O.[UserName], O.[UserPassword], O.[FirstName], O.[Surname], O.[Email], O.[ApplicationEmailAddress], O.[Phone], O.[Fax], O.[AccountStatus], O.[Newsletter], O.[NewsletterFormat], O.[EmailFormat], O.[Validated], O.[ValidateGUID], O.[Description], O.[LastLoginDate], O.[LastModified], O.[LastModifiedBy], O.[JobExpiryNotification], O.[LoginAttempts], O.[LastAttemptDate], O.[Status], O.[LastTermsAndConditionsDate], O.[DefaultLanguageId], O.[ExternalAdvertiserUserID]
				FROM
				    [dbo].[AdvertiserUsers] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AdvertiserUserID] = PageIndex.[AdvertiserUserID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserUsers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="AdvertiserUsers_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserUsers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PrimaryAccount" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Phone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@AccountStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Newsletter" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsletterFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@LastLoginDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExternalAdvertiserUserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[AdvertiserUsers]
					(
					[AdvertiserID]
					,[PrimaryAccount]
					,[UserName]
					,[UserPassword]
					,[FirstName]
					,[Surname]
					,[Email]
					,[ApplicationEmailAddress]
					,[Phone]
					,[Fax]
					,[AccountStatus]
					,[Newsletter]
					,[NewsletterFormat]
					,[EmailFormat]
					,[Validated]
					,[ValidateGUID]
					,[Description]
					,[LastLoginDate]
					,[LastModified]
					,[LastModifiedBy]
					,[JobExpiryNotification]
					,[LoginAttempts]
					,[LastAttemptDate]
					,[Status]
					,[LastTermsAndConditionsDate]
					,[DefaultLanguageId]
					,[ExternalAdvertiserUserID]
					)
				VALUES
					(
					@AdvertiserId
					,@PrimaryAccount
					,@UserName
					,@UserPassword
					,@FirstName
					,@Surname
					,@Email
					,@ApplicationEmailAddress
					,@Phone
					,@Fax
					,@AccountStatus
					,@Newsletter
					,@NewsletterFormat
					,@EmailFormat
					,@Validated
					,@ValidateGuid
					,@Description
					,@LastLoginDate
					,@LastModified
					,@LastModifiedBy
					,@JobExpiryNotification
					,@LoginAttempts
					,@LastAttemptDate
					,@Status
					,@LastTermsAndConditionsDate
					,@DefaultLanguageId
					,@ExternalAdvertiserUserId
					)
				
				-- Get the identity value
				SET @AdvertiserUserId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserUsers_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserUsers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PrimaryAccount" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Phone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@AccountStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Newsletter" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@NewsletterFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@LastLoginDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExternalAdvertiserUserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AdvertiserUsers]
				SET
					[AdvertiserID] = @AdvertiserId
					,[PrimaryAccount] = @PrimaryAccount
					,[UserName] = @UserName
					,[UserPassword] = @UserPassword
					,[FirstName] = @FirstName
					,[Surname] = @Surname
					,[Email] = @Email
					,[ApplicationEmailAddress] = @ApplicationEmailAddress
					,[Phone] = @Phone
					,[Fax] = @Fax
					,[AccountStatus] = @AccountStatus
					,[Newsletter] = @Newsletter
					,[NewsletterFormat] = @NewsletterFormat
					,[EmailFormat] = @EmailFormat
					,[Validated] = @Validated
					,[ValidateGUID] = @ValidateGuid
					,[Description] = @Description
					,[LastLoginDate] = @LastLoginDate
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
					,[JobExpiryNotification] = @JobExpiryNotification
					,[LoginAttempts] = @LoginAttempts
					,[LastAttemptDate] = @LastAttemptDate
					,[Status] = @Status
					,[LastTermsAndConditionsDate] = @LastTermsAndConditionsDate
					,[DefaultLanguageId] = @DefaultLanguageId
					,[ExternalAdvertiserUserID] = @ExternalAdvertiserUserId
				WHERE
[AdvertiserUserID] = @AdvertiserUserId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserUsers_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserUsers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[AdvertiserUsers] WITH (ROWLOCK) 
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserUsers_GetByAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserUserID],
					[AdvertiserID],
					[PrimaryAccount],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[ApplicationEmailAddress],
					[Phone],
					[Fax],
					[AccountStatus],
					[Newsletter],
					[NewsletterFormat],
					[EmailFormat],
					[Validated],
					[ValidateGUID],
					[Description],
					[LastLoginDate],
					[LastModified],
					[LastModifiedBy],
					[JobExpiryNotification],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserUsers_GetByEmailFormat" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserUserID],
					[AdvertiserID],
					[PrimaryAccount],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[ApplicationEmailAddress],
					[Phone],
					[Fax],
					[AccountStatus],
					[Newsletter],
					[NewsletterFormat],
					[EmailFormat],
					[Validated],
					[ValidateGUID],
					[Description],
					[LastLoginDate],
					[LastModified],
					[LastModifiedBy],
					[JobExpiryNotification],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[EmailFormat] = @EmailFormat
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserUsers_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserUserID],
					[AdvertiserID],
					[PrimaryAccount],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[ApplicationEmailAddress],
					[Phone],
					[Fax],
					[AccountStatus],
					[Newsletter],
					[NewsletterFormat],
					[EmailFormat],
					[Validated],
					[ValidateGUID],
					[Description],
					[LastLoginDate],
					[LastModified],
					[LastModifiedBy],
					[JobExpiryNotification],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserUsers_GetByNewsletterFormat" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NewsletterFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserUserID],
					[AdvertiserID],
					[PrimaryAccount],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[ApplicationEmailAddress],
					[Phone],
					[Fax],
					[AccountStatus],
					[Newsletter],
					[NewsletterFormat],
					[EmailFormat],
					[Validated],
					[ValidateGUID],
					[Description],
					[LastLoginDate],
					[LastModified],
					[LastModifiedBy],
					[JobExpiryNotification],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[NewsletterFormat] = @NewsletterFormat
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AdvertiserUsers_GetByUserNameAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdvertiserUserID],
					[AdvertiserID],
					[PrimaryAccount],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[ApplicationEmailAddress],
					[Phone],
					[Fax],
					[AccountStatus],
					[Newsletter],
					[NewsletterFormat],
					[EmailFormat],
					[Validated],
					[ValidateGUID],
					[Description],
					[LastLoginDate],
					[LastModified],
					[LastModifiedBy],
					[JobExpiryNotification],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[UserName] = @UserName
					AND [AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdvertiserUsers_GetByAdvertiserUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdvertiserUserID],
					[AdvertiserID],
					[PrimaryAccount],
					[UserName],
					[UserPassword],
					[FirstName],
					[Surname],
					[Email],
					[ApplicationEmailAddress],
					[Phone],
					[Fax],
					[AccountStatus],
					[Newsletter],
					[NewsletterFormat],
					[EmailFormat],
					[Validated],
					[ValidateGUID],
					[Description],
					[LastLoginDate],
					[LastModified],
					[LastModifiedBy],
					[JobExpiryNotification],
					[LoginAttempts],
					[LastAttemptDate],
					[Status],
					[LastTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AdvertiserUsers_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserUsers table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrimaryAccount" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Phone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@AccountStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Newsletter" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsletterFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastLoginDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalAdvertiserUserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserUserID]
	, [AdvertiserID]
	, [PrimaryAccount]
	, [UserName]
	, [UserPassword]
	, [FirstName]
	, [Surname]
	, [Email]
	, [ApplicationEmailAddress]
	, [Phone]
	, [Fax]
	, [AccountStatus]
	, [Newsletter]
	, [NewsletterFormat]
	, [EmailFormat]
	, [Validated]
	, [ValidateGUID]
	, [Description]
	, [LastLoginDate]
	, [LastModified]
	, [LastModifiedBy]
	, [JobExpiryNotification]
	, [LoginAttempts]
	, [LastAttemptDate]
	, [Status]
	, [LastTermsAndConditionsDate]
	, [DefaultLanguageId]
	, [ExternalAdvertiserUserID]
    FROM
	[dbo].[AdvertiserUsers]
    WHERE 
	 ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([PrimaryAccount] = @PrimaryAccount OR @PrimaryAccount IS NULL)
	AND ([UserName] = @UserName OR @UserName IS NULL)
	AND ([UserPassword] = @UserPassword OR @UserPassword IS NULL)
	AND ([FirstName] = @FirstName OR @FirstName IS NULL)
	AND ([Surname] = @Surname OR @Surname IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([ApplicationEmailAddress] = @ApplicationEmailAddress OR @ApplicationEmailAddress IS NULL)
	AND ([Phone] = @Phone OR @Phone IS NULL)
	AND ([Fax] = @Fax OR @Fax IS NULL)
	AND ([AccountStatus] = @AccountStatus OR @AccountStatus IS NULL)
	AND ([Newsletter] = @Newsletter OR @Newsletter IS NULL)
	AND ([NewsletterFormat] = @NewsletterFormat OR @NewsletterFormat IS NULL)
	AND ([EmailFormat] = @EmailFormat OR @EmailFormat IS NULL)
	AND ([Validated] = @Validated OR @Validated IS NULL)
	AND ([ValidateGUID] = @ValidateGuid OR @ValidateGuid IS NULL)
	AND ([LastLoginDate] = @LastLoginDate OR @LastLoginDate IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([JobExpiryNotification] = @JobExpiryNotification OR @JobExpiryNotification IS NULL)
	AND ([LoginAttempts] = @LoginAttempts OR @LoginAttempts IS NULL)
	AND ([LastAttemptDate] = @LastAttemptDate OR @LastAttemptDate IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
	AND ([LastTermsAndConditionsDate] = @LastTermsAndConditionsDate OR @LastTermsAndConditionsDate IS NULL)
	AND ([DefaultLanguageId] = @DefaultLanguageId OR @DefaultLanguageId IS NULL)
	AND ([ExternalAdvertiserUserID] = @ExternalAdvertiserUserId OR @ExternalAdvertiserUserId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserUserID]
	, [AdvertiserID]
	, [PrimaryAccount]
	, [UserName]
	, [UserPassword]
	, [FirstName]
	, [Surname]
	, [Email]
	, [ApplicationEmailAddress]
	, [Phone]
	, [Fax]
	, [AccountStatus]
	, [Newsletter]
	, [NewsletterFormat]
	, [EmailFormat]
	, [Validated]
	, [ValidateGUID]
	, [Description]
	, [LastLoginDate]
	, [LastModified]
	, [LastModifiedBy]
	, [JobExpiryNotification]
	, [LoginAttempts]
	, [LastAttemptDate]
	, [Status]
	, [LastTermsAndConditionsDate]
	, [DefaultLanguageId]
	, [ExternalAdvertiserUserID]
    FROM
	[dbo].[AdvertiserUsers]
    WHERE 
	 ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([PrimaryAccount] = @PrimaryAccount AND @PrimaryAccount is not null)
	OR ([UserName] = @UserName AND @UserName is not null)
	OR ([UserPassword] = @UserPassword AND @UserPassword is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([Surname] = @Surname AND @Surname is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([ApplicationEmailAddress] = @ApplicationEmailAddress AND @ApplicationEmailAddress is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([Fax] = @Fax AND @Fax is not null)
	OR ([AccountStatus] = @AccountStatus AND @AccountStatus is not null)
	OR ([Newsletter] = @Newsletter AND @Newsletter is not null)
	OR ([NewsletterFormat] = @NewsletterFormat AND @NewsletterFormat is not null)
	OR ([EmailFormat] = @EmailFormat AND @EmailFormat is not null)
	OR ([Validated] = @Validated AND @Validated is not null)
	OR ([ValidateGUID] = @ValidateGuid AND @ValidateGuid is not null)
	OR ([LastLoginDate] = @LastLoginDate AND @LastLoginDate is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([JobExpiryNotification] = @JobExpiryNotification AND @JobExpiryNotification is not null)
	OR ([LoginAttempts] = @LoginAttempts AND @LoginAttempts is not null)
	OR ([LastAttemptDate] = @LastAttemptDate AND @LastAttemptDate is not null)
	OR ([Status] = @Status AND @Status is not null)
	OR ([LastTermsAndConditionsDate] = @LastTermsAndConditionsDate AND @LastTermsAndConditionsDate is not null)
	OR ([DefaultLanguageId] = @DefaultLanguageId AND @DefaultLanguageId is not null)
	OR ([ExternalAdvertiserUserID] = @ExternalAdvertiserUserId AND @ExternalAdvertiserUserId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="AdvertiserUsers_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserUsers table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserUserID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AdvertiserUserID] )
				SELECT TOP {3} [AdvertiserUserID]
				FROM [dbo].[AdvertiserUsers] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AdvertiserUserID], O.[AdvertiserID], O.[PrimaryAccount], O.[UserName], O.[UserPassword], O.[FirstName], O.[Surname], O.[Email], O.[ApplicationEmailAddress], O.[Phone], O.[Fax], O.[AccountStatus], O.[Newsletter], O.[NewsletterFormat], O.[EmailFormat], O.[Validated], O.[ValidateGUID], O.[Description], O.[LastLoginDate], O.[LastModified], O.[LastModifiedBy], O.[JobExpiryNotification], O.[LoginAttempts], O.[LastAttemptDate], O.[Status], O.[LastTermsAndConditionsDate], O.[DefaultLanguageId], O.[ExternalAdvertiserUserID]
				FROM
				    [dbo].[AdvertiserUsers] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AdvertiserUserID] = PageIndex.[AdvertiserUserID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[AdvertiserUsers] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="AdvertiserUsers_GetByUserNameAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[UserName] = @UserName
					AND [AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_GetByAdvertiserUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_GetByNewsletterFormat"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@NewsletterFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[NewsletterFormat] = @NewsletterFormat
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AdvertiserUsers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrimaryAccount" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Phone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@AccountStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Newsletter" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsletterFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastLoginDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalAdvertiserUserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate
					,@DefaultLanguageId
					,@ExternalAdvertiserUserId
					)
				
				-- Get the identity value
				SET @AdvertiserUserId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AdvertiserUsers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AdvertiserUsers table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AdvertiserUsers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_AdminGetPaged"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy        
 INNER JOIN EmailFormats EmailFormats WITH(NOLOCK) ON EmailFormats.EmailFormatID = AdvertiserUsers.EmailFormat    
 INNER JOIN Advertisers Advertisers WITH(NOLOCK) ON Advertisers.AdvertiserID = AdvertiserUsers.AdvertiserID    
 INNER JOIN @tmpAdvertiserUserID AdvertiserUserSearchResult ON AdvertiserUsers.AdvertiserUserID = AdvertiserUserSearchResult.AdvertiserUserID        
 WHERE  AdvertiserUserSearchResult.RowNumber >= @PageStart        
 AND  AdvertiserUserSearchResult.RowNumber <= @PageEnd        
 ORDER BY AdvertiserUserSearchResult.RowNumber        
        
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_GetByUserNameSiteId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate],   
     [AdvertiserUsers].[DefaultLanguageId],
     [AdvertiserUsers].[ExternalAdvertiserUserID]   
    FROM      
     [dbo].[AdvertiserUsers] (NOLOCK)      
    INNER JOIN [dbo].[Advertisers] (NOLOCK)      
    ON [AdvertiserUsers].[AdvertiserID] = [Advertisers].[AdvertiserID]      
    WHERE      
     (      
      ((@UserName IS NULL) OR (@UserName = '') OR ([AdvertiserUsers].UserName = @UserName))      
      AND [Advertisers].[SiteID] = @SiteID      
     )      
SELECT @@ROWCOUNT 


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AdvertiserUsers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrimaryAccount" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Phone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@AccountStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Newsletter" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsletterFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastLoginDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalAdvertiserUserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate
					,[DefaultLanguageId] = @DefaultLanguageId
					,[ExternalAdvertiserUserID] = @ExternalAdvertiserUserId
				WHERE
[AdvertiserUserID] = @AdvertiserUserId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AdvertiserUsers table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrimaryAccount" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@UserPassword" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Phone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@Fax" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@AccountStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Newsletter" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewsletterFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Validated" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ValidateGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastLoginDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExpiryNotification" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LoginAttempts" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastAttemptDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Status" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastTermsAndConditionsDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DefaultLanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalAdvertiserUserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate is not null)
	OR ([DefaultLanguageId] = @DefaultLanguageId AND @DefaultLanguageId is not null)
	OR ([ExternalAdvertiserUserID] = @ExternalAdvertiserUserId AND @ExternalAdvertiserUserId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AdvertiserUsers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[AdvertiserUsers] WITH (ROWLOCK) 
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_GetByEmailFormat"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate],
					[DefaultLanguageId],
					[ExternalAdvertiserUserID]
				FROM
					[dbo].[AdvertiserUsers]
				WHERE
					[EmailFormat] = @EmailFormat
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_GetAdvertiserUserPassword"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@Username" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tTermsAndConditionsDate,  
   au.DefaultLanguageId,
   au.ExternalAdvertiserUserID  
  FROM        
   AdvertiserUsers au WITH (NOLOCK) INNER JOIN Advertisers a  WITH (NOLOCK)          
   ON au.AdvertiserId = a.AdvertiserId          
  WHERE (UserName = @Username OR Email = @Email) AND a.SiteID = @SiteId -- AND au.Validated = 1          
 END          
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AdvertiserUsers_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AdvertiserUsers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="CustomWidget_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the CustomWidget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CustomWidgetID],
					[SiteID],
					[CustomWidgetCSSSelectorID],
					[CustomWidgetName],
					[Content],
					[DateCreated],
					[ModifiedDate],
					[ModifiedBy],
					[Active],
					[SourceID]
				FROM
					[dbo].[CustomWidget]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CustomWidget_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CustomWidget table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CustomWidgetID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([CustomWidgetID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [CustomWidgetID]'
				SET @SQL = @SQL + ' FROM [dbo].[CustomWidget]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[CustomWidgetID], O.[SiteID], O.[CustomWidgetCSSSelectorID], O.[CustomWidgetName], O.[Content], O.[DateCreated], O.[ModifiedDate], O.[ModifiedBy], O.[Active], O.[SourceID]
				FROM
				    [dbo].[CustomWidget] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[CustomWidgetID] = PageIndex.[CustomWidgetID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CustomWidget]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="CustomWidget_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the CustomWidget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DateCreated" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[CustomWidget]
					(
					[SiteID]
					,[CustomWidgetCSSSelectorID]
					,[CustomWidgetName]
					,[Content]
					,[DateCreated]
					,[ModifiedDate]
					,[ModifiedBy]
					,[Active]
					,[SourceID]
					)
				VALUES
					(
					@SiteId
					,@CustomWidgetCssSelectorId
					,@CustomWidgetName
					,@Content
					,@DateCreated
					,@ModifiedDate
					,@ModifiedBy
					,@Active
					,@SourceId
					)
				
				-- Get the identity value
				SET @CustomWidgetId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomWidget_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the CustomWidget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DateCreated" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[CustomWidget]
				SET
					[SiteID] = @SiteId
					,[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId
					,[CustomWidgetName] = @CustomWidgetName
					,[Content] = @Content
					,[DateCreated] = @DateCreated
					,[ModifiedDate] = @ModifiedDate
					,[ModifiedBy] = @ModifiedBy
					,[Active] = @Active
					,[SourceID] = @SourceId
				WHERE
[CustomWidgetID] = @CustomWidgetId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomWidget_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the CustomWidget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[CustomWidget] WITH (ROWLOCK) 
				WHERE
					[CustomWidgetID] = @CustomWidgetId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomWidget_GetByCustomWidgetCssSelectorId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidget table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CustomWidgetID],
					[SiteID],
					[CustomWidgetCSSSelectorID],
					[CustomWidgetName],
					[Content],
					[DateCreated],
					[ModifiedDate],
					[ModifiedBy],
					[Active],
					[SourceID]
				FROM
					[dbo].[CustomWidget]
				WHERE
					[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomWidget_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidget table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CustomWidgetID],
					[SiteID],
					[CustomWidgetCSSSelectorID],
					[CustomWidgetName],
					[Content],
					[DateCreated],
					[ModifiedDate],
					[ModifiedBy],
					[Active],
					[SourceID]
				FROM
					[dbo].[CustomWidget]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CustomWidget_GetByCustomWidgetId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidget table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CustomWidgetID],
					[SiteID],
					[CustomWidgetCSSSelectorID],
					[CustomWidgetName],
					[Content],
					[DateCreated],
					[ModifiedDate],
					[ModifiedBy],
					[Active],
					[SourceID]
				FROM
					[dbo].[CustomWidget]
				WHERE
					[CustomWidgetID] = @CustomWidgetId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="CustomWidget_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the CustomWidget table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateCreated" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomWidgetID]
	, [SiteID]
	, [CustomWidgetCSSSelectorID]
	, [CustomWidgetName]
	, [Content]
	, [DateCreated]
	, [ModifiedDate]
	, [ModifiedBy]
	, [Active]
	, [SourceID]
    FROM
	[dbo].[CustomWidget]
    WHERE 
	 ([CustomWidgetID] = @CustomWidgetId OR @CustomWidgetId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId OR @CustomWidgetCssSelectorId IS NULL)
	AND ([CustomWidgetName] = @CustomWidgetName OR @CustomWidgetName IS NULL)
	AND ([DateCreated] = @DateCreated OR @DateCreated IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
	AND ([ModifiedBy] = @ModifiedBy OR @ModifiedBy IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomWidgetID]
	, [SiteID]
	, [CustomWidgetCSSSelectorID]
	, [CustomWidgetName]
	, [Content]
	, [DateCreated]
	, [ModifiedDate]
	, [ModifiedBy]
	, [Active]
	, [SourceID]
    FROM
	[dbo].[CustomWidget]
    WHERE 
	 ([CustomWidgetID] = @CustomWidgetId AND @CustomWidgetId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId AND @CustomWidgetCssSelectorId is not null)
	OR ([CustomWidgetName] = @CustomWidgetName AND @CustomWidgetName is not null)
	OR ([DateCreated] = @DateCreated AND @DateCreated is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	OR ([ModifiedBy] = @ModifiedBy AND @ModifiedBy is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="CustomWidget_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CustomWidget table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [CustomWidgetID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [CustomWidgetID] )
				SELECT TOP {3} [CustomWidgetID]
				FROM [dbo].[CustomWidget] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[CustomWidgetID], O.[SiteID], O.[CustomWidgetCSSSelectorID], O.[CustomWidgetName], O.[Content], O.[DateCreated], O.[ModifiedDate], O.[ModifiedBy], O.[Active], O.[SourceID]
				FROM
				    [dbo].[CustomWidget] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[CustomWidgetID] = PageIndex.[CustomWidgetID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[CustomWidget] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="CustomWidget_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the CustomWidget table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateCreated" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[CustomWidget]
					(
					[SiteID]
					,[CustomWidgetCSSSelectorID]
					,[CustomWidgetName]
					,[Content]
					,[DateCreated]
					,[ModifiedDate]
					,[ModifiedBy]
					,[Active]
					,[SourceID]
					)
				VALUES
					(
					@SiteId
					,@CustomWidgetCssSelectorId
					,@CustomWidgetName
					,@Content
					,@DateCreated
					,@ModifiedDate
					,@ModifiedBy
					,@Active
					,@SourceId
					)
				
				-- Get the identity value
				SET @CustomWidgetId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_GetByCustomWidgetCssSelectorId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidget table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[CustomWidgetID],
					[SiteID],
					[CustomWidgetCSSSelectorID],
					[CustomWidgetName],
					[Content],
					[DateCreated],
					[ModifiedDate],
					[ModifiedBy],
					[Active],
					[SourceID]
				FROM
					[dbo].[CustomWidget]
				WHERE
					[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidget table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[CustomWidgetID],
					[SiteID],
					[CustomWidgetCSSSelectorID],
					[CustomWidgetName],
					[Content],
					[DateCreated],
					[ModifiedDate],
					[ModifiedBy],
					[Active],
					[SourceID]
				FROM
					[dbo].[CustomWidget]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the CustomWidget table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[CustomWidgetID],
					[SiteID],
					[CustomWidgetCSSSelectorID],
					[CustomWidgetName],
					[Content],
					[DateCreated],
					[ModifiedDate],
					[ModifiedBy],
					[Active],
					[SourceID]
				FROM
					[dbo].[CustomWidget]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the CustomWidget table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CustomWidget]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the CustomWidget table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateCreated" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[CustomWidget]
				SET
					[SiteID] = @SiteId
					,[CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId
					,[CustomWidgetName] = @CustomWidgetName
					,[Content] = @Content
					,[DateCreated] = @DateCreated
					,[ModifiedDate] = @ModifiedDate
					,[ModifiedBy] = @ModifiedBy
					,[Active] = @Active
					,[SourceID] = @SourceId
				WHERE
[CustomWidgetID] = @CustomWidgetId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_GetByCustomWidgetId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the CustomWidget table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[CustomWidgetID],
					[SiteID],
					[CustomWidgetCSSSelectorID],
					[CustomWidgetName],
					[Content],
					[DateCreated],
					[ModifiedDate],
					[ModifiedBy],
					[Active],
					[SourceID]
				FROM
					[dbo].[CustomWidget]
				WHERE
					[CustomWidgetID] = @CustomWidgetId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the CustomWidget table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetCssSelectorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Content" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateCreated" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomWidgetID]
	, [SiteID]
	, [CustomWidgetCSSSelectorID]
	, [CustomWidgetName]
	, [Content]
	, [DateCreated]
	, [ModifiedDate]
	, [ModifiedBy]
	, [Active]
	, [SourceID]
    FROM
	[dbo].[CustomWidget]
    WHERE 
	 ([CustomWidgetID] = @CustomWidgetId OR @CustomWidgetId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId OR @CustomWidgetCssSelectorId IS NULL)
	AND ([CustomWidgetName] = @CustomWidgetName OR @CustomWidgetName IS NULL)
	AND ([DateCreated] = @DateCreated OR @DateCreated IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
	AND ([ModifiedBy] = @ModifiedBy OR @ModifiedBy IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomWidgetID]
	, [SiteID]
	, [CustomWidgetCSSSelectorID]
	, [CustomWidgetName]
	, [Content]
	, [DateCreated]
	, [ModifiedDate]
	, [ModifiedBy]
	, [Active]
	, [SourceID]
    FROM
	[dbo].[CustomWidget]
    WHERE 
	 ([CustomWidgetID] = @CustomWidgetId AND @CustomWidgetId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([CustomWidgetCSSSelectorID] = @CustomWidgetCssSelectorId AND @CustomWidgetCssSelectorId is not null)
	OR ([CustomWidgetName] = @CustomWidgetName AND @CustomWidgetName is not null)
	OR ([DateCreated] = @DateCreated AND @DateCreated is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	OR ([ModifiedBy] = @ModifiedBy AND @ModifiedBy is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the CustomWidget table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[CustomWidget] WITH (ROWLOCK) 
				WHERE
					[CustomWidgetID] = @CustomWidgetId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_GetByDynamicPageIdFromDynamicpagesCustomWidget"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT [CustomWidgetID],
					[SiteID],
					[CustomWidgetCSSSelectorID],
					[CustomWidgetName],
					[Content],
					[DateCreated],
					[ModifiedDate],
					[ModifiedBy],
					[Active]
  FROM dbo.[CustomWidget]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[DynamicpagesCustomWidget] 
                WHERE dbo.[DynamicpagesCustomWidget].[DynamicPageID] = @DynamicPageId
                  AND dbo.[DynamicpagesCustomWidget].[CustomWidgetID] = dbo.[CustomWidget].[CustomWidgetID]
                  )
				SELECT @@ROWCOUNT

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="CustomWidget_CustomGetBySiteID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT CustomWidgetID,
		cw.SiteID,
		cw.CustomWidgetCSSSelectorID,
		cwcs.CustomWidgetCSSSelectorName,
		CustomWidgetName,
		Content,
		DateCreated,
		cw.ModifiedDate,
		cw.ModifiedBy,
		cw.Active,
		au.UserName
	FROM CustomWidget cw WITH (NOLOCK)
	INNER JOIN CustomWidgetCSSSelector cwcs WITH (NOLOCK)
	ON cw.CustomWidgetCSSSelectorID = cwcs.CustomWidgetCSSSelectorID
	LEFT JOIN AdminUsers au WITH (NOLOCK) ON cw.ModifiedBy = au.AdminUserID
	WHERE cw.SiteID = @SiteID

END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPageWebPartTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DynamicPageWebPartTemplateID],
					[DynamicPageWebPartName],
					[SiteID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[DynamicPageWebPartTemplates]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageWebPartTemplates table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageWebPartTemplateID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([DynamicPageWebPartTemplateID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [DynamicPageWebPartTemplateID]'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageWebPartTemplates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[DynamicPageWebPartTemplateID], O.[DynamicPageWebPartName], O.[SiteID], O.[LastModified], O.[LastModifiedBy], O.[SourceID]
				FROM
				    [dbo].[DynamicPageWebPartTemplates] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[DynamicPageWebPartTemplateID] = PageIndex.[DynamicPageWebPartTemplateID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageWebPartTemplates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPageWebPartTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageWebPartName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[DynamicPageWebPartTemplates]
					(
					[DynamicPageWebPartName]
					,[SiteID]
					,[LastModified]
					,[LastModifiedBy]
					,[SourceID]
					)
				VALUES
					(
					@DynamicPageWebPartName
					,@SiteId
					,@LastModified
					,@LastModifiedBy
					,@SourceId
					)
				
				-- Get the identity value
				SET @DynamicPageWebPartTemplateId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPageWebPartTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageWebPartName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicPageWebPartTemplates]
				SET
					[DynamicPageWebPartName] = @DynamicPageWebPartName
					,[SiteID] = @SiteId
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
					,[SourceID] = @SourceId
				WHERE
[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPageWebPartTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[DynamicPageWebPartTemplates] WITH (ROWLOCK) 
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageWebPartTemplateID],
					[DynamicPageWebPartName],
					[SiteID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[DynamicPageWebPartTemplates]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageWebPartTemplateID],
					[DynamicPageWebPartName],
					[SiteID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[DynamicPageWebPartTemplates]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_GetByDynamicPageWebPartTemplateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplates table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageWebPartTemplateID],
					[DynamicPageWebPartName],
					[SiteID],
					[LastModified],
					[LastModifiedBy],
					[SourceID]
				FROM
					[dbo].[DynamicPageWebPartTemplates]
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPageWebPartTemplates table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageWebPartTemplateID]
	, [DynamicPageWebPartName]
	, [SiteID]
	, [LastModified]
	, [LastModifiedBy]
	, [SourceID]
    FROM
	[dbo].[DynamicPageWebPartTemplates]
    WHERE 
	 ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId OR @DynamicPageWebPartTemplateId IS NULL)
	AND ([DynamicPageWebPartName] = @DynamicPageWebPartName OR @DynamicPageWebPartName IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageWebPartTemplateID]
	, [DynamicPageWebPartName]
	, [SiteID]
	, [LastModified]
	, [LastModifiedBy]
	, [SourceID]
    FROM
	[dbo].[DynamicPageWebPartTemplates]
    WHERE 
	 ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId AND @DynamicPageWebPartTemplateId is not null)
	OR ([DynamicPageWebPartName] = @DynamicPageWebPartName AND @DynamicPageWebPartName is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageWebPartTemplates table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageWebPartTemplateID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [DynamicPageWebPartTemplateID] )
				SELECT TOP {3} [DynamicPageWebPartTemplateID]
				FROM [dbo].[DynamicPageWebPartTemplates] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[DynamicPageWebPartTemplateID], O.[DynamicPageWebPartName], O.[SiteID], O.[LastModified], O.[LastModifiedBy], O.[SourceID]
				FROM
				    [dbo].[DynamicPageWebPartTemplates] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[DynamicPageWebPartTemplateID] = PageIndex.[DynamicPageWebPartTemplateID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[DynamicPageWebPartTemplates] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPageWebPartTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,@SourceId
					)
				
				-- Get the identity value
				SET @DynamicPageWebPartTemplateId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SourceID]
				FROM
					[dbo].[DynamicPageWebPartTemplates]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPageWebPartTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SourceID]
				FROM
					[dbo].[DynamicPageWebPartTemplates]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageWebPartTemplates table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageWebPartTemplates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_GetByDynamicPageWebPartTemplateId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplates table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SourceID]
				FROM
					[dbo].[DynamicPageWebPartTemplates]
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPageWebPartTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,[SourceID] = @SourceId
				WHERE
[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPageWebPartTemplates table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPageWebPartTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[DynamicPageWebPartTemplates] WITH (ROWLOCK) 
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplates_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="DynamicContent_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicContent table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DynamicContentID],
					[SiteID],
					[LanguageID],
					[DynamicContentType],
					[Title],
					[Introduction],
					[Description],
					[LastModifiedBy],
					[LastModifiedDate],
					[Active]
				FROM
					[dbo].[DynamicContent]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DynamicContent_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicContent table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicContentID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([DynamicContentID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [DynamicContentID]'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicContent]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[DynamicContentID], O.[SiteID], O.[LanguageID], O.[DynamicContentType], O.[Title], O.[Introduction], O.[Description], O.[LastModifiedBy], O.[LastModifiedDate], O.[Active]
				FROM
				    [dbo].[DynamicContent] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[DynamicContentID] = PageIndex.[DynamicContentID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicContent]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="DynamicContent_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicContent table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicContentId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicContentType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@Introduction" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[DynamicContent]
					(
					[SiteID]
					,[LanguageID]
					,[DynamicContentType]
					,[Title]
					,[Introduction]
					,[Description]
					,[LastModifiedBy]
					,[LastModifiedDate]
					,[Active]
					)
				VALUES
					(
					@SiteId
					,@LanguageId
					,@DynamicContentType
					,@Title
					,@Introduction
					,@Description
					,@LastModifiedBy
					,@LastModifiedDate
					,@Active
					)
				
				-- Get the identity value
				SET @DynamicContentId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicContent_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicContent table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicContentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicContentType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@Introduction" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicContent]
				SET
					[SiteID] = @SiteId
					,[LanguageID] = @LanguageId
					,[DynamicContentType] = @DynamicContentType
					,[Title] = @Title
					,[Introduction] = @Introduction
					,[Description] = @Description
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModifiedDate] = @LastModifiedDate
					,[Active] = @Active
				WHERE
[DynamicContentID] = @DynamicContentId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicContent_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicContent table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicContentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[DynamicContent] WITH (ROWLOCK) 
				WHERE
					[DynamicContentID] = @DynamicContentId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicContent_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicContent table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicContentID],
					[SiteID],
					[LanguageID],
					[DynamicContentType],
					[Title],
					[Introduction],
					[Description],
					[LastModifiedBy],
					[LastModifiedDate],
					[Active]
				FROM
					[dbo].[DynamicContent]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicContent_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicContent table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicContentID],
					[SiteID],
					[LanguageID],
					[DynamicContentType],
					[Title],
					[Introduction],
					[Description],
					[LastModifiedBy],
					[LastModifiedDate],
					[Active]
				FROM
					[dbo].[DynamicContent]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicContent_GetByDynamicContentId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicContent table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicContentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicContentID],
					[SiteID],
					[LanguageID],
					[DynamicContentType],
					[Title],
					[Introduction],
					[Description],
					[LastModifiedBy],
					[LastModifiedDate],
					[Active]
				FROM
					[dbo].[DynamicContent]
				WHERE
					[DynamicContentID] = @DynamicContentId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicContent_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicContent table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicContentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicContentType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@Introduction" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicContentID]
	, [SiteID]
	, [LanguageID]
	, [DynamicContentType]
	, [Title]
	, [Introduction]
	, [Description]
	, [LastModifiedBy]
	, [LastModifiedDate]
	, [Active]
    FROM
	[dbo].[DynamicContent]
    WHERE 
	 ([DynamicContentID] = @DynamicContentId OR @DynamicContentId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([DynamicContentType] = @DynamicContentType OR @DynamicContentType IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([Introduction] = @Introduction OR @Introduction IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicContentID]
	, [SiteID]
	, [LanguageID]
	, [DynamicContentType]
	, [Title]
	, [Introduction]
	, [Description]
	, [LastModifiedBy]
	, [LastModifiedDate]
	, [Active]
    FROM
	[dbo].[DynamicContent]
    WHERE 
	 ([DynamicContentID] = @DynamicContentId AND @DynamicContentId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([DynamicContentType] = @DynamicContentType AND @DynamicContentType is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([Introduction] = @Introduction AND @Introduction is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	OR ([Active] = @Active AND @Active is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="DynamicContent_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicContent table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicContentID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [DynamicContentID] )
				SELECT TOP {3} [DynamicContentID]
				FROM [dbo].[DynamicContent] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[DynamicContentID], O.[SiteID], O.[LanguageID], O.[DynamicContentType], O.[Title], O.[Introduction], O.[Description], O.[LastModifiedBy], O.[LastModifiedDate], O.[Active]
				FROM
				    [dbo].[DynamicContent] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[DynamicContentID] = PageIndex.[DynamicContentID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[DynamicContent] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="DynamicContent_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicContent table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicContentId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicContentType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@Introduction" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					,@Active
					)
				
				-- Get the identity value
				SET @DynamicContentId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicContent_GetByDynamicContentId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicContent table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicContentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[Active]
				FROM
					[dbo].[DynamicContent]
				WHERE
					[DynamicContentID] = @DynamicContentId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicContent_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicContent table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[Active]
				FROM
					[dbo].[DynamicContent]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicContent_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicContent table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],
					[Active]
				FROM
					[dbo].[DynamicContent]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicContent_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicContent table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicContent]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicContent_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicContent table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicContentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicContentType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@Introduction" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					,[Active] = @Active
				WHERE
[DynamicContentID] = @DynamicContentId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicContent_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicContent table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicContentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicContentType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@Introduction" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	OR ([Active] = @Active AND @Active is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicContent_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicContent table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicContentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[DynamicContent] WITH (ROWLOCK) 
				WHERE
					[DynamicContentID] = @DynamicContentId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicContent_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicContent table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Advertisers_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Advertisers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdvertiserID],
					[SiteID],
					[AdvertiserAccountTypeID],
					[AdvertiserBusinessTypeID],
					[AdvertiserAccountStatusID],
					[CompanyName],
					[BusinessNumber],
					[StreetAddress1],
					[StreetAddress2],
					[LastModified],
					[LastModifiedBy],
					[PostalAddress1],
					[PostalAddress2],
					[WebAddress],
					[NoOfEmployees],
					[FirstApprovedDate],
					[Profile],
					[CharityNumber],
					[SearchField],
					[FreeTrialStartDate],
					[FreeTrialEndDate],
					[AccountsPayableEmail],
					[RequireLogonForExternalApplication],
					[AdvertiserLogo],
					[LinkedInLogo],
					[LinkedInCompanyId],
					[LinkedInEmail],
					[RegisterDate],
					[ExternalAdvertiserID],
					[VideoLink],
					[Industry],
					[NominatedCompanyRole],
					[NominatedCompanyFirstName],
					[NominatedCompanyLastName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl],
					[AllowPeopleSearchAccess]
				FROM
					[dbo].[Advertisers]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Advertisers_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Advertisers table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AdvertiserID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AdvertiserID]'
				SET @SQL = @SQL + ' FROM [dbo].[Advertisers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AdvertiserID], O.[SiteID], O.[AdvertiserAccountTypeID], O.[AdvertiserBusinessTypeID], O.[AdvertiserAccountStatusID], O.[CompanyName], O.[BusinessNumber], O.[StreetAddress1], O.[StreetAddress2], O.[LastModified], O.[LastModifiedBy], O.[PostalAddress1], O.[PostalAddress2], O.[WebAddress], O.[NoOfEmployees], O.[FirstApprovedDate], O.[Profile], O.[CharityNumber], O.[SearchField], O.[FreeTrialStartDate], O.[FreeTrialEndDate], O.[AccountsPayableEmail], O.[RequireLogonForExternalApplication], O.[AdvertiserLogo], O.[LinkedInLogo], O.[LinkedInCompanyId], O.[LinkedInEmail], O.[RegisterDate], O.[ExternalAdvertiserID], O.[VideoLink], O.[Industry], O.[NominatedCompanyRole], O.[NominatedCompanyFirstName], O.[NominatedCompanyLastName], O.[NominatedCompanyEmailAddress], O.[NominatedCompanyPhone], O.[PreferredContactMethod], O.[AdvertiserLogoUrl], O.[AllowPeopleSearchAccess]
				FROM
				    [dbo].[Advertisers] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AdvertiserID] = PageIndex.[AdvertiserID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Advertisers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Advertisers_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Advertisers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@BusinessNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StreetAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StreetAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PostalAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PostalAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WebAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@NoOfEmployees" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@FirstApprovedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Profile" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@CharityNumber" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FreeTrialStartDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@FreeTrialEndDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountsPayableEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@RequireLogonForExternalApplication" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInCompanyId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@RegisterDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ExternalAdvertiserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@VideoLink" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Industry" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@NominatedCompanyRole" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@NominatedCompanyFirstName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@NominatedCompanyLastName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@NominatedCompanyEmailAddress" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@NominatedCompanyPhone" type="varchar" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@PreferredContactMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@AllowPeopleSearchAccess" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Advertisers]
					(
					[SiteID]
					,[AdvertiserAccountTypeID]
					,[AdvertiserBusinessTypeID]
					,[AdvertiserAccountStatusID]
					,[CompanyName]
					,[BusinessNumber]
					,[StreetAddress1]
					,[StreetAddress2]
					,[LastModified]
					,[LastModifiedBy]
					,[PostalAddress1]
					,[PostalAddress2]
					,[WebAddress]
					,[NoOfEmployees]
					,[FirstApprovedDate]
					,[Profile]
					,[CharityNumber]
					,[SearchField]
					,[FreeTrialStartDate]
					,[FreeTrialEndDate]
					,[AccountsPayableEmail]
					,[RequireLogonForExternalApplication]
					,[AdvertiserLogo]
					,[LinkedInLogo]
					,[LinkedInCompanyId]
					,[LinkedInEmail]
					,[RegisterDate]
					,[ExternalAdvertiserID]
					,[VideoLink]
					,[Industry]
					,[NominatedCompanyRole]
					,[NominatedCompanyFirstName]
					,[NominatedCompanyLastName]
					,[NominatedCompanyEmailAddress]
					,[NominatedCompanyPhone]
					,[PreferredContactMethod]
					,[AdvertiserLogoUrl]
					,[AllowPeopleSearchAccess]
					)
				VALUES
					(
					@SiteId
					,@AdvertiserAccountTypeId
					,@AdvertiserBusinessTypeId
					,@AdvertiserAccountStatusId
					,@CompanyName
					,@BusinessNumber
					,@StreetAddress1
					,@StreetAddress2
					,@LastModified
					,@LastModifiedBy
					,@PostalAddress1
					,@PostalAddress2
					,@WebAddress
					,@NoOfEmployees
					,@FirstApprovedDate
					,@Profile
					,@CharityNumber
					,@SearchField
					,@FreeTrialStartDate
					,@FreeTrialEndDate
					,@AccountsPayableEmail
					,@RequireLogonForExternalApplication
					,@AdvertiserLogo
					,@LinkedInLogo
					,@LinkedInCompanyId
					,@LinkedInEmail
					,@RegisterDate
					,@ExternalAdvertiserId
					,@VideoLink
					,@Industry
					,@NominatedCompanyRole
					,@NominatedCompanyFirstName
					,@NominatedCompanyLastName
					,@NominatedCompanyEmailAddress
					,@NominatedCompanyPhone
					,@PreferredContactMethod
					,@AdvertiserLogoUrl
					,@AllowPeopleSearchAccess
					)
				
				-- Get the identity value
				SET @AdvertiserId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Advertisers_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Advertisers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@BusinessNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StreetAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StreetAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PostalAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PostalAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@WebAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@NoOfEmployees" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@FirstApprovedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Profile" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@CharityNumber" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FreeTrialStartDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@FreeTrialEndDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountsPayableEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@RequireLogonForExternalApplication" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInCompanyId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@RegisterDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ExternalAdvertiserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@VideoLink" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Industry" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@NominatedCompanyRole" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@NominatedCompanyFirstName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@NominatedCompanyLastName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@NominatedCompanyEmailAddress" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@NominatedCompanyPhone" type="varchar" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@PreferredContactMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@AllowPeopleSearchAccess" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Advertisers]
				SET
					[SiteID] = @SiteId
					,[AdvertiserAccountTypeID] = @AdvertiserAccountTypeId
					,[AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId
					,[AdvertiserAccountStatusID] = @AdvertiserAccountStatusId
					,[CompanyName] = @CompanyName
					,[BusinessNumber] = @BusinessNumber
					,[StreetAddress1] = @StreetAddress1
					,[StreetAddress2] = @StreetAddress2
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
					,[PostalAddress1] = @PostalAddress1
					,[PostalAddress2] = @PostalAddress2
					,[WebAddress] = @WebAddress
					,[NoOfEmployees] = @NoOfEmployees
					,[FirstApprovedDate] = @FirstApprovedDate
					,[Profile] = @Profile
					,[CharityNumber] = @CharityNumber
					,[SearchField] = @SearchField
					,[FreeTrialStartDate] = @FreeTrialStartDate
					,[FreeTrialEndDate] = @FreeTrialEndDate
					,[AccountsPayableEmail] = @AccountsPayableEmail
					,[RequireLogonForExternalApplication] = @RequireLogonForExternalApplication
					,[AdvertiserLogo] = @AdvertiserLogo
					,[LinkedInLogo] = @LinkedInLogo
					,[LinkedInCompanyId] = @LinkedInCompanyId
					,[LinkedInEmail] = @LinkedInEmail
					,[RegisterDate] = @RegisterDate
					,[ExternalAdvertiserID] = @ExternalAdvertiserId
					,[VideoLink] = @VideoLink
					,[Industry] = @Industry
					,[NominatedCompanyRole] = @NominatedCompanyRole
					,[NominatedCompanyFirstName] = @NominatedCompanyFirstName
					,[NominatedCompanyLastName] = @NominatedCompanyLastName
					,[NominatedCompanyEmailAddress] = @NominatedCompanyEmailAddress
					,[NominatedCompanyPhone] = @NominatedCompanyPhone
					,[PreferredContactMethod] = @PreferredContactMethod
					,[AdvertiserLogoUrl] = @AdvertiserLogoUrl
					,[AllowPeopleSearchAccess] = @AllowPeopleSearchAccess
				WHERE
[AdvertiserID] = @AdvertiserId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Advertisers_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Advertisers table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Advertisers] WITH (ROWLOCK) 
				WHERE
					[AdvertiserID] = @AdvertiserId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Advertisers_GetByAdvertiserAccountStatusId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserID],
					[SiteID],
					[AdvertiserAccountTypeID],
					[AdvertiserBusinessTypeID],
					[AdvertiserAccountStatusID],
					[CompanyName],
					[BusinessNumber],
					[StreetAddress1],
					[StreetAddress2],
					[LastModified],
					[LastModifiedBy],
					[PostalAddress1],
					[PostalAddress2],
					[WebAddress],
					[NoOfEmployees],
					[FirstApprovedDate],
					[Profile],
					[CharityNumber],
					[SearchField],
					[FreeTrialStartDate],
					[FreeTrialEndDate],
					[AccountsPayableEmail],
					[RequireLogonForExternalApplication],
					[AdvertiserLogo],
					[LinkedInLogo],
					[LinkedInCompanyId],
					[LinkedInEmail],
					[RegisterDate],
					[ExternalAdvertiserID],
					[VideoLink],
					[Industry],
					[NominatedCompanyRole],
					[NominatedCompanyFirstName],
					[NominatedCompanyLastName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl],
					[AllowPeopleSearchAccess]
				FROM
					[dbo].[Advertisers]
				WHERE
					[AdvertiserAccountStatusID] = @AdvertiserAccountStatusId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Advertisers_GetByAdvertiserBusinessTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserID],
					[SiteID],
					[AdvertiserAccountTypeID],
					[AdvertiserBusinessTypeID],
					[AdvertiserAccountStatusID],
					[CompanyName],
					[BusinessNumber],
					[StreetAddress1],
					[StreetAddress2],
					[LastModified],
					[LastModifiedBy],
					[PostalAddress1],
					[PostalAddress2],
					[WebAddress],
					[NoOfEmployees],
					[FirstApprovedDate],
					[Profile],
					[CharityNumber],
					[SearchField],
					[FreeTrialStartDate],
					[FreeTrialEndDate],
					[AccountsPayableEmail],
					[RequireLogonForExternalApplication],
					[AdvertiserLogo],
					[LinkedInLogo],
					[LinkedInCompanyId],
					[LinkedInEmail],
					[RegisterDate],
					[ExternalAdvertiserID],
					[VideoLink],
					[Industry],
					[NominatedCompanyRole],
					[NominatedCompanyFirstName],
					[NominatedCompanyLastName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl],
					[AllowPeopleSearchAccess]
				FROM
					[dbo].[Advertisers]
				WHERE
					[AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Advertisers_GetByAdvertiserAccountTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserID],
					[SiteID],
					[AdvertiserAccountTypeID],
					[AdvertiserBusinessTypeID],
					[AdvertiserAccountStatusID],
					[CompanyName],
					[BusinessNumber],
					[StreetAddress1],
					[StreetAddress2],
					[LastModified],
					[LastModifiedBy],
					[PostalAddress1],
					[PostalAddress2],
					[WebAddress],
					[NoOfEmployees],
					[FirstApprovedDate],
					[Profile],
					[CharityNumber],
					[SearchField],
					[FreeTrialStartDate],
					[FreeTrialEndDate],
					[AccountsPayableEmail],
					[RequireLogonForExternalApplication],
					[AdvertiserLogo],
					[LinkedInLogo],
					[LinkedInCompanyId],
					[LinkedInEmail],
					[RegisterDate],
					[ExternalAdvertiserID],
					[VideoLink],
					[Industry],
					[NominatedCompanyRole],
					[NominatedCompanyFirstName],
					[NominatedCompanyLastName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl],
					[AllowPeopleSearchAccess]
				FROM
					[dbo].[Advertisers]
				WHERE
					[AdvertiserAccountTypeID] = @AdvertiserAccountTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Advertisers_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserID],
					[SiteID],
					[AdvertiserAccountTypeID],
					[AdvertiserBusinessTypeID],
					[AdvertiserAccountStatusID],
					[CompanyName],
					[BusinessNumber],
					[StreetAddress1],
					[StreetAddress2],
					[LastModified],
					[LastModifiedBy],
					[PostalAddress1],
					[PostalAddress2],
					[WebAddress],
					[NoOfEmployees],
					[FirstApprovedDate],
					[Profile],
					[CharityNumber],
					[SearchField],
					[FreeTrialStartDate],
					[FreeTrialEndDate],
					[AccountsPayableEmail],
					[RequireLogonForExternalApplication],
					[AdvertiserLogo],
					[LinkedInLogo],
					[LinkedInCompanyId],
					[LinkedInEmail],
					[RegisterDate],
					[ExternalAdvertiserID],
					[VideoLink],
					[Industry],
					[NominatedCompanyRole],
					[NominatedCompanyFirstName],
					[NominatedCompanyLastName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl],
					[AllowPeopleSearchAccess]
				FROM
					[dbo].[Advertisers]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Advertisers_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AdvertiserID],
					[SiteID],
					[AdvertiserAccountTypeID],
					[AdvertiserBusinessTypeID],
					[AdvertiserAccountStatusID],
					[CompanyName],
					[BusinessNumber],
					[StreetAddress1],
					[StreetAddress2],
					[LastModified],
					[LastModifiedBy],
					[PostalAddress1],
					[PostalAddress2],
					[WebAddress],
					[NoOfEmployees],
					[FirstApprovedDate],
					[Profile],
					[CharityNumber],
					[SearchField],
					[FreeTrialStartDate],
					[FreeTrialEndDate],
					[AccountsPayableEmail],
					[RequireLogonForExternalApplication],
					[AdvertiserLogo],
					[LinkedInLogo],
					[LinkedInCompanyId],
					[LinkedInEmail],
					[RegisterDate],
					[ExternalAdvertiserID],
					[VideoLink],
					[Industry],
					[NominatedCompanyRole],
					[NominatedCompanyFirstName],
					[NominatedCompanyLastName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl],
					[AllowPeopleSearchAccess]
				FROM
					[dbo].[Advertisers]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Advertisers_GetByAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdvertiserID],
					[SiteID],
					[AdvertiserAccountTypeID],
					[AdvertiserBusinessTypeID],
					[AdvertiserAccountStatusID],
					[CompanyName],
					[BusinessNumber],
					[StreetAddress1],
					[StreetAddress2],
					[LastModified],
					[LastModifiedBy],
					[PostalAddress1],
					[PostalAddress2],
					[WebAddress],
					[NoOfEmployees],
					[FirstApprovedDate],
					[Profile],
					[CharityNumber],
					[SearchField],
					[FreeTrialStartDate],
					[FreeTrialEndDate],
					[AccountsPayableEmail],
					[RequireLogonForExternalApplication],
					[AdvertiserLogo],
					[LinkedInLogo],
					[LinkedInCompanyId],
					[LinkedInEmail],
					[RegisterDate],
					[ExternalAdvertiserID],
					[VideoLink],
					[Industry],
					[NominatedCompanyRole],
					[NominatedCompanyFirstName],
					[NominatedCompanyLastName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl],
					[AllowPeopleSearchAccess]
				FROM
					[dbo].[Advertisers]
				WHERE
					[AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Advertisers_GetByJobItemsTypeIdFromAdvertiserJobPricing" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
SELECT dbo.[Advertisers].[AdvertiserID]
       ,dbo.[Advertisers].[SiteID]
       ,dbo.[Advertisers].[AdvertiserAccountTypeID]
       ,dbo.[Advertisers].[AdvertiserBusinessTypeID]
       ,dbo.[Advertisers].[AdvertiserAccountStatusID]
       ,dbo.[Advertisers].[CompanyName]
       ,dbo.[Advertisers].[BusinessNumber]
       ,dbo.[Advertisers].[StreetAddress1]
       ,dbo.[Advertisers].[StreetAddress2]
       ,dbo.[Advertisers].[LastModified]
       ,dbo.[Advertisers].[LastModifiedBy]
       ,dbo.[Advertisers].[PostalAddress1]
       ,dbo.[Advertisers].[PostalAddress2]
       ,dbo.[Advertisers].[WebAddress]
       ,dbo.[Advertisers].[NoOfEmployees]
       ,dbo.[Advertisers].[FirstApprovedDate]
       ,dbo.[Advertisers].[Profile]
       ,dbo.[Advertisers].[CharityNumber]
       ,dbo.[Advertisers].[SearchField]
       ,dbo.[Advertisers].[FreeTrialStartDate]
       ,dbo.[Advertisers].[FreeTrialEndDate]
       ,dbo.[Advertisers].[AccountsPayableEmail]
       ,dbo.[Advertisers].[RequireLogonForExternalApplication]
       ,dbo.[Advertisers].[AdvertiserLogo]
       ,dbo.[Advertisers].[LinkedInLogo]
       ,dbo.[Advertisers].[LinkedInCompanyId]
       ,dbo.[Advertisers].[LinkedInEmail]
       ,dbo.[Advertisers].[RegisterDate]
       ,dbo.[Advertisers].[ExternalAdvertiserID]
       ,dbo.[Advertisers].[VideoLink]
       ,dbo.[Advertisers].[Industry]
       ,dbo.[Advertisers].[NominatedCompanyRole]
       ,dbo.[Advertisers].[NominatedCompanyFirstName]
       ,dbo.[Advertisers].[NominatedCompanyLastName]
       ,dbo.[Advertisers].[NominatedCompanyEmailAddress]
       ,dbo.[Advertisers].[NominatedCompanyPhone]
       ,dbo.[Advertisers].[PreferredContactMethod]
       ,dbo.[Advertisers].[AdvertiserLogoUrl]
       ,dbo.[Advertisers].[AllowPeopleSearchAccess]
  FROM dbo.[Advertisers]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[AdvertiserJobPricing] 
                WHERE dbo.[AdvertiserJobPricing].[JobItemsTypeID] = @JobItemsTypeId
                  AND dbo.[AdvertiserJobPricing].[AdvertiserID] = dbo.[Advertisers].[AdvertiserID]
                  )
				SELECT @@ROWCOUNT			
				]]></body>
		</procedure>
		<procedure owner="dbo" name="Advertisers_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Advertisers table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@BusinessNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StreetAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StreetAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PostalAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PostalAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WebAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NoOfEmployees" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@FirstApprovedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Profile" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@CharityNumber" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FreeTrialStartDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@FreeTrialEndDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountsPayableEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplication" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInCompanyId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RegisterDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExternalAdvertiserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@VideoLink" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Industry" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@NominatedCompanyRole" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@NominatedCompanyFirstName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NominatedCompanyLastName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NominatedCompanyEmailAddress" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NominatedCompanyPhone" type="varchar" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@PreferredContactMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@AllowPeopleSearchAccess" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvertiserID]
	, [SiteID]
	, [AdvertiserAccountTypeID]
	, [AdvertiserBusinessTypeID]
	, [AdvertiserAccountStatusID]
	, [CompanyName]
	, [BusinessNumber]
	, [StreetAddress1]
	, [StreetAddress2]
	, [LastModified]
	, [LastModifiedBy]
	, [PostalAddress1]
	, [PostalAddress2]
	, [WebAddress]
	, [NoOfEmployees]
	, [FirstApprovedDate]
	, [Profile]
	, [CharityNumber]
	, [SearchField]
	, [FreeTrialStartDate]
	, [FreeTrialEndDate]
	, [AccountsPayableEmail]
	, [RequireLogonForExternalApplication]
	, [AdvertiserLogo]
	, [LinkedInLogo]
	, [LinkedInCompanyId]
	, [LinkedInEmail]
	, [RegisterDate]
	, [ExternalAdvertiserID]
	, [VideoLink]
	, [Industry]
	, [NominatedCompanyRole]
	, [NominatedCompanyFirstName]
	, [NominatedCompanyLastName]
	, [NominatedCompanyEmailAddress]
	, [NominatedCompanyPhone]
	, [PreferredContactMethod]
	, [AdvertiserLogoUrl]
	, [AllowPeopleSearchAccess]
    FROM
	[dbo].[Advertisers]
    WHERE 
	 ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([AdvertiserAccountTypeID] = @AdvertiserAccountTypeId OR @AdvertiserAccountTypeId IS NULL)
	AND ([AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId OR @AdvertiserBusinessTypeId IS NULL)
	AND ([AdvertiserAccountStatusID] = @AdvertiserAccountStatusId OR @AdvertiserAccountStatusId IS NULL)
	AND ([CompanyName] = @CompanyName OR @CompanyName IS NULL)
	AND ([BusinessNumber] = @BusinessNumber OR @BusinessNumber IS NULL)
	AND ([StreetAddress1] = @StreetAddress1 OR @StreetAddress1 IS NULL)
	AND ([StreetAddress2] = @StreetAddress2 OR @StreetAddress2 IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([PostalAddress1] = @PostalAddress1 OR @PostalAddress1 IS NULL)
	AND ([PostalAddress2] = @PostalAddress2 OR @PostalAddress2 IS NULL)
	AND ([WebAddress] = @WebAddress OR @WebAddress IS NULL)
	AND ([NoOfEmployees] = @NoOfEmployees OR @NoOfEmployees IS NULL)
	AND ([FirstApprovedDate] = @FirstApprovedDate OR @FirstApprovedDate IS NULL)
	AND ([CharityNumber] = @CharityNumber OR @CharityNumber IS NULL)
	AND ([SearchField] = @SearchField OR @SearchField IS NULL)
	AND ([FreeTrialStartDate] = @FreeTrialStartDate OR @FreeTrialStartDate IS NULL)
	AND ([FreeTrialEndDate] = @FreeTrialEndDate OR @FreeTrialEndDate IS NULL)
	AND ([AccountsPayableEmail] = @AccountsPayableEmail OR @AccountsPayableEmail IS NULL)
	AND ([RequireLogonForExternalApplication] = @RequireLogonForExternalApplication OR @RequireLogonForExternalApplication IS NULL)
	AND ([LinkedInLogo] = @LinkedInLogo OR @LinkedInLogo IS NULL)
	AND ([LinkedInCompanyId] = @LinkedInCompanyId OR @LinkedInCompanyId IS NULL)
	AND ([LinkedInEmail] = @LinkedInEmail OR @LinkedInEmail IS NULL)
	AND ([RegisterDate] = @RegisterDate OR @RegisterDate IS NULL)
	AND ([ExternalAdvertiserID] = @ExternalAdvertiserId OR @ExternalAdvertiserId IS NULL)
	AND ([VideoLink] = @VideoLink OR @VideoLink IS NULL)
	AND ([Industry] = @Industry OR @Industry IS NULL)
	AND ([NominatedCompanyRole] = @NominatedCompanyRole OR @NominatedCompanyRole IS NULL)
	AND ([NominatedCompanyFirstName] = @NominatedCompanyFirstName OR @NominatedCompanyFirstName IS NULL)
	AND ([NominatedCompanyLastName] = @NominatedCompanyLastName OR @NominatedCompanyLastName IS NULL)
	AND ([NominatedCompanyEmailAddress] = @NominatedCompanyEmailAddress OR @NominatedCompanyEmailAddress IS NULL)
	AND ([NominatedCompanyPhone] = @NominatedCompanyPhone OR @NominatedCompanyPhone IS NULL)
	AND ([PreferredContactMethod] = @PreferredContactMethod OR @PreferredContactMethod IS NULL)
	AND ([AdvertiserLogoUrl] = @AdvertiserLogoUrl OR @AdvertiserLogoUrl IS NULL)
	AND ([AllowPeopleSearchAccess] = @AllowPeopleSearchAccess OR @AllowPeopleSearchAccess IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvertiserID]
	, [SiteID]
	, [AdvertiserAccountTypeID]
	, [AdvertiserBusinessTypeID]
	, [AdvertiserAccountStatusID]
	, [CompanyName]
	, [BusinessNumber]
	, [StreetAddress1]
	, [StreetAddress2]
	, [LastModified]
	, [LastModifiedBy]
	, [PostalAddress1]
	, [PostalAddress2]
	, [WebAddress]
	, [NoOfEmployees]
	, [FirstApprovedDate]
	, [Profile]
	, [CharityNumber]
	, [SearchField]
	, [FreeTrialStartDate]
	, [FreeTrialEndDate]
	, [AccountsPayableEmail]
	, [RequireLogonForExternalApplication]
	, [AdvertiserLogo]
	, [LinkedInLogo]
	, [LinkedInCompanyId]
	, [LinkedInEmail]
	, [RegisterDate]
	, [ExternalAdvertiserID]
	, [VideoLink]
	, [Industry]
	, [NominatedCompanyRole]
	, [NominatedCompanyFirstName]
	, [NominatedCompanyLastName]
	, [NominatedCompanyEmailAddress]
	, [NominatedCompanyPhone]
	, [PreferredContactMethod]
	, [AdvertiserLogoUrl]
	, [AllowPeopleSearchAccess]
    FROM
	[dbo].[Advertisers]
    WHERE 
	 ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([AdvertiserAccountTypeID] = @AdvertiserAccountTypeId AND @AdvertiserAccountTypeId is not null)
	OR ([AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId AND @AdvertiserBusinessTypeId is not null)
	OR ([AdvertiserAccountStatusID] = @AdvertiserAccountStatusId AND @AdvertiserAccountStatusId is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([BusinessNumber] = @BusinessNumber AND @BusinessNumber is not null)
	OR ([StreetAddress1] = @StreetAddress1 AND @StreetAddress1 is not null)
	OR ([StreetAddress2] = @StreetAddress2 AND @StreetAddress2 is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([PostalAddress1] = @PostalAddress1 AND @PostalAddress1 is not null)
	OR ([PostalAddress2] = @PostalAddress2 AND @PostalAddress2 is not null)
	OR ([WebAddress] = @WebAddress AND @WebAddress is not null)
	OR ([NoOfEmployees] = @NoOfEmployees AND @NoOfEmployees is not null)
	OR ([FirstApprovedDate] = @FirstApprovedDate AND @FirstApprovedDate is not null)
	OR ([CharityNumber] = @CharityNumber AND @CharityNumber is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([FreeTrialStartDate] = @FreeTrialStartDate AND @FreeTrialStartDate is not null)
	OR ([FreeTrialEndDate] = @FreeTrialEndDate AND @FreeTrialEndDate is not null)
	OR ([AccountsPayableEmail] = @AccountsPayableEmail AND @AccountsPayableEmail is not null)
	OR ([RequireLogonForExternalApplication] = @RequireLogonForExternalApplication AND @RequireLogonForExternalApplication is not null)
	OR ([LinkedInLogo] = @LinkedInLogo AND @LinkedInLogo is not null)
	OR ([LinkedInCompanyId] = @LinkedInCompanyId AND @LinkedInCompanyId is not null)
	OR ([LinkedInEmail] = @LinkedInEmail AND @LinkedInEmail is not null)
	OR ([RegisterDate] = @RegisterDate AND @RegisterDate is not null)
	OR ([ExternalAdvertiserID] = @ExternalAdvertiserId AND @ExternalAdvertiserId is not null)
	OR ([VideoLink] = @VideoLink AND @VideoLink is not null)
	OR ([Industry] = @Industry AND @Industry is not null)
	OR ([NominatedCompanyRole] = @NominatedCompanyRole AND @NominatedCompanyRole is not null)
	OR ([NominatedCompanyFirstName] = @NominatedCompanyFirstName AND @NominatedCompanyFirstName is not null)
	OR ([NominatedCompanyLastName] = @NominatedCompanyLastName AND @NominatedCompanyLastName is not null)
	OR ([NominatedCompanyEmailAddress] = @NominatedCompanyEmailAddress AND @NominatedCompanyEmailAddress is not null)
	OR ([NominatedCompanyPhone] = @NominatedCompanyPhone AND @NominatedCompanyPhone is not null)
	OR ([PreferredContactMethod] = @PreferredContactMethod AND @PreferredContactMethod is not null)
	OR ([AdvertiserLogoUrl] = @AdvertiserLogoUrl AND @AdvertiserLogoUrl is not null)
	OR ([AllowPeopleSearchAccess] = @AllowPeopleSearchAccess AND @AllowPeopleSearchAccess is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Advertisers_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Advertisers table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AdvertiserID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AdvertiserID] )
				SELECT TOP {3} [AdvertiserID]
				FROM [dbo].[Advertisers] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AdvertiserID], O.[SiteID], O.[AdvertiserAccountTypeID], O.[AdvertiserBusinessTypeID], O.[AdvertiserAccountStatusID], O.[CompanyName], O.[BusinessNumber], O.[StreetAddress1], O.[StreetAddress2], O.[LastModified], O.[LastModifiedBy], O.[PostalAddress1], O.[PostalAddress2], O.[WebAddress], O.[NoOfEmployees], O.[FirstApprovedDate], O.[Profile], O.[CharityNumber], O.[SearchField], O.[FreeTrialStartDate], O.[FreeTrialEndDate], O.[AccountsPayableEmail], O.[RequireLogonForExternalApplication], O.[AdvertiserLogo], O.[LinkedInLogo], O.[LinkedInCompanyId], O.[LinkedInEmail], O.[RegisterDate], O.[ExternalAdvertiserID], O.[VideoLink], O.[Industry], O.[NominatedCompanyRole], O.[NominatedCompanyFirstName], O.[NominatedCompanyLastName], O.[NominatedCompanyEmailAddress], O.[NominatedCompanyPhone], O.[PreferredContactMethod], O.[AdvertiserLogoUrl], O.[AllowPeopleSearchAccess]
				FROM
				    [dbo].[Advertisers] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AdvertiserID] = PageIndex.[AdvertiserID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Advertisers] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Advertisers_CustomGetActivityReport"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Keyword" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@DateFrom" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateTo" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@IsDESC" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy,
		PostalAddress1,
		PostalAddress2,
		WebAddress,
		NoOfEmployees,
		FirstApprovedDate,
		Profile,
		CharityNumber,
		SearchField,
		FreeTrialStartDate,
		FreeTrialEndDate,
		AccountsPayableEmail,
		RequireLogonForExternalApplication,
		AdvertiserLogo,
		LinkedInLogo,
		LinkedInCompanyId,
		LinkedInEmail,
		RegisterDate,
		AdvertiserLogoUrl
   FROM Advertisers  (NOLOCK) WHERE 1=0               
  END                 
    
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetByJobItemsTypeIdFromAdvertiserJobPricing"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobItemsTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName]
       ,dbo.[Advertisers].[NominatedCompanyEmailAddress]
       ,dbo.[Advertisers].[NominatedCompanyPhone]
       ,dbo.[Advertisers].[PreferredContactMethod]
       ,dbo.[Advertisers].[AdvertiserLogoUrl]
  FROM dbo.[Advertisers]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[AdvertiserJobPricing] 
                WHERE dbo.[AdvertiserJobPricing].[JobItemsTypeID] = @JobItemsTypeId
                  AND dbo.[AdvertiserJobPricing].[AdvertiserID] = dbo.[Advertisers].[AdvertiserID]
                  )
				SELECT @@ROWCOUNT			
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Advertisers table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@BusinessNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StreetAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StreetAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PostalAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PostalAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WebAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NoOfEmployees" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@FirstApprovedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Profile" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@CharityNumber" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FreeTrialStartDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@FreeTrialEndDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountsPayableEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplication" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInCompanyId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RegisterDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExternalAdvertiserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@VideoLink" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Industry" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@NominatedCompanyRole" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@NominatedCompanyFirstName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NominatedCompanyLastName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NominatedCompanyEmailAddress" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NominatedCompanyPhone" type="varchar" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@PreferredContactMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName is not null)
	OR ([NominatedCompanyEmailAddress] = @NominatedCompanyEmailAddress AND @NominatedCompanyEmailAddress is not null)
	OR ([NominatedCompanyPhone] = @NominatedCompanyPhone AND @NominatedCompanyPhone is not null)
	OR ([PreferredContactMethod] = @PreferredContactMethod AND @PreferredContactMethod is not null)
	OR ([AdvertiserLogoUrl] = @AdvertiserLogoUrl AND @AdvertiserLogoUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Advertisers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@BusinessNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StreetAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StreetAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PostalAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PostalAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WebAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NoOfEmployees" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@FirstApprovedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Profile" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@CharityNumber" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FreeTrialStartDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@FreeTrialEndDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountsPayableEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplication" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInCompanyId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RegisterDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExternalAdvertiserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@VideoLink" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Industry" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@NominatedCompanyRole" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@NominatedCompanyFirstName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NominatedCompanyLastName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NominatedCompanyEmailAddress" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NominatedCompanyPhone" type="varchar" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@PreferredContactMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName
					,[NominatedCompanyEmailAddress] = @NominatedCompanyEmailAddress
					,[NominatedCompanyPhone] = @NominatedCompanyPhone
					,[PreferredContactMethod] = @PreferredContactMethod
					,[AdvertiserLogoUrl] = @AdvertiserLogoUrl
				WHERE
[AdvertiserID] = @AdvertiserId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetAdvertisersNotPostedSince"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DaysSinceLastPost" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tPost * -1, @DateNow))   
     
 SELECT DISTINCT AdvertiserID, CompanyName, AdvertiserBusinessTypeName, AccountsPayableEmail, AdvertiserAccountTypeName, AdvertiserAccountStatusName  
FROM Advertisers a  WITH (NOLOCK)   
   INNER JOIN AdvertiserBusinessType abt WITH (NOLOCK) ON a.AdvertiserBusinessTypeID = abt.AdvertiserBusinessTypeID   
   INNER JOIN AdvertiserAccountType aat WITH (NOLOCK) ON a.AdvertiserAccountTypeID = aat.AdvertiserAccountTypeID  
   INNER JOIN AdvertiserAccountStatus WITH(NOLOCK) ON AdvertiserAccountStatus.AdvertiserAccountStatusID = a.AdvertiserAccountStatusID   
 WHERE a.AdvertiserID NOT IN (SELECT DISTINCT AdvertiserID    
         FROM Jobs  WITH (NOLOCK)   
         WHERE (SiteID = @SiteID OR @SiteID = 0)    
         AND DatePosted > @DateStart    
         AND DatePosted <= @DateNow)   
  AND a.SiteID = @SiteID   
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetAdvertiserTypeStatistics"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],  [PreferredSalaryID]  
  FROM [dbo].[Members]  (NOLOCK) WHERE 1=0  
 END  
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_AdminGetPaged"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy      
 INNER JOIN @tmpAdvertiserID AdvertiserSearchtResult ON Advertisers.AdvertiserID = AdvertiserSearchtResult.AdvertiserID       
WHERE      
 AdvertiserSearchtResult.RowNumber >= @PageStart AND  AdvertiserSearchtResult.RowNumber <= @PageEnd      
ORDER BY AdvertiserSearchtResult.RowNumber      
      
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetByAdvertiserAccountStatusId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl]
				FROM
					[dbo].[Advertisers]
				WHERE
					[AdvertiserAccountStatusID] = @AdvertiserAccountStatusId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Advertisers table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Advertisers]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Advertisers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Advertisers] WITH (ROWLOCK) 
				WHERE
					[AdvertiserID] = @AdvertiserId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Advertisers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@BusinessNumber" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StreetAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StreetAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PostalAddress1" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PostalAddress2" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WebAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NoOfEmployees" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@FirstApprovedDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Profile" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@CharityNumber" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FreeTrialStartDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@FreeTrialEndDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountsPayableEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplication" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@LinkedInLogo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInCompanyId" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LinkedInEmail" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RegisterDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ExternalAdvertiserId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@VideoLink" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Industry" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@NominatedCompanyRole" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@NominatedCompanyFirstName" type="varchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NominatedCompanyLastName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@NominatedCompanyEmailAddress" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NominatedCompanyPhone" type="varchar" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@PreferredContactMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName
					,@NominatedCompanyEmailAddress
					,@NominatedCompanyPhone
					,@PreferredContactMethod
					,@AdvertiserLogoUrl
					)
				
				-- Get the identity value
				SET @AdvertiserId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_CustomGetAllAdvertisers"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN    

IF (ISNULL(@AdvertiserId,0) > 0)
BEGIN
	SELECT * from udfSite_GetAdvertisers(@SiteID) WHERE AdvertiserId = @AdvertiserId
END
ELSE
BEGIN
	SELECT * from udfSite_GetAdvertisers(@SiteID)      
END	

IF USER_NAME() IS NULL  
BEGIN  
	SELECT AdvertiserId FROM Advertisers (NOLOCK) WHERE 1 = 0 
END
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetAllAdvertisers"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT AdvertiserID, CompanyName, AdvertiserBusinessTypeName, AccountsPayableEmail, AdvertiserAccountTypeName
	FROM Advertisers a  WITH (NOLOCK)
	INNER JOIN AdvertiserBusinessType abt WITH (NOLOCK)	
	ON a.AdvertiserBusinessTypeID = abt.AdvertiserBusinessTypeID
	INNER JOIN AdvertiserAccountType aat WITH (NOLOCK)
	ON a.AdvertiserAccountTypeID = aat.AdvertiserAccountTypeID
	WHERE (a.SiteID = @SiteID OR @SiteID = 0)
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetAllJobStatistics"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],  [PreferredSalaryID]    
  FROM [dbo].[Members]  (NOLOCK) WHERE 1=0    
 END    
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl]
				FROM
					[dbo].[Advertisers]
				WHERE
					[AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetAdvertiserCount"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],  [PreferredSalaryID]
		FROM [dbo].[Members]  (NOLOCK) WHERE 1=0
	END
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_CustomGetExpiringJobAdvertiser"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WithInDays" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
RoleID 
FROM JobRoles (NOLOCK)  
GROUP BY JobID) jr
   
 ON j.JobID = jr.JobID       
 INNER JOIN Roles r  (NOLOCK)      
 ON jr.RoleID = r.RoleID       
 INNER JOIN SiteProfession sp (NOLOCK)       
 ON sp.ProfessionID = r.ProfessionID AND sp.SiteID = j.SiteID          
 WHERE  j.Expired = 0 AND ExpiryDate >= GETDATE() AND ExpiryDate <= DATEADD(DD, @WithInDays, GETDATE()) 
 AND au.JobExpiryNotification = 1 AND au.Validated = 1 AND a.AdvertiserAccountStatusID = 2 -- Approved  
-- AND s.SiteID IN (441)
 ORDER BY j.SiteID, a.AdvertiserID,EnteredByAdvertiserUserID    
 select * from @ExpiringJobs
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetByAdvertiserBusinessTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserBusinessTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl]
				FROM
					[dbo].[Advertisers]
				WHERE
					[AdvertiserBusinessTypeID] = @AdvertiserBusinessTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl]
				FROM
					[dbo].[Advertisers]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_GetByAdvertiserAccountTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Advertisers table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserAccountTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl]
				FROM
					[dbo].[Advertisers]
				WHERE
					[AdvertiserAccountTypeID] = @AdvertiserAccountTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Advertisers_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Advertisers table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tName],
					[NominatedCompanyEmailAddress],
					[NominatedCompanyPhone],
					[PreferredContactMethod],
					[AdvertiserLogoUrl]
				FROM
					[dbo].[Advertisers]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="DynamicPageFiles_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPageFiles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DynamicPageFiles_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageFiles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageFileID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([DynamicPageFileID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [DynamicPageFileID]'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageFiles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[DynamicPageFileID], O.[SiteID], O.[PageName], O.[FileID]
				FROM
				    [dbo].[DynamicPageFiles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[DynamicPageFileID] = PageIndex.[DynamicPageFileID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageFiles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="DynamicPageFiles_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPageFiles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageFileId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[DynamicPageFiles]
					(
					[SiteID]
					,[PageName]
					,[FileID]
					)
				VALUES
					(
					@SiteId
					,@PageName
					,@FileId
					)
				
				-- Get the identity value
				SET @DynamicPageFileId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageFiles_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPageFiles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicPageFiles]
				SET
					[SiteID] = @SiteId
					,[PageName] = @PageName
					,[FileID] = @FileId
				WHERE
[DynamicPageFileID] = @DynamicPageFileId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageFiles_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPageFiles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[DynamicPageFiles] WITH (ROWLOCK) 
				WHERE
					[DynamicPageFileID] = @DynamicPageFileId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageFiles_GetByFileId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageFiles table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
				WHERE
					[FileID] = @FileId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageFiles_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageFiles table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageFiles_GetBySiteIdPageNameFileId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageFiles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
				WHERE
					[SiteID] = @SiteId
					AND [PageName] = @PageName
					AND [FileID] = @FileId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicPageFiles_GetByDynamicPageFileId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageFiles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
				WHERE
					[DynamicPageFileID] = @DynamicPageFileId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicPageFiles_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPageFiles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageFileID]
	, [SiteID]
	, [PageName]
	, [FileID]
    FROM
	[dbo].[DynamicPageFiles]
    WHERE 
	 ([DynamicPageFileID] = @DynamicPageFileId OR @DynamicPageFileId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([PageName] = @PageName OR @PageName IS NULL)
	AND ([FileID] = @FileId OR @FileId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageFileID]
	, [SiteID]
	, [PageName]
	, [FileID]
    FROM
	[dbo].[DynamicPageFiles]
    WHERE 
	 ([DynamicPageFileID] = @DynamicPageFileId AND @DynamicPageFileId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([PageName] = @PageName AND @PageName is not null)
	OR ([FileID] = @FileId AND @FileId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="DynamicPageFiles_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageFiles table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageFileID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [DynamicPageFileID] )
				SELECT TOP {3} [DynamicPageFileID]
				FROM [dbo].[DynamicPageFiles] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[DynamicPageFileID], O.[SiteID], O.[PageName], O.[FileID]
				FROM
				    [dbo].[DynamicPageFiles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[DynamicPageFileID] = PageIndex.[DynamicPageFileID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[DynamicPageFiles] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="DynamicPageFiles_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPageFiles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageFileId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[DynamicPageFiles]
					(
					[SiteID]
					,[PageName]
					,[FileID]
					)
				VALUES
					(
					@SiteId
					,@PageName
					,@FileId
					)
				
				-- Get the identity value
				SET @DynamicPageFileId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_DeleteBySiteIDPageName"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM 
		DynamicPageFiles FROM DynamicPageFiles INNER JOIN
		Files ON DynamicPageFiles.FileID = Files.FileID
	WHERE
		(DynamicPageFiles.SiteID = @SiteId) AND 
		(DynamicPageFiles.PageName = @PageName)	AND 
		(Files.FileTypeID = @FileTypeID)

RETURN 0
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_GetByFileId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageFiles table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
				WHERE
					[FileID] = @FileId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageFiles table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPageFiles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageFiles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageFiles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_GetByDynamicPageFileId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageFiles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
				WHERE
					[DynamicPageFileID] = @DynamicPageFileId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_GetBySiteIdPageNameFileId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageFiles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageFileID],
					[SiteID],
					[PageName],
					[FileID]
				FROM
					[dbo].[DynamicPageFiles]
				WHERE
					[SiteID] = @SiteId
					AND [PageName] = @PageName
					AND [FileID] = @FileId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPageFiles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageFileID]
	, [SiteID]
	, [PageName]
	, [FileID]
    FROM
	[dbo].[DynamicPageFiles]
    WHERE 
	 ([DynamicPageFileID] = @DynamicPageFileId OR @DynamicPageFileId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([PageName] = @PageName OR @PageName IS NULL)
	AND ([FileID] = @FileId OR @FileId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageFileID]
	, [SiteID]
	, [PageName]
	, [FileID]
    FROM
	[dbo].[DynamicPageFiles]
    WHERE 
	 ([DynamicPageFileID] = @DynamicPageFileId AND @DynamicPageFileId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([PageName] = @PageName AND @PageName is not null)
	OR ([FileID] = @FileId AND @FileId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPageFiles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[DynamicPageFiles] WITH (ROWLOCK) 
				WHERE
					[DynamicPageFileID] = @DynamicPageFileId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageFiles_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPageFiles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageFileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicPageFiles]
				SET
					[SiteID] = @SiteId
					,[PageName] = @PageName
					,[FileID] = @FileId
				WHERE
[DynamicPageFileID] = @DynamicPageFileId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPageWebPartTemplatesLink table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageWebPartTemplatesLink table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageWebPartTemplatesLinkID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([DynamicPageWebPartTemplatesLinkID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [DynamicPageWebPartTemplatesLinkID]'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageWebPartTemplatesLink]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[DynamicPageWebPartTemplatesLinkID], O.[DynamicPageWebPartTemplateID], O.[SiteWebPartID], O.[Sequence]
				FROM
				    [dbo].[DynamicPageWebPartTemplatesLink] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[DynamicPageWebPartTemplatesLinkID] = PageIndex.[DynamicPageWebPartTemplatesLinkID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageWebPartTemplatesLink]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPageWebPartTemplatesLink table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[DynamicPageWebPartTemplatesLink]
					(
					[DynamicPageWebPartTemplateID]
					,[SiteWebPartID]
					,[Sequence]
					)
				VALUES
					(
					@DynamicPageWebPartTemplateId
					,@SiteWebPartId
					,@Sequence
					)
				
				-- Get the identity value
				SET @DynamicPageWebPartTemplatesLinkId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPageWebPartTemplatesLink table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicPageWebPartTemplatesLink]
				SET
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
					,[SiteWebPartID] = @SiteWebPartId
					,[Sequence] = @Sequence
				WHERE
[DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPageWebPartTemplatesLink table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[DynamicPageWebPartTemplatesLink] WITH (ROWLOCK) 
				WHERE
					[DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetByDynamicPageWebPartTemplateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplatesLink table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetBySiteWebPartId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplatesLink table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
				WHERE
					[SiteWebPartID] = @SiteWebPartId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetByDynamicPageWebPartTemplateIdSiteWebPartId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplatesLink table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
					AND [SiteWebPartID] = @SiteWebPartId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetByDynamicPageWebPartTemplatesLinkId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplatesLink table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
				WHERE
					[DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPageWebPartTemplatesLink table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageWebPartTemplatesLinkID]
	, [DynamicPageWebPartTemplateID]
	, [SiteWebPartID]
	, [Sequence]
    FROM
	[dbo].[DynamicPageWebPartTemplatesLink]
    WHERE 
	 ([DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId OR @DynamicPageWebPartTemplatesLinkId IS NULL)
	AND ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId OR @DynamicPageWebPartTemplateId IS NULL)
	AND ([SiteWebPartID] = @SiteWebPartId OR @SiteWebPartId IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageWebPartTemplatesLinkID]
	, [DynamicPageWebPartTemplateID]
	, [SiteWebPartID]
	, [Sequence]
    FROM
	[dbo].[DynamicPageWebPartTemplatesLink]
    WHERE 
	 ([DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId AND @DynamicPageWebPartTemplatesLinkId is not null)
	OR ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId AND @DynamicPageWebPartTemplateId is not null)
	OR ([SiteWebPartID] = @SiteWebPartId AND @SiteWebPartId is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageWebPartTemplatesLink table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageWebPartTemplatesLinkID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [DynamicPageWebPartTemplatesLinkID] )
				SELECT TOP {3} [DynamicPageWebPartTemplatesLinkID]
				FROM [dbo].[DynamicPageWebPartTemplatesLink] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[DynamicPageWebPartTemplatesLinkID], O.[DynamicPageWebPartTemplateID], O.[SiteWebPartID], O.[Sequence]
				FROM
				    [dbo].[DynamicPageWebPartTemplatesLink] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[DynamicPageWebPartTemplatesLinkID] = PageIndex.[DynamicPageWebPartTemplatesLinkID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[DynamicPageWebPartTemplatesLink] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPageWebPartTemplatesLink table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[DynamicPageWebPartTemplatesLink]
					(
					[DynamicPageWebPartTemplateID]
					,[SiteWebPartID]
					,[Sequence]
					)
				VALUES
					(
					@DynamicPageWebPartTemplateId
					,@SiteWebPartId
					,@Sequence
					)
				
				-- Get the identity value
				SET @DynamicPageWebPartTemplatesLinkId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetByDynamicPageWebPartTemplateIdSiteWebPartId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplatesLink table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
					AND [SiteWebPartID] = @SiteWebPartId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPageWebPartTemplatesLink table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPageWebPartTemplatesLink table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPageWebPartTemplatesLink]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetByDynamicPageWebPartTemplatesLinkId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplatesLink table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
				WHERE
					[DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetByDynamicPageWebPartTemplateId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplatesLink table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPageWebPartTemplatesLink table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageWebPartTemplatesLinkID]
	, [DynamicPageWebPartTemplateID]
	, [SiteWebPartID]
	, [Sequence]
    FROM
	[dbo].[DynamicPageWebPartTemplatesLink]
    WHERE 
	 ([DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId OR @DynamicPageWebPartTemplatesLinkId IS NULL)
	AND ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId OR @DynamicPageWebPartTemplateId IS NULL)
	AND ([SiteWebPartID] = @SiteWebPartId OR @SiteWebPartId IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageWebPartTemplatesLinkID]
	, [DynamicPageWebPartTemplateID]
	, [SiteWebPartID]
	, [Sequence]
    FROM
	[dbo].[DynamicPageWebPartTemplatesLink]
    WHERE 
	 ([DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId AND @DynamicPageWebPartTemplatesLinkId is not null)
	OR ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId AND @DynamicPageWebPartTemplateId is not null)
	OR ([SiteWebPartID] = @SiteWebPartId AND @SiteWebPartId is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_GetBySiteWebPartId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPageWebPartTemplatesLink table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageWebPartTemplatesLinkID],
					[DynamicPageWebPartTemplateID],
					[SiteWebPartID],
					[Sequence]
				FROM
					[dbo].[DynamicPageWebPartTemplatesLink]
				WHERE
					[SiteWebPartID] = @SiteWebPartId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPageWebPartTemplatesLink table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteWebPartId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicPageWebPartTemplatesLink]
				SET
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
					,[SiteWebPartID] = @SiteWebPartId
					,[Sequence] = @Sequence
				WHERE
[DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPageWebPartTemplatesLink_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPageWebPartTemplatesLink table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplatesLinkId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[DynamicPageWebPartTemplatesLink] WITH (ROWLOCK) 
				WHERE
					[DynamicPageWebPartTemplatesLinkID] = @DynamicPageWebPartTemplatesLinkId
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="DynamicPages_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DynamicPages_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([DynamicPageID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [DynamicPageID]'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[DynamicPageID], O.[SiteID], O.[LanguageID], O.[ParentDynamicPageID], O.[PageName], O.[PageTitle], O.[PageContent], O.[DynamicPageWebPartTemplateID], O.[HyperLink], O.[Valid], O.[OpenInNewWindow], O.[Sequence], O.[FullScreen], O.[OnTopNav], O.[OnLeftNav], O.[OnBottomNav], O.[OnSiteMap], O.[Searchable], O.[MetaKeywords], O.[MetaDescription], O.[PageFriendlyName], O.[LastModified], O.[LastModifiedBy], O.[SearchField], O.[SourceID], O.[Secured], O.[CustomUrl], O.[MetaTitle], O.[GenerateBreadcrumb], O.[PublishOn], O.[Visible]
				FROM
				    [dbo].[DynamicPages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[DynamicPageID] = PageIndex.[DynamicPageID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="DynamicPages_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[DynamicPages]
					(
					[SiteID]
					,[LanguageID]
					,[ParentDynamicPageID]
					,[PageName]
					,[PageTitle]
					,[PageContent]
					,[DynamicPageWebPartTemplateID]
					,[HyperLink]
					,[Valid]
					,[OpenInNewWindow]
					,[Sequence]
					,[FullScreen]
					,[OnTopNav]
					,[OnLeftNav]
					,[OnBottomNav]
					,[OnSiteMap]
					,[Searchable]
					,[MetaKeywords]
					,[MetaDescription]
					,[PageFriendlyName]
					,[LastModified]
					,[LastModifiedBy]
					,[SearchField]
					,[SourceID]
					,[Secured]
					,[CustomUrl]
					,[MetaTitle]
					,[GenerateBreadcrumb]
					,[PublishOn]
					,[Visible]
					)
				VALUES
					(
					@SiteId
					,@LanguageId
					,@ParentDynamicPageId
					,@PageName
					,@PageTitle
					,@PageContent
					,@DynamicPageWebPartTemplateId
					,@HyperLink
					,@Valid
					,@OpenInNewWindow
					,@Sequence
					,@FullScreen
					,@OnTopNav
					,@OnLeftNav
					,@OnBottomNav
					,@OnSiteMap
					,@Searchable
					,@MetaKeywords
					,@MetaDescription
					,@PageFriendlyName
					,@LastModified
					,@LastModifiedBy
					,@SearchField
					,@SourceId
					,@Secured
					,@CustomUrl
					,@MetaTitle
					,@GenerateBreadcrumb
					,@PublishOn
					,@Visible
					)
				
				-- Get the identity value
				SET @DynamicPageId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault=""/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicPages]
				SET
					[SiteID] = @SiteId
					,[LanguageID] = @LanguageId
					,[ParentDynamicPageID] = @ParentDynamicPageId
					,[PageName] = @PageName
					,[PageTitle] = @PageTitle
					,[PageContent] = @PageContent
					,[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
					,[HyperLink] = @HyperLink
					,[Valid] = @Valid
					,[OpenInNewWindow] = @OpenInNewWindow
					,[Sequence] = @Sequence
					,[FullScreen] = @FullScreen
					,[OnTopNav] = @OnTopNav
					,[OnLeftNav] = @OnLeftNav
					,[OnBottomNav] = @OnBottomNav
					,[OnSiteMap] = @OnSiteMap
					,[Searchable] = @Searchable
					,[MetaKeywords] = @MetaKeywords
					,[MetaDescription] = @MetaDescription
					,[PageFriendlyName] = @PageFriendlyName
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
					,[SearchField] = @SearchField
					,[SourceID] = @SourceId
					,[Secured] = @Secured
					,[CustomUrl] = @CustomUrl
					,[MetaTitle] = @MetaTitle
					,[GenerateBreadcrumb] = @GenerateBreadcrumb
					,[PublishOn] = @PublishOn
					,[Visible] = @Visible
				WHERE
[DynamicPageID] = @DynamicPageId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPages table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[DynamicPages] WITH (ROWLOCK) 
				WHERE
					[DynamicPageID] = @DynamicPageId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetByDynamicPageWebPartTemplateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetByLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetBySiteIdPageNameLanguageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[SiteID] = @SiteId
					AND [PageName] = @PageName
					AND [LanguageID] = @LanguageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetBySiteIdLanguageIdPageFriendlyName" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[SiteID] = @SiteId
					AND [LanguageID] = @LanguageId
					AND [PageFriendlyName] = @PageFriendlyName
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetByDynamicPageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageID],
					[SiteID],
					[LanguageID],
					[ParentDynamicPageID],
					[PageName],
					[PageTitle],
					[PageContent],
					[DynamicPageWebPartTemplateID],
					[HyperLink],
					[Valid],
					[OpenInNewWindow],
					[Sequence],
					[FullScreen],
					[OnTopNav],
					[OnLeftNav],
					[OnBottomNav],
					[OnSiteMap],
					[Searchable],
					[MetaKeywords],
					[MetaDescription],
					[PageFriendlyName],
					[LastModified],
					[LastModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[DynamicPageID] = @DynamicPageId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetByRelatedDynamicPageIdFromRelatedDynamicPages" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
SELECT dbo.[DynamicPages].[DynamicPageID]
       ,dbo.[DynamicPages].[SiteID]
       ,dbo.[DynamicPages].[LanguageID]
       ,dbo.[DynamicPages].[ParentDynamicPageID]
       ,dbo.[DynamicPages].[PageName]
       ,dbo.[DynamicPages].[PageTitle]
       ,dbo.[DynamicPages].[PageContent]
       ,dbo.[DynamicPages].[DynamicPageWebPartTemplateID]
       ,dbo.[DynamicPages].[HyperLink]
       ,dbo.[DynamicPages].[Valid]
       ,dbo.[DynamicPages].[OpenInNewWindow]
       ,dbo.[DynamicPages].[Sequence]
       ,dbo.[DynamicPages].[FullScreen]
       ,dbo.[DynamicPages].[OnTopNav]
       ,dbo.[DynamicPages].[OnLeftNav]
       ,dbo.[DynamicPages].[OnBottomNav]
       ,dbo.[DynamicPages].[OnSiteMap]
       ,dbo.[DynamicPages].[Searchable]
       ,dbo.[DynamicPages].[MetaKeywords]
       ,dbo.[DynamicPages].[MetaDescription]
       ,dbo.[DynamicPages].[PageFriendlyName]
       ,dbo.[DynamicPages].[LastModified]
       ,dbo.[DynamicPages].[LastModifiedBy]
       ,dbo.[DynamicPages].[SearchField]
       ,dbo.[DynamicPages].[SourceID]
       ,dbo.[DynamicPages].[Secured]
       ,dbo.[DynamicPages].[CustomUrl]
       ,dbo.[DynamicPages].[MetaTitle]
       ,dbo.[DynamicPages].[GenerateBreadcrumb]
       ,dbo.[DynamicPages].[PublishOn]
       ,dbo.[DynamicPages].[Visible]
  FROM dbo.[DynamicPages]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[RelatedDynamicPages] 
                WHERE dbo.[RelatedDynamicPages].[RelatedDynamicPageID] = @RelatedDynamicPageId
                  AND dbo.[RelatedDynamicPages].[DynamicPageID] = dbo.[DynamicPages].[DynamicPageID]
                  )
				SELECT @@ROWCOUNT			
				]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_GetByDynamicPageIdFromRelatedDynamicPages" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
SELECT dbo.[DynamicPages].[DynamicPageID]
       ,dbo.[DynamicPages].[SiteID]
       ,dbo.[DynamicPages].[LanguageID]
       ,dbo.[DynamicPages].[ParentDynamicPageID]
       ,dbo.[DynamicPages].[PageName]
       ,dbo.[DynamicPages].[PageTitle]
       ,dbo.[DynamicPages].[PageContent]
       ,dbo.[DynamicPages].[DynamicPageWebPartTemplateID]
       ,dbo.[DynamicPages].[HyperLink]
       ,dbo.[DynamicPages].[Valid]
       ,dbo.[DynamicPages].[OpenInNewWindow]
       ,dbo.[DynamicPages].[Sequence]
       ,dbo.[DynamicPages].[FullScreen]
       ,dbo.[DynamicPages].[OnTopNav]
       ,dbo.[DynamicPages].[OnLeftNav]
       ,dbo.[DynamicPages].[OnBottomNav]
       ,dbo.[DynamicPages].[OnSiteMap]
       ,dbo.[DynamicPages].[Searchable]
       ,dbo.[DynamicPages].[MetaKeywords]
       ,dbo.[DynamicPages].[MetaDescription]
       ,dbo.[DynamicPages].[PageFriendlyName]
       ,dbo.[DynamicPages].[LastModified]
       ,dbo.[DynamicPages].[LastModifiedBy]
       ,dbo.[DynamicPages].[SearchField]
       ,dbo.[DynamicPages].[SourceID]
       ,dbo.[DynamicPages].[Secured]
       ,dbo.[DynamicPages].[CustomUrl]
       ,dbo.[DynamicPages].[MetaTitle]
       ,dbo.[DynamicPages].[GenerateBreadcrumb]
       ,dbo.[DynamicPages].[PublishOn]
       ,dbo.[DynamicPages].[Visible]
  FROM dbo.[DynamicPages]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[RelatedDynamicPages] 
                WHERE dbo.[RelatedDynamicPages].[DynamicPageID] = @DynamicPageId
                  AND dbo.[RelatedDynamicPages].[RelatedDynamicPageID] = dbo.[DynamicPages].[DynamicPageID]
                  )
				SELECT @@ROWCOUNT			
				]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicPages_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageID]
	, [SiteID]
	, [LanguageID]
	, [ParentDynamicPageID]
	, [PageName]
	, [PageTitle]
	, [PageContent]
	, [DynamicPageWebPartTemplateID]
	, [HyperLink]
	, [Valid]
	, [OpenInNewWindow]
	, [Sequence]
	, [FullScreen]
	, [OnTopNav]
	, [OnLeftNav]
	, [OnBottomNav]
	, [OnSiteMap]
	, [Searchable]
	, [MetaKeywords]
	, [MetaDescription]
	, [PageFriendlyName]
	, [LastModified]
	, [LastModifiedBy]
	, [SearchField]
	, [SourceID]
	, [Secured]
	, [CustomUrl]
	, [MetaTitle]
	, [GenerateBreadcrumb]
	, [PublishOn]
	, [Visible]
    FROM
	[dbo].[DynamicPages]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId OR @DynamicPageId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LanguageID] = @LanguageId OR @LanguageId IS NULL)
	AND ([ParentDynamicPageID] = @ParentDynamicPageId OR @ParentDynamicPageId IS NULL)
	AND ([PageName] = @PageName OR @PageName IS NULL)
	AND ([PageTitle] = @PageTitle OR @PageTitle IS NULL)
	AND ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId OR @DynamicPageWebPartTemplateId IS NULL)
	AND ([HyperLink] = @HyperLink OR @HyperLink IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([OpenInNewWindow] = @OpenInNewWindow OR @OpenInNewWindow IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([FullScreen] = @FullScreen OR @FullScreen IS NULL)
	AND ([OnTopNav] = @OnTopNav OR @OnTopNav IS NULL)
	AND ([OnLeftNav] = @OnLeftNav OR @OnLeftNav IS NULL)
	AND ([OnBottomNav] = @OnBottomNav OR @OnBottomNav IS NULL)
	AND ([OnSiteMap] = @OnSiteMap OR @OnSiteMap IS NULL)
	AND ([Searchable] = @Searchable OR @Searchable IS NULL)
	AND ([MetaKeywords] = @MetaKeywords OR @MetaKeywords IS NULL)
	AND ([MetaDescription] = @MetaDescription OR @MetaDescription IS NULL)
	AND ([PageFriendlyName] = @PageFriendlyName OR @PageFriendlyName IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([SearchField] = @SearchField OR @SearchField IS NULL)
	AND ([SourceID] = @SourceId OR @SourceId IS NULL)
	AND ([Secured] = @Secured OR @Secured IS NULL)
	AND ([CustomUrl] = @CustomUrl OR @CustomUrl IS NULL)
	AND ([MetaTitle] = @MetaTitle OR @MetaTitle IS NULL)
	AND ([GenerateBreadcrumb] = @GenerateBreadcrumb OR @GenerateBreadcrumb IS NULL)
	AND ([PublishOn] = @PublishOn OR @PublishOn IS NULL)
	AND ([Visible] = @Visible OR @Visible IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageID]
	, [SiteID]
	, [LanguageID]
	, [ParentDynamicPageID]
	, [PageName]
	, [PageTitle]
	, [PageContent]
	, [DynamicPageWebPartTemplateID]
	, [HyperLink]
	, [Valid]
	, [OpenInNewWindow]
	, [Sequence]
	, [FullScreen]
	, [OnTopNav]
	, [OnLeftNav]
	, [OnBottomNav]
	, [OnSiteMap]
	, [Searchable]
	, [MetaKeywords]
	, [MetaDescription]
	, [PageFriendlyName]
	, [LastModified]
	, [LastModifiedBy]
	, [SearchField]
	, [SourceID]
	, [Secured]
	, [CustomUrl]
	, [MetaTitle]
	, [GenerateBreadcrumb]
	, [PublishOn]
	, [Visible]
    FROM
	[dbo].[DynamicPages]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId AND @DynamicPageId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LanguageID] = @LanguageId AND @LanguageId is not null)
	OR ([ParentDynamicPageID] = @ParentDynamicPageId AND @ParentDynamicPageId is not null)
	OR ([PageName] = @PageName AND @PageName is not null)
	OR ([PageTitle] = @PageTitle AND @PageTitle is not null)
	OR ([DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId AND @DynamicPageWebPartTemplateId is not null)
	OR ([HyperLink] = @HyperLink AND @HyperLink is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([OpenInNewWindow] = @OpenInNewWindow AND @OpenInNewWindow is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([FullScreen] = @FullScreen AND @FullScreen is not null)
	OR ([OnTopNav] = @OnTopNav AND @OnTopNav is not null)
	OR ([OnLeftNav] = @OnLeftNav AND @OnLeftNav is not null)
	OR ([OnBottomNav] = @OnBottomNav AND @OnBottomNav is not null)
	OR ([OnSiteMap] = @OnSiteMap AND @OnSiteMap is not null)
	OR ([Searchable] = @Searchable AND @Searchable is not null)
	OR ([MetaKeywords] = @MetaKeywords AND @MetaKeywords is not null)
	OR ([MetaDescription] = @MetaDescription AND @MetaDescription is not null)
	OR ([PageFriendlyName] = @PageFriendlyName AND @PageFriendlyName is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	OR ([Secured] = @Secured AND @Secured is not null)
	OR ([CustomUrl] = @CustomUrl AND @CustomUrl is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([GenerateBreadcrumb] = @GenerateBreadcrumb AND @GenerateBreadcrumb is not null)
	OR ([PublishOn] = @PublishOn AND @PublishOn is not null)
	OR ([Visible] = @Visible AND @Visible is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="DynamicPages_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPages table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [DynamicPageID] )
				SELECT TOP {3} [DynamicPageID]
				FROM [dbo].[DynamicPages] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[DynamicPageID], O.[SiteID], O.[LanguageID], O.[ParentDynamicPageID], O.[PageName], O.[PageTitle], O.[PageContent], O.[DynamicPageWebPartTemplateID], O.[HyperLink], O.[Valid], O.[OpenInNewWindow], O.[Sequence], O.[FullScreen], O.[OnTopNav], O.[OnLeftNav], O.[OnBottomNav], O.[OnSiteMap], O.[Searchable], O.[MetaKeywords], O.[MetaDescription], O.[PageFriendlyName], O.[LastModified], O.[LastModifiedBy], O.[SearchField], O.[SourceID], O.[Secured], O.[CustomUrl], O.[MetaTitle], O.[GenerateBreadcrumb], O.[PublishOn], O.[Visible]
				FROM
				    [dbo].[DynamicPages] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[DynamicPageID] = PageIndex.[DynamicPageID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[DynamicPages] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="DynamicPages_GetSiteMissingSystemPagesByName"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN  
 SELECT DISTINCT s.SiteID, SiteName   
 FROM DynamicPages dp   
 INNER JOIN Sites s  
 ON dp.SiteID = s.SiteID  
 WHERE dp.SiteID NOT IN (SELECT SiteID FROM DynamicPages WHERE PageName = @PageName)  
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetBySiteIdPageNameLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[SiteID] = @SiteId
					AND [PageName] = @PageName
					AND [LanguageID] = @LanguageId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetByKeywords"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Keywords" type="nvarchar" direction="Input" size="2500" precision="0" scale="0" param="(2500)" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searhable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
'SourceID' ,                
  DynamicPages.Secured,                     
  DynamicPages.CustomUrl,          
  DynamicPages.MetaTitle,          
  DynamicPages.GenerateBreadcrumb,         
  DynamicPages.PublishOn,  
  DynamicPages.Visible  
 FROM DynamicPages DynamicPages WITH (NOLOCK)                       
  INNER JOIN @tempDynamicPagesGetByKeywords dynamicPagesGetByKeywords ON DynamicPages.DynamicPageID = dynamicPagesGetByKeywords.DynamicPageID                      
 WHERE                              
  DynamicPages.SiteID = @SiteID                              
  AND DynamicPages.LanguageID = @LanguageID                              
  --AND CONTAINS (DynamicPages.SearchField, @FullText)                       
  AND dynamicPagesGetByKeywords.RowNumber >= @PageStart                            
  AND  dynamicPagesGetByKeywords.RowNumber <= @PageEnd                            
 ORDER BY dynamicPagesGetByKeywords.RowNumber                      
                      
 --AND                               
   --(                              
   -- FREETEXT(PageTitle, @FullText)                                
    --OR FREETEXT(PageContent, @FullText)                               
    --OR FREETEXT(MetaKeywords, @FullText)                         
    --OR FREETEXT(MetaDescription, @FullText)                              
   --)  

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetNavigation"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnMainNavigation" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnDynamicPageNavigation" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnFooterNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],                  
   [SearchField],         
   [SourceID],      
   [Secured],             
   [CustomUrl],      
   [MetaTitle],    
   [GenerateBreadcrumb],      
   [PublishOn],  
   [Visible]  
 FROM                  
  DynamicPagesFamily                  
 ORDER BY Sort    

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetBySiteIdPageName"  skip="true">
			<comment><![CDATA[ 
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
= @PageName  

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_CopyDynamicPagesForNewLangauge"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewSiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NewLanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ErrorMessage  
 ROLLBACK TRAN @TransactionName  
END CATCH  
  
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetByDynamicPageWebPartTemplateId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[DynamicPageWebPartTemplateID] = @DynamicPageWebPartTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicPages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,[SearchField] = @SearchField
					,[SourceID] = @SourceId
					,[Secured] = @Secured
					,[CustomUrl] = @CustomUrl
					,[MetaTitle] = @MetaTitle
					,[GenerateBreadcrumb] = @GenerateBreadcrumb
					,[PublishOn] = @PublishOn
					,[Visible] = @Visible
				WHERE
[DynamicPageID] = @DynamicPageId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetByDynamicPageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[DynamicPageID] = @DynamicPageId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetDetail"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy = AdminUsers.AdminUserID
				WHERE
					DynamicPages.[SiteID] = @SiteId
				AND ((PageName = '') OR (PageName = @PageName))
				AND LanguageID = @LanguageID

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_CustomGetValidHierarchy"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NonSystemPage" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],                      
   [SearchField],                 
 [SourceID],              
 [Secured],                      
 [CustomUrl],          
 [MetaTitle],      
 [GenerateBreadcrumb],            
 [PublishOn],     
 [Visible]     
 FROM                      
  DynamicPagesFamily                      
 ORDER BY Sort      

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicPages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicPages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[DynamicPages] WITH (ROWLOCK) 
				WHERE
					[DynamicPageID] = @DynamicPageId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetHierarchyByChild"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
C  
  
 EXEC  [dbo].[DynamicPages_CustomGetValidHierarchy] @SiteID, @LanguageID, @DynamicPageID

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetSystemPagesBySiteIDPageName"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
= @PageName          
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_UpdateWebPartTemplate"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateChildPages" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
lvl      
  FROM          
   [dbo].[DynamicPages] parent          
  WHERE          
   (ISNULL(@DynamicPageID,0) <> 0 OR parent.[ParentDynamicPageID] = @DynamicPageID)          
  AND (ISNULL(@DynamicPageID,0) = 0  OR parent.[DynamicPageID]  = @DynamicPageID)          
  AND parent.[SiteID] = @SiteID          
  AND (parent.[LanguageID] = @LanguageID OR @LanguageID = 0)        
  UNION ALL          
  SELECT          
   children.[DynamicPageID],         
   dynamicPagesFamily.lvl + 1          
  FROM          
   [dbo].[DynamicPages] children          
  INNER JOIN          
   DynamicPagesFamily dynamicPagesFamily          
  ON          
   children.[ParentDynamicPageID] = dynamicPagesFamily.DynamicPageID          
  AND children.[SiteID] = @SiteID          
  AND (children.[LanguageID] = @LanguageID  OR @LanguageID = 0) 
  WHERE @UpdateChildPages = 1
 )          
 
UPDATE DynamicPages SET DynamicPageWebPartTemplateID = @DynamicPageWebPartTemplateID      
	WHERE DynamicPageID IN (      
		SELECT [DynamicPageID]      
		FROM DynamicPagesFamily      
)  
  
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_CopySystemPage"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@MasterSiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@DefaultLanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultAdminID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy, SearchField, SourceId, Secured, CustomUrl, MetaTitle)    
 SELECT @SiteID, cdp.LanguageId, sp.DynamicPageID, PageName, PageTitle, PageContent,    
 sp.DynamicPageWebPartTemplateId, HyperLink, Valid, OpenInNewWindow, Sequence, FullScreen,    
 OnTopNav, OnLeftNav, OnBottomNav, OnSiteMap, Searchable, MetaKeywords,    
 MetaDescription, PageFriendlyName, GETDATE(), @DefaultAdminID, SearchField, SourceId, Secured, CustomUrl, MetaTitle     
 FROM @CopyDynamicPages cdp INNER JOIN @SystemPages sp    
 ON cdp.LanguageID = sp.LanguageID    
END    
    
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetByDynamicPageIdFromRelatedDynamicPages"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
       ,dbo.[DynamicPages].[SearchField]
       ,dbo.[DynamicPages].[SourceID]
       ,dbo.[DynamicPages].[Secured]
       ,dbo.[DynamicPages].[CustomUrl]
       ,dbo.[DynamicPages].[MetaTitle]
       ,dbo.[DynamicPages].[GenerateBreadcrumb]
       ,dbo.[DynamicPages].[PublishOn]
       ,dbo.[DynamicPages].[Visible]
  FROM dbo.[DynamicPages]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[RelatedDynamicPages] 
                WHERE dbo.[RelatedDynamicPages].[DynamicPageID] = @DynamicPageId
                  AND dbo.[RelatedDynamicPages].[RelatedDynamicPageID] = dbo.[DynamicPages].[DynamicPageID]
                  )
				SELECT @@ROWCOUNT			
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicPages table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicPages]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetMissingSystemPagesBySiteID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@DefaultSiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN  
 SELECT DISTINCT PageName   
 FROM DynamicPages WHERE SiteID = @DefaultSiteID   
 AND PageName NOT IN (SELECT PageName FROM DynamicPages WHERE PageName LIKE 'SystemPage_%' AND SiteID = @SiteID)  
 AND PageName LIKE 'SystemPage_%'  
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetBySiteIdLanguageIdPageFriendlyName"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[SiteID] = @SiteId
					AND [LanguageID] = @LanguageId
					AND [PageFriendlyName] = @PageFriendlyName
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetByRelatedDynamicPageIdFromRelatedDynamicPages"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@RelatedDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
       ,dbo.[DynamicPages].[SearchField]
       ,dbo.[DynamicPages].[SourceID]
       ,dbo.[DynamicPages].[Secured]
       ,dbo.[DynamicPages].[CustomUrl]
       ,dbo.[DynamicPages].[MetaTitle]
       ,dbo.[DynamicPages].[GenerateBreadcrumb]
       ,dbo.[DynamicPages].[PublishOn]
       ,dbo.[DynamicPages].[Visible]
  FROM dbo.[DynamicPages]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[RelatedDynamicPages] 
                WHERE dbo.[RelatedDynamicPages].[RelatedDynamicPageID] = @RelatedDynamicPageId
                  AND dbo.[RelatedDynamicPages].[DynamicPageID] = dbo.[DynamicPages].[DynamicPageID]
                  )
				SELECT @@ROWCOUNT			
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetSystemPagesBySiteIDLanguageID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN  
 SELECT DynamicPageID,  
 SiteID,  
 LanguageID,  
 PageContent  
 FROM DynamicPages WHERE SiteID = @SiteID   
 AND LanguageID = @LanguageID AND PageName = @PageName  
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetBySiteIdPageFriendlyName"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],  
     [SearchField],
	[SourceID],    
  [Secured],    
  [CustomUrl],
  [MetaTitle]
    FROM  
     [dbo].[DynamicPages] (NOLOCK)  
    WHERE  
     [SiteID] = @SiteId  
     AND [PageFriendlyName] = @PageFriendlyName  
    SELECT @@ROWCOUNT

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetByDynamicPageIdLanguageId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],            
  DynamicPages.[SearchField],        
  DynamicPages.[SourceID],          
  DynamicPages.[Secured],      
  DynamicPages.[CustomUrl],      
  DynamicPages.[MetaTitle],      
  DynamicPages.[GenerateBreadcrumb],    
  DynamicPages.[PublishOn],  
  DynamicPages.[Visible]  
 FROM            
  [dbo].[DynamicPages] DynamicPages            
 WHERE            
  DynamicPages.[SiteID] = @SiteID            
  AND DynamicPages.[LanguageID] = @LanguageID            
     AND DynamicPages.[PageName] = (SELECT PageName FROM DynamicPages WHERE DynamicPageId = @DynamicPageId)    

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_BulkUpdate"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@From" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@To" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@UpdateSystemPages" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
NText)  
WHERE [SiteID] = @SiteId     
  
Select @@ROWCOUNT

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetHierarchy"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NonSystemPage" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowAll" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],                  
   [SearchField],             
 [SourceID],          
 [Secured],                  
 [CustomUrl],      
 [MetaTitle],    
 [GenerateBreadcrumb],        
 [PublishOn],  
 [Visible]  
 FROM                  
  DynamicPagesFamily                  
 ORDER BY Sort    

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicPages table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					,@SearchField
					,@SourceId
					,@Secured
					,@CustomUrl
					,@MetaTitle
					,@GenerateBreadcrumb
					,@PublishOn
					,@Visible
					)
				
				-- Get the identity value
				SET @DynamicPageId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetSystemPagesNameBySiteID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN  
 SELECT DISTINCT SiteID, PageName   
 FROM DynamicPages WHERE SiteID = @SiteID   
 AND PageName LIKE 'SystemPage_%'  
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_CustomGetBySiteIDLanguageID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy,
SearchField,
SourceID,
Secured,
CustomUrl,
MetaTitle
	FROM DynamicPages WITH (NOLOCK)
	WHERE SiteID = @SiteID and LanguageID = @LanguageID
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetBySiteIdPageNameLanguageIdWithRoot"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
= @PageName                
    AND [LanguageID] = @DefaultLanguageId               
   END              
  END              
 END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicPages table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PageTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@PageContent" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageWebPartTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HyperLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OpenInNewWindow" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullScreen" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnTopNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnLeftNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnBottomNav" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OnSiteMap" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Searchable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MetaKeywords" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@MetaDescription" type="nvarchar" direction="Input" size="1024" precision="0" scale="0" param="(1024)" nulldefault="null"/>
				<parameter name="@PageFriendlyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SourceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Secured" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomUrl" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@MetaTitle" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@GenerateBreadcrumb" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublishOn" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([SourceID] = @SourceId AND @SourceId is not null)
	OR ([Secured] = @Secured AND @Secured is not null)
	OR ([CustomUrl] = @CustomUrl AND @CustomUrl is not null)
	OR ([MetaTitle] = @MetaTitle AND @MetaTitle is not null)
	OR ([GenerateBreadcrumb] = @GenerateBreadcrumb AND @GenerateBreadcrumb is not null)
	OR ([PublishOn] = @PublishOn AND @PublishOn is not null)
	OR ([Visible] = @Visible AND @Visible is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicPages_GetByLanguageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicPages table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LanguageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy],
					[SearchField],
					[SourceID],
					[Secured],
					[CustomUrl],
					[MetaTitle],
					[GenerateBreadcrumb],
					[PublishOn],
					[Visible]
				FROM
					[dbo].[DynamicPages]
				WHERE
					[LanguageID] = @LanguageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicpagesCustomWidget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DynamicPageID],
					[CustomWidgetID],
					[Position],
					[Sequence]
				FROM
					[dbo].[DynamicpagesCustomWidget]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DynamicpagesCustomWidget_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicpagesCustomWidget table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageID] int, [CustomWidgetID] int, [Position] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([DynamicPageID], [CustomWidgetID], [Position])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [DynamicPageID], [CustomWidgetID], [Position]'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicpagesCustomWidget]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[DynamicPageID], O.[CustomWidgetID], O.[Position], O.[Sequence]
				FROM
				    [dbo].[DynamicpagesCustomWidget] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[DynamicPageID] = PageIndex.[DynamicPageID]
					AND O.[CustomWidgetID] = PageIndex.[CustomWidgetID]
					AND O.[Position] = PageIndex.[Position]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicpagesCustomWidget]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicpagesCustomWidget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[DynamicpagesCustomWidget]
					(
					[DynamicPageID]
					,[CustomWidgetID]
					,[Position]
					,[Sequence]
					)
				VALUES
					(
					@DynamicPageId
					,@CustomWidgetId
					,@Position
					,@Sequence
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicpagesCustomWidget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalCustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalPosition" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicpagesCustomWidget]
				SET
					[DynamicPageID] = @DynamicPageId
					,[CustomWidgetID] = @CustomWidgetId
					,[Position] = @Position
					,[Sequence] = @Sequence
				WHERE
[DynamicPageID] = @OriginalDynamicPageId 
AND [CustomWidgetID] = @OriginalCustomWidgetId 
AND [Position] = @OriginalPosition 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicpagesCustomWidget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[DynamicpagesCustomWidget] WITH (ROWLOCK) 
				WHERE
					[DynamicPageID] = @DynamicPageId
					AND [CustomWidgetID] = @CustomWidgetId
					AND [Position] = @Position
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicpagesCustomWidget_GetByCustomWidgetId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicpagesCustomWidget table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[CustomWidgetID],
					[Position],
					[Sequence]
				FROM
					[dbo].[DynamicpagesCustomWidget]
				WHERE
					[CustomWidgetID] = @CustomWidgetId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicpagesCustomWidget_GetByDynamicPageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicpagesCustomWidget table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[CustomWidgetID],
					[Position],
					[Sequence]
				FROM
					[dbo].[DynamicpagesCustomWidget]
				WHERE
					[DynamicPageID] = @DynamicPageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DynamicpagesCustomWidget_GetByDynamicPageIdCustomWidgetIdPosition" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicpagesCustomWidget table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DynamicPageID],
					[CustomWidgetID],
					[Position],
					[Sequence]
				FROM
					[dbo].[DynamicpagesCustomWidget]
				WHERE
					[DynamicPageID] = @DynamicPageId
					AND [CustomWidgetID] = @CustomWidgetId
					AND [Position] = @Position
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicpagesCustomWidget table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageID]
	, [CustomWidgetID]
	, [Position]
	, [Sequence]
    FROM
	[dbo].[DynamicpagesCustomWidget]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId OR @DynamicPageId IS NULL)
	AND ([CustomWidgetID] = @CustomWidgetId OR @CustomWidgetId IS NULL)
	AND ([Position] = @Position OR @Position IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageID]
	, [CustomWidgetID]
	, [Position]
	, [Sequence]
    FROM
	[dbo].[DynamicpagesCustomWidget]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId AND @DynamicPageId is not null)
	OR ([CustomWidgetID] = @CustomWidgetId AND @CustomWidgetId is not null)
	OR ([Position] = @Position AND @Position is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicpagesCustomWidget table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [DynamicPageID] int, [CustomWidgetID] int, [Position] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [DynamicPageID], [CustomWidgetID], [Position] )
				SELECT TOP {3} [DynamicPageID], [CustomWidgetID], [Position]
				FROM [dbo].[DynamicpagesCustomWidget] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[DynamicPageID], O.[CustomWidgetID], O.[Position], O.[Sequence]
				FROM
				    [dbo].[DynamicpagesCustomWidget] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[DynamicPageID] = PageIndex.[DynamicPageID]
				    AND O.[CustomWidgetID] = PageIndex.[CustomWidgetID]
				    AND O.[Position] = PageIndex.[Position]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[DynamicpagesCustomWidget] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_GetByDynamicPageId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicpagesCustomWidget table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[CustomWidgetID],
					[Position],
					[Sequence]
				FROM
					[dbo].[DynamicpagesCustomWidget]
				WHERE
					[DynamicPageID] = @DynamicPageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_GetByDynamicPageIdCustomWidgetIdPosition"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicpagesCustomWidget table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageID],
					[CustomWidgetID],
					[Position],
					[Sequence]
				FROM
					[dbo].[DynamicpagesCustomWidget]
				WHERE
					[DynamicPageID] = @DynamicPageId
					AND [CustomWidgetID] = @CustomWidgetId
					AND [Position] = @Position
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the DynamicpagesCustomWidget table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[DynamicpagesCustomWidget]
					(
					[DynamicPageID]
					,[CustomWidgetID]
					,[Position]
					,[Sequence]
					)
				VALUES
					(
					@DynamicPageId
					,@CustomWidgetId
					,@Position
					,@Sequence
					)
				
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the DynamicpagesCustomWidget table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageID],
					[CustomWidgetID],
					[Position],
					[Sequence]
				FROM
					[dbo].[DynamicpagesCustomWidget]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the DynamicpagesCustomWidget table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DynamicpagesCustomWidget]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the DynamicpagesCustomWidget table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OriginalDynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OriginalCustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OriginalPosition" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[DynamicpagesCustomWidget]
				SET
					[DynamicPageID] = @DynamicPageId
					,[CustomWidgetID] = @CustomWidgetId
					,[Position] = @Position
					,[Sequence] = @Sequence
				WHERE
[DynamicPageID] = @OriginalDynamicPageId 
AND [CustomWidgetID] = @OriginalCustomWidgetId 
AND [Position] = @OriginalPosition 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_CustomGetByDynamicPageIDPosition"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@DynamicPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
sName,
	cw.Content
	FROM DynamicpagesCustomWidget dpcw WITH (NOLOCK)
	INNER JOIN CustomWidget cw  WITH (NOLOCK) 
	ON dpcw.CustomWidgetID = cw.CustomWidgetID
	INNER JOIN  CustomWidgetCSSSelector cwcs  WITH (NOLOCK) 
	ON cw.CustomWidgetCSSSelectorID = cwcs.CustomWidgetCSSSelectorID
	WHERE DynamicPageID = @DynamicPageID AND ((@Position = 0) OR Position = @Position) AND cw.Active = 1
	ORDER BY Position, Sequence
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the DynamicpagesCustomWidget table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DynamicPageID]
	, [CustomWidgetID]
	, [Position]
	, [Sequence]
    FROM
	[dbo].[DynamicpagesCustomWidget]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId OR @DynamicPageId IS NULL)
	AND ([CustomWidgetID] = @CustomWidgetId OR @CustomWidgetId IS NULL)
	AND ([Position] = @Position OR @Position IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DynamicPageID]
	, [CustomWidgetID]
	, [Position]
	, [Sequence]
    FROM
	[dbo].[DynamicpagesCustomWidget]
    WHERE 
	 ([DynamicPageID] = @DynamicPageId AND @DynamicPageId is not null)
	OR ([CustomWidgetID] = @CustomWidgetId AND @CustomWidgetId is not null)
	OR ([Position] = @Position AND @Position is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_GetByCustomWidgetId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the DynamicpagesCustomWidget table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[DynamicPageID],
					[CustomWidgetID],
					[Position],
					[Sequence]
				FROM
					[dbo].[DynamicpagesCustomWidget]
				WHERE
					[CustomWidgetID] = @CustomWidgetId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_CustomSelect"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@DynamicPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT DynamicPageID,
	CustomWidgetID,
	Position,
	Sequence 
	FROM DynamicpagesCustomWidget WITH (NOLOCK)
	WHERE DynamicPageID = @DynamicPageID
	AND CustomWidgetID = @CustomWidgetID
	AND Position = @Position
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_CustomDelete"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@DynamicPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	DELETE FROM DynamicpagesCustomWidget WHERE DynamicPageID = @DynamicPageID AND CustomWidgetID = @CustomWidgetID AND Position = @Position
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_GetByDynamicPageIdCustomWidgetId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[DynamicPageID],
					[CustomWidgetID],
					[Position],
					[Sequence]
				FROM
					[dbo].[DynamicpagesCustomWidget]
				WHERE
					[DynamicPageID] = @DynamicPageId
					AND [CustomWidgetID] = @CustomWidgetId
				SELECT @@ROWCOUNT

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="DynamicpagesCustomWidget_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the DynamicpagesCustomWidget table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@DynamicPageId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomWidgetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Position" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[DynamicpagesCustomWidget] WITH (ROWLOCK) 
				WHERE
					[DynamicPageID] = @DynamicPageId
					AND [CustomWidgetID] = @CustomWidgetId
					AND [Position] = @Position
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Industry_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Industry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[IndustryID],
					[SiteID],
					[IndustryName],
					[Sequence],
					[Valid],
					[IndustryLanguageXML],
					[LastModifiedBy],
					[LastModified]
				FROM
					[dbo].[Industry]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Industry_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Industry table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [IndustryID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([IndustryID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [IndustryID]'
				SET @SQL = @SQL + ' FROM [dbo].[Industry]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[IndustryID], O.[SiteID], O.[IndustryName], O.[Sequence], O.[Valid], O.[IndustryLanguageXML], O.[LastModifiedBy], O.[LastModified]
				FROM
				    [dbo].[Industry] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[IndustryID] = PageIndex.[IndustryID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Industry]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Industry_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Industry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IndustryId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IndustryName" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@IndustryLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Industry]
					(
					[SiteID]
					,[IndustryName]
					,[Sequence]
					,[Valid]
					,[IndustryLanguageXML]
					,[LastModifiedBy]
					,[LastModified]
					)
				VALUES
					(
					@SiteId
					,@IndustryName
					,@Sequence
					,@Valid
					,@IndustryLanguageXml
					,@LastModifiedBy
					,@LastModified
					)
				
				-- Get the identity value
				SET @IndustryId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Industry_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Industry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IndustryName" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@IndustryLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Industry]
				SET
					[SiteID] = @SiteId
					,[IndustryName] = @IndustryName
					,[Sequence] = @Sequence
					,[Valid] = @Valid
					,[IndustryLanguageXML] = @IndustryLanguageXml
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
				WHERE
[IndustryID] = @IndustryId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Industry_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Industry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Industry] WITH (ROWLOCK) 
				WHERE
					[IndustryID] = @IndustryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Industry_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Industry table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[IndustryID],
					[SiteID],
					[IndustryName],
					[Sequence],
					[Valid],
					[IndustryLanguageXML],
					[LastModifiedBy],
					[LastModified]
				FROM
					[dbo].[Industry]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Industry_GetByIndustryId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Industry table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[IndustryID],
					[SiteID],
					[IndustryName],
					[Sequence],
					[Valid],
					[IndustryLanguageXML],
					[LastModifiedBy],
					[LastModified]
				FROM
					[dbo].[Industry]
				WHERE
					[IndustryID] = @IndustryId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Industry_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Industry table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryName" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [IndustryID]
	, [SiteID]
	, [IndustryName]
	, [Sequence]
	, [Valid]
	, [IndustryLanguageXML]
	, [LastModifiedBy]
	, [LastModified]
    FROM
	[dbo].[Industry]
    WHERE 
	 ([IndustryID] = @IndustryId OR @IndustryId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([IndustryName] = @IndustryName OR @IndustryName IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([IndustryLanguageXML] = @IndustryLanguageXml OR @IndustryLanguageXml IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [IndustryID]
	, [SiteID]
	, [IndustryName]
	, [Sequence]
	, [Valid]
	, [IndustryLanguageXML]
	, [LastModifiedBy]
	, [LastModified]
    FROM
	[dbo].[Industry]
    WHERE 
	 ([IndustryID] = @IndustryId AND @IndustryId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([IndustryName] = @IndustryName AND @IndustryName is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([IndustryLanguageXML] = @IndustryLanguageXml AND @IndustryLanguageXml is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Industry_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Industry table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [IndustryID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [IndustryID] )
				SELECT TOP {3} [IndustryID]
				FROM [dbo].[Industry] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[IndustryID], O.[SiteID], O.[IndustryName], O.[Sequence], O.[Valid], O.[IndustryLanguageXML], O.[LastModifiedBy], O.[LastModified]
				FROM
				    [dbo].[Industry] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[IndustryID] = PageIndex.[IndustryID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Industry] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Industry_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Industry table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IndustryId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryName" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					)
				
				-- Get the identity value
				SET @IndustryId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Industry_GetByIndustryId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Industry table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified]
				FROM
					[dbo].[Industry]
				WHERE
					[IndustryID] = @IndustryId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Industry_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Industry table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified]
				FROM
					[dbo].[Industry]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Industry_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Industry table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified]
				FROM
					[dbo].[Industry]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Industry_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Industry table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Industry]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Industry_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Industry table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryName" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Industry_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Industry table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Industry] WITH (ROWLOCK) 
				WHERE
					[IndustryID] = @IndustryId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Industry_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Industry table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IndustryId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryName" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IndustryLanguageXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
				WHERE
[IndustryID] = @IndustryId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="IntegrationMappings_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the IntegrationMappings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[IntegrationMappingID],
					[SiteID],
					[IntegrationMappingTypeID],
					[JXTEntity],
					[JXTColumn],
					[JXTType],
					[JXTSize],
					[ThirdPartyEntity],
					[ThirdPartyColumn],
					[ThirdPartyType],
					[ThirdPartySize],
					[Sequence],
					[Sync],
					[GlobalMapping],
					[LastModifiedBy],
					[LastModifiedDate]
				FROM
					[dbo].[IntegrationMappings]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="IntegrationMappings_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the IntegrationMappings table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [IntegrationMappingID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([IntegrationMappingID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [IntegrationMappingID]'
				SET @SQL = @SQL + ' FROM [dbo].[IntegrationMappings]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[IntegrationMappingID], O.[SiteID], O.[IntegrationMappingTypeID], O.[JXTEntity], O.[JXTColumn], O.[JXTType], O.[JXTSize], O.[ThirdPartyEntity], O.[ThirdPartyColumn], O.[ThirdPartyType], O.[ThirdPartySize], O.[Sequence], O.[Sync], O.[GlobalMapping], O.[LastModifiedBy], O.[LastModifiedDate]
				FROM
				    [dbo].[IntegrationMappings] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[IntegrationMappingID] = PageIndex.[IntegrationMappingID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[IntegrationMappings]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="IntegrationMappings_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the IntegrationMappings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IntegrationMappingId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IntegrationMappingTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JxtEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@JxtColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@JxtType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@JxtSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ThirdPartyEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@ThirdPartyColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@ThirdPartyType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@ThirdPartySize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sync" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalMapping" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[IntegrationMappings]
					(
					[SiteID]
					,[IntegrationMappingTypeID]
					,[JXTEntity]
					,[JXTColumn]
					,[JXTType]
					,[JXTSize]
					,[ThirdPartyEntity]
					,[ThirdPartyColumn]
					,[ThirdPartyType]
					,[ThirdPartySize]
					,[Sequence]
					,[Sync]
					,[GlobalMapping]
					,[LastModifiedBy]
					,[LastModifiedDate]
					)
				VALUES
					(
					@SiteId
					,@IntegrationMappingTypeId
					,@JxtEntity
					,@JxtColumn
					,@JxtType
					,@JxtSize
					,@ThirdPartyEntity
					,@ThirdPartyColumn
					,@ThirdPartyType
					,@ThirdPartySize
					,@Sequence
					,@Sync
					,@GlobalMapping
					,@LastModifiedBy
					,@LastModifiedDate
					)
				
				-- Get the identity value
				SET @IntegrationMappingId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="IntegrationMappings_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the IntegrationMappings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IntegrationMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IntegrationMappingTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JxtEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@JxtColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@JxtType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@JxtSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ThirdPartyEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@ThirdPartyColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@ThirdPartyType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault=""/>
				<parameter name="@ThirdPartySize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sync" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalMapping" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[IntegrationMappings]
				SET
					[SiteID] = @SiteId
					,[IntegrationMappingTypeID] = @IntegrationMappingTypeId
					,[JXTEntity] = @JxtEntity
					,[JXTColumn] = @JxtColumn
					,[JXTType] = @JxtType
					,[JXTSize] = @JxtSize
					,[ThirdPartyEntity] = @ThirdPartyEntity
					,[ThirdPartyColumn] = @ThirdPartyColumn
					,[ThirdPartyType] = @ThirdPartyType
					,[ThirdPartySize] = @ThirdPartySize
					,[Sequence] = @Sequence
					,[Sync] = @Sync
					,[GlobalMapping] = @GlobalMapping
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModifiedDate] = @LastModifiedDate
				WHERE
[IntegrationMappingID] = @IntegrationMappingId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="IntegrationMappings_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the IntegrationMappings table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IntegrationMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[IntegrationMappings] WITH (ROWLOCK) 
				WHERE
					[IntegrationMappingID] = @IntegrationMappingId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="IntegrationMappings_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the IntegrationMappings table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[IntegrationMappingID],
					[SiteID],
					[IntegrationMappingTypeID],
					[JXTEntity],
					[JXTColumn],
					[JXTType],
					[JXTSize],
					[ThirdPartyEntity],
					[ThirdPartyColumn],
					[ThirdPartyType],
					[ThirdPartySize],
					[Sequence],
					[Sync],
					[GlobalMapping],
					[LastModifiedBy],
					[LastModifiedDate]
				FROM
					[dbo].[IntegrationMappings]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="IntegrationMappings_GetByIntegrationMappingId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the IntegrationMappings table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IntegrationMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[IntegrationMappingID],
					[SiteID],
					[IntegrationMappingTypeID],
					[JXTEntity],
					[JXTColumn],
					[JXTType],
					[JXTSize],
					[ThirdPartyEntity],
					[ThirdPartyColumn],
					[ThirdPartyType],
					[ThirdPartySize],
					[Sequence],
					[Sync],
					[GlobalMapping],
					[LastModifiedBy],
					[LastModifiedDate]
				FROM
					[dbo].[IntegrationMappings]
				WHERE
					[IntegrationMappingID] = @IntegrationMappingId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="IntegrationMappings_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the IntegrationMappings table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationMappingTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JxtEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ThirdPartyEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartyColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartyType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartySize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sync" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalMapping" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [IntegrationMappingID]
	, [SiteID]
	, [IntegrationMappingTypeID]
	, [JXTEntity]
	, [JXTColumn]
	, [JXTType]
	, [JXTSize]
	, [ThirdPartyEntity]
	, [ThirdPartyColumn]
	, [ThirdPartyType]
	, [ThirdPartySize]
	, [Sequence]
	, [Sync]
	, [GlobalMapping]
	, [LastModifiedBy]
	, [LastModifiedDate]
    FROM
	[dbo].[IntegrationMappings]
    WHERE 
	 ([IntegrationMappingID] = @IntegrationMappingId OR @IntegrationMappingId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([IntegrationMappingTypeID] = @IntegrationMappingTypeId OR @IntegrationMappingTypeId IS NULL)
	AND ([JXTEntity] = @JxtEntity OR @JxtEntity IS NULL)
	AND ([JXTColumn] = @JxtColumn OR @JxtColumn IS NULL)
	AND ([JXTType] = @JxtType OR @JxtType IS NULL)
	AND ([JXTSize] = @JxtSize OR @JxtSize IS NULL)
	AND ([ThirdPartyEntity] = @ThirdPartyEntity OR @ThirdPartyEntity IS NULL)
	AND ([ThirdPartyColumn] = @ThirdPartyColumn OR @ThirdPartyColumn IS NULL)
	AND ([ThirdPartyType] = @ThirdPartyType OR @ThirdPartyType IS NULL)
	AND ([ThirdPartySize] = @ThirdPartySize OR @ThirdPartySize IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([Sync] = @Sync OR @Sync IS NULL)
	AND ([GlobalMapping] = @GlobalMapping OR @GlobalMapping IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModifiedDate] = @LastModifiedDate OR @LastModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [IntegrationMappingID]
	, [SiteID]
	, [IntegrationMappingTypeID]
	, [JXTEntity]
	, [JXTColumn]
	, [JXTType]
	, [JXTSize]
	, [ThirdPartyEntity]
	, [ThirdPartyColumn]
	, [ThirdPartyType]
	, [ThirdPartySize]
	, [Sequence]
	, [Sync]
	, [GlobalMapping]
	, [LastModifiedBy]
	, [LastModifiedDate]
    FROM
	[dbo].[IntegrationMappings]
    WHERE 
	 ([IntegrationMappingID] = @IntegrationMappingId AND @IntegrationMappingId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([IntegrationMappingTypeID] = @IntegrationMappingTypeId AND @IntegrationMappingTypeId is not null)
	OR ([JXTEntity] = @JxtEntity AND @JxtEntity is not null)
	OR ([JXTColumn] = @JxtColumn AND @JxtColumn is not null)
	OR ([JXTType] = @JxtType AND @JxtType is not null)
	OR ([JXTSize] = @JxtSize AND @JxtSize is not null)
	OR ([ThirdPartyEntity] = @ThirdPartyEntity AND @ThirdPartyEntity is not null)
	OR ([ThirdPartyColumn] = @ThirdPartyColumn AND @ThirdPartyColumn is not null)
	OR ([ThirdPartyType] = @ThirdPartyType AND @ThirdPartyType is not null)
	OR ([ThirdPartySize] = @ThirdPartySize AND @ThirdPartySize is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Sync] = @Sync AND @Sync is not null)
	OR ([GlobalMapping] = @GlobalMapping AND @GlobalMapping is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModifiedDate] = @LastModifiedDate AND @LastModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="IntegrationMappings_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the IntegrationMappings table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [IntegrationMappingID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [IntegrationMappingID] )
				SELECT TOP {3} [IntegrationMappingID]
				FROM [dbo].[IntegrationMappings] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[IntegrationMappingID], O.[SiteID], O.[IntegrationMappingTypeID], O.[JXTEntity], O.[JXTColumn], O.[JXTType], O.[JXTSize], O.[ThirdPartyEntity], O.[ThirdPartyColumn], O.[ThirdPartyType], O.[ThirdPartySize], O.[Sequence], O.[Sync], O.[GlobalMapping], O.[LastModifiedBy], O.[LastModifiedDate]
				FROM
				    [dbo].[IntegrationMappings] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[IntegrationMappingID] = PageIndex.[IntegrationMappingID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[IntegrationMappings] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="IntegrationMappings_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the IntegrationMappings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IntegrationMappingId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationMappingTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JxtEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ThirdPartyEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartyColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartyType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartySize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sync" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalMapping" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
					)
				
				-- Get the identity value
				SET @IntegrationMappingId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="IntegrationMappings_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the IntegrationMappings table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[IntegrationMappings]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="IntegrationMappings_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the IntegrationMappings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[IntegrationMappings]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="IntegrationMappings_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the IntegrationMappings table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[IntegrationMappings]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="IntegrationMappings_GetByIntegrationMappingId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the IntegrationMappings table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IntegrationMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate]
				FROM
					[dbo].[IntegrationMappings]
				WHERE
					[IntegrationMappingID] = @IntegrationMappingId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="IntegrationMappings_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the IntegrationMappings table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationMappingTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JxtEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ThirdPartyEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartyColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartyType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartySize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sync" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalMapping" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate is not null)
	SELECT @@ROWCOUNT			
END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="IntegrationMappings_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the IntegrationMappings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IntegrationMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[IntegrationMappings] WITH (ROWLOCK) 
				WHERE
					[IntegrationMappingID] = @IntegrationMappingId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="IntegrationMappings_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the IntegrationMappings table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IntegrationMappingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationMappingTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JxtEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@JxtSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ThirdPartyEntity" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartyColumn" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartyType" type="varchar" direction="Input" size="75" precision="0" scale="0" param="(75)" nulldefault="null"/>
				<parameter name="@ThirdPartySize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sync" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalMapping" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate
				WHERE
[IntegrationMappingID] = @IntegrationMappingId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobTemplates_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobTemplateID],
					[SiteID],
					[JobTemplateDescription],
					[JobTemplateHTML],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[JobTemplateLogo],
					[AdvertiserID],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[JobTemplates]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobTemplates_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobTemplates table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobTemplateID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobTemplateID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobTemplateID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobTemplates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobTemplateID], O.[SiteID], O.[JobTemplateDescription], O.[JobTemplateHTML], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[JobTemplateLogo], O.[AdvertiserID], O.[JobTemplateLogoUrl]
				FROM
				    [dbo].[JobTemplates] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobTemplateID] = PageIndex.[JobTemplateID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobTemplates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobTemplates_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@JobTemplateHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobTemplates]
					(
					[SiteID]
					,[JobTemplateDescription]
					,[JobTemplateHTML]
					,[GlobalTemplate]
					,[LastModifiedBy]
					,[LastModified]
					,[JobTemplateLogo]
					,[AdvertiserID]
					,[JobTemplateLogoUrl]
					)
				VALUES
					(
					@SiteId
					,@JobTemplateDescription
					,@JobTemplateHtml
					,@GlobalTemplate
					,@LastModifiedBy
					,@LastModified
					,@JobTemplateLogo
					,@AdvertiserId
					,@JobTemplateLogoUrl
					)
				
				-- Get the identity value
				SET @JobTemplateId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobTemplates_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@JobTemplateHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobTemplates]
				SET
					[SiteID] = @SiteId
					,[JobTemplateDescription] = @JobTemplateDescription
					,[JobTemplateHTML] = @JobTemplateHtml
					,[GlobalTemplate] = @GlobalTemplate
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[JobTemplateLogo] = @JobTemplateLogo
					,[AdvertiserID] = @AdvertiserId
					,[JobTemplateLogoUrl] = @JobTemplateLogoUrl
				WHERE
[JobTemplateID] = @JobTemplateId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobTemplates_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobTemplates table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobTemplates] WITH (ROWLOCK) 
				WHERE
					[JobTemplateID] = @JobTemplateId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobTemplates_GetByAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobTemplateID],
					[SiteID],
					[JobTemplateDescription],
					[JobTemplateHTML],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[JobTemplateLogo],
					[AdvertiserID],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[JobTemplates]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobTemplates_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobTemplateID],
					[SiteID],
					[JobTemplateDescription],
					[JobTemplateHTML],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[JobTemplateLogo],
					[AdvertiserID],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[JobTemplates]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobTemplates_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobTemplateID],
					[SiteID],
					[JobTemplateDescription],
					[JobTemplateHTML],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[JobTemplateLogo],
					[AdvertiserID],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[JobTemplates]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobTemplates_GetByJobTemplateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobTemplates table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobTemplateID],
					[SiteID],
					[JobTemplateDescription],
					[JobTemplateHTML],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[JobTemplateLogo],
					[AdvertiserID],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[JobTemplates]
				WHERE
					[JobTemplateID] = @JobTemplateId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobTemplates_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobTemplates table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobTemplateHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobTemplateID]
	, [SiteID]
	, [JobTemplateDescription]
	, [JobTemplateHTML]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [JobTemplateLogo]
	, [AdvertiserID]
	, [JobTemplateLogoUrl]
    FROM
	[dbo].[JobTemplates]
    WHERE 
	 ([JobTemplateID] = @JobTemplateId OR @JobTemplateId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([JobTemplateDescription] = @JobTemplateDescription OR @JobTemplateDescription IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([JobTemplateLogoUrl] = @JobTemplateLogoUrl OR @JobTemplateLogoUrl IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobTemplateID]
	, [SiteID]
	, [JobTemplateDescription]
	, [JobTemplateHTML]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [JobTemplateLogo]
	, [AdvertiserID]
	, [JobTemplateLogoUrl]
    FROM
	[dbo].[JobTemplates]
    WHERE 
	 ([JobTemplateID] = @JobTemplateId AND @JobTemplateId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([JobTemplateDescription] = @JobTemplateDescription AND @JobTemplateDescription is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([JobTemplateLogoUrl] = @JobTemplateLogoUrl AND @JobTemplateLogoUrl is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobTemplates_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobTemplates table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobTemplateID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobTemplateID] )
				SELECT TOP {3} [JobTemplateID]
				FROM [dbo].[JobTemplates] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobTemplateID], O.[SiteID], O.[JobTemplateDescription], O.[JobTemplateHTML], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[JobTemplateLogo], O.[AdvertiserID], O.[JobTemplateLogoUrl]
				FROM
				    [dbo].[JobTemplates] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobTemplateID] = PageIndex.[JobTemplateID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobTemplates] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobTemplates_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobTemplateHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,@JobTemplateLogo
					,@AdvertiserId
					,@JobTemplateLogoUrl
					)
				
				-- Get the identity value
				SET @JobTemplateId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[JobTemplateLogo],
					[AdvertiserID],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[JobTemplates]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified],
					[JobTemplateLogo],
					[AdvertiserID],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[JobTemplates]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobTemplates table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobTemplates]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_GetByJobTemplateId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobTemplates table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[JobTemplateLogo],
					[AdvertiserID],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[JobTemplates]
				WHERE
					[JobTemplateID] = @JobTemplateId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[JobTemplateLogo],
					[AdvertiserID],
					[JobTemplateLogoUrl]
				FROM
					[dbo].[JobTemplates]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_GetAdvertiserJobTemplates"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],  
  [JobTemplateLogo],  
  [AdvertiserID],
  [JobTemplateLogoUrl]  
 FROM @JobTemplates  
  
 SELECT @@ROWCOUNT
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobTemplateHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,[JobTemplateLogo] = @JobTemplateLogo
					,[AdvertiserID] = @AdvertiserId
					,[JobTemplateLogoUrl] = @JobTemplateLogoUrl
				WHERE
[JobTemplateID] = @JobTemplateId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobTemplates table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateDescription" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobTemplateHtml" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogo" type="image" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateLogoUrl" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([JobTemplateLogoUrl] = @JobTemplateLogoUrl AND @JobTemplateLogoUrl is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobTemplates table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobTemplates] WITH (ROWLOCK) 
				WHERE
					[JobTemplateID] = @JobTemplateId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobTemplates_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobTemplates table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Integrations_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Integrations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[IntegrationID],
					[SiteID],
					[IntegrationType],
					[JSONText],
					[Valid],
					[CreatedDate],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[Integrations]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Integrations_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Integrations table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [IntegrationID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([IntegrationID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [IntegrationID]'
				SET @SQL = @SQL + ' FROM [dbo].[Integrations]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[IntegrationID], O.[SiteID], O.[IntegrationType], O.[JSONText], O.[Valid], O.[CreatedDate], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[Integrations] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[IntegrationID] = PageIndex.[IntegrationID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Integrations]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Integrations_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Integrations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IntegrationId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IntegrationType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JsonText" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Integrations]
					(
					[SiteID]
					,[IntegrationType]
					,[JSONText]
					,[Valid]
					,[CreatedDate]
					,[LastModified]
					,[LastModifiedBy]
					)
				VALUES
					(
					@SiteId
					,@IntegrationType
					,@JsonText
					,@Valid
					,@CreatedDate
					,@LastModified
					,@LastModifiedBy
					)
				
				-- Get the identity value
				SET @IntegrationId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Integrations_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Integrations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IntegrationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IntegrationType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JsonText" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Integrations]
				SET
					[SiteID] = @SiteId
					,[IntegrationType] = @IntegrationType
					,[JSONText] = @JsonText
					,[Valid] = @Valid
					,[CreatedDate] = @CreatedDate
					,[LastModified] = @LastModified
					,[LastModifiedBy] = @LastModifiedBy
				WHERE
[IntegrationID] = @IntegrationId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Integrations_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Integrations table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IntegrationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Integrations] WITH (ROWLOCK) 
				WHERE
					[IntegrationID] = @IntegrationId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Integrations_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Integrations table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[IntegrationID],
					[SiteID],
					[IntegrationType],
					[JSONText],
					[Valid],
					[CreatedDate],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[Integrations]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Integrations_GetByIntegrationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Integrations table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IntegrationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[IntegrationID],
					[SiteID],
					[IntegrationType],
					[JSONText],
					[Valid],
					[CreatedDate],
					[LastModified],
					[LastModifiedBy]
				FROM
					[dbo].[Integrations]
				WHERE
					[IntegrationID] = @IntegrationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Integrations_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Integrations table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JsonText" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [IntegrationID]
	, [SiteID]
	, [IntegrationType]
	, [JSONText]
	, [Valid]
	, [CreatedDate]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[Integrations]
    WHERE 
	 ([IntegrationID] = @IntegrationId OR @IntegrationId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([IntegrationType] = @IntegrationType OR @IntegrationType IS NULL)
	AND ([JSONText] = @JsonText OR @JsonText IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [IntegrationID]
	, [SiteID]
	, [IntegrationType]
	, [JSONText]
	, [Valid]
	, [CreatedDate]
	, [LastModified]
	, [LastModifiedBy]
    FROM
	[dbo].[Integrations]
    WHERE 
	 ([IntegrationID] = @IntegrationId AND @IntegrationId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([IntegrationType] = @IntegrationType AND @IntegrationType is not null)
	OR ([JSONText] = @JsonText AND @JsonText is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Integrations_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Integrations table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [IntegrationID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [IntegrationID] )
				SELECT TOP {3} [IntegrationID]
				FROM [dbo].[Integrations] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[IntegrationID], O.[SiteID], O.[IntegrationType], O.[JSONText], O.[Valid], O.[CreatedDate], O.[LastModified], O.[LastModifiedBy]
				FROM
				    [dbo].[Integrations] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[IntegrationID] = PageIndex.[IntegrationID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Integrations] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Integrations_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Integrations table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IntegrationId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JsonText" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
					)
				
				-- Get the identity value
				SET @IntegrationId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Integrations_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Integrations table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[Integrations]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Integrations_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Integrations table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[Integrations]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Integrations_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Integrations table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Integrations]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Integrations_GetByIntegrationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Integrations table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IntegrationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy]
				FROM
					[dbo].[Integrations]
				WHERE
					[IntegrationID] = @IntegrationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Integrations_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Integrations table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JsonText" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Integrations_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Integrations table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IntegrationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Integrations] WITH (ROWLOCK) 
				WHERE
					[IntegrationID] = @IntegrationId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Integrations_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Integrations table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@IntegrationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IntegrationType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JsonText" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				WHERE
[IntegrationID] = @IntegrationId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Jobs_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Jobs table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Jobs_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Jobs table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobID]'
				SET @SQL = @SQL + ' FROM [dbo].[Jobs]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobID], O.[SiteID], O.[WorkTypeID], O.[JobName], O.[Description], O.[FullDescription], O.[WebServiceProcessed], O.[ApplicationEmailAddress], O.[RefNo], O.[Visible], O.[DatePosted], O.[ExpiryDate], O.[Expired], O.[JobItemPrice], O.[Billed], O.[LastModified], O.[ShowSalaryDetails], O.[SalaryText], O.[AdvertiserID], O.[LastModifiedByAdvertiserUserId], O.[LastModifiedByAdminUserId], O.[JobItemTypeID], O.[ApplicationMethod], O.[ApplicationURL], O.[UploadMethod], O.[Tags], O.[JobTemplateID], O.[SearchFieldExtension], O.[AdvertiserJobTemplateLogoID], O.[CompanyName], O.[HashValue], O.[RequireLogonForExternalApplications], O.[ShowLocationDetails], O.[PublicTransport], O.[Address], O.[ContactDetails], O.[JobContactPhone], O.[JobContactName], O.[QualificationsRecognised], O.[ResidentOnly], O.[DocumentLink], O.[BulletPoint1], O.[BulletPoint2], O.[BulletPoint3], O.[HotJob], O.[JobFriendlyName], O.[SearchField], O.[ShowSalaryRange], O.[SalaryLowerBand], O.[SalaryUpperBand], O.[CurrencyID], O.[SalaryTypeID], O.[EnteredByAdvertiserUserID], O.[JobLatitude], O.[JobLongitude], O.[AddressStatus], O.[JobExternalId], O.[ScreeningQuestionsTemplateId]
				FROM
				    [dbo].[Jobs] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobID] = PageIndex.[JobID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Jobs]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Jobs_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Jobs table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault=""/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault=""/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Jobs]
					(
					[SiteID]
					,[WorkTypeID]
					,[JobName]
					,[Description]
					,[FullDescription]
					,[WebServiceProcessed]
					,[ApplicationEmailAddress]
					,[RefNo]
					,[Visible]
					,[DatePosted]
					,[ExpiryDate]
					,[Expired]
					,[JobItemPrice]
					,[Billed]
					,[LastModified]
					,[ShowSalaryDetails]
					,[SalaryText]
					,[AdvertiserID]
					,[LastModifiedByAdvertiserUserId]
					,[LastModifiedByAdminUserId]
					,[JobItemTypeID]
					,[ApplicationMethod]
					,[ApplicationURL]
					,[UploadMethod]
					,[Tags]
					,[JobTemplateID]
					,[SearchFieldExtension]
					,[AdvertiserJobTemplateLogoID]
					,[CompanyName]
					,[HashValue]
					,[RequireLogonForExternalApplications]
					,[ShowLocationDetails]
					,[PublicTransport]
					,[Address]
					,[ContactDetails]
					,[JobContactPhone]
					,[JobContactName]
					,[QualificationsRecognised]
					,[ResidentOnly]
					,[DocumentLink]
					,[BulletPoint1]
					,[BulletPoint2]
					,[BulletPoint3]
					,[HotJob]
					,[JobFriendlyName]
					,[SearchField]
					,[ShowSalaryRange]
					,[SalaryLowerBand]
					,[SalaryUpperBand]
					,[CurrencyID]
					,[SalaryTypeID]
					,[EnteredByAdvertiserUserID]
					,[JobLatitude]
					,[JobLongitude]
					,[AddressStatus]
					,[JobExternalId]
					,[ScreeningQuestionsTemplateId]
					)
				VALUES
					(
					@SiteId
					,@WorkTypeId
					,@JobName
					,@Description
					,@FullDescription
					,@WebServiceProcessed
					,@ApplicationEmailAddress
					,@RefNo
					,@Visible
					,@DatePosted
					,@ExpiryDate
					,@Expired
					,@JobItemPrice
					,@Billed
					,@LastModified
					,@ShowSalaryDetails
					,@SalaryText
					,@AdvertiserId
					,@LastModifiedByAdvertiserUserId
					,@LastModifiedByAdminUserId
					,@JobItemTypeId
					,@ApplicationMethod
					,@ApplicationUrl
					,@UploadMethod
					,@Tags
					,@JobTemplateId
					,@SearchFieldExtension
					,@AdvertiserJobTemplateLogoId
					,@CompanyName
					,@HashValue
					,@RequireLogonForExternalApplications
					,@ShowLocationDetails
					,@PublicTransport
					,@Address
					,@ContactDetails
					,@JobContactPhone
					,@JobContactName
					,@QualificationsRecognised
					,@ResidentOnly
					,@DocumentLink
					,@BulletPoint1
					,@BulletPoint2
					,@BulletPoint3
					,@HotJob
					,@JobFriendlyName
					,@SearchField
					,@ShowSalaryRange
					,@SalaryLowerBand
					,@SalaryUpperBand
					,@CurrencyId
					,@SalaryTypeId
					,@EnteredByAdvertiserUserId
					,@JobLatitude
					,@JobLongitude
					,@AddressStatus
					,@JobExternalId
					,@ScreeningQuestionsTemplateId
					)
				
				-- Get the identity value
				SET @JobId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Jobs table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault=""/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault=""/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Jobs]
				SET
					[SiteID] = @SiteId
					,[WorkTypeID] = @WorkTypeId
					,[JobName] = @JobName
					,[Description] = @Description
					,[FullDescription] = @FullDescription
					,[WebServiceProcessed] = @WebServiceProcessed
					,[ApplicationEmailAddress] = @ApplicationEmailAddress
					,[RefNo] = @RefNo
					,[Visible] = @Visible
					,[DatePosted] = @DatePosted
					,[ExpiryDate] = @ExpiryDate
					,[Expired] = @Expired
					,[JobItemPrice] = @JobItemPrice
					,[Billed] = @Billed
					,[LastModified] = @LastModified
					,[ShowSalaryDetails] = @ShowSalaryDetails
					,[SalaryText] = @SalaryText
					,[AdvertiserID] = @AdvertiserId
					,[LastModifiedByAdvertiserUserId] = @LastModifiedByAdvertiserUserId
					,[LastModifiedByAdminUserId] = @LastModifiedByAdminUserId
					,[JobItemTypeID] = @JobItemTypeId
					,[ApplicationMethod] = @ApplicationMethod
					,[ApplicationURL] = @ApplicationUrl
					,[UploadMethod] = @UploadMethod
					,[Tags] = @Tags
					,[JobTemplateID] = @JobTemplateId
					,[SearchFieldExtension] = @SearchFieldExtension
					,[AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId
					,[CompanyName] = @CompanyName
					,[HashValue] = @HashValue
					,[RequireLogonForExternalApplications] = @RequireLogonForExternalApplications
					,[ShowLocationDetails] = @ShowLocationDetails
					,[PublicTransport] = @PublicTransport
					,[Address] = @Address
					,[ContactDetails] = @ContactDetails
					,[JobContactPhone] = @JobContactPhone
					,[JobContactName] = @JobContactName
					,[QualificationsRecognised] = @QualificationsRecognised
					,[ResidentOnly] = @ResidentOnly
					,[DocumentLink] = @DocumentLink
					,[BulletPoint1] = @BulletPoint1
					,[BulletPoint2] = @BulletPoint2
					,[BulletPoint3] = @BulletPoint3
					,[HotJob] = @HotJob
					,[JobFriendlyName] = @JobFriendlyName
					,[SearchField] = @SearchField
					,[ShowSalaryRange] = @ShowSalaryRange
					,[SalaryLowerBand] = @SalaryLowerBand
					,[SalaryUpperBand] = @SalaryUpperBand
					,[CurrencyID] = @CurrencyId
					,[SalaryTypeID] = @SalaryTypeId
					,[EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId
					,[JobLatitude] = @JobLatitude
					,[JobLongitude] = @JobLongitude
					,[AddressStatus] = @AddressStatus
					,[JobExternalId] = @JobExternalId
					,[ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId
				WHERE
[JobID] = @JobId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Jobs table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Jobs] WITH (ROWLOCK) 
				WHERE
					[JobID] = @JobId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByCurrencyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByJobTemplateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[JobTemplateID] = @JobTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByLastModifiedByAdvertiserUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[LastModifiedByAdvertiserUserId] = @LastModifiedByAdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByLastModifiedByAdminUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[LastModifiedByAdminUserId] = @LastModifiedByAdminUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetBySalaryTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByScreeningQuestionsTemplateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByWorkTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[WorkTypeID] = @WorkTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByExpiredAdvertiserIdExpiryDate" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[Expired] = @Expired
					AND [AdvertiserID] = @AdvertiserId
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByExpiredBilledExpiryDate" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[Expired] = @Expired
					AND [Billed] = @Billed
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByExpiredExpiryDate" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[Expired] = @Expired
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByWorkTypeIdJobIdAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandExpiredExpiryDate" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[WorkTypeID] = @WorkTypeId
					AND [JobID] = @JobId
					AND [AdvertiserID] = @AdvertiserId
					AND [CurrencyID] = @CurrencyId
					AND [SalaryTypeID] = @SalaryTypeId
					AND [SalaryLowerBand] = @SalaryLowerBand
					AND [SalaryUpperBand] = @SalaryUpperBand
					AND [Expired] = @Expired
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Jobs_GetBySiteIdBilledAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[SiteID] = @SiteId
					AND [Billed] = @Billed
					AND [AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Jobs_GetBySiteIdExpiredBilledAdvertiserIdEnteredByAdvertiserUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[SiteID] = @SiteId
					AND [Expired] = @Expired
					AND [Billed] = @Billed
					AND [AdvertiserID] = @AdvertiserId
					AND [EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Jobs_GetByJobId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Jobs_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Jobs table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobID]
	, [SiteID]
	, [WorkTypeID]
	, [JobName]
	, [Description]
	, [FullDescription]
	, [WebServiceProcessed]
	, [ApplicationEmailAddress]
	, [RefNo]
	, [Visible]
	, [DatePosted]
	, [ExpiryDate]
	, [Expired]
	, [JobItemPrice]
	, [Billed]
	, [LastModified]
	, [ShowSalaryDetails]
	, [SalaryText]
	, [AdvertiserID]
	, [LastModifiedByAdvertiserUserId]
	, [LastModifiedByAdminUserId]
	, [JobItemTypeID]
	, [ApplicationMethod]
	, [ApplicationURL]
	, [UploadMethod]
	, [Tags]
	, [JobTemplateID]
	, [SearchFieldExtension]
	, [AdvertiserJobTemplateLogoID]
	, [CompanyName]
	, [HashValue]
	, [RequireLogonForExternalApplications]
	, [ShowLocationDetails]
	, [PublicTransport]
	, [Address]
	, [ContactDetails]
	, [JobContactPhone]
	, [JobContactName]
	, [QualificationsRecognised]
	, [ResidentOnly]
	, [DocumentLink]
	, [BulletPoint1]
	, [BulletPoint2]
	, [BulletPoint3]
	, [HotJob]
	, [JobFriendlyName]
	, [SearchField]
	, [ShowSalaryRange]
	, [SalaryLowerBand]
	, [SalaryUpperBand]
	, [CurrencyID]
	, [SalaryTypeID]
	, [EnteredByAdvertiserUserID]
	, [JobLatitude]
	, [JobLongitude]
	, [AddressStatus]
	, [JobExternalId]
	, [ScreeningQuestionsTemplateId]
    FROM
	[dbo].[Jobs]
    WHERE 
	 ([JobID] = @JobId OR @JobId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([WorkTypeID] = @WorkTypeId OR @WorkTypeId IS NULL)
	AND ([JobName] = @JobName OR @JobName IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([FullDescription] = @FullDescription OR @FullDescription IS NULL)
	AND ([WebServiceProcessed] = @WebServiceProcessed OR @WebServiceProcessed IS NULL)
	AND ([ApplicationEmailAddress] = @ApplicationEmailAddress OR @ApplicationEmailAddress IS NULL)
	AND ([RefNo] = @RefNo OR @RefNo IS NULL)
	AND ([Visible] = @Visible OR @Visible IS NULL)
	AND ([DatePosted] = @DatePosted OR @DatePosted IS NULL)
	AND ([ExpiryDate] = @ExpiryDate OR @ExpiryDate IS NULL)
	AND ([Expired] = @Expired OR @Expired IS NULL)
	AND ([JobItemPrice] = @JobItemPrice OR @JobItemPrice IS NULL)
	AND ([Billed] = @Billed OR @Billed IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([ShowSalaryDetails] = @ShowSalaryDetails OR @ShowSalaryDetails IS NULL)
	AND ([SalaryText] = @SalaryText OR @SalaryText IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([LastModifiedByAdvertiserUserId] = @LastModifiedByAdvertiserUserId OR @LastModifiedByAdvertiserUserId IS NULL)
	AND ([LastModifiedByAdminUserId] = @LastModifiedByAdminUserId OR @LastModifiedByAdminUserId IS NULL)
	AND ([JobItemTypeID] = @JobItemTypeId OR @JobItemTypeId IS NULL)
	AND ([ApplicationMethod] = @ApplicationMethod OR @ApplicationMethod IS NULL)
	AND ([ApplicationURL] = @ApplicationUrl OR @ApplicationUrl IS NULL)
	AND ([UploadMethod] = @UploadMethod OR @UploadMethod IS NULL)
	AND ([JobTemplateID] = @JobTemplateId OR @JobTemplateId IS NULL)
	AND ([SearchFieldExtension] = @SearchFieldExtension OR @SearchFieldExtension IS NULL)
	AND ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId OR @AdvertiserJobTemplateLogoId IS NULL)
	AND ([CompanyName] = @CompanyName OR @CompanyName IS NULL)
	AND ([RequireLogonForExternalApplications] = @RequireLogonForExternalApplications OR @RequireLogonForExternalApplications IS NULL)
	AND ([ShowLocationDetails] = @ShowLocationDetails OR @ShowLocationDetails IS NULL)
	AND ([PublicTransport] = @PublicTransport OR @PublicTransport IS NULL)
	AND ([Address] = @Address OR @Address IS NULL)
	AND ([ContactDetails] = @ContactDetails OR @ContactDetails IS NULL)
	AND ([JobContactPhone] = @JobContactPhone OR @JobContactPhone IS NULL)
	AND ([JobContactName] = @JobContactName OR @JobContactName IS NULL)
	AND ([QualificationsRecognised] = @QualificationsRecognised OR @QualificationsRecognised IS NULL)
	AND ([ResidentOnly] = @ResidentOnly OR @ResidentOnly IS NULL)
	AND ([DocumentLink] = @DocumentLink OR @DocumentLink IS NULL)
	AND ([BulletPoint1] = @BulletPoint1 OR @BulletPoint1 IS NULL)
	AND ([BulletPoint2] = @BulletPoint2 OR @BulletPoint2 IS NULL)
	AND ([BulletPoint3] = @BulletPoint3 OR @BulletPoint3 IS NULL)
	AND ([HotJob] = @HotJob OR @HotJob IS NULL)
	AND ([JobFriendlyName] = @JobFriendlyName OR @JobFriendlyName IS NULL)
	AND ([SearchField] = @SearchField OR @SearchField IS NULL)
	AND ([ShowSalaryRange] = @ShowSalaryRange OR @ShowSalaryRange IS NULL)
	AND ([SalaryLowerBand] = @SalaryLowerBand OR @SalaryLowerBand IS NULL)
	AND ([SalaryUpperBand] = @SalaryUpperBand OR @SalaryUpperBand IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([SalaryTypeID] = @SalaryTypeId OR @SalaryTypeId IS NULL)
	AND ([EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId OR @EnteredByAdvertiserUserId IS NULL)
	AND ([JobLatitude] = @JobLatitude OR @JobLatitude IS NULL)
	AND ([JobLongitude] = @JobLongitude OR @JobLongitude IS NULL)
	AND ([AddressStatus] = @AddressStatus OR @AddressStatus IS NULL)
	AND ([JobExternalId] = @JobExternalId OR @JobExternalId IS NULL)
	AND ([ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId OR @ScreeningQuestionsTemplateId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobID]
	, [SiteID]
	, [WorkTypeID]
	, [JobName]
	, [Description]
	, [FullDescription]
	, [WebServiceProcessed]
	, [ApplicationEmailAddress]
	, [RefNo]
	, [Visible]
	, [DatePosted]
	, [ExpiryDate]
	, [Expired]
	, [JobItemPrice]
	, [Billed]
	, [LastModified]
	, [ShowSalaryDetails]
	, [SalaryText]
	, [AdvertiserID]
	, [LastModifiedByAdvertiserUserId]
	, [LastModifiedByAdminUserId]
	, [JobItemTypeID]
	, [ApplicationMethod]
	, [ApplicationURL]
	, [UploadMethod]
	, [Tags]
	, [JobTemplateID]
	, [SearchFieldExtension]
	, [AdvertiserJobTemplateLogoID]
	, [CompanyName]
	, [HashValue]
	, [RequireLogonForExternalApplications]
	, [ShowLocationDetails]
	, [PublicTransport]
	, [Address]
	, [ContactDetails]
	, [JobContactPhone]
	, [JobContactName]
	, [QualificationsRecognised]
	, [ResidentOnly]
	, [DocumentLink]
	, [BulletPoint1]
	, [BulletPoint2]
	, [BulletPoint3]
	, [HotJob]
	, [JobFriendlyName]
	, [SearchField]
	, [ShowSalaryRange]
	, [SalaryLowerBand]
	, [SalaryUpperBand]
	, [CurrencyID]
	, [SalaryTypeID]
	, [EnteredByAdvertiserUserID]
	, [JobLatitude]
	, [JobLongitude]
	, [AddressStatus]
	, [JobExternalId]
	, [ScreeningQuestionsTemplateId]
    FROM
	[dbo].[Jobs]
    WHERE 
	 ([JobID] = @JobId AND @JobId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([WorkTypeID] = @WorkTypeId AND @WorkTypeId is not null)
	OR ([JobName] = @JobName AND @JobName is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([FullDescription] = @FullDescription AND @FullDescription is not null)
	OR ([WebServiceProcessed] = @WebServiceProcessed AND @WebServiceProcessed is not null)
	OR ([ApplicationEmailAddress] = @ApplicationEmailAddress AND @ApplicationEmailAddress is not null)
	OR ([RefNo] = @RefNo AND @RefNo is not null)
	OR ([Visible] = @Visible AND @Visible is not null)
	OR ([DatePosted] = @DatePosted AND @DatePosted is not null)
	OR ([ExpiryDate] = @ExpiryDate AND @ExpiryDate is not null)
	OR ([Expired] = @Expired AND @Expired is not null)
	OR ([JobItemPrice] = @JobItemPrice AND @JobItemPrice is not null)
	OR ([Billed] = @Billed AND @Billed is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([ShowSalaryDetails] = @ShowSalaryDetails AND @ShowSalaryDetails is not null)
	OR ([SalaryText] = @SalaryText AND @SalaryText is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([LastModifiedByAdvertiserUserId] = @LastModifiedByAdvertiserUserId AND @LastModifiedByAdvertiserUserId is not null)
	OR ([LastModifiedByAdminUserId] = @LastModifiedByAdminUserId AND @LastModifiedByAdminUserId is not null)
	OR ([JobItemTypeID] = @JobItemTypeId AND @JobItemTypeId is not null)
	OR ([ApplicationMethod] = @ApplicationMethod AND @ApplicationMethod is not null)
	OR ([ApplicationURL] = @ApplicationUrl AND @ApplicationUrl is not null)
	OR ([UploadMethod] = @UploadMethod AND @UploadMethod is not null)
	OR ([JobTemplateID] = @JobTemplateId AND @JobTemplateId is not null)
	OR ([SearchFieldExtension] = @SearchFieldExtension AND @SearchFieldExtension is not null)
	OR ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId AND @AdvertiserJobTemplateLogoId is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([RequireLogonForExternalApplications] = @RequireLogonForExternalApplications AND @RequireLogonForExternalApplications is not null)
	OR ([ShowLocationDetails] = @ShowLocationDetails AND @ShowLocationDetails is not null)
	OR ([PublicTransport] = @PublicTransport AND @PublicTransport is not null)
	OR ([Address] = @Address AND @Address is not null)
	OR ([ContactDetails] = @ContactDetails AND @ContactDetails is not null)
	OR ([JobContactPhone] = @JobContactPhone AND @JobContactPhone is not null)
	OR ([JobContactName] = @JobContactName AND @JobContactName is not null)
	OR ([QualificationsRecognised] = @QualificationsRecognised AND @QualificationsRecognised is not null)
	OR ([ResidentOnly] = @ResidentOnly AND @ResidentOnly is not null)
	OR ([DocumentLink] = @DocumentLink AND @DocumentLink is not null)
	OR ([BulletPoint1] = @BulletPoint1 AND @BulletPoint1 is not null)
	OR ([BulletPoint2] = @BulletPoint2 AND @BulletPoint2 is not null)
	OR ([BulletPoint3] = @BulletPoint3 AND @BulletPoint3 is not null)
	OR ([HotJob] = @HotJob AND @HotJob is not null)
	OR ([JobFriendlyName] = @JobFriendlyName AND @JobFriendlyName is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([ShowSalaryRange] = @ShowSalaryRange AND @ShowSalaryRange is not null)
	OR ([SalaryLowerBand] = @SalaryLowerBand AND @SalaryLowerBand is not null)
	OR ([SalaryUpperBand] = @SalaryUpperBand AND @SalaryUpperBand is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId AND @EnteredByAdvertiserUserId is not null)
	OR ([JobLatitude] = @JobLatitude AND @JobLatitude is not null)
	OR ([JobLongitude] = @JobLongitude AND @JobLongitude is not null)
	OR ([AddressStatus] = @AddressStatus AND @AddressStatus is not null)
	OR ([JobExternalId] = @JobExternalId AND @JobExternalId is not null)
	OR ([ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId AND @ScreeningQuestionsTemplateId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Jobs_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Jobs table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobID] )
				SELECT TOP {3} [JobID]
				FROM [dbo].[Jobs] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobID], O.[SiteID], O.[WorkTypeID], O.[JobName], O.[Description], O.[FullDescription], O.[WebServiceProcessed], O.[ApplicationEmailAddress], O.[RefNo], O.[Visible], O.[DatePosted], O.[ExpiryDate], O.[Expired], O.[JobItemPrice], O.[Billed], O.[LastModified], O.[ShowSalaryDetails], O.[SalaryText], O.[AdvertiserID], O.[LastModifiedByAdvertiserUserId], O.[LastModifiedByAdminUserId], O.[JobItemTypeID], O.[ApplicationMethod], O.[ApplicationURL], O.[UploadMethod], O.[Tags], O.[JobTemplateID], O.[SearchFieldExtension], O.[AdvertiserJobTemplateLogoID], O.[CompanyName], O.[HashValue], O.[RequireLogonForExternalApplications], O.[ShowLocationDetails], O.[PublicTransport], O.[Address], O.[ContactDetails], O.[JobContactPhone], O.[JobContactName], O.[QualificationsRecognised], O.[ResidentOnly], O.[DocumentLink], O.[BulletPoint1], O.[BulletPoint2], O.[BulletPoint3], O.[HotJob], O.[JobFriendlyName], O.[SearchField], O.[ShowSalaryRange], O.[SalaryLowerBand], O.[SalaryUpperBand], O.[CurrencyID], O.[SalaryTypeID], O.[EnteredByAdvertiserUserID], O.[JobLatitude], O.[JobLongitude], O.[AddressStatus], O.[JobExternalId], O.[ScreeningQuestionsTemplateId]
				FROM
				    [dbo].[Jobs] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobID] = PageIndex.[JobID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Jobs] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Jobs_CustomUpdateAllSiteJobCount"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
T_FORWARD
FOR 
Select siteid from Sites where Live = 1
 
OPEN cursorName -- open the cursor

FETCH NEXT FROM cursorName INTO @siteid
EXEC Jobs_CustomUpdateSiteJobCount @siteid
--PRINT @siteid -- print the name
	
WHILE @@FETCH_STATUS = 0
BEGIN
 
	FETCH NEXT FROM cursorName INTO @siteid
	EXEC Jobs_CustomUpdateSiteJobCount @siteid
	--PRINT @siteid -- print the name

END
 
CLOSE cursorName -- close the cursor
DEALLOCATE cursorName -- Deallocate the cursor

END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Jobs table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue
					,[RequireLogonForExternalApplications] = @RequireLogonForExternalApplications
					,[ShowLocationDetails] = @ShowLocationDetails
					,[PublicTransport] = @PublicTransport
					,[Address] = @Address
					,[ContactDetails] = @ContactDetails
					,[JobContactPhone] = @JobContactPhone
					,[JobContactName] = @JobContactName
					,[QualificationsRecognised] = @QualificationsRecognised
					,[ResidentOnly] = @ResidentOnly
					,[DocumentLink] = @DocumentLink
					,[BulletPoint1] = @BulletPoint1
					,[BulletPoint2] = @BulletPoint2
					,[BulletPoint3] = @BulletPoint3
					,[HotJob] = @HotJob
					,[JobFriendlyName] = @JobFriendlyName
					,[SearchField] = @SearchField
					,[ShowSalaryRange] = @ShowSalaryRange
					,[SalaryLowerBand] = @SalaryLowerBand
					,[SalaryUpperBand] = @SalaryUpperBand
					,[CurrencyID] = @CurrencyId
					,[SalaryTypeID] = @SalaryTypeId
					,[EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId
					,[JobLatitude] = @JobLatitude
					,[JobLongitude] = @JobLongitude
					,[AddressStatus] = @AddressStatus
					,[JobExternalId] = @JobExternalId
					,[ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId
				WHERE
[JobID] = @JobId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByJobId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByLastModifiedByAdvertiserUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedByAdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByWorkTypeIdJobIdAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandExpiredExpiryDate"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[WorkTypeID] = @WorkTypeId
					AND [JobID] = @JobId
					AND [AdvertiserID] = @AdvertiserId
					AND [CurrencyID] = @CurrencyId
					AND [SalaryTypeID] = @SalaryTypeId
					AND [SalaryLowerBand] = @SalaryLowerBand
					AND [SalaryUpperBand] = @SalaryUpperBand
					AND [Expired] = @Expired
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetJobApplicationAndViewsDetail"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FromDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Duration" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedDate],  [PreferredSalaryID]          
  FROM [dbo].[Members]  (NOLOCK) WHERE 1=0          
 END    

END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_CustomGetBySiteIdStatusIDs"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StatusIDs" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount          
   FROM [dbo].[Jobs] (NOLOCK) WHERE 1=0          
  END          
          
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_CustomArchiveXML"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@XMLFeed" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientIPAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@WebServiceLogId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
VARCHAR(50)) + ' ] ' FOR XML PATH('ERROR'), ROOT ('ERRORRESULT')),
			TotalFailed = @TotalSent,
			FinishedDate = GETDATE()
		WHERE 
			WebServiceLogId = @WebServiceLogId

	/*		
	IF USER_NAME() IS NOT NULL            
	BEGIN    
		RAISERROR(@ErrMsg, @ErrSeverity, 1)
	END
	*/
  
END CATCH

    -- *************** OUTPUT *********************
    SELECT WebServiceLogId, CreatedDate, OutputResponse, TotalSent, TotalInserted, TotalUpdated, TotalArchived, TotalFailed, FinishedDate
	FROM WebServiceLog (NOLOCK)
		WHERE 
			WebServiceLogId = @WebServiceLogId			
END



			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetAdvertiserJobs"  skip="true">
			<comment><![CDATA[  
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Type" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount                
   FROM [dbo].[Jobs] (NOLOCK) WHERE 1=0                
  END                
                
END     

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_JobsPurge"  skip="true">
			<comment><![CDATA[
 
]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
DATE) AND Expired = 0) -- Only live jobs  
   OR Expired = 1  -- Or expired jobs
    
      
   --Call the stored proc to archive    
   EXEC Jobs_JobArchive @iCurrentRowId    
  
 -- did we get a valid next row id?    
   IF ISNULL(@iNextRowId,0) = 0    
   BEGIN    
 BREAK    
   END    
    
   --DEBUG    
   --SELECT @iCurrentRowId    
    
   -- get the next row.    
   SELECT  @iCurrentRowId = JobID    
   FROM    Jobs (NOLOCK)    
   WHERE   JobID = @iNextRowId                
    
 END    
 RETURN 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetStatistics"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
px', @ArchivedNumber, @ArchivedApplications, ISNULL(@ArchivedViewed, 0))        
 -- Total        
         
 DECLARE @TotalNumber INT        
 DECLARE @TotalApplications INT        
 DECLARE @TotalViewed INT        
         
 SET @TotalNumber = @LiveNumber + @ExpiringNumber + @PendingNumber + @DeclinedNumber + @DraftNumber + @ArchivedNumber        
 SET @TotalApplications = @LiveApplications + @ExpiringApplications + @PendingApplications + @DeclinedApplications + @DraftApplications + @ArchivedApplications        
 SET @TotalViewed = ISNULL(@LiveViewed, 0) + ISNULL(@ExpiringViewed, 0) + ISNULL(@PendingViewed, 0) + ISNULL(@DeclinedViewed, 0) + ISNULL(@DraftViewed, 0) + ISNULL(@ArchivedViewed, 0)        
         
 INSERT INTO @StatTotals (ReportName, ReportURL, Number, Applications, Viewed)      
 VALUES ('LabelTotal', '', @TotalNumber, @TotalApplications, @TotalViewed)        
         
 -- Get Result        
         
 SELECT ReportName, ReportURL, Number, Applications, Viewed FROM @StatTotals        
         
 END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByExpiredAdvertiserIdExpiryDate"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[Expired] = @Expired
					AND [AdvertiserID] = @AdvertiserId
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_JobUnarchive"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@JobID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
e of Error    
     
-- Raise an error with the details of the exception    
DECLARE @ErrMsg nvarchar(4000), @ErrSeverity INT    
SELECT @ErrMsg = ERROR_MESSAGE(),    
@ErrSeverity = ERROR_SEVERITY()    
     
RAISERROR(@ErrMsg, @ErrSeverity, 1)    
     
END CATCH 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_CustomGetJobByExternalJobId"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalJobId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
JobArchiveId  
  
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByJobTemplateId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[JobTemplateID] = @JobTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Jobs table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByWorkTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[WorkTypeID] = @WorkTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByCurrencyId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandWorkTypeIdExpiredExpiryDate"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID]
				FROM
					[dbo].[Jobs] (NOLOCK)
				WHERE
					[AdvertiserID] = @AdvertiserId
					AND [CurrencyID] = @CurrencyId
					AND [SalaryTypeID] = @SalaryTypeId
					AND [SalaryLowerBand] = @SalaryLowerBand
					AND [SalaryUpperBand] = @SalaryUpperBand
					AND [WorkTypeID] = @WorkTypeId
					AND [Expired] = @Expired
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByExpiredExpiryDateAdvertiserIdCurrencyIdSalaryUpperBandSalaryLowerBandWorkTypeId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@Expired" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID]
				FROM
					[dbo].[Jobs] (NOLOCK)
				WHERE
					[Expired] = @Expired
					AND [ExpiryDate] = @ExpiryDate
					AND [AdvertiserID] = @AdvertiserId
					AND [CurrencyID] = @CurrencyId
					AND [SalaryUpperBand] = @SalaryUpperBand
					AND [SalaryLowerBand] = @SalaryLowerBand
					AND [WorkTypeID] = @WorkTypeId
				SELECT @@ROWCOUNT

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_CustomGetGeoAddressToUpdate"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
(
SELECT [Address], JobLatitude, JobLongitude FROM
(
SELECT [Address], JobLatitude, JobLongitude FROM Jobs (NOLOCK) where AddressStatus = @ADDRESS_IS_VALID
UNION 
SELECT [Address], JobLatitude, JobLongitude FROM JobsArchive (NOLOCK) where AddressStatus = @ADDRESS_IS_VALID
) _Job 
GROUP BY [Address], JobLatitude, JobLongitude
)	

-- Update to the temp table which 
UPDATE
    _TempAddress
SET
    _TempAddress.JobLatitude = OT.JobLatitude,
    _TempAddress.JobLongitude = OT.JobLongitude,
    _TempAddress.AddressStatus = @ADDRESS_IS_VALID
FROM
    @tmpAddress _TempAddress
INNER JOIN
    TempAddressTable OT (NOLOCK)
ON
    _TempAddress.[Address] = OT.[Address]
	

--Select * from @tmpAddress

-- Update the Jobs which are in the queue
UPDATE
    Jobs
SET
    Jobs.JobLatitude = _TempAddress.JobLatitude,
    Jobs.JobLongitude = _TempAddress.JobLongitude,
    Jobs.AddressStatus = @ADDRESS_IS_VALID
FROM
    @tmpAddress _TempAddress
INNER JOIN Jobs (NOLOCK) ON _TempAddress.[Address] = Jobs.[Address]
INNER JOIN Integrations (NOLOCK) ON Jobs.SiteID = Integrations.SiteID AND Integrations.Valid = 1 AND IntegrationType = 10 -- ONLY Google Map Type
	WHERE  (Jobs.AddressStatus = @ADDRESS_IN_QUEUE OR Jobs.AddressStatus IS NULL)	-- Jobs Address in the Queue
	AND _TempAddress.AddressStatus = @ADDRESS_IS_VALID		-- Only update valid address found

-- Get the Address which are in the queue
Select [Address], Integrations.JSONText  --JobID, Jobs.SiteID, JobLatitude, JobLongitude,
	FROM Jobs (NOLOCK) INNER JOIN Integrations (NOLOCK) ON Jobs.SiteID = Integrations.SiteID
WHERE 
	Jobs.Expired = 0 
	 AND Jobs.ExpiryDate >= GETDATE() 
	 AND Integrations.Valid = 1 
	 AND IntegrationType = 10 -- ONLY Google Map Type
	 AND (Jobs.AddressStatus = @ADDRESS_IN_QUEUE OR Jobs.AddressStatus IS NULL)		-- ONLY Address in the QUEUE
GROUP BY [Address], Integrations.JSONText	--JobID, Jobs.SiteID, JobLatitude, JobLongitude,
    
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByExpiredBilledExpiryDate"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[Expired] = @Expired
					AND [Billed] = @Billed
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Jobs table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Jobs]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetCurrentJobStatistics"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SortField" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SortASC" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
c'    
 End    
 Else    
 Begin    
  Set @sql = @sql + ' desc'    
 End    
     
 -- return results    
 Exec sp_executesql @sql    
    
 IF USER_NAME() IS NULL    
  BEGIN    
   SELECT [JobID], [JobName], [RefNo], [DatePosted]    
   FROM [dbo].[Jobs]  (NOLOCK) WHERE 1=0    
  END    
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_CustomUpdateSiteJobCount"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
RefineCount        
 FROM [dbo].[Jobs] (NOLOCK)                   
  INNER JOIN @tmpJobIdSearch tmpJobIdSearch on Jobs.JobID = tmpJobIdSearch.JobId                       
  INNER JOIN JobRoles WITH (NOLOCK) ON JobRoles.JobID = Jobs.JobId                   
  INNER JOIN Roles WITH (NOLOCK) ON Roles.RoleID = JobRoles.RoleID                   
  INNER JOIN SiteRoles WITH (NOLOCK) ON SiteRoles.RoleID = JobRoles.RoleID                
 AND SiteRoles.SiteId = @SiteId              
 GROUP BY SiteRoles.RoleID       
   
 UPDATE SiteRoles SET TotalJobs = 0 WHERE SiteID = @SiteID      
 UPDATE SiteRoles SET TotalJobs = ISNULL(t.Total, 0) FROM @tmpRoles t WHERE t.RoleID = SiteRoles.RoleID AND SiteRoles.SiteID = @SiteID       
COMMIT TRAN       
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetBySalaryTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_JobArchive"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@JobID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
e of Error  
   
-- Raise an error with the details of the exception  
DECLARE @ErrMsg nvarchar(4000), @ErrSeverity INT  
SELECT @ErrMsg = ERROR_MESSAGE(),  
@ErrSeverity = ERROR_SEVERITY()  
   
RAISERROR(@ErrMsg, @ErrSeverity, 1)  
    
 IF (@IsJobExpired = 1)
 BEGIN
	IF EXISTS(SELECT 1 FROM [JobX_Live].[dbo].[Integration_JXTJobMapping] WHERE JXTJobID = @JobID)  
	BEGIN  
		DECLARE @JobXJobID INT  
		SELECT @JobXJobID = JobID FROM [JobX_Live].[dbo].[Integration_JXTJobMapping] WHERE JXTJobID = @JobID  
		UPDATE [JobX_Live].[dbo].Products SET Expired = 1 WHERE ProductID = @JobXJobID  
	END  
  END   
  
END CATCH

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByLastModifiedByAdminUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedByAdminUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_JobX_SubmitQueue"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@JobID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN    
          
  DECLARE @Message XML    
  CREATE TABLE #XMLMessage    
   (    
    [JobID] INT,    
    [UpdateDate] DATETIME,    
   )    
     
  INSERT INTO #XMLMessage    
    (    
     [JobID],    
     [UpdateDate]    
    )    
  VALUES (    
     @JobID,    
     GETDATE()    
    )    
     
  SELECT @Message = ( SELECT * FROM #XMLMessage    
       FOR XML PATH('Job'),    
         TYPE    
       ) ;    
  -- Above will fomulate valid XML message    
  DECLARE @Handle UNIQUEIDENTIFIER ;    
     
  -- Dialog Conversation starts here    
     
  BEGIN DIALOG CONVERSATION @Handle FROM SERVICE ServiceJobXJobFinishedProcessing TO SERVICE 'ServiceJobXJobUpdate' ON CONTRACT [JobContract] WITH ENCRYPTION = OFF ;    
     
  SEND ON CONVERSATION @Handle MESSAGE TYPE JobDetails (@Message) ;  
      
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetHistoricalJobStatistics"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateFrom" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateTo" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@SortField" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SortASC" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
c'           
 End           
 Else           
 Begin           
  Set @sql = @sql + ' desc'           
 End           
     
	print @sql
 -- return results           
 Exec sp_executesql @sql           
            
 IF USER_NAME() IS NULL           
  BEGIN           
   SELECT [JobID], [JobName], [RefNo], [DatePosted]           
   FROM [dbo].[Jobs]  (NOLOCK) WHERE 1=0           
  END           
END  

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByExpiredExpiryDate"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[Expired] = @Expired
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_CustomCalculateJobCount"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BIT
	
	DECLARE @tmpSite TABLE (SiteID INT)
	DECLARE @tmpJobRoles TABLE (RoleID INT)
	DECLARE @tmpJobProfessions TABLE (ProfessionID INT)
	
	DECLARE @tmpSiteRoles TABLE (SiteRoleID INT)
	DECLARE @tmpSiteProfession TABLE (SiteProfessionID INT)

	INSERT INTO @tmpJobRoles (RoleID) SELECT RoleID FROM JobRoles (NOLOCK) WHERE JobID = @JobID
	INSERT INTO @tmpJobProfessions (ProfessionID) SELECT DISTINCT ProfessionID FROM Roles WHERE RoleID IN (SELECT RoleID FROM @tmpJobRoles)

	SET @isPrivate = (SELECT PrivateJobs FROM GlobalSettings (NOLOCK) WHERE SiteID = @SiteID)
	IF @isPrivate = 0 
	BEGIN
		-- Including Public Job Sites
		
		INSERT INTO @tmpSite(SiteID) SELECT SiteID  FROM GlobalSettings (NOLOCK) WHERE PublicJobsSearch = 1 
							UNION SELECT @SiteID 
							UNION SELECT SiteID FROM [dbo].[udfSite_GetAdvertisers](@SiteID) ga 
									INNER JOIN Advertisers a ON ga.AdvertiserID = a.AdvertiserID
	END
	ELSE
	BEGIN
		-- Only current site and site related from advertiser filter
		
		INSERT INTO @tmpSite(SiteID) SELECT @SiteID 
							UNION SELECT SiteID FROM [dbo].[udfSite_GetAdvertisers](@SiteID) ga 
									INNER JOIN Advertisers a ON ga.AdvertiserID = a.AdvertiserID
	END	
	
	-- Update Site Profession

	INSERT INTO @tmpSiteRoles (SiteRoleID) 
	SELECT sr.SiteRoleID 
	FROM @tmpSite ts
	INNER JOIN SiteRoles sr
	ON ts.SiteID = sr.SiteID
	INNER JOIN @tmpJobRoles tr
	ON sr.RoleID = tr.RoleID
		
	UPDATE SiteRoles SET TotalJobs = TotalJobs + @NoOfJob WHERE SiteRoleID IN (SELECT SiteRoleID FROM @tmpSiteRoles)
	
	-- Update Site Role

	INSERT INTO @tmpSiteProfession (SiteProfessionID) 
	SELECT sp.SiteProfessionID
	FROM @tmpSite ts
	INNER JOIN SiteProfession sp
	ON ts.SiteID = sp.SiteID
	INNER JOIN @tmpJobProfessions tp
	ON sp.ProfessionID = tp.ProfessionID
		
	UPDATE SiteProfession SET TotalJobs = TotalJobs + @NoOfJob WHERE SiteProfessionID IN (SELECT SiteProfessionID FROM @tmpSiteProfession)
	COMMIT TRAN
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetArchivedJobs"  skip="true">
			<comment><![CDATA[     
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrentOrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@CurrentPageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrentPageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount      
   FROM [dbo].[Jobs] (NOLOCK) WHERE 1=0      
  END      
      
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByJobItemTypeId"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID]
				FROM
					[dbo].[Jobs]
				WHERE
					[JobItemTypeID] = @JobItemTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_CustomUpdateGeoLocations"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@XMLFeed" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
E WHEN _TempAddress.AddressStatus = @ADDRESS_IS_INVALID THEN NULL ELSE _TempAddress.JobLongitude END,
		Jobs.AddressStatus = _TempAddress.AddressStatus
	FROM
		@tmpAddress _TempAddress
	 INNER JOIN Jobs (NOLOCK) ON _TempAddress.[Address] = Jobs.[Address]
	 INNER JOIN Integrations (NOLOCK) ON Jobs.SiteID = Integrations.SiteID
	 		
	WHERE  
		(Jobs.AddressStatus = @ADDRESS_IN_QUEUE OR Jobs.AddressStatus IS NULL)	-- Jobs Address in the Queue
		AND Integrations.Valid = 1 
		AND IntegrationType = 10 -- ONLY Google Map Type
	SELECT @@ROWCOUNT     


 END	

END


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetBySiteIdBilledAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[SiteID] = @SiteId
					AND [Billed] = @Billed
					AND [AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Jobs table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue
					,@RequireLogonForExternalApplications
					,@ShowLocationDetails
					,@PublicTransport
					,@Address
					,@ContactDetails
					,@JobContactPhone
					,@JobContactName
					,@QualificationsRecognised
					,@ResidentOnly
					,@DocumentLink
					,@BulletPoint1
					,@BulletPoint2
					,@BulletPoint3
					,@HotJob
					,@JobFriendlyName
					,@SearchField
					,@ShowSalaryRange
					,@SalaryLowerBand
					,@SalaryUpperBand
					,@CurrencyId
					,@SalaryTypeId
					,@EnteredByAdvertiserUserId
					,@JobLatitude
					,@JobLongitude
					,@AddressStatus
					,@JobExternalId
					,@ScreeningQuestionsTemplateId
					)
				
				-- Get the identity value
				SET @JobId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Jobs table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Jobs] WITH (ROWLOCK) 
				WHERE
					[JobID] = @JobId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByJobIdWithArchive"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID]
					
	FROM [dbo].[Jobs] (NOLOCK) WHERE 1=0
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetBySiteIdExpiredBilledAdvertiserIdEnteredByAdvertiserUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[SiteID] = @SiteId
					AND [Expired] = @Expired
					AND [Billed] = @Billed
					AND [AdvertiserID] = @AdvertiserId
					AND [EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Jobs table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedByAdminUserId is not null)
	OR ([JobItemTypeID] = @JobItemTypeId AND @JobItemTypeId is not null)
	OR ([ApplicationMethod] = @ApplicationMethod AND @ApplicationMethod is not null)
	OR ([ApplicationURL] = @ApplicationUrl AND @ApplicationUrl is not null)
	OR ([UploadMethod] = @UploadMethod AND @UploadMethod is not null)
	OR ([JobTemplateID] = @JobTemplateId AND @JobTemplateId is not null)
	OR ([SearchFieldExtension] = @SearchFieldExtension AND @SearchFieldExtension is not null)
	OR ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId AND @AdvertiserJobTemplateLogoId is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([RequireLogonForExternalApplications] = @RequireLogonForExternalApplications AND @RequireLogonForExternalApplications is not null)
	OR ([ShowLocationDetails] = @ShowLocationDetails AND @ShowLocationDetails is not null)
	OR ([PublicTransport] = @PublicTransport AND @PublicTransport is not null)
	OR ([Address] = @Address AND @Address is not null)
	OR ([ContactDetails] = @ContactDetails AND @ContactDetails is not null)
	OR ([JobContactPhone] = @JobContactPhone AND @JobContactPhone is not null)
	OR ([JobContactName] = @JobContactName AND @JobContactName is not null)
	OR ([QualificationsRecognised] = @QualificationsRecognised AND @QualificationsRecognised is not null)
	OR ([ResidentOnly] = @ResidentOnly AND @ResidentOnly is not null)
	OR ([DocumentLink] = @DocumentLink AND @DocumentLink is not null)
	OR ([BulletPoint1] = @BulletPoint1 AND @BulletPoint1 is not null)
	OR ([BulletPoint2] = @BulletPoint2 AND @BulletPoint2 is not null)
	OR ([BulletPoint3] = @BulletPoint3 AND @BulletPoint3 is not null)
	OR ([HotJob] = @HotJob AND @HotJob is not null)
	OR ([JobFriendlyName] = @JobFriendlyName AND @JobFriendlyName is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([ShowSalaryRange] = @ShowSalaryRange AND @ShowSalaryRange is not null)
	OR ([SalaryLowerBand] = @SalaryLowerBand AND @SalaryLowerBand is not null)
	OR ([SalaryUpperBand] = @SalaryUpperBand AND @SalaryUpperBand is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId AND @EnteredByAdvertiserUserId is not null)
	OR ([JobLatitude] = @JobLatitude AND @JobLatitude is not null)
	OR ([JobLongitude] = @JobLongitude AND @JobLongitude is not null)
	OR ([AddressStatus] = @AddressStatus AND @AddressStatus is not null)
	OR ([JobExternalId] = @JobExternalId AND @JobExternalId is not null)
	OR ([ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId AND @ScreeningQuestionsTemplateId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_CustomPostXML"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@XMLFeed" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ErrorList" type="xml" direction="Input" size="-1" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientIPAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ArchiveMissingJobs" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@WebServiceLogId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
VARCHAR(50)) + ' ] ' FOR XML PATH('ERROR'), ROOT ('ERRORRESULT')),              
   TotalFailed = @TotalSent,              
   FinishedDate = GETDATE()              
  WHERE               
   WebServiceLogId = @WebServiceLogId              
              
 /*                
 IF USER_NAME() IS NOT NULL                          
 BEGIN                  
  RAISERROR(@ErrMsg, @ErrSeverity, 1)              
 END              
 */               
                
END CATCH             
              
    -- *************** OUTPUT ********************* TODO REMOVE THIS              
 SELECT WebServiceLogId, CreatedDate, OutputResponse, TotalSent, TotalInserted, TotalUpdated, TotalArchived, TotalFailed, FinishedDate              
 FROM WebServiceLog (NOLOCK)              
  WHERE               
   WebServiceLogId = @WebServiceLogId              
              
            
-- Finally runs the site job count
exec [dbo].[Jobs_CustomUpdateSiteJobCount] @SiteID
              
END 



			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Jobs_GetByScreeningQuestionsTemplateId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Jobs table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[Jobs]
				WHERE
					[ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Area_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Area table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[Area]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Area_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Area table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AreaID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AreaID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AreaID]'
				SET @SQL = @SQL + ' FROM [dbo].[Area]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AreaID], O.[AreaName], O.[LocationID], O.[Valid], O.[Sequence]
				FROM
				    [dbo].[Area] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AreaID] = PageIndex.[AreaID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Area]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Area_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Area table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Area]
					(
					[AreaName]
					,[LocationID]
					,[Valid]
					,[Sequence]
					)
				VALUES
					(
					@AreaName
					,@LocationId
					,@Valid
					,@Sequence
					)
				
				-- Get the identity value
				SET @AreaId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Area_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Area table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault=""/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Area]
				SET
					[AreaName] = @AreaName
					,[LocationID] = @LocationId
					,[Valid] = @Valid
					,[Sequence] = @Sequence
				WHERE
[AreaID] = @AreaId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Area_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Area table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Area] WITH (ROWLOCK) 
				WHERE
					[AreaID] = @AreaId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Area_GetByLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Area table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[Area]
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Area_GetByAreaIdLocationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Area table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[Area]
				WHERE
					[AreaID] = @AreaId
					AND [LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Area_GetByAreaId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Area table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[Area]
				WHERE
					[AreaID] = @AreaId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Area_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Area table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AreaID]
	, [AreaName]
	, [LocationID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[Area]
    WHERE 
	 ([AreaID] = @AreaId OR @AreaId IS NULL)
	AND ([AreaName] = @AreaName OR @AreaName IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AreaID]
	, [AreaName]
	, [LocationID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[Area]
    WHERE 
	 ([AreaID] = @AreaId AND @AreaId is not null)
	OR ([AreaName] = @AreaName AND @AreaName is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Area_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Area table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AreaID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AreaID] )
				SELECT TOP {3} [AreaID]
				FROM [dbo].[Area] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AreaID], O.[AreaName], O.[LocationID], O.[Valid], O.[Sequence]
				FROM
				    [dbo].[Area] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AreaID] = PageIndex.[AreaID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Area] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Area_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Area table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Area]
					(
					[AreaName]
					,[LocationID]
					,[Valid]
					,[Sequence]
					)
				VALUES
					(
					@AreaName
					,@LocationId
					,@Valid
					,@Sequence
					)
				
				-- Get the identity value
				SET @AreaId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_GetByLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Area table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[Area]
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Area table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[Area]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Area table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Area]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_GetSiteTree"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
Valid  
FROM @Area   
ORDER BY AreaName, SiteAreaName  
    
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_GetByAreaIdLocationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Area table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[Area]
				WHERE
					[AreaID] = @AreaId
					AND [LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Area table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AreaID]
	, [AreaName]
	, [LocationID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[Area]
    WHERE 
	 ([AreaID] = @AreaId OR @AreaId IS NULL)
	AND ([AreaName] = @AreaName OR @AreaName IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AreaID]
	, [AreaName]
	, [LocationID]
	, [Valid]
	, [Sequence]
    FROM
	[dbo].[Area]
    WHERE 
	 ([AreaID] = @AreaId AND @AreaId is not null)
	OR ([AreaName] = @AreaName AND @AreaName is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Area table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Area] WITH (ROWLOCK) 
				WHERE
					[AreaID] = @AreaId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_GetDetailWithSite"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
AreaValid  
FROM @Area   
    
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Area table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="1020" precision="0" scale="0" param="(1020)" nulldefault="null"/>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Area]
				SET
					[AreaName] = @AreaName
					,[LocationID] = @LocationId
					,[Valid] = @Valid
					,[Sequence] = @Sequence
				WHERE
[AreaID] = @AreaId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Area_GetByAreaId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Area table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[AreaID],
					[AreaName],
					[LocationID],
					[Valid],
					[Sequence]
				FROM
					[dbo].[Area]
				WHERE
					[AreaID] = @AreaId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobsArchive_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobsArchive table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobsArchive_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobsArchive table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobsArchive]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobID], O.[SiteID], O.[WorkTypeID], O.[JobName], O.[Description], O.[FullDescription], O.[WebServiceProcessed], O.[ApplicationEmailAddress], O.[RefNo], O.[Visible], O.[DatePosted], O.[ExpiryDate], O.[Expired], O.[JobItemPrice], O.[Billed], O.[LastModified], O.[ShowSalaryDetails], O.[SalaryText], O.[AdvertiserID], O.[LastModifiedByAdvertiserUserId], O.[LastModifiedByAdminUserId], O.[JobItemTypeID], O.[ApplicationMethod], O.[ApplicationURL], O.[UploadMethod], O.[Tags], O.[JobTemplateID], O.[SearchFieldExtension], O.[AdvertiserJobTemplateLogoID], O.[CompanyName], O.[HashValue], O.[RequireLogonForExternalApplications], O.[ShowLocationDetails], O.[PublicTransport], O.[Address], O.[ContactDetails], O.[JobContactPhone], O.[JobContactName], O.[QualificationsRecognised], O.[ResidentOnly], O.[DocumentLink], O.[BulletPoint1], O.[BulletPoint2], O.[BulletPoint3], O.[HotJob], O.[JobFriendlyName], O.[SearchField], O.[ShowSalaryRange], O.[SalaryLowerBand], O.[SalaryUpperBand], O.[CurrencyID], O.[SalaryTypeID], O.[EnteredByAdvertiserUserID], O.[JobLatitude], O.[JobLongitude], O.[AddressStatus], O.[JobExternalId], O.[ScreeningQuestionsTemplateId]
				FROM
				    [dbo].[JobsArchive] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobID] = PageIndex.[JobID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobsArchive]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobsArchive_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobsArchive table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault=""/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault=""/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobsArchive]
					(
					[JobID]
					,[SiteID]
					,[WorkTypeID]
					,[JobName]
					,[Description]
					,[FullDescription]
					,[WebServiceProcessed]
					,[ApplicationEmailAddress]
					,[RefNo]
					,[Visible]
					,[DatePosted]
					,[ExpiryDate]
					,[Expired]
					,[JobItemPrice]
					,[Billed]
					,[LastModified]
					,[ShowSalaryDetails]
					,[SalaryText]
					,[AdvertiserID]
					,[LastModifiedByAdvertiserUserId]
					,[LastModifiedByAdminUserId]
					,[JobItemTypeID]
					,[ApplicationMethod]
					,[ApplicationURL]
					,[UploadMethod]
					,[Tags]
					,[JobTemplateID]
					,[SearchFieldExtension]
					,[AdvertiserJobTemplateLogoID]
					,[CompanyName]
					,[HashValue]
					,[RequireLogonForExternalApplications]
					,[ShowLocationDetails]
					,[PublicTransport]
					,[Address]
					,[ContactDetails]
					,[JobContactPhone]
					,[JobContactName]
					,[QualificationsRecognised]
					,[ResidentOnly]
					,[DocumentLink]
					,[BulletPoint1]
					,[BulletPoint2]
					,[BulletPoint3]
					,[HotJob]
					,[JobFriendlyName]
					,[SearchField]
					,[ShowSalaryRange]
					,[SalaryLowerBand]
					,[SalaryUpperBand]
					,[CurrencyID]
					,[SalaryTypeID]
					,[EnteredByAdvertiserUserID]
					,[JobLatitude]
					,[JobLongitude]
					,[AddressStatus]
					,[JobExternalId]
					,[ScreeningQuestionsTemplateId]
					)
				VALUES
					(
					@JobId
					,@SiteId
					,@WorkTypeId
					,@JobName
					,@Description
					,@FullDescription
					,@WebServiceProcessed
					,@ApplicationEmailAddress
					,@RefNo
					,@Visible
					,@DatePosted
					,@ExpiryDate
					,@Expired
					,@JobItemPrice
					,@Billed
					,@LastModified
					,@ShowSalaryDetails
					,@SalaryText
					,@AdvertiserId
					,@LastModifiedByAdvertiserUserId
					,@LastModifiedByAdminUserId
					,@JobItemTypeId
					,@ApplicationMethod
					,@ApplicationUrl
					,@UploadMethod
					,@Tags
					,@JobTemplateId
					,@SearchFieldExtension
					,@AdvertiserJobTemplateLogoId
					,@CompanyName
					,@HashValue
					,@RequireLogonForExternalApplications
					,@ShowLocationDetails
					,@PublicTransport
					,@Address
					,@ContactDetails
					,@JobContactPhone
					,@JobContactName
					,@QualificationsRecognised
					,@ResidentOnly
					,@DocumentLink
					,@BulletPoint1
					,@BulletPoint2
					,@BulletPoint3
					,@HotJob
					,@JobFriendlyName
					,@SearchField
					,@ShowSalaryRange
					,@SalaryLowerBand
					,@SalaryUpperBand
					,@CurrencyId
					,@SalaryTypeId
					,@EnteredByAdvertiserUserId
					,@JobLatitude
					,@JobLongitude
					,@AddressStatus
					,@JobExternalId
					,@ScreeningQuestionsTemplateId
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobsArchive table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalJobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault=""/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault=""/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault=""/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault=""/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobsArchive]
				SET
					[JobID] = @JobId
					,[SiteID] = @SiteId
					,[WorkTypeID] = @WorkTypeId
					,[JobName] = @JobName
					,[Description] = @Description
					,[FullDescription] = @FullDescription
					,[WebServiceProcessed] = @WebServiceProcessed
					,[ApplicationEmailAddress] = @ApplicationEmailAddress
					,[RefNo] = @RefNo
					,[Visible] = @Visible
					,[DatePosted] = @DatePosted
					,[ExpiryDate] = @ExpiryDate
					,[Expired] = @Expired
					,[JobItemPrice] = @JobItemPrice
					,[Billed] = @Billed
					,[LastModified] = @LastModified
					,[ShowSalaryDetails] = @ShowSalaryDetails
					,[SalaryText] = @SalaryText
					,[AdvertiserID] = @AdvertiserId
					,[LastModifiedByAdvertiserUserId] = @LastModifiedByAdvertiserUserId
					,[LastModifiedByAdminUserId] = @LastModifiedByAdminUserId
					,[JobItemTypeID] = @JobItemTypeId
					,[ApplicationMethod] = @ApplicationMethod
					,[ApplicationURL] = @ApplicationUrl
					,[UploadMethod] = @UploadMethod
					,[Tags] = @Tags
					,[JobTemplateID] = @JobTemplateId
					,[SearchFieldExtension] = @SearchFieldExtension
					,[AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId
					,[CompanyName] = @CompanyName
					,[HashValue] = @HashValue
					,[RequireLogonForExternalApplications] = @RequireLogonForExternalApplications
					,[ShowLocationDetails] = @ShowLocationDetails
					,[PublicTransport] = @PublicTransport
					,[Address] = @Address
					,[ContactDetails] = @ContactDetails
					,[JobContactPhone] = @JobContactPhone
					,[JobContactName] = @JobContactName
					,[QualificationsRecognised] = @QualificationsRecognised
					,[ResidentOnly] = @ResidentOnly
					,[DocumentLink] = @DocumentLink
					,[BulletPoint1] = @BulletPoint1
					,[BulletPoint2] = @BulletPoint2
					,[BulletPoint3] = @BulletPoint3
					,[HotJob] = @HotJob
					,[JobFriendlyName] = @JobFriendlyName
					,[SearchField] = @SearchField
					,[ShowSalaryRange] = @ShowSalaryRange
					,[SalaryLowerBand] = @SalaryLowerBand
					,[SalaryUpperBand] = @SalaryUpperBand
					,[CurrencyID] = @CurrencyId
					,[SalaryTypeID] = @SalaryTypeId
					,[EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId
					,[JobLatitude] = @JobLatitude
					,[JobLongitude] = @JobLongitude
					,[AddressStatus] = @AddressStatus
					,[JobExternalId] = @JobExternalId
					,[ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId
				WHERE
[JobID] = @OriginalJobId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobsArchive table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobsArchive] WITH (ROWLOCK) 
				WHERE
					[JobID] = @JobId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByCurrencyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByJobTemplateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[JobTemplateID] = @JobTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByLastModifiedByAdvertiserUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[LastModifiedByAdvertiserUserId] = @LastModifiedByAdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByLastModifiedByAdminUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[LastModifiedByAdminUserId] = @LastModifiedByAdminUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetBySalaryTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByScreeningQuestionsTemplateId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByWorkTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[WorkTypeID] = @WorkTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByAddressStatus" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[AddressStatus] = @AddressStatus
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandWorkTypeIdExpiredExpiryDate" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[AdvertiserID] = @AdvertiserId
					AND [CurrencyID] = @CurrencyId
					AND [SalaryTypeID] = @SalaryTypeId
					AND [SalaryLowerBand] = @SalaryLowerBand
					AND [SalaryUpperBand] = @SalaryUpperBand
					AND [WorkTypeID] = @WorkTypeId
					AND [Expired] = @Expired
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetBySiteIdBilledAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[SiteID] = @SiteId
					AND [Billed] = @Billed
					AND [AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetBySiteIdBilledAdvertiserIdDatePosted" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[SiteID] = @SiteId
					AND [Billed] = @Billed
					AND [AdvertiserID] = @AdvertiserId
					AND [DatePosted] = @DatePosted
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobsArchive_GetByJobId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobID],
					[SiteID],
					[WorkTypeID],
					[JobName],
					[Description],
					[FullDescription],
					[WebServiceProcessed],
					[ApplicationEmailAddress],
					[RefNo],
					[Visible],
					[DatePosted],
					[ExpiryDate],
					[Expired],
					[JobItemPrice],
					[Billed],
					[LastModified],
					[ShowSalaryDetails],
					[SalaryText],
					[AdvertiserID],
					[LastModifiedByAdvertiserUserId],
					[LastModifiedByAdminUserId],
					[JobItemTypeID],
					[ApplicationMethod],
					[ApplicationURL],
					[UploadMethod],
					[Tags],
					[JobTemplateID],
					[SearchFieldExtension],
					[AdvertiserJobTemplateLogoID],
					[CompanyName],
					[HashValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobsArchive_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobsArchive table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobID]
	, [SiteID]
	, [WorkTypeID]
	, [JobName]
	, [Description]
	, [FullDescription]
	, [WebServiceProcessed]
	, [ApplicationEmailAddress]
	, [RefNo]
	, [Visible]
	, [DatePosted]
	, [ExpiryDate]
	, [Expired]
	, [JobItemPrice]
	, [Billed]
	, [LastModified]
	, [ShowSalaryDetails]
	, [SalaryText]
	, [AdvertiserID]
	, [LastModifiedByAdvertiserUserId]
	, [LastModifiedByAdminUserId]
	, [JobItemTypeID]
	, [ApplicationMethod]
	, [ApplicationURL]
	, [UploadMethod]
	, [Tags]
	, [JobTemplateID]
	, [SearchFieldExtension]
	, [AdvertiserJobTemplateLogoID]
	, [CompanyName]
	, [HashValue]
	, [RequireLogonForExternalApplications]
	, [ShowLocationDetails]
	, [PublicTransport]
	, [Address]
	, [ContactDetails]
	, [JobContactPhone]
	, [JobContactName]
	, [QualificationsRecognised]
	, [ResidentOnly]
	, [DocumentLink]
	, [BulletPoint1]
	, [BulletPoint2]
	, [BulletPoint3]
	, [HotJob]
	, [JobFriendlyName]
	, [SearchField]
	, [ShowSalaryRange]
	, [SalaryLowerBand]
	, [SalaryUpperBand]
	, [CurrencyID]
	, [SalaryTypeID]
	, [EnteredByAdvertiserUserID]
	, [JobLatitude]
	, [JobLongitude]
	, [AddressStatus]
	, [JobExternalId]
	, [ScreeningQuestionsTemplateId]
    FROM
	[dbo].[JobsArchive]
    WHERE 
	 ([JobID] = @JobId OR @JobId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([WorkTypeID] = @WorkTypeId OR @WorkTypeId IS NULL)
	AND ([JobName] = @JobName OR @JobName IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([FullDescription] = @FullDescription OR @FullDescription IS NULL)
	AND ([WebServiceProcessed] = @WebServiceProcessed OR @WebServiceProcessed IS NULL)
	AND ([ApplicationEmailAddress] = @ApplicationEmailAddress OR @ApplicationEmailAddress IS NULL)
	AND ([RefNo] = @RefNo OR @RefNo IS NULL)
	AND ([Visible] = @Visible OR @Visible IS NULL)
	AND ([DatePosted] = @DatePosted OR @DatePosted IS NULL)
	AND ([ExpiryDate] = @ExpiryDate OR @ExpiryDate IS NULL)
	AND ([Expired] = @Expired OR @Expired IS NULL)
	AND ([JobItemPrice] = @JobItemPrice OR @JobItemPrice IS NULL)
	AND ([Billed] = @Billed OR @Billed IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([ShowSalaryDetails] = @ShowSalaryDetails OR @ShowSalaryDetails IS NULL)
	AND ([SalaryText] = @SalaryText OR @SalaryText IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([LastModifiedByAdvertiserUserId] = @LastModifiedByAdvertiserUserId OR @LastModifiedByAdvertiserUserId IS NULL)
	AND ([LastModifiedByAdminUserId] = @LastModifiedByAdminUserId OR @LastModifiedByAdminUserId IS NULL)
	AND ([JobItemTypeID] = @JobItemTypeId OR @JobItemTypeId IS NULL)
	AND ([ApplicationMethod] = @ApplicationMethod OR @ApplicationMethod IS NULL)
	AND ([ApplicationURL] = @ApplicationUrl OR @ApplicationUrl IS NULL)
	AND ([UploadMethod] = @UploadMethod OR @UploadMethod IS NULL)
	AND ([JobTemplateID] = @JobTemplateId OR @JobTemplateId IS NULL)
	AND ([SearchFieldExtension] = @SearchFieldExtension OR @SearchFieldExtension IS NULL)
	AND ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId OR @AdvertiserJobTemplateLogoId IS NULL)
	AND ([CompanyName] = @CompanyName OR @CompanyName IS NULL)
	AND ([RequireLogonForExternalApplications] = @RequireLogonForExternalApplications OR @RequireLogonForExternalApplications IS NULL)
	AND ([ShowLocationDetails] = @ShowLocationDetails OR @ShowLocationDetails IS NULL)
	AND ([PublicTransport] = @PublicTransport OR @PublicTransport IS NULL)
	AND ([Address] = @Address OR @Address IS NULL)
	AND ([ContactDetails] = @ContactDetails OR @ContactDetails IS NULL)
	AND ([JobContactPhone] = @JobContactPhone OR @JobContactPhone IS NULL)
	AND ([JobContactName] = @JobContactName OR @JobContactName IS NULL)
	AND ([QualificationsRecognised] = @QualificationsRecognised OR @QualificationsRecognised IS NULL)
	AND ([ResidentOnly] = @ResidentOnly OR @ResidentOnly IS NULL)
	AND ([DocumentLink] = @DocumentLink OR @DocumentLink IS NULL)
	AND ([BulletPoint1] = @BulletPoint1 OR @BulletPoint1 IS NULL)
	AND ([BulletPoint2] = @BulletPoint2 OR @BulletPoint2 IS NULL)
	AND ([BulletPoint3] = @BulletPoint3 OR @BulletPoint3 IS NULL)
	AND ([HotJob] = @HotJob OR @HotJob IS NULL)
	AND ([JobFriendlyName] = @JobFriendlyName OR @JobFriendlyName IS NULL)
	AND ([SearchField] = @SearchField OR @SearchField IS NULL)
	AND ([ShowSalaryRange] = @ShowSalaryRange OR @ShowSalaryRange IS NULL)
	AND ([SalaryLowerBand] = @SalaryLowerBand OR @SalaryLowerBand IS NULL)
	AND ([SalaryUpperBand] = @SalaryUpperBand OR @SalaryUpperBand IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([SalaryTypeID] = @SalaryTypeId OR @SalaryTypeId IS NULL)
	AND ([EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId OR @EnteredByAdvertiserUserId IS NULL)
	AND ([JobLatitude] = @JobLatitude OR @JobLatitude IS NULL)
	AND ([JobLongitude] = @JobLongitude OR @JobLongitude IS NULL)
	AND ([AddressStatus] = @AddressStatus OR @AddressStatus IS NULL)
	AND ([JobExternalId] = @JobExternalId OR @JobExternalId IS NULL)
	AND ([ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId OR @ScreeningQuestionsTemplateId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobID]
	, [SiteID]
	, [WorkTypeID]
	, [JobName]
	, [Description]
	, [FullDescription]
	, [WebServiceProcessed]
	, [ApplicationEmailAddress]
	, [RefNo]
	, [Visible]
	, [DatePosted]
	, [ExpiryDate]
	, [Expired]
	, [JobItemPrice]
	, [Billed]
	, [LastModified]
	, [ShowSalaryDetails]
	, [SalaryText]
	, [AdvertiserID]
	, [LastModifiedByAdvertiserUserId]
	, [LastModifiedByAdminUserId]
	, [JobItemTypeID]
	, [ApplicationMethod]
	, [ApplicationURL]
	, [UploadMethod]
	, [Tags]
	, [JobTemplateID]
	, [SearchFieldExtension]
	, [AdvertiserJobTemplateLogoID]
	, [CompanyName]
	, [HashValue]
	, [RequireLogonForExternalApplications]
	, [ShowLocationDetails]
	, [PublicTransport]
	, [Address]
	, [ContactDetails]
	, [JobContactPhone]
	, [JobContactName]
	, [QualificationsRecognised]
	, [ResidentOnly]
	, [DocumentLink]
	, [BulletPoint1]
	, [BulletPoint2]
	, [BulletPoint3]
	, [HotJob]
	, [JobFriendlyName]
	, [SearchField]
	, [ShowSalaryRange]
	, [SalaryLowerBand]
	, [SalaryUpperBand]
	, [CurrencyID]
	, [SalaryTypeID]
	, [EnteredByAdvertiserUserID]
	, [JobLatitude]
	, [JobLongitude]
	, [AddressStatus]
	, [JobExternalId]
	, [ScreeningQuestionsTemplateId]
    FROM
	[dbo].[JobsArchive]
    WHERE 
	 ([JobID] = @JobId AND @JobId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([WorkTypeID] = @WorkTypeId AND @WorkTypeId is not null)
	OR ([JobName] = @JobName AND @JobName is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([FullDescription] = @FullDescription AND @FullDescription is not null)
	OR ([WebServiceProcessed] = @WebServiceProcessed AND @WebServiceProcessed is not null)
	OR ([ApplicationEmailAddress] = @ApplicationEmailAddress AND @ApplicationEmailAddress is not null)
	OR ([RefNo] = @RefNo AND @RefNo is not null)
	OR ([Visible] = @Visible AND @Visible is not null)
	OR ([DatePosted] = @DatePosted AND @DatePosted is not null)
	OR ([ExpiryDate] = @ExpiryDate AND @ExpiryDate is not null)
	OR ([Expired] = @Expired AND @Expired is not null)
	OR ([JobItemPrice] = @JobItemPrice AND @JobItemPrice is not null)
	OR ([Billed] = @Billed AND @Billed is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([ShowSalaryDetails] = @ShowSalaryDetails AND @ShowSalaryDetails is not null)
	OR ([SalaryText] = @SalaryText AND @SalaryText is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([LastModifiedByAdvertiserUserId] = @LastModifiedByAdvertiserUserId AND @LastModifiedByAdvertiserUserId is not null)
	OR ([LastModifiedByAdminUserId] = @LastModifiedByAdminUserId AND @LastModifiedByAdminUserId is not null)
	OR ([JobItemTypeID] = @JobItemTypeId AND @JobItemTypeId is not null)
	OR ([ApplicationMethod] = @ApplicationMethod AND @ApplicationMethod is not null)
	OR ([ApplicationURL] = @ApplicationUrl AND @ApplicationUrl is not null)
	OR ([UploadMethod] = @UploadMethod AND @UploadMethod is not null)
	OR ([JobTemplateID] = @JobTemplateId AND @JobTemplateId is not null)
	OR ([SearchFieldExtension] = @SearchFieldExtension AND @SearchFieldExtension is not null)
	OR ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId AND @AdvertiserJobTemplateLogoId is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([RequireLogonForExternalApplications] = @RequireLogonForExternalApplications AND @RequireLogonForExternalApplications is not null)
	OR ([ShowLocationDetails] = @ShowLocationDetails AND @ShowLocationDetails is not null)
	OR ([PublicTransport] = @PublicTransport AND @PublicTransport is not null)
	OR ([Address] = @Address AND @Address is not null)
	OR ([ContactDetails] = @ContactDetails AND @ContactDetails is not null)
	OR ([JobContactPhone] = @JobContactPhone AND @JobContactPhone is not null)
	OR ([JobContactName] = @JobContactName AND @JobContactName is not null)
	OR ([QualificationsRecognised] = @QualificationsRecognised AND @QualificationsRecognised is not null)
	OR ([ResidentOnly] = @ResidentOnly AND @ResidentOnly is not null)
	OR ([DocumentLink] = @DocumentLink AND @DocumentLink is not null)
	OR ([BulletPoint1] = @BulletPoint1 AND @BulletPoint1 is not null)
	OR ([BulletPoint2] = @BulletPoint2 AND @BulletPoint2 is not null)
	OR ([BulletPoint3] = @BulletPoint3 AND @BulletPoint3 is not null)
	OR ([HotJob] = @HotJob AND @HotJob is not null)
	OR ([JobFriendlyName] = @JobFriendlyName AND @JobFriendlyName is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([ShowSalaryRange] = @ShowSalaryRange AND @ShowSalaryRange is not null)
	OR ([SalaryLowerBand] = @SalaryLowerBand AND @SalaryLowerBand is not null)
	OR ([SalaryUpperBand] = @SalaryUpperBand AND @SalaryUpperBand is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId AND @EnteredByAdvertiserUserId is not null)
	OR ([JobLatitude] = @JobLatitude AND @JobLatitude is not null)
	OR ([JobLongitude] = @JobLongitude AND @JobLongitude is not null)
	OR ([AddressStatus] = @AddressStatus AND @AddressStatus is not null)
	OR ([JobExternalId] = @JobExternalId AND @JobExternalId is not null)
	OR ([ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId AND @ScreeningQuestionsTemplateId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobsArchive_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobsArchive table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobID] )
				SELECT TOP {3} [JobID]
				FROM [dbo].[JobsArchive] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobID], O.[SiteID], O.[WorkTypeID], O.[JobName], O.[Description], O.[FullDescription], O.[WebServiceProcessed], O.[ApplicationEmailAddress], O.[RefNo], O.[Visible], O.[DatePosted], O.[ExpiryDate], O.[Expired], O.[JobItemPrice], O.[Billed], O.[LastModified], O.[ShowSalaryDetails], O.[SalaryText], O.[AdvertiserID], O.[LastModifiedByAdvertiserUserId], O.[LastModifiedByAdminUserId], O.[JobItemTypeID], O.[ApplicationMethod], O.[ApplicationURL], O.[UploadMethod], O.[Tags], O.[JobTemplateID], O.[SearchFieldExtension], O.[AdvertiserJobTemplateLogoID], O.[CompanyName], O.[HashValue], O.[RequireLogonForExternalApplications], O.[ShowLocationDetails], O.[PublicTransport], O.[Address], O.[ContactDetails], O.[JobContactPhone], O.[JobContactName], O.[QualificationsRecognised], O.[ResidentOnly], O.[DocumentLink], O.[BulletPoint1], O.[BulletPoint2], O.[BulletPoint3], O.[HotJob], O.[JobFriendlyName], O.[SearchField], O.[ShowSalaryRange], O.[SalaryLowerBand], O.[SalaryUpperBand], O.[CurrencyID], O.[SalaryTypeID], O.[EnteredByAdvertiserUserID], O.[JobLatitude], O.[JobLongitude], O.[AddressStatus], O.[JobExternalId], O.[ScreeningQuestionsTemplateId]
				FROM
				    [dbo].[JobsArchive] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobID] = PageIndex.[JobID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobsArchive] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobsArchive_GetBySalaryTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetBySiteIdBilledAdvertiserIdDatePosted"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[SiteID] = @SiteId
					AND [Billed] = @Billed
					AND [AdvertiserID] = @AdvertiserId
					AND [DatePosted] = @DatePosted
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobsArchive table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OriginalJobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue
					,[RequireLogonForExternalApplications] = @RequireLogonForExternalApplications
					,[ShowLocationDetails] = @ShowLocationDetails
					,[PublicTransport] = @PublicTransport
					,[Address] = @Address
					,[ContactDetails] = @ContactDetails
					,[JobContactPhone] = @JobContactPhone
					,[JobContactName] = @JobContactName
					,[QualificationsRecognised] = @QualificationsRecognised
					,[ResidentOnly] = @ResidentOnly
					,[DocumentLink] = @DocumentLink
					,[BulletPoint1] = @BulletPoint1
					,[BulletPoint2] = @BulletPoint2
					,[BulletPoint3] = @BulletPoint3
					,[HotJob] = @HotJob
					,[JobFriendlyName] = @JobFriendlyName
					,[SearchField] = @SearchField
					,[ShowSalaryRange] = @ShowSalaryRange
					,[SalaryLowerBand] = @SalaryLowerBand
					,[SalaryUpperBand] = @SalaryUpperBand
					,[CurrencyID] = @CurrencyId
					,[SalaryTypeID] = @SalaryTypeId
					,[EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId
					,[JobLatitude] = @JobLatitude
					,[JobLongitude] = @JobLongitude
					,[AddressStatus] = @AddressStatus
					,[JobExternalId] = @JobExternalId
					,[ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId
				WHERE
[JobID] = @OriginalJobId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobsArchive table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedByAdminUserId is not null)
	OR ([JobItemTypeID] = @JobItemTypeId AND @JobItemTypeId is not null)
	OR ([ApplicationMethod] = @ApplicationMethod AND @ApplicationMethod is not null)
	OR ([ApplicationURL] = @ApplicationUrl AND @ApplicationUrl is not null)
	OR ([UploadMethod] = @UploadMethod AND @UploadMethod is not null)
	OR ([JobTemplateID] = @JobTemplateId AND @JobTemplateId is not null)
	OR ([SearchFieldExtension] = @SearchFieldExtension AND @SearchFieldExtension is not null)
	OR ([AdvertiserJobTemplateLogoID] = @AdvertiserJobTemplateLogoId AND @AdvertiserJobTemplateLogoId is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([RequireLogonForExternalApplications] = @RequireLogonForExternalApplications AND @RequireLogonForExternalApplications is not null)
	OR ([ShowLocationDetails] = @ShowLocationDetails AND @ShowLocationDetails is not null)
	OR ([PublicTransport] = @PublicTransport AND @PublicTransport is not null)
	OR ([Address] = @Address AND @Address is not null)
	OR ([ContactDetails] = @ContactDetails AND @ContactDetails is not null)
	OR ([JobContactPhone] = @JobContactPhone AND @JobContactPhone is not null)
	OR ([JobContactName] = @JobContactName AND @JobContactName is not null)
	OR ([QualificationsRecognised] = @QualificationsRecognised AND @QualificationsRecognised is not null)
	OR ([ResidentOnly] = @ResidentOnly AND @ResidentOnly is not null)
	OR ([DocumentLink] = @DocumentLink AND @DocumentLink is not null)
	OR ([BulletPoint1] = @BulletPoint1 AND @BulletPoint1 is not null)
	OR ([BulletPoint2] = @BulletPoint2 AND @BulletPoint2 is not null)
	OR ([BulletPoint3] = @BulletPoint3 AND @BulletPoint3 is not null)
	OR ([HotJob] = @HotJob AND @HotJob is not null)
	OR ([JobFriendlyName] = @JobFriendlyName AND @JobFriendlyName is not null)
	OR ([SearchField] = @SearchField AND @SearchField is not null)
	OR ([ShowSalaryRange] = @ShowSalaryRange AND @ShowSalaryRange is not null)
	OR ([SalaryLowerBand] = @SalaryLowerBand AND @SalaryLowerBand is not null)
	OR ([SalaryUpperBand] = @SalaryUpperBand AND @SalaryUpperBand is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([EnteredByAdvertiserUserID] = @EnteredByAdvertiserUserId AND @EnteredByAdvertiserUserId is not null)
	OR ([JobLatitude] = @JobLatitude AND @JobLatitude is not null)
	OR ([JobLongitude] = @JobLongitude AND @JobLongitude is not null)
	OR ([AddressStatus] = @AddressStatus AND @AddressStatus is not null)
	OR ([JobExternalId] = @JobExternalId AND @JobExternalId is not null)
	OR ([ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId AND @ScreeningQuestionsTemplateId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByAddressStatus"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[AddressStatus] = @AddressStatus
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByJobId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobsArchive table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByProfessionId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[ApplicationEmailAddress],
					[RefNo],
					[ContactDetails],
					[Visible],
					[ExpiryDate]
				FROM
					[dbo].[Jobs-Archive] (NOLOCK)
				WHERE
					[ProfessionID] = @ProfessionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByScreeningQuestionsTemplateId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[ScreeningQuestionsTemplateId] = @ScreeningQuestionsTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobsArchive table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobsArchive]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobsArchive table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobsArchive] WITH (ROWLOCK) 
				WHERE
					[JobID] = @JobId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByLocationId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@LocationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[ApplicationEmailAddress],
					[RefNo],
					[ContactDetails],
					[Visible],
					[ExpiryDate]
				FROM
					[dbo].[Jobs-Archive] (NOLOCK)
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetBySiteIdBilledAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[SiteID] = @SiteId
					AND [Billed] = @Billed
					AND [AdvertiserID] = @AdvertiserId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobsArchive table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@FullDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WebServiceProcessed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationEmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@RefNo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Visible" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DatePosted" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Billed" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ShowSalaryDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryText" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationUrl" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@UploadMethod" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Tags" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SearchFieldExtension" type="varchar" direction="Input" size="8" precision="0" scale="0" param="(8)" nulldefault="null"/>
				<parameter name="@AdvertiserJobTemplateLogoId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@HashValue" type="varbinary" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@RequireLogonForExternalApplications" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShowLocationDetails" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PublicTransport" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Address" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactDetails" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@JobContactPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@QualificationsRecognised" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ResidentOnly" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DocumentLink" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@BulletPoint1" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint2" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@BulletPoint3" type="nvarchar" direction="Input" size="160" precision="0" scale="0" param="(160)" nulldefault="null"/>
				<parameter name="@HotJob" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobFriendlyName" type="varchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@SearchField" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShowSalaryRange" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnteredByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLatitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobLongitude" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobExternalId" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue
					,@RequireLogonForExternalApplications
					,@ShowLocationDetails
					,@PublicTransport
					,@Address
					,@ContactDetails
					,@JobContactPhone
					,@JobContactName
					,@QualificationsRecognised
					,@ResidentOnly
					,@DocumentLink
					,@BulletPoint1
					,@BulletPoint2
					,@BulletPoint3
					,@HotJob
					,@JobFriendlyName
					,@SearchField
					,@ShowSalaryRange
					,@SalaryLowerBand
					,@SalaryUpperBand
					,@CurrencyId
					,@SalaryTypeId
					,@EnteredByAdvertiserUserId
					,@JobLatitude
					,@JobLongitude
					,@AddressStatus
					,@JobExternalId
					,@ScreeningQuestionsTemplateId
					)
				
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByLastModifiedByAdminUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedByAdminUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedByAdminUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByAdvertiserIdCurrencyIdSalaryTypeIdSalaryLowerBandSalaryUpperBandWorkTypeIdExpiredExpiryDate"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Expired" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[AdvertiserID] = @AdvertiserId
					AND [CurrencyID] = @CurrencyId
					AND [SalaryTypeID] = @SalaryTypeId
					AND [SalaryLowerBand] = @SalaryLowerBand
					AND [SalaryUpperBand] = @SalaryUpperBand
					AND [WorkTypeID] = @WorkTypeId
					AND [Expired] = @Expired
					AND [ExpiryDate] = @ExpiryDate
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByExpiredExpiryDateAdvertiserIdCurrencyIdSalaryUpperBandSalaryLowerBandWorkTypeId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@Expired" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpiryDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID]
				FROM
					[dbo].[JobsArchive] (NOLOCK)
				WHERE
					[Expired] = @Expired
					AND [ExpiryDate] = @ExpiryDate
					AND [AdvertiserID] = @AdvertiserId
					AND [CurrencyID] = @CurrencyId
					AND [SalaryUpperBand] = @SalaryUpperBand
					AND [SalaryLowerBand] = @SalaryLowerBand
					AND [WorkTypeID] = @WorkTypeId
				SELECT @@ROWCOUNT

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByWorkTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WorkTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[WorkTypeID] = @WorkTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByAreaId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[ApplicationEmailAddress],
					[RefNo],
					[ContactDetails],
					[Visible],
					[ExpiryDate]
				FROM
					[dbo].[Jobs-Archive] (NOLOCK)
				WHERE
					[AreaID] = @AreaId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByJobItemTypeId"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[JobItemTypeID] = @JobItemTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByLastModifiedByAdvertiserUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedByAdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedByAdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByJobTemplateId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobTemplateId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[JobTemplateID] = @JobTemplateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByCurrencyId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsArchive table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
hValue],
					[RequireLogonForExternalApplications],
					[ShowLocationDetails],
					[PublicTransport],
					[Address],
					[ContactDetails],
					[JobContactPhone],
					[JobContactName],
					[QualificationsRecognised],
					[ResidentOnly],
					[DocumentLink],
					[BulletPoint1],
					[BulletPoint2],
					[BulletPoint3],
					[HotJob],
					[JobFriendlyName],
					[SearchField],
					[ShowSalaryRange],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[EnteredByAdvertiserUserID],
					[JobLatitude],
					[JobLongitude],
					[AddressStatus],
					[JobExternalId],
					[ScreeningQuestionsTemplateId]
				FROM
					[dbo].[JobsArchive]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsArchive_GetByRoleId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[ApplicationEmailAddress],
					[RefNo],
					[ContactDetails],
					[Visible],
					[ExpiryDate]
				FROM
					[dbo].[Jobs-Archive] (NOLOCK)
				WHERE
					[RoleID] = @RoleId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobViews_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobViews table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobViews_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobViews table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobViewID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobViewID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobViewID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobViews]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobViewID], O.[SiteID], O.[JobID], O.[ViewDate], O.[TotalView], O.[JobArchiveID], O.[DomainReferral]
				FROM
				    [dbo].[JobViews] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobViewID] = PageIndex.[JobViewID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobViews]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobViews_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobViews table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobViewId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalView" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DomainReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobViews]
					(
					[SiteID]
					,[JobID]
					,[ViewDate]
					,[TotalView]
					,[JobArchiveID]
					,[DomainReferral]
					)
				VALUES
					(
					@SiteId
					,@JobId
					,@ViewDate
					,@TotalView
					,@JobArchiveId
					,@DomainReferral
					)
				
				-- Get the identity value
				SET @JobViewId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobViews_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobViews table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobViewId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalView" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DomainReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobViews]
				SET
					[SiteID] = @SiteId
					,[JobID] = @JobId
					,[ViewDate] = @ViewDate
					,[TotalView] = @TotalView
					,[JobArchiveID] = @JobArchiveId
					,[DomainReferral] = @DomainReferral
				WHERE
[JobViewID] = @JobViewId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobViews_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobViews table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobViewId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobViews] WITH (ROWLOCK) 
				WHERE
					[JobViewID] = @JobViewId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobViews_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobViews_GetByJobArchiveId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[JobArchiveID] = @JobArchiveId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobViews_GetByJobId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobViews_GetBySiteIdJobIdJobArchiveIdViewDateDomainReferral" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@DomainReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[SiteID] = @SiteId
					AND [JobID] = @JobId
					AND [JobArchiveID] = @JobArchiveId
					AND [ViewDate] = @ViewDate
					AND [DomainReferral] = @DomainReferral
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobViews_GetByJobViewId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobViewId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[JobViewID] = @JobViewId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobViews_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobViews table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobViewId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalView" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DomainReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobViewID]
	, [SiteID]
	, [JobID]
	, [ViewDate]
	, [TotalView]
	, [JobArchiveID]
	, [DomainReferral]
    FROM
	[dbo].[JobViews]
    WHERE 
	 ([JobViewID] = @JobViewId OR @JobViewId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([ViewDate] = @ViewDate OR @ViewDate IS NULL)
	AND ([TotalView] = @TotalView OR @TotalView IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([DomainReferral] = @DomainReferral OR @DomainReferral IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobViewID]
	, [SiteID]
	, [JobID]
	, [ViewDate]
	, [TotalView]
	, [JobArchiveID]
	, [DomainReferral]
    FROM
	[dbo].[JobViews]
    WHERE 
	 ([JobViewID] = @JobViewId AND @JobViewId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([ViewDate] = @ViewDate AND @ViewDate is not null)
	OR ([TotalView] = @TotalView AND @TotalView is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([DomainReferral] = @DomainReferral AND @DomainReferral is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobViews_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobViews table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobViewID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobViewID] )
				SELECT TOP {3} [JobViewID]
				FROM [dbo].[JobViews] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobViewID], O.[SiteID], O.[JobID], O.[ViewDate], O.[TotalView], O.[JobArchiveID], O.[DomainReferral]
				FROM
				    [dbo].[JobViews] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobViewID] = PageIndex.[JobViewID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobViews] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobViews_GetByDate"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalView
    FROM [dbo].[JobViews] (NOLOCK)
    WHERE ViewDate = @ViewDate
    GROUP BY SiteID, JobID, JobArchiveID, ViewDate

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobViews table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobViewId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalView" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DomainReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[JobViews]
					(
					[SiteID]
					,[JobID]
					,[ViewDate]
					,[TotalView]
					,[JobArchiveID]
					,[DomainReferral]
					)
				VALUES
					(
					@SiteId
					,@JobId
					,@ViewDate
					,@TotalView
					,@JobArchiveId
					,@DomainReferral
					)
				
				-- Get the identity value
				SET @JobViewId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_GetByJobId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_GetBySiteIdJobIdJobArchiveIdViewDate"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[SiteID] = @SiteId
					AND [JobID] = @JobId
					AND [JobArchiveID] = @JobArchiveId
					AND [ViewDate] = @ViewDate
				SELECT @@ROWCOUNT

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobViews table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobViews table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobViews]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_UpdateCounter"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@JobID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DomainReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF EXISTS(SELECT 1 FROM Jobs (NOLOCK) WHERE JobID = @JobID)
BEGIN
	DECLARE @JobViewsID INT

	SELECT @JobViewsID = JobViewID FROM JobViews(NOLOCK) WHERE (JobID = @JobID) AND SiteID = @SiteID AND DomainReferral = @DomainReferral AND ViewDate = @ViewDate
	
	 IF (@JobViewsID > 0)
	 BEGIN  
	  UPDATE JobViews SET TotalView = TotalView + 1  
	  WHERE JobViewID = @JobViewsID
	 END  
	 ELSE  
	 BEGIN  
	  INSERT INTO JobViews(JobID, SiteID, ViewDate, DomainReferral, TotalView)  
	  VALUES (@JobID, @SiteID, @ViewDate, @DomainReferral, 1)  
	 END
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_GetBySiteIdJobIdViewDate"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID]
				FROM
					[dbo].[JobViews] (NOLOCK)
				WHERE
					[SiteID] = @SiteId
					AND [JobID] = @JobId
					AND [ViewDate] = @ViewDate
				SELECT @@ROWCOUNT

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_GetBySiteIdJobIdJobArchiveIdViewDateDomainReferral"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@DomainReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[SiteID] = @SiteId
					AND [JobID] = @JobId
					AND [JobArchiveID] = @JobArchiveId
					AND [ViewDate] = @ViewDate
					AND [DomainReferral] = @DomainReferral
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobViews table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobViewId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalView" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DomainReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[JobViews]
				SET
					[SiteID] = @SiteId
					,[JobID] = @JobId
					,[ViewDate] = @ViewDate
					,[TotalView] = @TotalView
					,[JobArchiveID] = @JobArchiveId
					,[DomainReferral] = @DomainReferral
				WHERE
[JobViewID] = @JobViewId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobViews table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobViewId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalView" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DomainReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobViewID]
	, [SiteID]
	, [JobID]
	, [ViewDate]
	, [TotalView]
	, [JobArchiveID]
	, [DomainReferral]
    FROM
	[dbo].[JobViews]
    WHERE 
	 ([JobViewID] = @JobViewId OR @JobViewId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([ViewDate] = @ViewDate OR @ViewDate IS NULL)
	AND ([TotalView] = @TotalView OR @TotalView IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([DomainReferral] = @DomainReferral OR @DomainReferral IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobViewID]
	, [SiteID]
	, [JobID]
	, [ViewDate]
	, [TotalView]
	, [JobArchiveID]
	, [DomainReferral]
    FROM
	[dbo].[JobViews]
    WHERE 
	 ([JobViewID] = @JobViewId AND @JobViewId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([ViewDate] = @ViewDate AND @ViewDate is not null)
	OR ([TotalView] = @TotalView AND @TotalView is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([DomainReferral] = @DomainReferral AND @DomainReferral is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobViews table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobViewId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobViews] WITH (ROWLOCK) 
				WHERE
					[JobViewID] = @JobViewId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_GetGroupByDateRange"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateFrom" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateTo" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalView
    FROM [dbo].[JobViews] (NOLOCK)
    WHERE ViewDate BETWEEN @DateFrom AND @DateTo
    GROUP BY SiteID, ViewDate

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_GetByJobArchiveId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[JobArchiveID] = @JobArchiveId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobViews_GetByJobViewId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobViews table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobViewId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobViewID],
					[SiteID],
					[JobID],
					[ViewDate],
					[TotalView],
					[JobArchiveID],
					[DomainReferral]
				FROM
					[dbo].[JobViews]
				WHERE
					[JobViewID] = @JobViewId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobsSaved_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobsSaved table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobSaveID],
					[JobID],
					[MemberID],
					[LastModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobsSaved_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobsSaved table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobSaveID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobSaveID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobSaveID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobsSaved]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobSaveID], O.[JobID], O.[MemberID], O.[LastModified], O.[JobArchiveID]
				FROM
				    [dbo].[JobsSaved] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobSaveID] = PageIndex.[JobSaveID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobsSaved]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobsSaved_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobsSaved table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobSaveId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobsSaved]
					(
					[JobID]
					,[MemberID]
					,[LastModified]
					,[JobArchiveID]
					)
				VALUES
					(
					@JobId
					,@MemberId
					,@LastModified
					,@JobArchiveId
					)
				
				-- Get the identity value
				SET @JobSaveId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsSaved_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobsSaved table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobSaveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobsSaved]
				SET
					[JobID] = @JobId
					,[MemberID] = @MemberId
					,[LastModified] = @LastModified
					,[JobArchiveID] = @JobArchiveId
				WHERE
[JobSaveID] = @JobSaveId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsSaved_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobsSaved table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobSaveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobsSaved] WITH (ROWLOCK) 
				WHERE
					[JobSaveID] = @JobSaveId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsSaved_GetByJobArchiveId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsSaved table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobSaveID],
					[JobID],
					[MemberID],
					[LastModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
				WHERE
					[JobArchiveID] = @JobArchiveId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsSaved_GetByJobId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsSaved table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobSaveID],
					[JobID],
					[MemberID],
					[LastModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
				WHERE
					[JobID] = @JobId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsSaved_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsSaved table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobSaveID],
					[JobID],
					[MemberID],
					[LastModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobsSaved_GetByJobSaveId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsSaved table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobSaveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobSaveID],
					[JobID],
					[MemberID],
					[LastModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
				WHERE
					[JobSaveID] = @JobSaveId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobsSaved_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobsSaved table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobSaveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobSaveID]
	, [JobID]
	, [MemberID]
	, [LastModified]
	, [JobArchiveID]
    FROM
	[dbo].[JobsSaved]
    WHERE 
	 ([JobSaveID] = @JobSaveId OR @JobSaveId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobSaveID]
	, [JobID]
	, [MemberID]
	, [LastModified]
	, [JobArchiveID]
    FROM
	[dbo].[JobsSaved]
    WHERE 
	 ([JobSaveID] = @JobSaveId AND @JobSaveId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobsSaved_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobsSaved table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobSaveID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobSaveID] )
				SELECT TOP {3} [JobSaveID]
				FROM [dbo].[JobsSaved] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobSaveID], O.[JobID], O.[MemberID], O.[LastModified], O.[JobArchiveID]
				FROM
				    [dbo].[JobsSaved] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobSaveID] = PageIndex.[JobSaveID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobsSaved] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobsSaved_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobsSaved table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobSaveId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,@JobArchiveId
					)
				
				-- Get the identity value
				SET @JobSaveId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_GetByJobId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsSaved table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
				WHERE
					[JobID] = @JobId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsSaved table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobsSaved table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobsSaved table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobsSaved]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_GetByJobSaveId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsSaved table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobSaveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
				WHERE
					[JobSaveID] = @JobSaveId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobsSaved table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobSaveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,[JobArchiveID] = @JobArchiveId
				WHERE
[JobSaveID] = @JobSaveId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobsSaved table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobSaveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobsSaved table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobSaveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobsSaved] WITH (ROWLOCK) 
				WHERE
					[JobSaveID] = @JobSaveId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_GetByJobArchiveId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobsSaved table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[JobArchiveID]
				FROM
					[dbo].[JobsSaved]
				WHERE
					[JobArchiveID] = @JobArchiveId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobsSaved_GetJobNameByMemberID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@MemberID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount  
FROM   JobSavedJobNameByMember WITH (NOLOCK)         
WHERE  MemberID = @MemberID        
 AND RowNumber >= @PageStart              
 AND RowNumber <= @PageEnd              
ORDER BY RowNumber         
        
END 
			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobCustomXML_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobCustomXML table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobCustomXMLID],
					[SiteID],
					[UniqueCode],
					[CustomXML],
					[CustomType],
					[JobID],
					[JobArchiveID],
					[IsDefault],
					[AdvertiserID],
					[LanguageIDs],
					[Valid]
				FROM
					[dbo].[JobCustomXML]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobCustomXML_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobCustomXML table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobCustomXMLID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobCustomXMLID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobCustomXMLID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobCustomXML]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobCustomXMLID], O.[SiteID], O.[UniqueCode], O.[CustomXML], O.[CustomType], O.[JobID], O.[JobArchiveID], O.[IsDefault], O.[AdvertiserID], O.[LanguageIDs], O.[Valid]
				FROM
				    [dbo].[JobCustomXML] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobCustomXMLID] = PageIndex.[JobCustomXMLID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobCustomXML]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobCustomXML_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobCustomXML table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobCustomXmlid" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UniqueCode" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CustomType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobCustomXML]
					(
					[SiteID]
					,[UniqueCode]
					,[CustomXML]
					,[CustomType]
					,[JobID]
					,[JobArchiveID]
					,[IsDefault]
					,[AdvertiserID]
					,[LanguageIDs]
					,[Valid]
					)
				VALUES
					(
					@SiteId
					,@UniqueCode
					,@CustomXml
					,@CustomType
					,@JobId
					,@JobArchiveId
					,@IsDefault
					,@AdvertiserId
					,@LanguageIds
					,@Valid
					)
				
				-- Get the identity value
				SET @JobCustomXmlid = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobCustomXML_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobCustomXML table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobCustomXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UniqueCode" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CustomType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LanguageIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobCustomXML]
				SET
					[SiteID] = @SiteId
					,[UniqueCode] = @UniqueCode
					,[CustomXML] = @CustomXml
					,[CustomType] = @CustomType
					,[JobID] = @JobId
					,[JobArchiveID] = @JobArchiveId
					,[IsDefault] = @IsDefault
					,[AdvertiserID] = @AdvertiserId
					,[LanguageIDs] = @LanguageIds
					,[Valid] = @Valid
				WHERE
[JobCustomXMLID] = @JobCustomXmlid 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobCustomXML_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobCustomXML table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobCustomXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobCustomXML] WITH (ROWLOCK) 
				WHERE
					[JobCustomXMLID] = @JobCustomXmlid
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobCustomXML_GetByAdvertiserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobCustomXML table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobCustomXMLID],
					[SiteID],
					[UniqueCode],
					[CustomXML],
					[CustomType],
					[JobID],
					[JobArchiveID],
					[IsDefault],
					[AdvertiserID],
					[LanguageIDs],
					[Valid]
				FROM
					[dbo].[JobCustomXML]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobCustomXML_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobCustomXML table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobCustomXMLID],
					[SiteID],
					[UniqueCode],
					[CustomXML],
					[CustomType],
					[JobID],
					[JobArchiveID],
					[IsDefault],
					[AdvertiserID],
					[LanguageIDs],
					[Valid]
				FROM
					[dbo].[JobCustomXML]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobCustomXML_GetByJobCustomXmlid" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobCustomXML table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobCustomXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobCustomXMLID],
					[SiteID],
					[UniqueCode],
					[CustomXML],
					[CustomType],
					[JobID],
					[JobArchiveID],
					[IsDefault],
					[AdvertiserID],
					[LanguageIDs],
					[Valid]
				FROM
					[dbo].[JobCustomXML]
				WHERE
					[JobCustomXMLID] = @JobCustomXmlid
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobCustomXML_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobCustomXML table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobCustomXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UniqueCode" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobCustomXMLID]
	, [SiteID]
	, [UniqueCode]
	, [CustomXML]
	, [CustomType]
	, [JobID]
	, [JobArchiveID]
	, [IsDefault]
	, [AdvertiserID]
	, [LanguageIDs]
	, [Valid]
    FROM
	[dbo].[JobCustomXML]
    WHERE 
	 ([JobCustomXMLID] = @JobCustomXmlid OR @JobCustomXmlid IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([UniqueCode] = @UniqueCode OR @UniqueCode IS NULL)
	AND ([CustomXML] = @CustomXml OR @CustomXml IS NULL)
	AND ([CustomType] = @CustomType OR @CustomType IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([IsDefault] = @IsDefault OR @IsDefault IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([LanguageIDs] = @LanguageIds OR @LanguageIds IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobCustomXMLID]
	, [SiteID]
	, [UniqueCode]
	, [CustomXML]
	, [CustomType]
	, [JobID]
	, [JobArchiveID]
	, [IsDefault]
	, [AdvertiserID]
	, [LanguageIDs]
	, [Valid]
    FROM
	[dbo].[JobCustomXML]
    WHERE 
	 ([JobCustomXMLID] = @JobCustomXmlid AND @JobCustomXmlid is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([UniqueCode] = @UniqueCode AND @UniqueCode is not null)
	OR ([CustomXML] = @CustomXml AND @CustomXml is not null)
	OR ([CustomType] = @CustomType AND @CustomType is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([IsDefault] = @IsDefault AND @IsDefault is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([LanguageIDs] = @LanguageIds AND @LanguageIds is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobCustomXML_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobCustomXML table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobCustomXMLID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobCustomXMLID] )
				SELECT TOP {3} [JobCustomXMLID]
				FROM [dbo].[JobCustomXML] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobCustomXMLID], O.[SiteID], O.[UniqueCode], O.[CustomXML], O.[CustomType], O.[JobID], O.[JobArchiveID], O.[IsDefault], O.[AdvertiserID], O.[LanguageIDs], O.[Valid]
				FROM
				    [dbo].[JobCustomXML] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobCustomXMLID] = PageIndex.[JobCustomXMLID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobCustomXML] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobCustomXML_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobCustomXML table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobCustomXmlid" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UniqueCode" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[JobCustomXML]
					(
					[SiteID]
					,[UniqueCode]
					,[CustomXML]
					,[CustomType]
					,[JobID]
					,[JobArchiveID]
					,[IsDefault]
					,[AdvertiserID]
					,[LanguageIDs]
					,[Valid]
					)
				VALUES
					(
					@SiteId
					,@UniqueCode
					,@CustomXml
					,@CustomType
					,@JobId
					,@JobArchiveId
					,@IsDefault
					,@AdvertiserId
					,@LanguageIds
					,@Valid
					)
				
				-- Get the identity value
				SET @JobCustomXmlid = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomXML_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobCustomXML table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobCustomXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobCustomXML] WITH (ROWLOCK) 
				WHERE
					[JobCustomXMLID] = @JobCustomXmlid
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomXML_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobCustomXML table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobCustomXMLID],
					[SiteID],
					[UniqueCode],
					[CustomXML],
					[CustomType],
					[JobID],
					[JobArchiveID],
					[IsDefault],
					[AdvertiserID],
					[LanguageIDs],
					[Valid]
				FROM
					[dbo].[JobCustomXML]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomXML_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobCustomXML table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobCustomXMLID],
					[SiteID],
					[UniqueCode],
					[CustomXML],
					[CustomType],
					[JobID],
					[JobArchiveID],
					[IsDefault],
					[AdvertiserID],
					[LanguageIDs],
					[Valid]
				FROM
					[dbo].[JobCustomXML]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomXML_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobCustomXML table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobCustomXML]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomXML_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobCustomXML table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobCustomXMLID],
					[SiteID],
					[UniqueCode],
					[CustomXML],
					[CustomType],
					[JobID],
					[JobArchiveID],
					[IsDefault],
					[AdvertiserID],
					[LanguageIDs],
					[Valid]
				FROM
					[dbo].[JobCustomXML]
				WHERE
					[AdvertiserID] = @AdvertiserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomXML_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobCustomXML table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobCustomXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UniqueCode" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobCustomXMLID]
	, [SiteID]
	, [UniqueCode]
	, [CustomXML]
	, [CustomType]
	, [JobID]
	, [JobArchiveID]
	, [IsDefault]
	, [AdvertiserID]
	, [LanguageIDs]
	, [Valid]
    FROM
	[dbo].[JobCustomXML]
    WHERE 
	 ([JobCustomXMLID] = @JobCustomXmlid OR @JobCustomXmlid IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([UniqueCode] = @UniqueCode OR @UniqueCode IS NULL)
	AND ([CustomXML] = @CustomXml OR @CustomXml IS NULL)
	AND ([CustomType] = @CustomType OR @CustomType IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([IsDefault] = @IsDefault OR @IsDefault IS NULL)
	AND ([AdvertiserID] = @AdvertiserId OR @AdvertiserId IS NULL)
	AND ([LanguageIDs] = @LanguageIds OR @LanguageIds IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobCustomXMLID]
	, [SiteID]
	, [UniqueCode]
	, [CustomXML]
	, [CustomType]
	, [JobID]
	, [JobArchiveID]
	, [IsDefault]
	, [AdvertiserID]
	, [LanguageIDs]
	, [Valid]
    FROM
	[dbo].[JobCustomXML]
    WHERE 
	 ([JobCustomXMLID] = @JobCustomXmlid AND @JobCustomXmlid is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([UniqueCode] = @UniqueCode AND @UniqueCode is not null)
	OR ([CustomXML] = @CustomXml AND @CustomXml is not null)
	OR ([CustomType] = @CustomType AND @CustomType is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([IsDefault] = @IsDefault AND @IsDefault is not null)
	OR ([AdvertiserID] = @AdvertiserId AND @AdvertiserId is not null)
	OR ([LanguageIDs] = @LanguageIds AND @LanguageIds is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomXML_GetByJobCustomXmlid"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobCustomXML table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobCustomXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobCustomXMLID],
					[SiteID],
					[UniqueCode],
					[CustomXML],
					[CustomType],
					[JobID],
					[JobArchiveID],
					[IsDefault],
					[AdvertiserID],
					[LanguageIDs],
					[Valid]
				FROM
					[dbo].[JobCustomXML]
				WHERE
					[JobCustomXMLID] = @JobCustomXmlid
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomXML_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobCustomXML table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobCustomXmlid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UniqueCode" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CustomXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LanguageIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[JobCustomXML]
				SET
					[SiteID] = @SiteId
					,[UniqueCode] = @UniqueCode
					,[CustomXML] = @CustomXml
					,[CustomType] = @CustomType
					,[JobID] = @JobId
					,[JobArchiveID] = @JobArchiveId
					,[IsDefault] = @IsDefault
					,[AdvertiserID] = @AdvertiserId
					,[LanguageIDs] = @LanguageIds
					,[Valid] = @Valid
				WHERE
[JobCustomXMLID] = @JobCustomXmlid 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobCustomXML_CustomGetBySiteIDJobIDCustomType"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT [JobCustomXMLID]
      ,[SiteID]
      ,[UniqueCode]
      ,[CustomXML]
      ,[CustomType]
      ,[JobID]
      ,[JobArchiveID]
      ,[IsDefault]
      ,[AdvertiserID]
      ,[LanguageIDs]
      ,[Valid]
	FROM JobCustomXML WITH (NOLOCK)
	WHERE SiteID = @SiteID AND JobID = @JobID AND CustomType = @CustomType
		
END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobRoles_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobRoles_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobRoles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobRoleID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobRoleID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobRoleID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobRoleID], O.[JobID], O.[JobArchiveID], O.[RoleID]
				FROM
				    [dbo].[JobRoles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobRoleID] = PageIndex.[JobRoleID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobRoles_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobRoleId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobRoles]
					(
					[JobID]
					,[JobArchiveID]
					,[RoleID]
					)
				VALUES
					(
					@JobId
					,@JobArchiveId
					,@RoleId
					)
				
				-- Get the identity value
				SET @JobRoleId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobRoles_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobRoles]
				SET
					[JobID] = @JobId
					,[JobArchiveID] = @JobArchiveId
					,[RoleID] = @RoleId
				WHERE
[JobRoleID] = @JobRoleId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobRoles_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobRoles] WITH (ROWLOCK) 
				WHERE
					[JobRoleID] = @JobRoleId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobRoles_GetByRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobRoles table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
				WHERE
					[RoleID] = @RoleId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobRoles_GetByJobId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobRoles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobRoles_GetByJobArchiveId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobRoles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
				WHERE
					[JobArchiveID] = @JobArchiveId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobRoles_GetByJobRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobRoles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
				WHERE
					[JobRoleID] = @JobRoleId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobRoles_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobRoles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobRoleID]
	, [JobID]
	, [JobArchiveID]
	, [RoleID]
    FROM
	[dbo].[JobRoles]
    WHERE 
	 ([JobRoleID] = @JobRoleId OR @JobRoleId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([RoleID] = @RoleId OR @RoleId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobRoleID]
	, [JobID]
	, [JobArchiveID]
	, [RoleID]
    FROM
	[dbo].[JobRoles]
    WHERE 
	 ([JobRoleID] = @JobRoleId AND @JobRoleId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([RoleID] = @RoleId AND @RoleId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobRoles_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobRoles table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobRoleID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobRoleID] )
				SELECT TOP {3} [JobRoleID]
				FROM [dbo].[JobRoles] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobRoleID], O.[JobID], O.[JobArchiveID], O.[RoleID]
				FROM
				    [dbo].[JobRoles] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobRoleID] = PageIndex.[JobRoleID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobRoles] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobRoles_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobRoleId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[JobRoles]
					(
					[JobID]
					,[JobArchiveID]
					,[RoleID]
					)
				VALUES
					(
					@JobId
					,@JobArchiveId
					,@RoleId
					)
				
				-- Get the identity value
				SET @JobRoleId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_GetByJobId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobRoles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_GetByJobRoleId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobRoles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
				WHERE
					[JobRoleID] = @JobRoleId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobRoles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_GetByRoleId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobRoles table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
				WHERE
					[RoleID] = @RoleId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[JobRoles]
				SET
					[JobID] = @JobId
					,[JobArchiveID] = @JobArchiveId
					,[RoleID] = @RoleId
				WHERE
[JobRoleID] = @JobRoleId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobRoles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobRoleID]
	, [JobID]
	, [JobArchiveID]
	, [RoleID]
    FROM
	[dbo].[JobRoles]
    WHERE 
	 ([JobRoleID] = @JobRoleId OR @JobRoleId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([RoleID] = @RoleId OR @RoleId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobRoleID]
	, [JobID]
	, [JobArchiveID]
	, [RoleID]
    FROM
	[dbo].[JobRoles]
    WHERE 
	 ([JobRoleID] = @JobRoleId AND @JobRoleId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([RoleID] = @RoleId AND @RoleId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobRoles table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobRoleId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobRoles] WITH (ROWLOCK) 
				WHERE
					[JobRoleID] = @JobRoleId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_GetByJobArchiveId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobRoles table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobRoleID],
					[JobID],
					[JobArchiveID],
					[RoleID]
				FROM
					[dbo].[JobRoles]
				WHERE
					[JobArchiveID] = @JobArchiveId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobRoles_GetByJobIdProfessionId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfessionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT JobRoleID, JobID, JobArchiveID, jr.RoleID 
	FROM JobRoles jr
	INNER JOIN Roles r ON jr.RoleID = r.RoleID
	WHERE JobID = @JobId AND r.ProfessionID = @ProfessionId
END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="AvailableStatus_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AvailableStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AvailableStatusID],
					[SiteID],
					[AvailableStatusParentID],
					[AvailableStatusName],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[Sequence]
				FROM
					[dbo].[AvailableStatus]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="AvailableStatus_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AvailableStatus table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AvailableStatusID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([AvailableStatusID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [AvailableStatusID]'
				SET @SQL = @SQL + ' FROM [dbo].[AvailableStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[AvailableStatusID], O.[SiteID], O.[AvailableStatusParentID], O.[AvailableStatusName], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[Sequence]
				FROM
				    [dbo].[AvailableStatus] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[AvailableStatusID] = PageIndex.[AvailableStatusID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AvailableStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="AvailableStatus_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AvailableStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AvailableStatusId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AvailableStatusParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AvailableStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[AvailableStatus]
					(
					[SiteID]
					,[AvailableStatusParentID]
					,[AvailableStatusName]
					,[GlobalTemplate]
					,[LastModifiedBy]
					,[LastModified]
					,[Sequence]
					)
				VALUES
					(
					@SiteId
					,@AvailableStatusParentId
					,@AvailableStatusName
					,@GlobalTemplate
					,@LastModifiedBy
					,@LastModified
					,@Sequence
					)
				
				-- Get the identity value
				SET @AvailableStatusId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AvailableStatus_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AvailableStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AvailableStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AvailableStatusParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AvailableStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AvailableStatus]
				SET
					[SiteID] = @SiteId
					,[AvailableStatusParentID] = @AvailableStatusParentId
					,[AvailableStatusName] = @AvailableStatusName
					,[GlobalTemplate] = @GlobalTemplate
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[Sequence] = @Sequence
				WHERE
[AvailableStatusID] = @AvailableStatusId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AvailableStatus_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AvailableStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AvailableStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[AvailableStatus] WITH (ROWLOCK) 
				WHERE
					[AvailableStatusID] = @AvailableStatusId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AvailableStatus_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AvailableStatus table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AvailableStatusID],
					[SiteID],
					[AvailableStatusParentID],
					[AvailableStatusName],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[Sequence]
				FROM
					[dbo].[AvailableStatus]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AvailableStatus_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AvailableStatus table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AvailableStatusID],
					[SiteID],
					[AvailableStatusParentID],
					[AvailableStatusName],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[Sequence]
				FROM
					[dbo].[AvailableStatus]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="AvailableStatus_GetByAvailableStatusId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AvailableStatus table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AvailableStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AvailableStatusID],
					[SiteID],
					[AvailableStatusParentID],
					[AvailableStatusName],
					[GlobalTemplate],
					[LastModifiedBy],
					[LastModified],
					[Sequence]
				FROM
					[dbo].[AvailableStatus]
				WHERE
					[AvailableStatusID] = @AvailableStatusId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="AvailableStatus_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AvailableStatus table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AvailableStatusID]
	, [SiteID]
	, [AvailableStatusParentID]
	, [AvailableStatusName]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
    FROM
	[dbo].[AvailableStatus]
    WHERE 
	 ([AvailableStatusID] = @AvailableStatusId OR @AvailableStatusId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([AvailableStatusParentID] = @AvailableStatusParentId OR @AvailableStatusParentId IS NULL)
	AND ([AvailableStatusName] = @AvailableStatusName OR @AvailableStatusName IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AvailableStatusID]
	, [SiteID]
	, [AvailableStatusParentID]
	, [AvailableStatusName]
	, [GlobalTemplate]
	, [LastModifiedBy]
	, [LastModified]
	, [Sequence]
    FROM
	[dbo].[AvailableStatus]
    WHERE 
	 ([AvailableStatusID] = @AvailableStatusId AND @AvailableStatusId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([AvailableStatusParentID] = @AvailableStatusParentId AND @AvailableStatusParentId is not null)
	OR ([AvailableStatusName] = @AvailableStatusName AND @AvailableStatusName is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="AvailableStatus_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AvailableStatus table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [AvailableStatusID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [AvailableStatusID] )
				SELECT TOP {3} [AvailableStatusID]
				FROM [dbo].[AvailableStatus] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[AvailableStatusID], O.[SiteID], O.[AvailableStatusParentID], O.[AvailableStatusName], O.[GlobalTemplate], O.[LastModifiedBy], O.[LastModified], O.[Sequence]
				FROM
				    [dbo].[AvailableStatus] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[AvailableStatusID] = PageIndex.[AvailableStatusID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[AvailableStatus] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="AvailableStatus_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the AvailableStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AvailableStatusId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,@Sequence
					)
				
				-- Get the identity value
				SET @AvailableStatusId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AvailableStatus_GetByAvailableStatusId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AvailableStatus table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AvailableStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence]
				FROM
					[dbo].[AvailableStatus]
				WHERE
					[AvailableStatusID] = @AvailableStatusId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AvailableStatus_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the AvailableStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence]
				FROM
					[dbo].[AvailableStatus]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AvailableStatus_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the AvailableStatus table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AvailableStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AvailableStatus_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AvailableStatus table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[Sequence]
				FROM
					[dbo].[AvailableStatus]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AvailableStatus_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the AvailableStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AvailableStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,[Sequence] = @Sequence
				WHERE
[AvailableStatusID] = @AvailableStatusId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AvailableStatus_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the AvailableStatus table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AvailableStatusName" type="nvarchar" direction="Input" size="512" precision="0" scale="0" param="(512)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AvailableStatus_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the AvailableStatus table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AvailableStatusId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[AvailableStatus] WITH (ROWLOCK) 
				WHERE
					[AvailableStatusID] = @AvailableStatusId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="AvailableStatus_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the AvailableStatus table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Invoice_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Invoice table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[InvoiceID],
					[AdvertiserUserID],
					[OrderID],
					[JobItemTypeID],
					[TotalNumberOfJobs],
					[TotalAmount],
					[Description],
					[Quantity]
				FROM
					[dbo].[Invoice]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Invoice_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Invoice table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [InvoiceID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([InvoiceID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [InvoiceID]'
				SET @SQL = @SQL + ' FROM [dbo].[Invoice]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[InvoiceID], O.[AdvertiserUserID], O.[OrderID], O.[JobItemTypeID], O.[TotalNumberOfJobs], O.[TotalAmount], O.[Description], O.[Quantity]
				FROM
				    [dbo].[Invoice] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[InvoiceID] = PageIndex.[InvoiceID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Invoice]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Invoice_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Invoice table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Quantity" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Invoice]
					(
					[AdvertiserUserID]
					,[OrderID]
					,[JobItemTypeID]
					,[TotalNumberOfJobs]
					,[TotalAmount]
					,[Description]
					,[Quantity]
					)
				VALUES
					(
					@AdvertiserUserId
					,@OrderId
					,@JobItemTypeId
					,@TotalNumberOfJobs
					,@TotalAmount
					,@Description
					,@Quantity
					)
				
				-- Get the identity value
				SET @InvoiceId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Invoice_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Invoice table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Quantity" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Invoice]
				SET
					[AdvertiserUserID] = @AdvertiserUserId
					,[OrderID] = @OrderId
					,[JobItemTypeID] = @JobItemTypeId
					,[TotalNumberOfJobs] = @TotalNumberOfJobs
					,[TotalAmount] = @TotalAmount
					,[Description] = @Description
					,[Quantity] = @Quantity
				WHERE
[InvoiceID] = @InvoiceId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Invoice_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Invoice table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Invoice] WITH (ROWLOCK) 
				WHERE
					[InvoiceID] = @InvoiceId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Invoice_GetByAdvertiserUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Invoice table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceID],
					[AdvertiserUserID],
					[OrderID],
					[JobItemTypeID],
					[TotalNumberOfJobs],
					[TotalAmount],
					[Description],
					[Quantity]
				FROM
					[dbo].[Invoice]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Invoice_GetByOrderId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Invoice table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceID],
					[AdvertiserUserID],
					[OrderID],
					[JobItemTypeID],
					[TotalNumberOfJobs],
					[TotalAmount],
					[Description],
					[Quantity]
				FROM
					[dbo].[Invoice]
				WHERE
					[OrderID] = @OrderId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Invoice_GetByInvoiceId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Invoice table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[InvoiceID],
					[AdvertiserUserID],
					[OrderID],
					[JobItemTypeID],
					[TotalNumberOfJobs],
					[TotalAmount],
					[Description],
					[Quantity]
				FROM
					[dbo].[Invoice]
				WHERE
					[InvoiceID] = @InvoiceId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Invoice_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Invoice table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Quantity" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [InvoiceID]
	, [AdvertiserUserID]
	, [OrderID]
	, [JobItemTypeID]
	, [TotalNumberOfJobs]
	, [TotalAmount]
	, [Description]
	, [Quantity]
    FROM
	[dbo].[Invoice]
    WHERE 
	 ([InvoiceID] = @InvoiceId OR @InvoiceId IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
	AND ([OrderID] = @OrderId OR @OrderId IS NULL)
	AND ([JobItemTypeID] = @JobItemTypeId OR @JobItemTypeId IS NULL)
	AND ([TotalNumberOfJobs] = @TotalNumberOfJobs OR @TotalNumberOfJobs IS NULL)
	AND ([TotalAmount] = @TotalAmount OR @TotalAmount IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([Quantity] = @Quantity OR @Quantity IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [InvoiceID]
	, [AdvertiserUserID]
	, [OrderID]
	, [JobItemTypeID]
	, [TotalNumberOfJobs]
	, [TotalAmount]
	, [Description]
	, [Quantity]
    FROM
	[dbo].[Invoice]
    WHERE 
	 ([InvoiceID] = @InvoiceId AND @InvoiceId is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	OR ([OrderID] = @OrderId AND @OrderId is not null)
	OR ([JobItemTypeID] = @JobItemTypeId AND @JobItemTypeId is not null)
	OR ([TotalNumberOfJobs] = @TotalNumberOfJobs AND @TotalNumberOfJobs is not null)
	OR ([TotalAmount] = @TotalAmount AND @TotalAmount is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([Quantity] = @Quantity AND @Quantity is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Invoice_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Invoice table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [InvoiceID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [InvoiceID] )
				SELECT TOP {3} [InvoiceID]
				FROM [dbo].[Invoice] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[InvoiceID], O.[AdvertiserUserID], O.[OrderID], O.[JobItemTypeID], O.[TotalNumberOfJobs], O.[TotalAmount], O.[Description], O.[Quantity]
				FROM
				    [dbo].[Invoice] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[InvoiceID] = PageIndex.[InvoiceID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Invoice] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Invoice_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Invoice table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Quantity" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[Invoice]
					(
					[AdvertiserUserID]
					,[OrderID]
					,[JobItemTypeID]
					,[TotalNumberOfJobs]
					,[TotalAmount]
					,[Description]
					,[Quantity]
					)
				VALUES
					(
					@AdvertiserUserId
					,@OrderId
					,@JobItemTypeId
					,@TotalNumberOfJobs
					,@TotalAmount
					,@Description
					,@Quantity
					)
				
				-- Get the identity value
				SET @InvoiceId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_GetByAdvertiserUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Invoice table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceID],
					[AdvertiserUserID],
					[OrderID],
					[JobItemTypeID],
					[TotalNumberOfJobs],
					[TotalAmount],
					[Description],
					[Quantity]
				FROM
					[dbo].[Invoice]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_GetByInvoiceId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Invoice table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[InvoiceID],
					[AdvertiserUserID],
					[OrderID],
					[JobItemTypeID],
					[TotalNumberOfJobs],
					[TotalAmount],
					[Description],
					[Quantity]
				FROM
					[dbo].[Invoice]
				WHERE
					[InvoiceID] = @InvoiceId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Invoice table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[InvoiceID],
					[AdvertiserUserID],
					[OrderID],
					[JobItemTypeID],
					[TotalNumberOfJobs],
					[TotalAmount],
					[Description],
					[Quantity]
				FROM
					[dbo].[Invoice]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_CustomGetAdvertiserInvoiceReport"  skip="true">
			<comment><![CDATA[    
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserAccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderID" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DateFrom" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateTo" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@WHERE" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'        
SET @SQL = @SQL + ' FROM InvoiceOrder InvoiceOrder (NOLOCK) INNER JOIN                              
AdvertiserUsers (NOLOCK) ON InvoiceOrder.AdvertiserUserID = AdvertiserUsers.AdvertiserUserID INNER JOIN        
Advertisers (NOLOCK) ON AdvertiserUsers.AdvertiserID = Advertisers.AdvertiserID ' + @WHERE        
        
PRINT @SQL        
EXEC sp_executesql @SQL        
      
 IF USER_NAME() IS NULL                   
  BEGIN                   
   SELECT OrderId, CreatedDate, PaymentTypeID, IsPayable, IsPaid         
   FROM InvoiceOrder  (NOLOCK) WHERE 1=0                   
  END                     
        
END 
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_CustomCheckJobCreditCount"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INT  
  
 SET @AdvertiserID = (SELECT AdvertiserID FROM AdvertiserUsers NOLOCK WHERE AdvertiserUserID = @AdvertiserUserID)  
  
 DECLARE @AdvertiserUsers table(ID INT)  
  
 INSERT INTO @AdvertiserUsers   
 SELECT AdvertiserUserID FROM AdvertiserUsers NOLOCK WHERE AdvertiserID = @AdvertiserID  
  
 SET @Total = (SELECT SUM(i.TotalNumberOfJobs)   
 FROM Invoice i WITH (NOLOCK)
 INNER JOIN InvoiceOrder iorder WITH (NOLOCK)
 ON i.OrderID = iorder.OrderID
 WHERE i.AdvertiserUserID IN (SELECT ID FROM @AdvertiserUsers) AND i.JobItemTypeID = @JobItemTypeID AND iorder.Success = 1)  
 
 SET @Used = (SELECT COUNT(*) 
 FROM InvoiceItem ii WITH (NOLOCK)  
 INNER JOIN Invoice i WITH (NOLOCK)   
 ON ii.InvoiceID = i.InvoiceID
 INNER JOIN InvoiceOrder iorder WITH (NOLOCK)
 ON i.OrderID = iorder.OrderID  
 WHERE ii.AdvertiserUserID IN (SELECT ID FROM @AdvertiserUsers) AND i.JobItemTypeID = @JobItemTypeID AND (ii.JobID IS NOT NULL OR ii.JobArchiveID IS NOT NULL) AND iorder.Success = 1)  
   
 SELECT ISNULL(@Total - @Used, 0)  
END  


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Invoice table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Quantity" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [InvoiceID]
	, [AdvertiserUserID]
	, [OrderID]
	, [JobItemTypeID]
	, [TotalNumberOfJobs]
	, [TotalAmount]
	, [Description]
	, [Quantity]
    FROM
	[dbo].[Invoice]
    WHERE 
	 ([InvoiceID] = @InvoiceId OR @InvoiceId IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
	AND ([OrderID] = @OrderId OR @OrderId IS NULL)
	AND ([JobItemTypeID] = @JobItemTypeId OR @JobItemTypeId IS NULL)
	AND ([TotalNumberOfJobs] = @TotalNumberOfJobs OR @TotalNumberOfJobs IS NULL)
	AND ([TotalAmount] = @TotalAmount OR @TotalAmount IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([Quantity] = @Quantity OR @Quantity IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [InvoiceID]
	, [AdvertiserUserID]
	, [OrderID]
	, [JobItemTypeID]
	, [TotalNumberOfJobs]
	, [TotalAmount]
	, [Description]
	, [Quantity]
    FROM
	[dbo].[Invoice]
    WHERE 
	 ([InvoiceID] = @InvoiceId AND @InvoiceId is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	OR ([OrderID] = @OrderId AND @OrderId is not null)
	OR ([JobItemTypeID] = @JobItemTypeId AND @JobItemTypeId is not null)
	OR ([TotalNumberOfJobs] = @TotalNumberOfJobs AND @TotalNumberOfJobs is not null)
	OR ([TotalAmount] = @TotalAmount AND @TotalAmount is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([Quantity] = @Quantity AND @Quantity is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Invoice table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[Invoice] WITH (ROWLOCK) 
				WHERE
					[InvoiceID] = @InvoiceId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Invoice table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Invoice]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Invoice table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Quantity" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[Invoice]
				SET
					[AdvertiserUserID] = @AdvertiserUserId
					,[OrderID] = @OrderId
					,[JobItemTypeID] = @JobItemTypeId
					,[TotalNumberOfJobs] = @TotalNumberOfJobs
					,[TotalAmount] = @TotalAmount
					,[Description] = @Description
					,[Quantity] = @Quantity
				WHERE
[InvoiceID] = @InvoiceId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_GetByOrderId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Invoice table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@OrderId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceID],
					[AdvertiserUserID],
					[OrderID],
					[JobItemTypeID],
					[TotalNumberOfJobs],
					[TotalAmount],
					[Description],
					[Quantity]
				FROM
					[dbo].[Invoice]
				WHERE
					[OrderID] = @OrderId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Invoice_CustomJobCreditList"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
'Remaining'    --(Total - ISNULL(Used, 0))
 FROM @JobPackList total  
 LEFT JOIN @JobCreditsUsed used  
 ON total.JobItemTypeID = used.JobItemTypeID  
 ORDER BY Sequence  


 
END  

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobAlerts_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobAlerts table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobAlertID],
					[JobAlertName],
					[LastModified],
					[SearchKeywords],
					[RecurrenceType],
					[DailyFrequency],
					[WeeklyFrequency],
					[WeeklyDayOccurence],
					[DateLastRun],
					[DateNextRun],
					[MemberID],
					[AlertActive],
					[EmailFormat],
					[CustomRecurrenceType],
					[LastResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobAlerts_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobAlerts table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobAlertID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobAlertID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobAlertID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobAlerts]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobAlertID], O.[JobAlertName], O.[LastModified], O.[SearchKeywords], O.[RecurrenceType], O.[DailyFrequency], O.[WeeklyFrequency], O.[WeeklyDayOccurence], O.[DateLastRun], O.[DateNextRun], O.[MemberID], O.[AlertActive], O.[EmailFormat], O.[CustomRecurrenceType], O.[LastResultCount], O.[PrimaryAlert], O.[UnsubscribeValidateID], O.[EditValidateID], O.[ViewValidateID], O.[SiteID], O.[LocationID], O.[AreaIDs], O.[ProfessionID], O.[SearchRoleIDs], O.[WorkTypeIDs], O.[SalaryIDs], O.[DaysPosted], O.[GeneratedSQL], O.[SalaryLowerBand], O.[SalaryUpperBand], O.[CurrencyID], O.[SalaryTypeID], O.[CountryID]
				FROM
				    [dbo].[JobAlerts] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobAlertID] = PageIndex.[JobAlertID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobAlerts]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobAlerts_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobAlerts table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobAlertId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobAlertName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@SearchKeywords" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@RecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DailyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WeeklyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WeeklyDayOccurence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DateLastRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DateNextRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AlertActive" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomRecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastResultCount" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PrimaryAlert" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UnsubscribeValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@EditValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ViewValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@AreaIds" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ProfessionId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@SearchRoleIds" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@WorkTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@SalaryIds" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DaysPosted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneratedSql" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault=""/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobAlerts]
					(
					[JobAlertName]
					,[LastModified]
					,[SearchKeywords]
					,[RecurrenceType]
					,[DailyFrequency]
					,[WeeklyFrequency]
					,[WeeklyDayOccurence]
					,[DateLastRun]
					,[DateNextRun]
					,[MemberID]
					,[AlertActive]
					,[EmailFormat]
					,[CustomRecurrenceType]
					,[LastResultCount]
					,[PrimaryAlert]
					,[UnsubscribeValidateID]
					,[EditValidateID]
					,[ViewValidateID]
					,[SiteID]
					,[LocationID]
					,[AreaIDs]
					,[ProfessionID]
					,[SearchRoleIDs]
					,[WorkTypeIDs]
					,[SalaryIDs]
					,[DaysPosted]
					,[GeneratedSQL]
					,[SalaryLowerBand]
					,[SalaryUpperBand]
					,[CurrencyID]
					,[SalaryTypeID]
					,[CountryID]
					)
				VALUES
					(
					@JobAlertName
					,@LastModified
					,@SearchKeywords
					,@RecurrenceType
					,@DailyFrequency
					,@WeeklyFrequency
					,@WeeklyDayOccurence
					,@DateLastRun
					,@DateNextRun
					,@MemberId
					,@AlertActive
					,@EmailFormat
					,@CustomRecurrenceType
					,@LastResultCount
					,@PrimaryAlert
					,@UnsubscribeValidateId
					,@EditValidateId
					,@ViewValidateId
					,@SiteId
					,@LocationId
					,@AreaIds
					,@ProfessionId
					,@SearchRoleIds
					,@WorkTypeIds
					,@SalaryIds
					,@DaysPosted
					,@GeneratedSql
					,@SalaryLowerBand
					,@SalaryUpperBand
					,@CurrencyId
					,@SalaryTypeId
					,@CountryId
					)
				
				-- Get the identity value
				SET @JobAlertId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobAlerts_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobAlerts table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobAlertId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobAlertName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@SearchKeywords" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@RecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DailyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WeeklyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WeeklyDayOccurence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DateLastRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DateNextRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AlertActive" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CustomRecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastResultCount" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PrimaryAlert" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@UnsubscribeValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@EditValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ViewValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@AreaIds" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ProfessionId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@SearchRoleIds" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@WorkTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@SalaryIds" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DaysPosted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneratedSql" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault=""/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault=""/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CountryId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobAlerts]
				SET
					[JobAlertName] = @JobAlertName
					,[LastModified] = @LastModified
					,[SearchKeywords] = @SearchKeywords
					,[RecurrenceType] = @RecurrenceType
					,[DailyFrequency] = @DailyFrequency
					,[WeeklyFrequency] = @WeeklyFrequency
					,[WeeklyDayOccurence] = @WeeklyDayOccurence
					,[DateLastRun] = @DateLastRun
					,[DateNextRun] = @DateNextRun
					,[MemberID] = @MemberId
					,[AlertActive] = @AlertActive
					,[EmailFormat] = @EmailFormat
					,[CustomRecurrenceType] = @CustomRecurrenceType
					,[LastResultCount] = @LastResultCount
					,[PrimaryAlert] = @PrimaryAlert
					,[UnsubscribeValidateID] = @UnsubscribeValidateId
					,[EditValidateID] = @EditValidateId
					,[ViewValidateID] = @ViewValidateId
					,[SiteID] = @SiteId
					,[LocationID] = @LocationId
					,[AreaIDs] = @AreaIds
					,[ProfessionID] = @ProfessionId
					,[SearchRoleIDs] = @SearchRoleIds
					,[WorkTypeIDs] = @WorkTypeIds
					,[SalaryIDs] = @SalaryIds
					,[DaysPosted] = @DaysPosted
					,[GeneratedSQL] = @GeneratedSql
					,[SalaryLowerBand] = @SalaryLowerBand
					,[SalaryUpperBand] = @SalaryUpperBand
					,[CurrencyID] = @CurrencyId
					,[SalaryTypeID] = @SalaryTypeId
					,[CountryID] = @CountryId
				WHERE
[JobAlertID] = @JobAlertId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobAlerts_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobAlerts table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobAlertId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobAlerts] WITH (ROWLOCK) 
				WHERE
					[JobAlertID] = @JobAlertId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobAlerts_GetByCurrencyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobAlertID],
					[JobAlertName],
					[LastModified],
					[SearchKeywords],
					[RecurrenceType],
					[DailyFrequency],
					[WeeklyFrequency],
					[WeeklyDayOccurence],
					[DateLastRun],
					[DateNextRun],
					[MemberID],
					[AlertActive],
					[EmailFormat],
					[CustomRecurrenceType],
					[LastResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobAlerts_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobAlertID],
					[JobAlertName],
					[LastModified],
					[SearchKeywords],
					[RecurrenceType],
					[DailyFrequency],
					[WeeklyFrequency],
					[WeeklyDayOccurence],
					[DateLastRun],
					[DateNextRun],
					[MemberID],
					[AlertActive],
					[EmailFormat],
					[CustomRecurrenceType],
					[LastResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobAlerts_GetBySalaryTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobAlertID],
					[JobAlertName],
					[LastModified],
					[SearchKeywords],
					[RecurrenceType],
					[DailyFrequency],
					[WeeklyFrequency],
					[WeeklyDayOccurence],
					[DateLastRun],
					[DateNextRun],
					[MemberID],
					[AlertActive],
					[EmailFormat],
					[CustomRecurrenceType],
					[LastResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobAlerts_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobAlertID],
					[JobAlertName],
					[LastModified],
					[SearchKeywords],
					[RecurrenceType],
					[DailyFrequency],
					[WeeklyFrequency],
					[WeeklyDayOccurence],
					[DateLastRun],
					[DateNextRun],
					[MemberID],
					[AlertActive],
					[EmailFormat],
					[CustomRecurrenceType],
					[LastResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobAlerts_GetByJobAlertId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobAlertId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobAlertID],
					[JobAlertName],
					[LastModified],
					[SearchKeywords],
					[RecurrenceType],
					[DailyFrequency],
					[WeeklyFrequency],
					[WeeklyDayOccurence],
					[DateLastRun],
					[DateNextRun],
					[MemberID],
					[AlertActive],
					[EmailFormat],
					[CustomRecurrenceType],
					[LastResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[JobAlertID] = @JobAlertId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobAlerts_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobAlerts table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAlertId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAlertName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@SearchKeywords" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@RecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DailyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WeeklyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WeeklyDayOccurence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateLastRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateNextRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AlertActive" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomRecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastResultCount" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrimaryAlert" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UnsubscribeValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EditValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AreaIds" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ProfessionId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SearchRoleIds" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@WorkTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SalaryIds" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DaysPosted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeneratedSql" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobAlertID]
	, [JobAlertName]
	, [LastModified]
	, [SearchKeywords]
	, [RecurrenceType]
	, [DailyFrequency]
	, [WeeklyFrequency]
	, [WeeklyDayOccurence]
	, [DateLastRun]
	, [DateNextRun]
	, [MemberID]
	, [AlertActive]
	, [EmailFormat]
	, [CustomRecurrenceType]
	, [LastResultCount]
	, [PrimaryAlert]
	, [UnsubscribeValidateID]
	, [EditValidateID]
	, [ViewValidateID]
	, [SiteID]
	, [LocationID]
	, [AreaIDs]
	, [ProfessionID]
	, [SearchRoleIDs]
	, [WorkTypeIDs]
	, [SalaryIDs]
	, [DaysPosted]
	, [GeneratedSQL]
	, [SalaryLowerBand]
	, [SalaryUpperBand]
	, [CurrencyID]
	, [SalaryTypeID]
	, [CountryID]
    FROM
	[dbo].[JobAlerts]
    WHERE 
	 ([JobAlertID] = @JobAlertId OR @JobAlertId IS NULL)
	AND ([JobAlertName] = @JobAlertName OR @JobAlertName IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([SearchKeywords] = @SearchKeywords OR @SearchKeywords IS NULL)
	AND ([RecurrenceType] = @RecurrenceType OR @RecurrenceType IS NULL)
	AND ([DailyFrequency] = @DailyFrequency OR @DailyFrequency IS NULL)
	AND ([WeeklyFrequency] = @WeeklyFrequency OR @WeeklyFrequency IS NULL)
	AND ([WeeklyDayOccurence] = @WeeklyDayOccurence OR @WeeklyDayOccurence IS NULL)
	AND ([DateLastRun] = @DateLastRun OR @DateLastRun IS NULL)
	AND ([DateNextRun] = @DateNextRun OR @DateNextRun IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([AlertActive] = @AlertActive OR @AlertActive IS NULL)
	AND ([EmailFormat] = @EmailFormat OR @EmailFormat IS NULL)
	AND ([CustomRecurrenceType] = @CustomRecurrenceType OR @CustomRecurrenceType IS NULL)
	AND ([LastResultCount] = @LastResultCount OR @LastResultCount IS NULL)
	AND ([PrimaryAlert] = @PrimaryAlert OR @PrimaryAlert IS NULL)
	AND ([UnsubscribeValidateID] = @UnsubscribeValidateId OR @UnsubscribeValidateId IS NULL)
	AND ([EditValidateID] = @EditValidateId OR @EditValidateId IS NULL)
	AND ([ViewValidateID] = @ViewValidateId OR @ViewValidateId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([AreaIDs] = @AreaIds OR @AreaIds IS NULL)
	AND ([ProfessionID] = @ProfessionId OR @ProfessionId IS NULL)
	AND ([SearchRoleIDs] = @SearchRoleIds OR @SearchRoleIds IS NULL)
	AND ([WorkTypeIDs] = @WorkTypeIds OR @WorkTypeIds IS NULL)
	AND ([SalaryIDs] = @SalaryIds OR @SalaryIds IS NULL)
	AND ([DaysPosted] = @DaysPosted OR @DaysPosted IS NULL)
	AND ([GeneratedSQL] = @GeneratedSql OR @GeneratedSql IS NULL)
	AND ([SalaryLowerBand] = @SalaryLowerBand OR @SalaryLowerBand IS NULL)
	AND ([SalaryUpperBand] = @SalaryUpperBand OR @SalaryUpperBand IS NULL)
	AND ([CurrencyID] = @CurrencyId OR @CurrencyId IS NULL)
	AND ([SalaryTypeID] = @SalaryTypeId OR @SalaryTypeId IS NULL)
	AND ([CountryID] = @CountryId OR @CountryId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobAlertID]
	, [JobAlertName]
	, [LastModified]
	, [SearchKeywords]
	, [RecurrenceType]
	, [DailyFrequency]
	, [WeeklyFrequency]
	, [WeeklyDayOccurence]
	, [DateLastRun]
	, [DateNextRun]
	, [MemberID]
	, [AlertActive]
	, [EmailFormat]
	, [CustomRecurrenceType]
	, [LastResultCount]
	, [PrimaryAlert]
	, [UnsubscribeValidateID]
	, [EditValidateID]
	, [ViewValidateID]
	, [SiteID]
	, [LocationID]
	, [AreaIDs]
	, [ProfessionID]
	, [SearchRoleIDs]
	, [WorkTypeIDs]
	, [SalaryIDs]
	, [DaysPosted]
	, [GeneratedSQL]
	, [SalaryLowerBand]
	, [SalaryUpperBand]
	, [CurrencyID]
	, [SalaryTypeID]
	, [CountryID]
    FROM
	[dbo].[JobAlerts]
    WHERE 
	 ([JobAlertID] = @JobAlertId AND @JobAlertId is not null)
	OR ([JobAlertName] = @JobAlertName AND @JobAlertName is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([SearchKeywords] = @SearchKeywords AND @SearchKeywords is not null)
	OR ([RecurrenceType] = @RecurrenceType AND @RecurrenceType is not null)
	OR ([DailyFrequency] = @DailyFrequency AND @DailyFrequency is not null)
	OR ([WeeklyFrequency] = @WeeklyFrequency AND @WeeklyFrequency is not null)
	OR ([WeeklyDayOccurence] = @WeeklyDayOccurence AND @WeeklyDayOccurence is not null)
	OR ([DateLastRun] = @DateLastRun AND @DateLastRun is not null)
	OR ([DateNextRun] = @DateNextRun AND @DateNextRun is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([AlertActive] = @AlertActive AND @AlertActive is not null)
	OR ([EmailFormat] = @EmailFormat AND @EmailFormat is not null)
	OR ([CustomRecurrenceType] = @CustomRecurrenceType AND @CustomRecurrenceType is not null)
	OR ([LastResultCount] = @LastResultCount AND @LastResultCount is not null)
	OR ([PrimaryAlert] = @PrimaryAlert AND @PrimaryAlert is not null)
	OR ([UnsubscribeValidateID] = @UnsubscribeValidateId AND @UnsubscribeValidateId is not null)
	OR ([EditValidateID] = @EditValidateId AND @EditValidateId is not null)
	OR ([ViewValidateID] = @ViewValidateId AND @ViewValidateId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([AreaIDs] = @AreaIds AND @AreaIds is not null)
	OR ([ProfessionID] = @ProfessionId AND @ProfessionId is not null)
	OR ([SearchRoleIDs] = @SearchRoleIds AND @SearchRoleIds is not null)
	OR ([WorkTypeIDs] = @WorkTypeIds AND @WorkTypeIds is not null)
	OR ([SalaryIDs] = @SalaryIds AND @SalaryIds is not null)
	OR ([DaysPosted] = @DaysPosted AND @DaysPosted is not null)
	OR ([GeneratedSQL] = @GeneratedSql AND @GeneratedSql is not null)
	OR ([SalaryLowerBand] = @SalaryLowerBand AND @SalaryLowerBand is not null)
	OR ([SalaryUpperBand] = @SalaryUpperBand AND @SalaryUpperBand is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobAlerts_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobAlerts table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobAlertID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobAlertID] )
				SELECT TOP {3} [JobAlertID]
				FROM [dbo].[JobAlerts] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobAlertID], O.[JobAlertName], O.[LastModified], O.[SearchKeywords], O.[RecurrenceType], O.[DailyFrequency], O.[WeeklyFrequency], O.[WeeklyDayOccurence], O.[DateLastRun], O.[DateNextRun], O.[MemberID], O.[AlertActive], O.[EmailFormat], O.[CustomRecurrenceType], O.[LastResultCount], O.[PrimaryAlert], O.[UnsubscribeValidateID], O.[EditValidateID], O.[ViewValidateID], O.[SiteID], O.[LocationID], O.[AreaIDs], O.[ProfessionID], O.[SearchRoleIDs], O.[WorkTypeIDs], O.[SalaryIDs], O.[DaysPosted], O.[GeneratedSQL], O.[SalaryLowerBand], O.[SalaryUpperBand], O.[CurrencyID], O.[SalaryTypeID], O.[CountryID]
				FROM
				    [dbo].[JobAlerts] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobAlertID] = PageIndex.[JobAlertID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobAlerts] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobAlerts_GetByProfessionId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@ProfessionId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[ProfessionID] = @ProfessionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_GetByJobAlertId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobAlertId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[JobAlertID] = @JobAlertId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobAlerts table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobAlertId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAlertName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@SearchKeywords" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@RecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DailyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WeeklyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WeeklyDayOccurence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateLastRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateNextRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AlertActive" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomRecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastResultCount" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrimaryAlert" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UnsubscribeValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EditValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AreaIds" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ProfessionId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SearchRoleIds" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@WorkTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SalaryIds" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DaysPosted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeneratedSql" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount
					,@PrimaryAlert
					,@UnsubscribeValidateId
					,@EditValidateId
					,@ViewValidateId
					,@SiteId
					,@LocationId
					,@AreaIds
					,@ProfessionId
					,@SearchRoleIds
					,@WorkTypeIds
					,@SalaryIds
					,@DaysPosted
					,@GeneratedSql
					,@SalaryLowerBand
					,@SalaryUpperBand
					,@CurrencyId
					,@SalaryTypeId
					,@CountryId
					)
				
				-- Get the identity value
				SET @JobAlertId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_GetByLocationId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@LocationId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobAlerts table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobAlerts table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobAlerts]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_GetByCountryId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@CountryId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts] (NOLOCK)
				WHERE
					[CountryId] = @CountryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_GetAllAlertsToRunToday"  skip="true">
			<comment><![CDATA[  
  
]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tRun,      
  ja.MemberID,              
  AlertActive,              
  ja.EmailFormat,              
  UnsubscribeValidateID,              
  EditValidateID,              
  ViewValidateID,              
  ja.SiteID,              
  ja.LocationID,              
  AreaIDs,              
  ProfessionID,              
  SearchRoleIDs,              
  WorkTypeIDs,              
  SalaryIDs,              
  GeneratedSQL,              
  m.FirstName,              
  m.Surname,              
  m.EmailAddress,          
  ja.SalaryLowerBand,          
  ja.SalaryUpperBand,          
  ja.SalaryTypeId,          
  ja.CurrencyID,  
  ja.CountryID,
  m.DefaultLanguageId,          
  m.ReferringSiteID          
FROM JobAlerts ja WITH (NOLOCK)              
INNER JOIN Members m  WITH (NOLOCK)              
ON ja.MemberID = m.MemberID              
WHERE (CONVERT(date, DateNextRun) <= @today OR DateNextRun IS NULL) AND AlertActive = 1 AND ja.SiteID = @SiteID AND m.Valid = 1 AND m.Validated = 1          
END   

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobAlerts table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAlertId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAlertName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@SearchKeywords" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@RecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DailyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WeeklyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WeeklyDayOccurence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateLastRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateNextRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AlertActive" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomRecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastResultCount" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrimaryAlert" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UnsubscribeValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EditValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AreaIds" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ProfessionId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SearchRoleIds" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@WorkTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SalaryIds" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DaysPosted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeneratedSql" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount is not null)
	OR ([PrimaryAlert] = @PrimaryAlert AND @PrimaryAlert is not null)
	OR ([UnsubscribeValidateID] = @UnsubscribeValidateId AND @UnsubscribeValidateId is not null)
	OR ([EditValidateID] = @EditValidateId AND @EditValidateId is not null)
	OR ([ViewValidateID] = @ViewValidateId AND @ViewValidateId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([AreaIDs] = @AreaIds AND @AreaIds is not null)
	OR ([ProfessionID] = @ProfessionId AND @ProfessionId is not null)
	OR ([SearchRoleIDs] = @SearchRoleIds AND @SearchRoleIds is not null)
	OR ([WorkTypeIDs] = @WorkTypeIds AND @WorkTypeIds is not null)
	OR ([SalaryIDs] = @SalaryIds AND @SalaryIds is not null)
	OR ([DaysPosted] = @DaysPosted AND @DaysPosted is not null)
	OR ([GeneratedSQL] = @GeneratedSql AND @GeneratedSql is not null)
	OR ([SalaryLowerBand] = @SalaryLowerBand AND @SalaryLowerBand is not null)
	OR ([SalaryUpperBand] = @SalaryUpperBand AND @SalaryUpperBand is not null)
	OR ([CurrencyID] = @CurrencyId AND @CurrencyId is not null)
	OR ([SalaryTypeID] = @SalaryTypeId AND @SalaryTypeId is not null)
	OR ([CountryID] = @CountryId AND @CountryId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobAlerts table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobAlertId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobAlerts] WITH (ROWLOCK) 
				WHERE
					[JobAlertID] = @JobAlertId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_GetBySalaryTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[SalaryTypeID] = @SalaryTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobAlerts table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobAlertId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAlertName" type="nvarchar" direction="Input" size="510" precision="0" scale="0" param="(510)" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@SearchKeywords" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@RecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DailyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WeeklyFrequency" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WeeklyDayOccurence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DateLastRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DateNextRun" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AlertActive" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EmailFormat" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CustomRecurrenceType" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastResultCount" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrimaryAlert" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UnsubscribeValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@EditValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ViewValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LocationId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@AreaIds" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ProfessionId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SearchRoleIds" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@WorkTypeIds" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SalaryIds" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DaysPosted" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeneratedSql" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" nulldefault="null"/>
				<parameter name="@SalaryLowerBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@SalaryUpperBand" type="numeric" direction="Input" size="9" precision="15" scale="2" param="(15, 2)" nulldefault="null"/>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SalaryTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CountryId" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount
					,[PrimaryAlert] = @PrimaryAlert
					,[UnsubscribeValidateID] = @UnsubscribeValidateId
					,[EditValidateID] = @EditValidateId
					,[ViewValidateID] = @ViewValidateId
					,[SiteID] = @SiteId
					,[LocationID] = @LocationId
					,[AreaIDs] = @AreaIds
					,[ProfessionID] = @ProfessionId
					,[SearchRoleIDs] = @SearchRoleIds
					,[WorkTypeIDs] = @WorkTypeIds
					,[SalaryIDs] = @SalaryIds
					,[DaysPosted] = @DaysPosted
					,[GeneratedSQL] = @GeneratedSql
					,[SalaryLowerBand] = @SalaryLowerBand
					,[SalaryUpperBand] = @SalaryUpperBand
					,[CurrencyID] = @CurrencyId
					,[SalaryTypeID] = @SalaryTypeId
					,[CountryID] = @CountryId
				WHERE
[JobAlertID] = @JobAlertId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_CustomGetMemberReport"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@siteid" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@datefrom" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@dateto" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified < DATEADD(DAY, 1, @dateto) OR @dateto IS NULL)


END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobAlerts_GetByCurrencyId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobAlerts table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@CurrencyId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tResultCount],
					[PrimaryAlert],
					[UnsubscribeValidateID],
					[EditValidateID],
					[ViewValidateID],
					[SiteID],
					[LocationID],
					[AreaIDs],
					[ProfessionID],
					[SearchRoleIDs],
					[WorkTypeIDs],
					[SalaryIDs],
					[DaysPosted],
					[GeneratedSQL],
					[SalaryLowerBand],
					[SalaryUpperBand],
					[CurrencyID],
					[SalaryTypeID],
					[CountryID]
				FROM
					[dbo].[JobAlerts]
				WHERE
					[CurrencyID] = @CurrencyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="InvoiceItem_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the InvoiceItem table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="InvoiceItem_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the InvoiceItem table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [InvoiceItemID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([InvoiceItemID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [InvoiceItemID]'
				SET @SQL = @SQL + ' FROM [dbo].[InvoiceItem]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[InvoiceItemID], O.[InvoiceID], O.[JobID], O.[JobArchiveID], O.[CreatedDate], O.[AdvertiserUserID]
				FROM
				    [dbo].[InvoiceItem] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[InvoiceItemID] = PageIndex.[InvoiceItemID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[InvoiceItem]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="InvoiceItem_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the InvoiceItem table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@InvoiceItemId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[InvoiceItem]
					(
					[InvoiceID]
					,[JobID]
					,[JobArchiveID]
					,[CreatedDate]
					,[AdvertiserUserID]
					)
				VALUES
					(
					@InvoiceId
					,@JobId
					,@JobArchiveId
					,@CreatedDate
					,@AdvertiserUserId
					)
				
				-- Get the identity value
				SET @InvoiceItemId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceItem_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the InvoiceItem table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@InvoiceItemId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[InvoiceItem]
				SET
					[InvoiceID] = @InvoiceId
					,[JobID] = @JobId
					,[JobArchiveID] = @JobArchiveId
					,[CreatedDate] = @CreatedDate
					,[AdvertiserUserID] = @AdvertiserUserId
				WHERE
[InvoiceItemID] = @InvoiceItemId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceItem_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the InvoiceItem table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@InvoiceItemId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[InvoiceItem] WITH (ROWLOCK) 
				WHERE
					[InvoiceItemID] = @InvoiceItemId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceItem_GetByAdvertiserUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceItem_GetByInvoiceId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[InvoiceID] = @InvoiceId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceItem_GetByJobArchiveId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[JobArchiveID] = @JobArchiveId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceItem_GetByJobId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[JobID] = @JobId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="InvoiceItem_GetByInvoiceItemId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@InvoiceItemId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[InvoiceItemID] = @InvoiceItemId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="InvoiceItem_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the InvoiceItem table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvoiceItemId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [InvoiceItemID]
	, [InvoiceID]
	, [JobID]
	, [JobArchiveID]
	, [CreatedDate]
	, [AdvertiserUserID]
    FROM
	[dbo].[InvoiceItem]
    WHERE 
	 ([InvoiceItemID] = @InvoiceItemId OR @InvoiceItemId IS NULL)
	AND ([InvoiceID] = @InvoiceId OR @InvoiceId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [InvoiceItemID]
	, [InvoiceID]
	, [JobID]
	, [JobArchiveID]
	, [CreatedDate]
	, [AdvertiserUserID]
    FROM
	[dbo].[InvoiceItem]
    WHERE 
	 ([InvoiceItemID] = @InvoiceItemId AND @InvoiceItemId is not null)
	OR ([InvoiceID] = @InvoiceId AND @InvoiceId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="InvoiceItem_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the InvoiceItem table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [InvoiceItemID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [InvoiceItemID] )
				SELECT TOP {3} [InvoiceItemID]
				FROM [dbo].[InvoiceItem] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[InvoiceItemID], O.[InvoiceID], O.[JobID], O.[JobArchiveID], O.[CreatedDate], O.[AdvertiserUserID]
				FROM
				    [dbo].[InvoiceItem] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[InvoiceItemID] = PageIndex.[InvoiceItemID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[InvoiceItem] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="InvoiceItem_GetByJobId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[JobID] = @JobId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_GetByAdvertiserUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_GetByInvoiceId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[InvoiceID] = @InvoiceId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the InvoiceItem table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@InvoiceItemId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[InvoiceItem]
					(
					[InvoiceID]
					,[JobID]
					,[JobArchiveID]
					,[CreatedDate]
					,[AdvertiserUserID]
					)
				VALUES
					(
					@InvoiceId
					,@JobId
					,@JobArchiveId
					,@CreatedDate
					,@AdvertiserUserId
					)
				
				-- Get the identity value
				SET @InvoiceItemId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the InvoiceItem table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the InvoiceItem table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[InvoiceItem]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_GetByInvoiceItemId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@InvoiceItemId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[InvoiceItemID] = @InvoiceItemId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the InvoiceItem table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@InvoiceItemId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[InvoiceItem]
				SET
					[InvoiceID] = @InvoiceId
					,[JobID] = @JobId
					,[JobArchiveID] = @JobArchiveId
					,[CreatedDate] = @CreatedDate
					,[AdvertiserUserID] = @AdvertiserUserId
				WHERE
[InvoiceItemID] = @InvoiceItemId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_CustomJobBoardAccountPostJob"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@JobID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TaxRate" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@CurrencyID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DiscountGST" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN     
 DECLARE @IsPayable BIT = 0    
 DECLARE @IsPaid BIT = 0    
 DECLARE @PaymentTypeID INT = 1 -- Account Type ID = 1  
 DECLARE @Success INT = 1 -- Job Success   
 DECLARE @DatePaid DATETIME = NULL    
 DECLARE @TotalAmount DECIMAL(18, 2)  
 DECLARE @JobItemTypeParentID INT  
 DECLARE @JobItemTypeDescription NVARCHAR(1024)  
 DECLARE @SiteID INT = (SELECT SiteID FROM Jobs NOLOCK WHERE JobID = @JobID)
 DECLARE @InvoiceItemID INT = (SELECT TOP 1 InvoiceItemID FROM InvoiceItem NOLOCK WHERE JobID = @JobID OR JobArchiveID = @JobID)
 
 IF @InvoiceItemID IS NULL
 BEGIN
    
	 SELECT @TotalAmount= TotalAmount, @JobItemTypeParentID = JobItemTypeParentID, @JobItemTypeDescription = JobItemTypeDescription FROM JobItemsType (NOLOCK) WHERE JobItemTypeParentID = @JobItemTypeID AND SiteID = @SiteID 
    
	 IF (@TotalAmount + (@TotalAmount * @TaxRate)) > 0    
	 BEGIN    
	  SET @IsPayable = 1    
	 END    
	 ELSE    
	 BEGIN    
	  SET @IsPayable = 0    
	  SET @IsPaid = 1    
	  SET @DatePaid = GETDATE()    
	 END    
	 -- Insert into InvoiceOrder    
	 INSERT INTO InvoiceOrder(AdvertiserUserID,     
		   CreatedDate,     
		   PaymentTypeID,     
		   IsPayable,     
		   IsPaid,     
		   DatePaid,     
		   PaidByAdvertiserUserID,     
		   TotalAmount,     
		   GST,     
		   CurrencyID,     
		   DiscountAmount,     
		   DiscountGST,     
		   Success)    
	 VALUES(@AdvertiserUserID, GETDATE(), @PaymentTypeID, @IsPayable, @IsPaid, @DatePaid, @AdvertiserUserID,   
	   @TotalAmount, (@TotalAmount * @TaxRate), @CurrencyID, @DiscountAmount, @DiscountGST, @Success)    
    
	 DECLARE @OrderID INT = @@IDENTITY    
    
	 -- Insert into Invoice    
	 INSERT INTO Invoice(AdvertiserUserID,    
		  OrderID,    
		  JobItemTypeID,    
		  TotalNumberOfJobs,    
		  TotalAmount,    
		  [Description])    
	 VALUES (@AdvertiserUserID, @OrderID, @JobItemTypeID, 1, @TotalAmount, @JobItemTypeDescription)    
    
	 DECLARE @InvoiceID INT = @@IDENTITY    
    
	 -- Insert into InvoiceItem    
	 INSERT INTO InvoiceItem(InvoiceID,    
		   JobID,    
		   JobArchiveID,    
		   CreatedDate,    
		   AdvertiserUserID)    
	 VALUES(@InvoiceID, @JobID, NULL, GETDATE(), @AdvertiserUserID)    
	END 
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the InvoiceItem table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvoiceItemId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@InvoiceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [InvoiceItemID]
	, [InvoiceID]
	, [JobID]
	, [JobArchiveID]
	, [CreatedDate]
	, [AdvertiserUserID]
    FROM
	[dbo].[InvoiceItem]
    WHERE 
	 ([InvoiceItemID] = @InvoiceItemId OR @InvoiceItemId IS NULL)
	AND ([InvoiceID] = @InvoiceId OR @InvoiceId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [InvoiceItemID]
	, [InvoiceID]
	, [JobID]
	, [JobArchiveID]
	, [CreatedDate]
	, [AdvertiserUserID]
    FROM
	[dbo].[InvoiceItem]
    WHERE 
	 ([InvoiceItemID] = @InvoiceItemId AND @InvoiceItemId is not null)
	OR ([InvoiceID] = @InvoiceId AND @InvoiceId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the InvoiceItem table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@InvoiceItemId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[InvoiceItem] WITH (ROWLOCK) 
				WHERE
					[InvoiceItemID] = @InvoiceItemId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_GetByJobArchiveId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the InvoiceItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[InvoiceItemID],
					[InvoiceID],
					[JobID],
					[JobArchiveID],
					[CreatedDate],
					[AdvertiserUserID]
				FROM
					[dbo].[InvoiceItem]
				WHERE
					[JobArchiveID] = @JobArchiveId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="InvoiceItem_CustomPayJob"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@JobID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INT
 
		SET @JobItemTypeID = (SELECT JobItemTypeID FROM Jobs NOLOCK WHERE JobID = @JobID)
		SET @AdvertiserID = (SELECT AdvertiserID FROM Jobs NOLOCK WHERE JobID = @JobID)
		SET @SiteID = (SELECT SiteID FROM Advertisers NOLOCK WHERE AdvertiserID = @AdvertiserID)

		DECLARE @AdvertiserUsers table(ID INT)

		INSERT INTO @AdvertiserUsers 
		SELECT AdvertiserUserID FROM AdvertiserUsers NOLOCK WHERE AdvertiserID = @AdvertiserID

		SET @InvoiceItemID = (SELECT TOP 1 ii.InvoiceItemID
		FROM JobItemsType jit WITH (NOLOCK)
		LEFT JOIN Invoice i WITH (NOLOCK)
		ON i.JobItemTypeID = jit.JobItemTypeParentID AND AdvertiserUserID IN (SELECT ID FROM @AdvertiserUsers)
		INNER JOIN InvoiceItem ii WITH (NOLOCK) 
		ON ii.InvoiceID = i.InvoiceID AND JobID IS NULL AND JobArchiveID IS NULL	
		WHERE SiteID = @SiteID And jit.TotalNumberOfJobs = 1 And Valid = 1 AND i.JobItemTypeID = @JobItemTypeID)

		IF @InvoiceItemID IS NULL
		BEGIN
			SELECT 'No Job Credit'	
		END
		ELSE
		BEGIN
			UPDATE InvoiceItem SET JobID = @JobID, CreatedDate = GETDATE() WHERE InvoiceItemID = @InvoiceItemID
			SELECT 'Success'	
		END
	END
	ELSE
	BEGIN	
		SELECT 'Job Exists'	
	END
END


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobApplication_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobApplication table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobApplicationID],
					[ApplicationDate],
					[JobID],
					[MemberID],
					[MemberResumeFile],
					[MemberCoverLetterFile],
					[ApplicationStatus],
					[JobAppValidateID],
					[SiteID_Referral],
					[URL_Referral],
					[ApplicantGrade],
					[LastViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobApplication_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobApplication table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobApplicationID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobApplicationID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobApplicationID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobApplication]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobApplicationID], O.[ApplicationDate], O.[JobID], O.[MemberID], O.[MemberResumeFile], O.[MemberCoverLetterFile], O.[ApplicationStatus], O.[JobAppValidateID], O.[SiteID_Referral], O.[URL_Referral], O.[ApplicantGrade], O.[LastViewedDate], O.[FirstName], O.[Surname], O.[EmailAddress], O.[MobilePhone], O.[MemberNote], O.[AdvertiserNote], O.[JobArchiveID], O.[Draft], O.[JobApplicationTypeID], O.[ExternalXMLFilename], O.[CustomQuestionnaireXML], O.[ExternalPDFFilename], O.[FileDownloaded], O.[AppliedWith], O.[ScreeningQuestionaireXML], O.[ScreeningQuestionsGuid]
				FROM
				    [dbo].[JobApplication] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobApplicationID] = PageIndex.[JobApplicationID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobApplication]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobApplication_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobApplication table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberResumeFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MemberCoverLetterFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ApplicationStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobAppValidateId" type="uniqueidentifier" direction="Output" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteIdReferral" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UrlReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ApplicantGrade" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastViewedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@MemberNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@AdvertiserNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Draft" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExternalXmlFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CustomQuestionnaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ExternalPdfFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FileDownloaded" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AppliedWith" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ScreeningQuestionaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ScreeningQuestionsGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobApplication]
					(
					[ApplicationDate]
					,[JobID]
					,[MemberID]
					,[MemberResumeFile]
					,[MemberCoverLetterFile]
					,[ApplicationStatus]
					,[JobAppValidateID]
					,[SiteID_Referral]
					,[URL_Referral]
					,[ApplicantGrade]
					,[LastViewedDate]
					,[FirstName]
					,[Surname]
					,[EmailAddress]
					,[MobilePhone]
					,[MemberNote]
					,[AdvertiserNote]
					,[JobArchiveID]
					,[Draft]
					,[JobApplicationTypeID]
					,[ExternalXMLFilename]
					,[CustomQuestionnaireXML]
					,[ExternalPDFFilename]
					,[FileDownloaded]
					,[AppliedWith]
					,[ScreeningQuestionaireXML]
					,[ScreeningQuestionsGuid]
					)
				VALUES
					(
					@ApplicationDate
					,@JobId
					,@MemberId
					,@MemberResumeFile
					,@MemberCoverLetterFile
					,@ApplicationStatus
					,@JobAppValidateId
					,@SiteIdReferral
					,@UrlReferral
					,@ApplicantGrade
					,@LastViewedDate
					,@FirstName
					,@Surname
					,@EmailAddress
					,@MobilePhone
					,@MemberNote
					,@AdvertiserNote
					,@JobArchiveId
					,@Draft
					,@JobApplicationTypeId
					,@ExternalXmlFilename
					,@CustomQuestionnaireXml
					,@ExternalPdfFilename
					,@FileDownloaded
					,@AppliedWith
					,@ScreeningQuestionaireXml
					,@ScreeningQuestionsGuid
					)
				
				-- Get the identity value
				SET @JobApplicationId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplication_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobApplication table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ApplicationDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberResumeFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MemberCoverLetterFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ApplicationStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobAppValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteIdReferral" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UrlReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ApplicantGrade" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastViewedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault=""/>
				<parameter name="@MemberNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@AdvertiserNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Draft" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ExternalXmlFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CustomQuestionnaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ExternalPdfFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FileDownloaded" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AppliedWith" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ScreeningQuestionaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ScreeningQuestionsGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobApplication]
				SET
					[ApplicationDate] = @ApplicationDate
					,[JobID] = @JobId
					,[MemberID] = @MemberId
					,[MemberResumeFile] = @MemberResumeFile
					,[MemberCoverLetterFile] = @MemberCoverLetterFile
					,[ApplicationStatus] = @ApplicationStatus
					,[JobAppValidateID] = @JobAppValidateId
					,[SiteID_Referral] = @SiteIdReferral
					,[URL_Referral] = @UrlReferral
					,[ApplicantGrade] = @ApplicantGrade
					,[LastViewedDate] = @LastViewedDate
					,[FirstName] = @FirstName
					,[Surname] = @Surname
					,[EmailAddress] = @EmailAddress
					,[MobilePhone] = @MobilePhone
					,[MemberNote] = @MemberNote
					,[AdvertiserNote] = @AdvertiserNote
					,[JobArchiveID] = @JobArchiveId
					,[Draft] = @Draft
					,[JobApplicationTypeID] = @JobApplicationTypeId
					,[ExternalXMLFilename] = @ExternalXmlFilename
					,[CustomQuestionnaireXML] = @CustomQuestionnaireXml
					,[ExternalPDFFilename] = @ExternalPdfFilename
					,[FileDownloaded] = @FileDownloaded
					,[AppliedWith] = @AppliedWith
					,[ScreeningQuestionaireXML] = @ScreeningQuestionaireXml
					,[ScreeningQuestionsGuid] = @ScreeningQuestionsGuid
				WHERE
[JobApplicationID] = @JobApplicationId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplication_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobApplication table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobApplication] WITH (ROWLOCK) 
				WHERE
					[JobApplicationID] = @JobApplicationId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplication_GetBySiteIdReferral" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteIdReferral" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobApplicationID],
					[ApplicationDate],
					[JobID],
					[MemberID],
					[MemberResumeFile],
					[MemberCoverLetterFile],
					[ApplicationStatus],
					[JobAppValidateID],
					[SiteID_Referral],
					[URL_Referral],
					[ApplicantGrade],
					[LastViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[SiteID_Referral] = @SiteIdReferral
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplication_GetByJobArchiveId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobApplicationID],
					[ApplicationDate],
					[JobID],
					[MemberID],
					[MemberResumeFile],
					[MemberCoverLetterFile],
					[ApplicationStatus],
					[JobAppValidateID],
					[SiteID_Referral],
					[URL_Referral],
					[ApplicantGrade],
					[LastViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[JobArchiveID] = @JobArchiveId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobApplication_GetByJobId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobApplicationID],
					[ApplicationDate],
					[JobID],
					[MemberID],
					[MemberResumeFile],
					[MemberCoverLetterFile],
					[ApplicationStatus],
					[JobAppValidateID],
					[SiteID_Referral],
					[URL_Referral],
					[ApplicantGrade],
					[LastViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobApplication_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobApplicationID],
					[ApplicationDate],
					[JobID],
					[MemberID],
					[MemberResumeFile],
					[MemberCoverLetterFile],
					[ApplicationStatus],
					[JobAppValidateID],
					[SiteID_Referral],
					[URL_Referral],
					[ApplicantGrade],
					[LastViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[MemberID] = @MemberId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobApplication_GetByJobApplicationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobApplicationID],
					[ApplicationDate],
					[JobID],
					[MemberID],
					[MemberResumeFile],
					[MemberCoverLetterFile],
					[ApplicationStatus],
					[JobAppValidateID],
					[SiteID_Referral],
					[URL_Referral],
					[ApplicantGrade],
					[LastViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[JobApplicationID] = @JobApplicationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobApplication_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobApplication table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberResumeFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MemberCoverLetterFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicationStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAppValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteIdReferral" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UrlReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicantGrade" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastViewedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@MemberNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@AdvertiserNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Draft" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalXmlFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomQuestionnaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ExternalPdfFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileDownloaded" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AppliedWith" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobApplicationID]
	, [ApplicationDate]
	, [JobID]
	, [MemberID]
	, [MemberResumeFile]
	, [MemberCoverLetterFile]
	, [ApplicationStatus]
	, [JobAppValidateID]
	, [SiteID_Referral]
	, [URL_Referral]
	, [ApplicantGrade]
	, [LastViewedDate]
	, [FirstName]
	, [Surname]
	, [EmailAddress]
	, [MobilePhone]
	, [MemberNote]
	, [AdvertiserNote]
	, [JobArchiveID]
	, [Draft]
	, [JobApplicationTypeID]
	, [ExternalXMLFilename]
	, [CustomQuestionnaireXML]
	, [ExternalPDFFilename]
	, [FileDownloaded]
	, [AppliedWith]
	, [ScreeningQuestionaireXML]
	, [ScreeningQuestionsGuid]
    FROM
	[dbo].[JobApplication]
    WHERE 
	 ([JobApplicationID] = @JobApplicationId OR @JobApplicationId IS NULL)
	AND ([ApplicationDate] = @ApplicationDate OR @ApplicationDate IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([MemberResumeFile] = @MemberResumeFile OR @MemberResumeFile IS NULL)
	AND ([MemberCoverLetterFile] = @MemberCoverLetterFile OR @MemberCoverLetterFile IS NULL)
	AND ([ApplicationStatus] = @ApplicationStatus OR @ApplicationStatus IS NULL)
	AND ([JobAppValidateID] = @JobAppValidateId OR @JobAppValidateId IS NULL)
	AND ([SiteID_Referral] = @SiteIdReferral OR @SiteIdReferral IS NULL)
	AND ([URL_Referral] = @UrlReferral OR @UrlReferral IS NULL)
	AND ([ApplicantGrade] = @ApplicantGrade OR @ApplicantGrade IS NULL)
	AND ([LastViewedDate] = @LastViewedDate OR @LastViewedDate IS NULL)
	AND ([FirstName] = @FirstName OR @FirstName IS NULL)
	AND ([Surname] = @Surname OR @Surname IS NULL)
	AND ([EmailAddress] = @EmailAddress OR @EmailAddress IS NULL)
	AND ([MobilePhone] = @MobilePhone OR @MobilePhone IS NULL)
	AND ([MemberNote] = @MemberNote OR @MemberNote IS NULL)
	AND ([AdvertiserNote] = @AdvertiserNote OR @AdvertiserNote IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([Draft] = @Draft OR @Draft IS NULL)
	AND ([JobApplicationTypeID] = @JobApplicationTypeId OR @JobApplicationTypeId IS NULL)
	AND ([ExternalXMLFilename] = @ExternalXmlFilename OR @ExternalXmlFilename IS NULL)
	AND ([CustomQuestionnaireXML] = @CustomQuestionnaireXml OR @CustomQuestionnaireXml IS NULL)
	AND ([ExternalPDFFilename] = @ExternalPdfFilename OR @ExternalPdfFilename IS NULL)
	AND ([FileDownloaded] = @FileDownloaded OR @FileDownloaded IS NULL)
	AND ([AppliedWith] = @AppliedWith OR @AppliedWith IS NULL)
	AND ([ScreeningQuestionaireXML] = @ScreeningQuestionaireXml OR @ScreeningQuestionaireXml IS NULL)
	AND ([ScreeningQuestionsGuid] = @ScreeningQuestionsGuid OR @ScreeningQuestionsGuid IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobApplicationID]
	, [ApplicationDate]
	, [JobID]
	, [MemberID]
	, [MemberResumeFile]
	, [MemberCoverLetterFile]
	, [ApplicationStatus]
	, [JobAppValidateID]
	, [SiteID_Referral]
	, [URL_Referral]
	, [ApplicantGrade]
	, [LastViewedDate]
	, [FirstName]
	, [Surname]
	, [EmailAddress]
	, [MobilePhone]
	, [MemberNote]
	, [AdvertiserNote]
	, [JobArchiveID]
	, [Draft]
	, [JobApplicationTypeID]
	, [ExternalXMLFilename]
	, [CustomQuestionnaireXML]
	, [ExternalPDFFilename]
	, [FileDownloaded]
	, [AppliedWith]
	, [ScreeningQuestionaireXML]
	, [ScreeningQuestionsGuid]
    FROM
	[dbo].[JobApplication]
    WHERE 
	 ([JobApplicationID] = @JobApplicationId AND @JobApplicationId is not null)
	OR ([ApplicationDate] = @ApplicationDate AND @ApplicationDate is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([MemberResumeFile] = @MemberResumeFile AND @MemberResumeFile is not null)
	OR ([MemberCoverLetterFile] = @MemberCoverLetterFile AND @MemberCoverLetterFile is not null)
	OR ([ApplicationStatus] = @ApplicationStatus AND @ApplicationStatus is not null)
	OR ([JobAppValidateID] = @JobAppValidateId AND @JobAppValidateId is not null)
	OR ([SiteID_Referral] = @SiteIdReferral AND @SiteIdReferral is not null)
	OR ([URL_Referral] = @UrlReferral AND @UrlReferral is not null)
	OR ([ApplicantGrade] = @ApplicantGrade AND @ApplicantGrade is not null)
	OR ([LastViewedDate] = @LastViewedDate AND @LastViewedDate is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([Surname] = @Surname AND @Surname is not null)
	OR ([EmailAddress] = @EmailAddress AND @EmailAddress is not null)
	OR ([MobilePhone] = @MobilePhone AND @MobilePhone is not null)
	OR ([MemberNote] = @MemberNote AND @MemberNote is not null)
	OR ([AdvertiserNote] = @AdvertiserNote AND @AdvertiserNote is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([Draft] = @Draft AND @Draft is not null)
	OR ([JobApplicationTypeID] = @JobApplicationTypeId AND @JobApplicationTypeId is not null)
	OR ([ExternalXMLFilename] = @ExternalXmlFilename AND @ExternalXmlFilename is not null)
	OR ([CustomQuestionnaireXML] = @CustomQuestionnaireXml AND @CustomQuestionnaireXml is not null)
	OR ([ExternalPDFFilename] = @ExternalPdfFilename AND @ExternalPdfFilename is not null)
	OR ([FileDownloaded] = @FileDownloaded AND @FileDownloaded is not null)
	OR ([AppliedWith] = @AppliedWith AND @AppliedWith is not null)
	OR ([ScreeningQuestionaireXML] = @ScreeningQuestionaireXml AND @ScreeningQuestionaireXml is not null)
	OR ([ScreeningQuestionsGuid] = @ScreeningQuestionsGuid AND @ScreeningQuestionsGuid is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobApplication_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobApplication table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobApplicationID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobApplicationID] )
				SELECT TOP {3} [JobApplicationID]
				FROM [dbo].[JobApplication] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobApplicationID], O.[ApplicationDate], O.[JobID], O.[MemberID], O.[MemberResumeFile], O.[MemberCoverLetterFile], O.[ApplicationStatus], O.[JobAppValidateID], O.[SiteID_Referral], O.[URL_Referral], O.[ApplicantGrade], O.[LastViewedDate], O.[FirstName], O.[Surname], O.[EmailAddress], O.[MobilePhone], O.[MemberNote], O.[AdvertiserNote], O.[JobArchiveID], O.[Draft], O.[JobApplicationTypeID], O.[ExternalXMLFilename], O.[CustomQuestionnaireXML], O.[ExternalPDFFilename], O.[FileDownloaded], O.[AppliedWith], O.[ScreeningQuestionaireXML], O.[ScreeningQuestionsGuid]
				FROM
				    [dbo].[JobApplication] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobApplicationID] = PageIndex.[JobApplicationID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobApplication] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobApplication_GetByAdvertiserIdJobId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount                  
     FROM PageIndex                  
     WHERE RowIndex >= @PageStart                        
     AND RowIndex <= @PageEnd                        
     ORDER BY RowIndex                   
                     
    END  
    

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[MemberID] = @MemberId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_CustomGetByJobIdMemberId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@JobID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate],      
[FirstName],      
[Surname],      
[EmailAddress],      
[MobilePhone],      
[MemberNote],      
[AdvertiserNote],      
[JobArchiveID],      
[Draft],      
[JobApplicationTypeID],      
[ExternalXMLFilename],      
[ExternalPDFFilename],      
[CustomQuestionnaireXML],    
[FileDownloaded],
AppliedWith,
ScreeningQuestionaireXML,
ScreeningQuestionsGuid
FROM JobApplication WITH (NOLOCK)          
WHERE JobID = @JobID AND MemberID = @MemberID          
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobApplication table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberResumeFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MemberCoverLetterFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicationStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAppValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteIdReferral" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UrlReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicantGrade" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastViewedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@MemberNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@AdvertiserNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Draft" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalXmlFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomQuestionnaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ExternalPdfFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileDownloaded" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AppliedWith" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([Surname] = @Surname AND @Surname is not null)
	OR ([EmailAddress] = @EmailAddress AND @EmailAddress is not null)
	OR ([MobilePhone] = @MobilePhone AND @MobilePhone is not null)
	OR ([MemberNote] = @MemberNote AND @MemberNote is not null)
	OR ([AdvertiserNote] = @AdvertiserNote AND @AdvertiserNote is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([Draft] = @Draft AND @Draft is not null)
	OR ([JobApplicationTypeID] = @JobApplicationTypeId AND @JobApplicationTypeId is not null)
	OR ([ExternalXMLFilename] = @ExternalXmlFilename AND @ExternalXmlFilename is not null)
	OR ([CustomQuestionnaireXML] = @CustomQuestionnaireXml AND @CustomQuestionnaireXml is not null)
	OR ([ExternalPDFFilename] = @ExternalPdfFilename AND @ExternalPdfFilename is not null)
	OR ([FileDownloaded] = @FileDownloaded AND @FileDownloaded is not null)
	OR ([AppliedWith] = @AppliedWith AND @AppliedWith is not null)
	OR ([ScreeningQuestionaireXML] = @ScreeningQuestionaireXml AND @ScreeningQuestionaireXml is not null)
	OR ([ScreeningQuestionsGuid] = @ScreeningQuestionsGuid AND @ScreeningQuestionsGuid is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobApplication table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberResumeFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MemberCoverLetterFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicationStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAppValidateId" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteIdReferral" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UrlReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicantGrade" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastViewedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@MemberNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@AdvertiserNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Draft" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalXmlFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomQuestionnaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ExternalPdfFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileDownloaded" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AppliedWith" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate
					,[FirstName] = @FirstName
					,[Surname] = @Surname
					,[EmailAddress] = @EmailAddress
					,[MobilePhone] = @MobilePhone
					,[MemberNote] = @MemberNote
					,[AdvertiserNote] = @AdvertiserNote
					,[JobArchiveID] = @JobArchiveId
					,[Draft] = @Draft
					,[JobApplicationTypeID] = @JobApplicationTypeId
					,[ExternalXMLFilename] = @ExternalXmlFilename
					,[CustomQuestionnaireXML] = @CustomQuestionnaireXml
					,[ExternalPDFFilename] = @ExternalPdfFilename
					,[FileDownloaded] = @FileDownloaded
					,[AppliedWith] = @AppliedWith
					,[ScreeningQuestionaireXML] = @ScreeningQuestionaireXml
					,[ScreeningQuestionsGuid] = @ScreeningQuestionsGuid
				WHERE
[JobApplicationID] = @JobApplicationId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_GetByJobId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_GetByJobApplicationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[JobApplicationID] = @JobApplicationId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_CustomGetJobApplicationDetails"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@ApplicationDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ApplicationDate
	FROM 
		JobApplication ja (NOLOCK) INNER JOIN JobsArchive j (NOLOCK)            
			ON ja.JobArchiveID = j.JobID AND j.SiteID = @SiteID
		INNER JOIN Advertisers a (NOLOCK) ON a.AdvertiserID = j.AdvertiserID
	WHERE CONVERT(DATE, ApplicationDate) = @AppDate AND ISNULL(ja.Draft,0) = 0  
	
END


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobApplication table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobApplication] WITH (ROWLOCK) 
				WHERE
					[JobApplicationID] = @JobApplicationId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_GetByAdvertiserIdJobArchiveId"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount            
     FROM PageIndex            
     WHERE RowIndex >= @PageStart                  
     AND RowIndex <= @PageEnd                  
     ORDER BY RowIndex             
               
    END  

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_GetJobsNameByMemberId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@MemberID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount                  
FROM    JobApplicationJobNameByMember WITH (NOLOCK)                   
WHERE   MemberID = @MemberID                  
 AND RowNumber >= @PageStart                        
 AND RowNumber <= @PageEnd                        
ORDER BY RowNumber                  
                  
END   


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobApplication table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ApplicationDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberResumeFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MemberCoverLetterFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicationStatus" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAppValidateId" type="uniqueidentifier" direction="InputOutput" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteIdReferral" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UrlReferral" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ApplicantGrade" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastViewedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Surname" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@EmailAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="char" direction="Input" size="40" precision="0" scale="0" param="(40)" nulldefault="null"/>
				<parameter name="@MemberNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@AdvertiserNote" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Draft" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalXmlFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CustomQuestionnaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ExternalPdfFilename" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@FileDownloaded" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AppliedWith" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionaireXml" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ScreeningQuestionsGuid" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate
					,@FirstName
					,@Surname
					,@EmailAddress
					,@MobilePhone
					,@MemberNote
					,@AdvertiserNote
					,@JobArchiveId
					,@Draft
					,@JobApplicationTypeId
					,@ExternalXmlFilename
					,@CustomQuestionnaireXml
					,@ExternalPdfFilename
					,@FileDownloaded
					,@AppliedWith
					,@ScreeningQuestionaireXml
					,@ScreeningQuestionsGuid
					)
				
				-- Get the identity value
				SET @JobApplicationId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_GetBySiteIdReferral"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteIdReferral" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[SiteID_Referral] = @SiteIdReferral
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_GetByAdvertiserId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount
				 FROM PageIndex
				 WHERE RowIndex >= @PageStart      
				 AND	RowIndex <= @PageEnd      
				 ORDER BY RowIndex 
			
				END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_GetByJobArchiveId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplication table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
				WHERE
					[JobArchiveID] = @JobArchiveId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobApplication table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobApplication]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_CustomGetDraftJobsByMemberId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@MemberID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalCount                  
FROM    JobApplicationJobNameByMember WITH (NOLOCK)                   
WHERE   MemberID = @MemberID                  
 AND RowNumber >= @PageStart                        
 AND RowNumber <= @PageEnd                        
ORDER BY RowNumber                   
                  
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_CustomGetNewJobApplications"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tViewedDate, ja.MemberID               
 FROM @tmpJobApplication tja       
 INNER JOIN JobApplication ja WITH (NOLOCK)                
 ON tja.JobApplicationID = ja.JobApplicationID      
 INNER JOIN Members m WITH (NOLOCK) ON m.MemberID = ja.MemberID      
 INNER JOIN @tmpJobApplicationAbbr c      
 ON c.JobID = ja.JobID    or c.JobID = ja.JobArchiveID         
       
 ORDER BY ja.JobApplicationID        
      
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobApplication table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tViewedDate],
					[FirstName],
					[Surname],
					[EmailAddress],
					[MobilePhone],
					[MemberNote],
					[AdvertiserNote],
					[JobArchiveID],
					[Draft],
					[JobApplicationTypeID],
					[ExternalXMLFilename],
					[CustomQuestionnaireXML],
					[ExternalPDFFilename],
					[FileDownloaded],
					[AppliedWith],
					[ScreeningQuestionaireXML],
					[ScreeningQuestionsGuid]
				FROM
					[dbo].[JobApplication]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplication_CustomUpdateDownloadedFileStatus"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@jobappids" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	UPDATE JobApplication SET FileDownloaded = 1 WHERE JobApplicationID IN (SELECT id FROM [dbo].[ParseIntCSV](@jobappids))	
END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobArea_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobArea_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobArea table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobAreaID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobAreaID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobAreaID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobArea]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobAreaID], O.[JobID], O.[JobArchiveID], O.[AreaID]
				FROM
				    [dbo].[JobArea] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobAreaID] = PageIndex.[JobAreaID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobArea]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobArea_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobAreaId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobArea]
					(
					[JobID]
					,[JobArchiveID]
					,[AreaID]
					)
				VALUES
					(
					@JobId
					,@JobArchiveId
					,@AreaId
					)
				
				-- Get the identity value
				SET @JobAreaId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobArea_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobArea]
				SET
					[JobID] = @JobId
					,[JobArchiveID] = @JobArchiveId
					,[AreaID] = @AreaId
				WHERE
[JobAreaID] = @JobAreaId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobArea_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobArea table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobArea] WITH (ROWLOCK) 
				WHERE
					[JobAreaID] = @JobAreaId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobArea_GetByAreaId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobArea table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
				WHERE
					[AreaID] = @AreaId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobArea_GetByJobArchiveId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobArea table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
				WHERE
					[JobArchiveID] = @JobArchiveId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobArea_GetByJobId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobArea table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobArea_GetByJobAreaId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobArea table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
				WHERE
					[JobAreaID] = @JobAreaId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobArea_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobArea table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobAreaID]
	, [JobID]
	, [JobArchiveID]
	, [AreaID]
    FROM
	[dbo].[JobArea]
    WHERE 
	 ([JobAreaID] = @JobAreaId OR @JobAreaId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([AreaID] = @AreaId OR @AreaId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobAreaID]
	, [JobID]
	, [JobArchiveID]
	, [AreaID]
    FROM
	[dbo].[JobArea]
    WHERE 
	 ([JobAreaID] = @JobAreaId AND @JobAreaId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([AreaID] = @AreaId AND @AreaId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobArea_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobArea table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobAreaID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobAreaID] )
				SELECT TOP {3} [JobAreaID]
				FROM [dbo].[JobArea] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobAreaID], O.[JobID], O.[JobArchiveID], O.[AreaID]
				FROM
				    [dbo].[JobArea] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobAreaID] = PageIndex.[JobAreaID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobArea] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobArea_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobAreaId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[JobArea]
					(
					[JobID]
					,[JobArchiveID]
					,[AreaID]
					)
				VALUES
					(
					@JobId
					,@JobArchiveId
					,@AreaId
					)
				
				-- Get the identity value
				SET @JobAreaId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobArea_GetByJobId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobArea table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
				WHERE
					[JobID] = @JobId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobArea_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobArea_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobArea table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobArea]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobArea_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[JobArea]
				SET
					[JobID] = @JobId
					,[JobArchiveID] = @JobArchiveId
					,[AreaID] = @AreaId
				WHERE
[JobAreaID] = @JobAreaId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobArea_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobArea table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobAreaID]
	, [JobID]
	, [JobArchiveID]
	, [AreaID]
    FROM
	[dbo].[JobArea]
    WHERE 
	 ([JobAreaID] = @JobAreaId OR @JobAreaId IS NULL)
	AND ([JobID] = @JobId OR @JobId IS NULL)
	AND ([JobArchiveID] = @JobArchiveId OR @JobArchiveId IS NULL)
	AND ([AreaID] = @AreaId OR @AreaId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobAreaID]
	, [JobID]
	, [JobArchiveID]
	, [AreaID]
    FROM
	[dbo].[JobArea]
    WHERE 
	 ([JobAreaID] = @JobAreaId AND @JobAreaId is not null)
	OR ([JobID] = @JobId AND @JobId is not null)
	OR ([JobArchiveID] = @JobArchiveId AND @JobArchiveId is not null)
	OR ([AreaID] = @AreaId AND @AreaId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobArea_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobArea table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobArea] WITH (ROWLOCK) 
				WHERE
					[JobAreaID] = @JobAreaId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobArea_GetByAreaId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobArea table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
				WHERE
					[AreaID] = @AreaId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobArea_GetByJobArchiveId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobArea table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobArchiveId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
				WHERE
					[JobArchiveID] = @JobArchiveId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobArea_GetByJobAreaId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobArea table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobAreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobAreaID],
					[JobID],
					[JobArchiveID],
					[AreaID]
				FROM
					[dbo].[JobArea]
				WHERE
					[JobAreaID] = @JobAreaId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobApplicationNotes_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobApplicationNotes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobApplicationNotes_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobApplicationNotes table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobApplicationNoteID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobApplicationNoteID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobApplicationNoteID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobApplicationNotes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobApplicationNoteID], O.[AdvertiserUserID], O.[MemberID], O.[JobApplicationID], O.[Note]
				FROM
				    [dbo].[JobApplicationNotes] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobApplicationNoteID] = PageIndex.[JobApplicationNoteID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobApplicationNotes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobApplicationNotes_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobApplicationNotes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationNoteId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Note" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobApplicationNotes]
					(
					[AdvertiserUserID]
					,[MemberID]
					,[JobApplicationID]
					,[Note]
					)
				VALUES
					(
					@AdvertiserUserId
					,@MemberId
					,@JobApplicationId
					,@Note
					)
				
				-- Get the identity value
				SET @JobApplicationNoteId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationNotes_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobApplicationNotes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationNoteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Note" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobApplicationNotes]
				SET
					[AdvertiserUserID] = @AdvertiserUserId
					,[MemberID] = @MemberId
					,[JobApplicationID] = @JobApplicationId
					,[Note] = @Note
				WHERE
[JobApplicationNoteID] = @JobApplicationNoteId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationNotes_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobApplicationNotes table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationNoteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobApplicationNotes] WITH (ROWLOCK) 
				WHERE
					[JobApplicationNoteID] = @JobApplicationNoteId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationNotes_GetByAdvertiserUserId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationNotes table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationNotes_GetByJobApplicationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationNotes table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
				WHERE
					[JobApplicationID] = @JobApplicationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationNotes_GetByMemberId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationNotes table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationNotes_GetByJobApplicationNoteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationNotes table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationNoteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
				WHERE
					[JobApplicationNoteID] = @JobApplicationNoteId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobApplicationNotes_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobApplicationNotes table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationNoteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Note" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobApplicationNoteID]
	, [AdvertiserUserID]
	, [MemberID]
	, [JobApplicationID]
	, [Note]
    FROM
	[dbo].[JobApplicationNotes]
    WHERE 
	 ([JobApplicationNoteID] = @JobApplicationNoteId OR @JobApplicationNoteId IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([JobApplicationID] = @JobApplicationId OR @JobApplicationId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobApplicationNoteID]
	, [AdvertiserUserID]
	, [MemberID]
	, [JobApplicationID]
	, [Note]
    FROM
	[dbo].[JobApplicationNotes]
    WHERE 
	 ([JobApplicationNoteID] = @JobApplicationNoteId AND @JobApplicationNoteId is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([JobApplicationID] = @JobApplicationId AND @JobApplicationId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobApplicationNotes_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobApplicationNotes table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobApplicationNoteID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobApplicationNoteID] )
				SELECT TOP {3} [JobApplicationNoteID]
				FROM [dbo].[JobApplicationNotes] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobApplicationNoteID], O.[AdvertiserUserID], O.[MemberID], O.[JobApplicationID], O.[Note]
				FROM
				    [dbo].[JobApplicationNotes] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobApplicationNoteID] = PageIndex.[JobApplicationNoteID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobApplicationNotes] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobApplicationNotes_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobApplicationNotes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationNoteId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Note" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[JobApplicationNotes]
					(
					[AdvertiserUserID]
					,[MemberID]
					,[JobApplicationID]
					,[Note]
					)
				VALUES
					(
					@AdvertiserUserId
					,@MemberId
					,@JobApplicationId
					,@Note
					)
				
				-- Get the identity value
				SET @JobApplicationNoteId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationNotes_GetByAdvertiserUserId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationNotes table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
				WHERE
					[AdvertiserUserID] = @AdvertiserUserId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationNotes_GetByMemberId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationNotes table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
				WHERE
					[MemberID] = @MemberId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationNotes_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobApplicationNotes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationNotes_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobApplicationNotes table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobApplicationNotes]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationNotes_GetByJobApplicationId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationNotes table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
				WHERE
					[JobApplicationID] = @JobApplicationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationNotes_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobApplicationNotes table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationNoteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Note" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobApplicationNoteID]
	, [AdvertiserUserID]
	, [MemberID]
	, [JobApplicationID]
	, [Note]
    FROM
	[dbo].[JobApplicationNotes]
    WHERE 
	 ([JobApplicationNoteID] = @JobApplicationNoteId OR @JobApplicationNoteId IS NULL)
	AND ([AdvertiserUserID] = @AdvertiserUserId OR @AdvertiserUserId IS NULL)
	AND ([MemberID] = @MemberId OR @MemberId IS NULL)
	AND ([JobApplicationID] = @JobApplicationId OR @JobApplicationId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobApplicationNoteID]
	, [AdvertiserUserID]
	, [MemberID]
	, [JobApplicationID]
	, [Note]
    FROM
	[dbo].[JobApplicationNotes]
    WHERE 
	 ([JobApplicationNoteID] = @JobApplicationNoteId AND @JobApplicationNoteId is not null)
	OR ([AdvertiserUserID] = @AdvertiserUserId AND @AdvertiserUserId is not null)
	OR ([MemberID] = @MemberId AND @MemberId is not null)
	OR ([JobApplicationID] = @JobApplicationId AND @JobApplicationId is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationNotes_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobApplicationNotes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationNoteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobApplicationNotes] WITH (ROWLOCK) 
				WHERE
					[JobApplicationNoteID] = @JobApplicationNoteId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationNotes_GetByJobApplicationNoteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationNotes table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationNoteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobApplicationNoteID],
					[AdvertiserUserID],
					[MemberID],
					[JobApplicationID],
					[Note]
				FROM
					[dbo].[JobApplicationNotes]
				WHERE
					[JobApplicationNoteID] = @JobApplicationNoteId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationNotes_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobApplicationNotes table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationNoteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvertiserUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MemberId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Note" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[JobApplicationNotes]
				SET
					[AdvertiserUserID] = @AdvertiserUserId
					,[MemberID] = @MemberId
					,[JobApplicationID] = @JobApplicationId
					,[Note] = @Note
				WHERE
[JobApplicationNoteID] = @JobApplicationNoteId 
				
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobItemsType_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobItemsType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobItemTypeID],
					[SiteID],
					[JobItemTypeParentID],
					[JobItemTypeDescription],
					[LastModifiedBy],
					[LastModified],
					[TotalAmount],
					[DaysActive],
					[Sequence],
					[Valid],
					[DiscountAmount],
					[TotalNumberOfJobs],
					[ShortDescription]
				FROM
					[dbo].[JobItemsType]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobItemsType_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobItemsType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobItemTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobItemTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobItemTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobItemsType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobItemTypeID], O.[SiteID], O.[JobItemTypeParentID], O.[JobItemTypeDescription], O.[LastModifiedBy], O.[LastModified], O.[TotalAmount], O.[DaysActive], O.[Sequence], O.[Valid], O.[DiscountAmount], O.[TotalNumberOfJobs], O.[ShortDescription]
				FROM
				    [dbo].[JobItemsType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobItemTypeID] = PageIndex.[JobItemTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobItemsType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobItemsType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobItemsType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeDescription" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@DaysActive" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="2048" precision="0" scale="0" param="(2048)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobItemsType]
					(
					[SiteID]
					,[JobItemTypeParentID]
					,[JobItemTypeDescription]
					,[LastModifiedBy]
					,[LastModified]
					,[TotalAmount]
					,[DaysActive]
					,[Sequence]
					,[Valid]
					,[DiscountAmount]
					,[TotalNumberOfJobs]
					,[ShortDescription]
					)
				VALUES
					(
					@SiteId
					,@JobItemTypeParentId
					,@JobItemTypeDescription
					,@LastModifiedBy
					,@LastModified
					,@TotalAmount
					,@DaysActive
					,@Sequence
					,@Valid
					,@DiscountAmount
					,@TotalNumberOfJobs
					,@ShortDescription
					)
				
				-- Get the identity value
				SET @JobItemTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobItemsType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobItemsType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobItemTypeDescription" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@DaysActive" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="2048" precision="0" scale="0" param="(2048)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobItemsType]
				SET
					[SiteID] = @SiteId
					,[JobItemTypeParentID] = @JobItemTypeParentId
					,[JobItemTypeDescription] = @JobItemTypeDescription
					,[LastModifiedBy] = @LastModifiedBy
					,[LastModified] = @LastModified
					,[TotalAmount] = @TotalAmount
					,[DaysActive] = @DaysActive
					,[Sequence] = @Sequence
					,[Valid] = @Valid
					,[DiscountAmount] = @DiscountAmount
					,[TotalNumberOfJobs] = @TotalNumberOfJobs
					,[ShortDescription] = @ShortDescription
				WHERE
[JobItemTypeID] = @JobItemTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobItemsType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobItemsType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobItemsType] WITH (ROWLOCK) 
				WHERE
					[JobItemTypeID] = @JobItemTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobItemsType_GetByLastModifiedBy" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobItemsType table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobItemTypeID],
					[SiteID],
					[JobItemTypeParentID],
					[JobItemTypeDescription],
					[LastModifiedBy],
					[LastModified],
					[TotalAmount],
					[DaysActive],
					[Sequence],
					[Valid],
					[DiscountAmount],
					[TotalNumberOfJobs],
					[ShortDescription]
				FROM
					[dbo].[JobItemsType]
				WHERE
					[LastModifiedBy] = @LastModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobItemsType_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobItemsType table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobItemTypeID],
					[SiteID],
					[JobItemTypeParentID],
					[JobItemTypeDescription],
					[LastModifiedBy],
					[LastModified],
					[TotalAmount],
					[DaysActive],
					[Sequence],
					[Valid],
					[DiscountAmount],
					[TotalNumberOfJobs],
					[ShortDescription]
				FROM
					[dbo].[JobItemsType]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobItemsType_GetByJobItemTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobItemsType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobItemTypeID],
					[SiteID],
					[JobItemTypeParentID],
					[JobItemTypeDescription],
					[LastModifiedBy],
					[LastModified],
					[TotalAmount],
					[DaysActive],
					[Sequence],
					[Valid],
					[DiscountAmount],
					[TotalNumberOfJobs],
					[ShortDescription]
				FROM
					[dbo].[JobItemsType]
				WHERE
					[JobItemTypeID] = @JobItemTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobItemsType_GetByAdvertiserIdFromAdvertiserJobPricing" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
SELECT dbo.[JobItemsType].[JobItemTypeID]
       ,dbo.[JobItemsType].[SiteID]
       ,dbo.[JobItemsType].[JobItemTypeParentID]
       ,dbo.[JobItemsType].[JobItemTypeDescription]
       ,dbo.[JobItemsType].[LastModifiedBy]
       ,dbo.[JobItemsType].[LastModified]
       ,dbo.[JobItemsType].[TotalAmount]
       ,dbo.[JobItemsType].[DaysActive]
       ,dbo.[JobItemsType].[Sequence]
       ,dbo.[JobItemsType].[Valid]
       ,dbo.[JobItemsType].[DiscountAmount]
       ,dbo.[JobItemsType].[TotalNumberOfJobs]
       ,dbo.[JobItemsType].[ShortDescription]
  FROM dbo.[JobItemsType]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[AdvertiserJobPricing] 
                WHERE dbo.[AdvertiserJobPricing].[AdvertiserID] = @AdvertiserId
                  AND dbo.[AdvertiserJobPricing].[JobItemsTypeID] = dbo.[JobItemsType].[JobItemTypeID]
                  )
				SELECT @@ROWCOUNT			
				]]></body>
		</procedure>
		<procedure owner="dbo" name="JobItemsType_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobItemsType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeDescription" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DaysActive" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="2048" precision="0" scale="0" param="(2048)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobItemTypeID]
	, [SiteID]
	, [JobItemTypeParentID]
	, [JobItemTypeDescription]
	, [LastModifiedBy]
	, [LastModified]
	, [TotalAmount]
	, [DaysActive]
	, [Sequence]
	, [Valid]
	, [DiscountAmount]
	, [TotalNumberOfJobs]
	, [ShortDescription]
    FROM
	[dbo].[JobItemsType]
    WHERE 
	 ([JobItemTypeID] = @JobItemTypeId OR @JobItemTypeId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([JobItemTypeParentID] = @JobItemTypeParentId OR @JobItemTypeParentId IS NULL)
	AND ([JobItemTypeDescription] = @JobItemTypeDescription OR @JobItemTypeDescription IS NULL)
	AND ([LastModifiedBy] = @LastModifiedBy OR @LastModifiedBy IS NULL)
	AND ([LastModified] = @LastModified OR @LastModified IS NULL)
	AND ([TotalAmount] = @TotalAmount OR @TotalAmount IS NULL)
	AND ([DaysActive] = @DaysActive OR @DaysActive IS NULL)
	AND ([Sequence] = @Sequence OR @Sequence IS NULL)
	AND ([Valid] = @Valid OR @Valid IS NULL)
	AND ([DiscountAmount] = @DiscountAmount OR @DiscountAmount IS NULL)
	AND ([TotalNumberOfJobs] = @TotalNumberOfJobs OR @TotalNumberOfJobs IS NULL)
	AND ([ShortDescription] = @ShortDescription OR @ShortDescription IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobItemTypeID]
	, [SiteID]
	, [JobItemTypeParentID]
	, [JobItemTypeDescription]
	, [LastModifiedBy]
	, [LastModified]
	, [TotalAmount]
	, [DaysActive]
	, [Sequence]
	, [Valid]
	, [DiscountAmount]
	, [TotalNumberOfJobs]
	, [ShortDescription]
    FROM
	[dbo].[JobItemsType]
    WHERE 
	 ([JobItemTypeID] = @JobItemTypeId AND @JobItemTypeId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([JobItemTypeParentID] = @JobItemTypeParentId AND @JobItemTypeParentId is not null)
	OR ([JobItemTypeDescription] = @JobItemTypeDescription AND @JobItemTypeDescription is not null)
	OR ([LastModifiedBy] = @LastModifiedBy AND @LastModifiedBy is not null)
	OR ([LastModified] = @LastModified AND @LastModified is not null)
	OR ([TotalAmount] = @TotalAmount AND @TotalAmount is not null)
	OR ([DaysActive] = @DaysActive AND @DaysActive is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([DiscountAmount] = @DiscountAmount AND @DiscountAmount is not null)
	OR ([TotalNumberOfJobs] = @TotalNumberOfJobs AND @TotalNumberOfJobs is not null)
	OR ([ShortDescription] = @ShortDescription AND @ShortDescription is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobItemsType_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobItemsType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobItemTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobItemTypeID] )
				SELECT TOP {3} [JobItemTypeID]
				FROM [dbo].[JobItemsType] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobItemTypeID], O.[SiteID], O.[JobItemTypeParentID], O.[JobItemTypeDescription], O.[LastModifiedBy], O.[LastModified], O.[TotalAmount], O.[DaysActive], O.[Sequence], O.[Valid], O.[DiscountAmount], O.[TotalNumberOfJobs], O.[ShortDescription]
				FROM
				    [dbo].[JobItemsType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobItemTypeID] = PageIndex.[JobItemTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobItemsType] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobItemsType_GetByJobItemTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobItemsType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[TotalAmount],
					[DaysActive],
					[Sequence],
					[Valid],
					[DiscountAmount],
					[TotalNumberOfJobs],
					[ShortDescription]
				FROM
					[dbo].[JobItemsType]
				WHERE
					[JobItemTypeID] = @JobItemTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobItemsType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeDescription" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DaysActive" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="2048" precision="0" scale="0" param="(2048)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,@TotalAmount
					,@DaysActive
					,@Sequence
					,@Valid
					,@DiscountAmount
					,@TotalNumberOfJobs
					,@ShortDescription
					)
				
				-- Get the identity value
				SET @JobItemTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_GetByAdvertiserIdFromAdvertiserJobPricing"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@AdvertiserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified]
       ,dbo.[JobItemsType].[TotalAmount]
       ,dbo.[JobItemsType].[DaysActive]
       ,dbo.[JobItemsType].[Sequence]
       ,dbo.[JobItemsType].[Valid]
       ,dbo.[JobItemsType].[DiscountAmount]
       ,dbo.[JobItemsType].[TotalNumberOfJobs]
       ,dbo.[JobItemsType].[ShortDescription]
  FROM dbo.[JobItemsType]
 WHERE EXISTS (SELECT 1
                 FROM dbo.[AdvertiserJobPricing] 
                WHERE dbo.[AdvertiserJobPricing].[AdvertiserID] = @AdvertiserId
                  AND dbo.[AdvertiserJobPricing].[JobItemsTypeID] = dbo.[JobItemsType].[JobItemTypeID]
                  )
				SELECT @@ROWCOUNT			
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobItemsType table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified],
					[TotalAmount],
					[DaysActive],
					[Sequence],
					[Valid],
					[DiscountAmount],
					[TotalNumberOfJobs],
					[ShortDescription]
				FROM
					[dbo].[JobItemsType]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobItemsType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
tModified],
					[TotalAmount],
					[DaysActive],
					[Sequence],
					[Valid],
					[DiscountAmount],
					[TotalNumberOfJobs],
					[ShortDescription]
				FROM
					[dbo].[JobItemsType]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobItemsType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobItemsType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_CustomGetBySiteID"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SiteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified,
			TotalAmount,
			DaysActive,
			Sequence,
			Valid,
			DiscountAmount,
			TotalNumberOfJobs,
			ShortDescription
	FROM JobItemsType NOLOCK
	WHERE SiteID = @SiteID AND Valid = 1
	ORDER BY Sequence
END


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobItemsType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeDescription" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DaysActive" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="2048" precision="0" scale="0" param="(2048)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified
					,[TotalAmount] = @TotalAmount
					,[DaysActive] = @DaysActive
					,[Sequence] = @Sequence
					,[Valid] = @Valid
					,[DiscountAmount] = @DiscountAmount
					,[TotalNumberOfJobs] = @TotalNumberOfJobs
					,[ShortDescription] = @ShortDescription
				WHERE
[JobItemTypeID] = @JobItemTypeId 
				
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobItemsType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobItemTypeDescription" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LastModified" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@TotalAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DaysActive" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sequence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Valid" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@TotalNumberOfJobs" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShortDescription" type="nvarchar" direction="Input" size="2048" precision="0" scale="0" param="(2048)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModified is not null)
	OR ([TotalAmount] = @TotalAmount AND @TotalAmount is not null)
	OR ([DaysActive] = @DaysActive AND @DaysActive is not null)
	OR ([Sequence] = @Sequence AND @Sequence is not null)
	OR ([Valid] = @Valid AND @Valid is not null)
	OR ([DiscountAmount] = @DiscountAmount AND @DiscountAmount is not null)
	OR ([TotalNumberOfJobs] = @TotalNumberOfJobs AND @TotalNumberOfJobs is not null)
	OR ([ShortDescription] = @ShortDescription AND @ShortDescription is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobItemsType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobItemTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobItemsType] WITH (ROWLOCK) 
				WHERE
					[JobItemTypeID] = @JobItemTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobItemsType_GetByLastModifiedBy"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobItemsType table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@LastModifiedBy" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tModifiedBy
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="JobApplicationType_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobApplicationType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobApplicationTypeID],
					[JobApplicationTypeParentID],
					[SiteID],
					[JobApplicationTypeName],
					[JobApplicationTypeUrl],
					[GlobalTemplate]
				FROM
					[dbo].[JobApplicationType]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="JobApplicationType_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobApplicationType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobApplicationTypeID] int 
				)
				
				-- Insert into the temp table
				DECLARE @SQL AS nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([JobApplicationTypeID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [JobApplicationTypeID]'
				SET @SQL = @SQL + ' FROM [dbo].[JobApplicationType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				EXEC sp_executesql @SQL

				-- Return paged results
				SELECT O.[JobApplicationTypeID], O.[JobApplicationTypeParentID], O.[SiteID], O.[JobApplicationTypeName], O.[JobApplicationTypeUrl], O.[GlobalTemplate]
				FROM
				    [dbo].[JobApplicationType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[JobApplicationTypeID] = PageIndex.[JobApplicationTypeID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobApplicationType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="JobApplicationType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobApplicationType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@JobApplicationTypeUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[JobApplicationType]
					(
					[JobApplicationTypeParentID]
					,[SiteID]
					,[JobApplicationTypeName]
					,[JobApplicationTypeUrl]
					,[GlobalTemplate]
					)
				VALUES
					(
					@JobApplicationTypeParentId
					,@SiteId
					,@JobApplicationTypeName
					,@JobApplicationTypeUrl
					,@GlobalTemplate
					)
				
				-- Get the identity value
				SET @JobApplicationTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobApplicationType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobApplicationTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@JobApplicationTypeUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[JobApplicationType]
				SET
					[JobApplicationTypeParentID] = @JobApplicationTypeParentId
					,[SiteID] = @SiteId
					,[JobApplicationTypeName] = @JobApplicationTypeName
					,[JobApplicationTypeUrl] = @JobApplicationTypeUrl
					,[GlobalTemplate] = @GlobalTemplate
				WHERE
[JobApplicationTypeID] = @JobApplicationTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobApplicationType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[JobApplicationType] WITH (ROWLOCK) 
				WHERE
					[JobApplicationTypeID] = @JobApplicationTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationType_GetBySiteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationType table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[JobApplicationTypeID],
					[JobApplicationTypeParentID],
					[SiteID],
					[JobApplicationTypeName],
					[JobApplicationTypeUrl],
					[GlobalTemplate]
				FROM
					[dbo].[JobApplicationType]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="JobApplicationType_GetByJobApplicationTypeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobApplicationTypeID],
					[JobApplicationTypeParentID],
					[SiteID],
					[JobApplicationTypeName],
					[JobApplicationTypeUrl],
					[GlobalTemplate]
				FROM
					[dbo].[JobApplicationType]
				WHERE
					[JobApplicationTypeID] = @JobApplicationTypeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="JobApplicationType_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobApplicationType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobApplicationTypeUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobApplicationTypeID]
	, [JobApplicationTypeParentID]
	, [SiteID]
	, [JobApplicationTypeName]
	, [JobApplicationTypeUrl]
	, [GlobalTemplate]
    FROM
	[dbo].[JobApplicationType]
    WHERE 
	 ([JobApplicationTypeID] = @JobApplicationTypeId OR @JobApplicationTypeId IS NULL)
	AND ([JobApplicationTypeParentID] = @JobApplicationTypeParentId OR @JobApplicationTypeParentId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([JobApplicationTypeName] = @JobApplicationTypeName OR @JobApplicationTypeName IS NULL)
	AND ([JobApplicationTypeUrl] = @JobApplicationTypeUrl OR @JobApplicationTypeUrl IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobApplicationTypeID]
	, [JobApplicationTypeParentID]
	, [SiteID]
	, [JobApplicationTypeName]
	, [JobApplicationTypeUrl]
	, [GlobalTemplate]
    FROM
	[dbo].[JobApplicationType]
    WHERE 
	 ([JobApplicationTypeID] = @JobApplicationTypeId AND @JobApplicationTypeId is not null)
	OR ([JobApplicationTypeParentID] = @JobApplicationTypeParentId AND @JobApplicationTypeParentId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([JobApplicationTypeName] = @JobApplicationTypeName AND @JobApplicationTypeName is not null)
	OR ([JobApplicationTypeUrl] = @JobApplicationTypeUrl AND @JobApplicationTypeUrl is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="JobApplicationType_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobApplicationType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [JobApplicationTypeID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [JobApplicationTypeID] )
				SELECT TOP {3} [JobApplicationTypeID]
				FROM [dbo].[JobApplicationType] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[JobApplicationTypeID], O.[JobApplicationTypeParentID], O.[SiteID], O.[JobApplicationTypeName], O.[JobApplicationTypeUrl], O.[GlobalTemplate]
				FROM
				    [dbo].[JobApplicationType] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[JobApplicationTypeID] = PageIndex.[JobApplicationTypeID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[JobApplicationType] {0};
				
				DROP TABLE #PageIndex
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="JobApplicationType_Insert"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the JobApplicationType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationTypeId" type="int" direction="InputOutput" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobApplicationTypeUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
INSERT INTO [dbo].[JobApplicationType]
					(
					[JobApplicationTypeParentID]
					,[SiteID]
					,[JobApplicationTypeName]
					,[JobApplicationTypeUrl]
					,[GlobalTemplate]
					)
				VALUES
					(
					@JobApplicationTypeParentId
					,@SiteId
					,@JobApplicationTypeName
					,@JobApplicationTypeUrl
					,@GlobalTemplate
					)
				
				-- Get the identity value
				SET @JobApplicationTypeId = SCOPE_IDENTITY()
									
							
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationType_GetBySiteId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationType table through a foreign key
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SET ANSI_NULLS OFF
				
				SELECT
					[JobApplicationTypeID],
					[JobApplicationTypeParentID],
					[SiteID],
					[JobApplicationTypeName],
					[JobApplicationTypeUrl],
					[GlobalTemplate]
				FROM
					[dbo].[JobApplicationType]
				WHERE
					[SiteID] = @SiteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationType_Get_List"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the JobApplicationType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobApplicationTypeID],
					[JobApplicationTypeParentID],
					[SiteID],
					[JobApplicationTypeName],
					[JobApplicationTypeUrl],
					[GlobalTemplate]
				FROM
					[dbo].[JobApplicationType]
					
				SELECT @@ROWCOUNT
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationType_GetPaged"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the JobApplicationType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" nulldefault="null"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PageSize" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[JobApplicationType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationType_GetByJobApplicationTypeId"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the JobApplicationType table through an index
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SELECT
					[JobApplicationTypeID],
					[JobApplicationTypeParentID],
					[SiteID],
					[JobApplicationTypeName],
					[JobApplicationTypeUrl],
					[GlobalTemplate]
				FROM
					[dbo].[JobApplicationType]
				WHERE
					[JobApplicationTypeID] = @JobApplicationTypeId
				SELECT @@ROWCOUNT
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationType_Find"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the JobApplicationType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobApplicationTypeUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobApplicationTypeID]
	, [JobApplicationTypeParentID]
	, [SiteID]
	, [JobApplicationTypeName]
	, [JobApplicationTypeUrl]
	, [GlobalTemplate]
    FROM
	[dbo].[JobApplicationType]
    WHERE 
	 ([JobApplicationTypeID] = @JobApplicationTypeId OR @JobApplicationTypeId IS NULL)
	AND ([JobApplicationTypeParentID] = @JobApplicationTypeParentId OR @JobApplicationTypeParentId IS NULL)
	AND ([SiteID] = @SiteId OR @SiteId IS NULL)
	AND ([JobApplicationTypeName] = @JobApplicationTypeName OR @JobApplicationTypeName IS NULL)
	AND ([JobApplicationTypeUrl] = @JobApplicationTypeUrl OR @JobApplicationTypeUrl IS NULL)
	AND ([GlobalTemplate] = @GlobalTemplate OR @GlobalTemplate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobApplicationTypeID]
	, [JobApplicationTypeParentID]
	, [SiteID]
	, [JobApplicationTypeName]
	, [JobApplicationTypeUrl]
	, [GlobalTemplate]
    FROM
	[dbo].[JobApplicationType]
    WHERE 
	 ([JobApplicationTypeID] = @JobApplicationTypeId AND @JobApplicationTypeId is not null)
	OR ([JobApplicationTypeParentID] = @JobApplicationTypeParentId AND @JobApplicationTypeParentId is not null)
	OR ([SiteID] = @SiteId AND @SiteId is not null)
	OR ([JobApplicationTypeName] = @JobApplicationTypeName AND @JobApplicationTypeName is not null)
	OR ([JobApplicationTypeUrl] = @JobApplicationTypeUrl AND @JobApplicationTypeUrl is not null)
	OR ([GlobalTemplate] = @GlobalTemplate AND @GlobalTemplate is not null)
	SELECT @@ROWCOUNT			
  END
				


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationType_Delete"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the JobApplicationType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
DELETE FROM [dbo].[JobApplicationType] WITH (ROWLOCK) 
				WHERE
					[JobApplicationTypeID] = @JobApplicationTypeId
					
			


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="JobApplicationType_Update"  skip="true">
			<comment><![CDATA[
/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the JobApplicationType table
----------------------------------------------------------------------------------------------------
*/


]]></comment>
			<parameters>
				<parameter name="@JobApplicationTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeParentId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiteId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobApplicationTypeName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@JobApplicationTypeUrl" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@GlobalTemplate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
-- Modify the updatable columns
				UPDATE
					[dbo].[JobApplicationType]
				SET
					[JobApplicationTypeParentID] = @JobApplicationTypeParentId
					,[SiteID] = @SiteId
					,[JobApplicationTypeName] = @JobApplicationTypeName
					,[JobApplicationTypeUrl] = @JobApplicationTypeUrl
					,[GlobalTemplate] = @GlobalTemplate
				WHERE
[JobApplicationTypeID] = @JobApplicationTypeId 
				
			


			]]></body>
					</procedure>
            <procedure owner="dbo" name="ViewJobs_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the ViewJobs view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [JobID],
                        [SiteID],
                        [WorkTypeID],
                        [JobName],
                        [Description],
                        [FullDescription],
                        [WebServiceProcessed],
                        [ApplicationEmailAddress],
                        [RefNo],
                        [Visible],
                        [DatePosted],
                        [ExpiryDate],
                        [Expired],
                        [JobItemPrice],
                        [Billed],
                        [LastModified],
                        [ShowSalaryDetails],
                        [ShowSalaryRange],
                        [SalaryText],
                        [AdvertiserID],
                        [LastModifiedByAdvertiserUserId],
                        [LastModifiedByAdminUserId],
                        [JobItemTypeID],
                        [ApplicationMethod],
                        [ApplicationURL],
                        [UploadMethod],
                        [Tags],
                        [JobTemplateID],
                        [SearchField],
                        [AdvertiserJobTemplateLogoID],
                        [CompanyName],
                        [HashValue],
                        [RequireLogonForExternalApplications],
                        [ShowLocationDetails],
                        [PublicTransport],
                        [Address],
                        [ContactDetails],
                        [JobContactPhone],
                        [JobContactName],
                        [QualificationsRecognised],
                        [ResidentOnly],
                        [DocumentLink],
                        [BulletPoint1],
                        [BulletPoint2],
                        [BulletPoint3],
                        [HotJob],
                        [AdvertiserCompanyName],
                        [BusinessNumber],
                        [StreetAddress1],
                        [StreetAddress2],
                        [WebAddress],
                        [Profile],
                        [RequireLogonForExternalApplication],
                        [AdvertiserLogo],
                        [AdvertiserLogoURL],
                        [SiteWorkTypeName],
                        [CurrencySymbol],
                        [SalaryUpperBand],
                        [SalaryLowerBand],
                        [SalaryTypeID],
                        [JobTemplateHTML],
                        [SalaryTypeName],
                        [SiteAreaName],
                        [SiteLocationName],
                        [SiteRoleName],
                        [SiteRoleCanonicalUrl],
                        [SiteProfessionName],
                        [SiteProfessionCanonicalUrl],
                        [JobFriendlyName],
                        [ProfessionID],
                        [RoleID],
                        [LocationID],
                        [AreaID],
                        [SalaryDisplay]
                    FROM
                        [dbo].[ViewJobs]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewJobs_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewJobs view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    -- Build the sql query
                    DECLARE @SQL AS nvarchar(4000)
                    SET @SQL = ' SELECT * FROM [dbo].[ViewJobs]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    
                    -- Execution the query
                    EXEC sp_executesql @SQL
                    
                    -- Return total count
                    SELECT @@ROWCOUNT AS TotalRowCount
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="ViewJobs_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewJobs table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    SELECT * FROM [dbo].[ViewJobs] {0}
                    ORDER BY {1}
    
                    -- get total count
                    SELECT @@ROWCOUNT AS TotalRowCount;
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewJobsArchive_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the ViewJobsArchive view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [JobID],
                        [SiteID],
                        [WorkTypeID],
                        [JobName],
                        [Description],
                        [FullDescription],
                        [WebServiceProcessed],
                        [ApplicationEmailAddress],
                        [RefNo],
                        [Visible],
                        [DatePosted],
                        [ExpiryDate],
                        [Expired],
                        [JobItemPrice],
                        [Billed],
                        [LastModified],
                        [ShowSalaryDetails],
                        [ShowSalaryRange],
                        [SalaryText],
                        [AdvertiserID],
                        [LastModifiedByAdvertiserUserId],
                        [LastModifiedByAdminUserId],
                        [JobItemTypeID],
                        [ApplicationMethod],
                        [ApplicationURL],
                        [UploadMethod],
                        [Tags],
                        [JobTemplateID],
                        [SearchField],
                        [AdvertiserJobTemplateLogoID],
                        [CompanyName],
                        [HashValue],
                        [RequireLogonForExternalApplications],
                        [ShowLocationDetails],
                        [PublicTransport],
                        [Address],
                        [ContactDetails],
                        [JobContactPhone],
                        [JobContactName],
                        [QualificationsRecognised],
                        [ResidentOnly],
                        [DocumentLink],
                        [BulletPoint1],
                        [BulletPoint2],
                        [BulletPoint3],
                        [HotJob],
                        [AdvertiserCompanyName],
                        [BusinessNumber],
                        [StreetAddress1],
                        [StreetAddress2],
                        [WebAddress],
                        [Profile],
                        [RequireLogonForExternalApplication],
                        [AdvertiserLogo],
                        [AdvertiserLogoURL],
                        [SiteWorkTypeName],
                        [CurrencySymbol],
                        [SalaryUpperBand],
                        [SalaryLowerBand],
                        [SalaryTypeID],
                        [JobTemplateHTML],
                        [SalaryTypeName],
                        [SiteAreaName],
                        [SiteLocationName],
                        [SiteRoleName],
                        [SiteProfessionName],
                        [JobFriendlyName],
                        [ProfessionID],
                        [RoleID],
                        [LocationID],
                        [AreaID],
                        [SalaryDisplay]
                    FROM
                        [dbo].[ViewJobsArchive]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewJobsArchive_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewJobsArchive view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    -- Build the sql query
                    DECLARE @SQL AS nvarchar(4000)
                    SET @SQL = ' SELECT * FROM [dbo].[ViewJobsArchive]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    
                    -- Execution the query
                    EXEC sp_executesql @SQL
                    
                    -- Return total count
                    SELECT @@ROWCOUNT AS TotalRowCount
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="ViewJobsArchive_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewJobsArchive table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    SELECT * FROM [dbo].[ViewJobsArchive] {0}
                    ORDER BY {1}
    
                    -- get total count
                    SELECT @@ROWCOUNT AS TotalRowCount;
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewJobSearch_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the ViewJobSearch view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [JobId],
                        [SiteID],
                        [JobName],
                        [Description],
                        [FullDescription],
                        [DatePosted],
                        [Visible],
                        [Expired],
                        [ShowSalaryDetails],
                        [ShowSalaryRange],
                        [SalaryText],
                        [AdvertiserID],
                        [ApplicationMethod],
                        [ApplicationURL],
                        [AdvertiserJobTemplateLogoID],
                        [CompanyName],
                        [ShowLocationDetails],
                        [BulletPoint1],
                        [BulletPoint2],
                        [BulletPoint3],
                        [HotJob],
                        [ApplicationEmailAddress],
                        [ExpiryDate],
                        [ContactDetails],
                        [RefNo],
                        [AdvertiserName],
                        [CurrencySymbol],
                        [SalaryUpperBand],
                        [SalaryLowerBand],
                        [SalaryTypeID],
                        [SalaryTypeName],
                        [WorkTypeName],
                        [CountryID],
                        [LocationID],
                        [AreaID],
                        [CountryName],
                        [LocationName],
                        [AreaName],
                        [ProfessionID],
                        [RoleID],
                        [SiteProfessionName],
                        [SiteRoleName],
                        [BreadCrumbNavigation],
                        [WorkTypeID],
                        [JobFriendlyName],
                        [SalaryDisplay],
                        [JobItemTypeID],
                        [JobLatitude],
                        [JobLongitude],
                        [AddressStatus],
                        [HasAdvertiserLogo],
                        [CustomXML],
                        [Address],
                        [PublicTransport]
                    FROM
                        [dbo].[ViewJobSearch]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewJobSearch_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewJobSearch view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    -- Build the sql query
                    DECLARE @SQL AS nvarchar(4000)
                    SET @SQL = ' SELECT * FROM [dbo].[ViewJobSearch]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    
                    -- Execution the query
                    EXEC sp_executesql @SQL
                    
                    -- Return total count
                    SELECT @@ROWCOUNT AS TotalRowCount
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="ViewJobSearch_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewJobSearch table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    SELECT * FROM [dbo].[ViewJobSearch] {0}
                    ORDER BY {1}
    
                    -- get total count
                    SELECT @@ROWCOUNT AS TotalRowCount;
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewSalary_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the ViewSalary view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [SalaryID],
                        [SalaryTypeId],
                        [SalaryTypeName],
                        [Amount],
                        [IsFrom],
                        [CurrencyID],
                        [CurrencySymbol],
                        [SalaryDisplay],
                        [SiteID]
                    FROM
                        [dbo].[ViewSalary]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewSalary_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewSalary view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    -- Build the sql query
                    DECLARE @SQL AS nvarchar(4000)
                    SET @SQL = ' SELECT * FROM [dbo].[ViewSalary]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    
                    -- Execution the query
                    EXEC sp_executesql @SQL
                    
                    -- Return total count
                    SELECT @@ROWCOUNT AS TotalRowCount
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="ViewSalary_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewSalary table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    SELECT * FROM [dbo].[ViewSalary] {0}
                    ORDER BY {1}
    
                    -- get total count
                    SELECT @@ROWCOUNT AS TotalRowCount;
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewSiteAdvertisers_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the ViewSiteAdvertisers view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [AdvertiserID],
                        [SiteID]
                    FROM
                        [dbo].[ViewSiteAdvertisers]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewSiteAdvertisers_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewSiteAdvertisers view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    -- Build the sql query
                    DECLARE @SQL AS nvarchar(4000)
                    SET @SQL = ' SELECT * FROM [dbo].[ViewSiteAdvertisers]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    
                    -- Execution the query
                    EXEC sp_executesql @SQL
                    
                    -- Return total count
                    SELECT @@ROWCOUNT AS TotalRowCount
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="ViewSiteAdvertisers_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewSiteAdvertisers table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    SELECT * FROM [dbo].[ViewSiteAdvertisers] {0}
                    ORDER BY {1}
    
                    -- get total count
                    SELECT @@ROWCOUNT AS TotalRowCount;
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewSiteAreaLocationCountry_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the ViewSiteAreaLocationCountry view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [AreaID],
                        [SiteLocationID],
                        [LocationID],
                        [SiteAreaID],
                        [SiteAreaName],
                        [SiteLocationName],
                        [SiteID],
                        [SiteLocationSiteId],
                        [SiteCountrySiteId],
                        [CountryID],
                        [SiteCountryName],
                        [Currency]
                    FROM
                        [dbo].[ViewSiteAreaLocationCountry]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="ViewSiteAreaLocationCountry_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewSiteAreaLocationCountry view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    -- Build the sql query
                    DECLARE @SQL AS nvarchar(4000)
                    SET @SQL = ' SELECT * FROM [dbo].[ViewSiteAreaLocationCountry]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    
                    -- Execution the query
                    EXEC sp_executesql @SQL
                    
                    -- Return total count
                    SELECT @@ROWCOUNT AS TotalRowCount
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="ViewSiteAreaLocationCountry_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the ViewSiteAreaLocationCountry table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    SELECT * FROM [dbo].[ViewSiteAreaLocationCountry] {0}
                    ORDER BY {1}
    
                    -- get total count
                    SELECT @@ROWCOUNT AS TotalRowCount;
                    
                    END
                ]]></body>
            </procedure>
            
</procedures>
</root>

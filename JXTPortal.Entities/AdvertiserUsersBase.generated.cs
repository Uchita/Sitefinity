
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file AdvertiserUsers.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using JXTPortal.Entities.Validation;
#endregion

namespace JXTPortal.Entities
{
	///<summary>
	/// An object representation of the 'AdvertiserUsers' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class AdvertiserUsersBase : EntityBase, IAdvertiserUsers, IEntityId<AdvertiserUsersKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private AdvertiserUsersEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private AdvertiserUsersEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private AdvertiserUsersEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<AdvertiserUsers> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdvertiserUsersEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdvertiserUsersEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="AdvertiserUsersBase"/> instance.
		///</summary>
		public AdvertiserUsersBase()
		{
			this.entityData = new AdvertiserUsersEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="AdvertiserUsersBase"/> instance.
		///</summary>
		///<param name="_advertiserId"></param>
		///<param name="_primaryAccount"></param>
		///<param name="_userName"></param>
		///<param name="_userPassword"></param>
		///<param name="_firstName"></param>
		///<param name="_surname"></param>
		///<param name="_email"></param>
		///<param name="_applicationEmailAddress"></param>
		///<param name="_phone"></param>
		///<param name="_fax"></param>
		///<param name="_accountStatus"></param>
		///<param name="_newsletter"></param>
		///<param name="_newsletterFormat"></param>
		///<param name="_emailFormat"></param>
		///<param name="_validated"></param>
		///<param name="_validateGuid"></param>
		///<param name="_description"></param>
		///<param name="_lastLoginDate"></param>
		///<param name="_lastModified"></param>
		///<param name="_lastModifiedBy"></param>
		///<param name="_jobExpiryNotification"></param>
		///<param name="_loginAttempts"></param>
		///<param name="_lastAttemptDate"></param>
		///<param name="_status"></param>
		///<param name="_lastTermsAndConditionsDate"></param>
		///<param name="_defaultLanguageId"></param>
		///<param name="_externalAdvertiserUserId"></param>
		public AdvertiserUsersBase(System.Int32 _advertiserId, System.Boolean _primaryAccount, 
			System.String _userName, System.String _userPassword, System.String _firstName, 
			System.String _surname, System.String _email, System.String _applicationEmailAddress, 
			System.String _phone, System.String _fax, System.Int32? _accountStatus, System.Boolean _newsletter, 
			System.Int32 _newsletterFormat, System.Int32 _emailFormat, System.Boolean? _validated, 
			System.Guid? _validateGuid, System.String _description, System.DateTime? _lastLoginDate, 
			System.DateTime? _lastModified, System.Int32 _lastModifiedBy, System.Boolean _jobExpiryNotification, 
			System.Int32 _loginAttempts, System.DateTime? _lastAttemptDate, System.Int32 _status, 
			System.DateTime? _lastTermsAndConditionsDate, System.Int32? _defaultLanguageId, System.String _externalAdvertiserUserId)
		{
			this.entityData = new AdvertiserUsersEntityData();
			this.backupData = null;

			this.AdvertiserId = _advertiserId;
			this.PrimaryAccount = _primaryAccount;
			this.UserName = _userName;
			this.UserPassword = _userPassword;
			this.FirstName = _firstName;
			this.Surname = _surname;
			this.Email = _email;
			this.ApplicationEmailAddress = _applicationEmailAddress;
			this.Phone = _phone;
			this.Fax = _fax;
			this.AccountStatus = _accountStatus;
			this.Newsletter = _newsletter;
			this.NewsletterFormat = _newsletterFormat;
			this.EmailFormat = _emailFormat;
			this.Validated = _validated;
			this.ValidateGuid = _validateGuid;
			this.Description = _description;
			this.LastLoginDate = _lastLoginDate;
			this.LastModified = _lastModified;
			this.LastModifiedBy = _lastModifiedBy;
			this.JobExpiryNotification = _jobExpiryNotification;
			this.LoginAttempts = _loginAttempts;
			this.LastAttemptDate = _lastAttemptDate;
			this.Status = _status;
			this.LastTermsAndConditionsDate = _lastTermsAndConditionsDate;
			this.DefaultLanguageId = _defaultLanguageId;
			this.ExternalAdvertiserUserId = _externalAdvertiserUserId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="AdvertiserUsers"/> instance.
		///</summary>
		///<param name="_advertiserId"></param>
		///<param name="_primaryAccount"></param>
		///<param name="_userName"></param>
		///<param name="_userPassword"></param>
		///<param name="_firstName"></param>
		///<param name="_surname"></param>
		///<param name="_email"></param>
		///<param name="_applicationEmailAddress"></param>
		///<param name="_phone"></param>
		///<param name="_fax"></param>
		///<param name="_accountStatus"></param>
		///<param name="_newsletter"></param>
		///<param name="_newsletterFormat"></param>
		///<param name="_emailFormat"></param>
		///<param name="_validated"></param>
		///<param name="_validateGuid"></param>
		///<param name="_description"></param>
		///<param name="_lastLoginDate"></param>
		///<param name="_lastModified"></param>
		///<param name="_lastModifiedBy"></param>
		///<param name="_jobExpiryNotification"></param>
		///<param name="_loginAttempts"></param>
		///<param name="_lastAttemptDate"></param>
		///<param name="_status"></param>
		///<param name="_lastTermsAndConditionsDate"></param>
		///<param name="_defaultLanguageId"></param>
		///<param name="_externalAdvertiserUserId"></param>
		public static AdvertiserUsers CreateAdvertiserUsers(System.Int32 _advertiserId, System.Boolean _primaryAccount, 
			System.String _userName, System.String _userPassword, System.String _firstName, 
			System.String _surname, System.String _email, System.String _applicationEmailAddress, 
			System.String _phone, System.String _fax, System.Int32? _accountStatus, System.Boolean _newsletter, 
			System.Int32 _newsletterFormat, System.Int32 _emailFormat, System.Boolean? _validated, 
			System.Guid? _validateGuid, System.String _description, System.DateTime? _lastLoginDate, 
			System.DateTime? _lastModified, System.Int32 _lastModifiedBy, System.Boolean _jobExpiryNotification, 
			System.Int32 _loginAttempts, System.DateTime? _lastAttemptDate, System.Int32 _status, 
			System.DateTime? _lastTermsAndConditionsDate, System.Int32? _defaultLanguageId, System.String _externalAdvertiserUserId)
		{
			AdvertiserUsers newAdvertiserUsers = new AdvertiserUsers();
			newAdvertiserUsers.AdvertiserId = _advertiserId;
			newAdvertiserUsers.PrimaryAccount = _primaryAccount;
			newAdvertiserUsers.UserName = _userName;
			newAdvertiserUsers.UserPassword = _userPassword;
			newAdvertiserUsers.FirstName = _firstName;
			newAdvertiserUsers.Surname = _surname;
			newAdvertiserUsers.Email = _email;
			newAdvertiserUsers.ApplicationEmailAddress = _applicationEmailAddress;
			newAdvertiserUsers.Phone = _phone;
			newAdvertiserUsers.Fax = _fax;
			newAdvertiserUsers.AccountStatus = _accountStatus;
			newAdvertiserUsers.Newsletter = _newsletter;
			newAdvertiserUsers.NewsletterFormat = _newsletterFormat;
			newAdvertiserUsers.EmailFormat = _emailFormat;
			newAdvertiserUsers.Validated = _validated;
			newAdvertiserUsers.ValidateGuid = _validateGuid;
			newAdvertiserUsers.Description = _description;
			newAdvertiserUsers.LastLoginDate = _lastLoginDate;
			newAdvertiserUsers.LastModified = _lastModified;
			newAdvertiserUsers.LastModifiedBy = _lastModifiedBy;
			newAdvertiserUsers.JobExpiryNotification = _jobExpiryNotification;
			newAdvertiserUsers.LoginAttempts = _loginAttempts;
			newAdvertiserUsers.LastAttemptDate = _lastAttemptDate;
			newAdvertiserUsers.Status = _status;
			newAdvertiserUsers.LastTermsAndConditionsDate = _lastTermsAndConditionsDate;
			newAdvertiserUsers.DefaultLanguageId = _defaultLanguageId;
			newAdvertiserUsers.ExternalAdvertiserUserId = _externalAdvertiserUserId;
			return newAdvertiserUsers;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the AdvertiserUserId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 AdvertiserUserId
		{
			get
			{
				return this.entityData.AdvertiserUserId; 
			}
			
			set
			{
				if (this.entityData.AdvertiserUserId == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.AdvertiserUserId, this.entityData.AdvertiserUserId);
				this.entityData.AdvertiserUserId = value;
				this.EntityId.AdvertiserUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.AdvertiserUserId, this.entityData.AdvertiserUserId);
				OnPropertyChanged("AdvertiserUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdvertiserId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 AdvertiserId
		{
			get
			{
				return this.entityData.AdvertiserId; 
			}
			
			set
			{
				if (this.entityData.AdvertiserId == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.AdvertiserId, this.entityData.AdvertiserId);
				this.entityData.AdvertiserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.AdvertiserId, this.entityData.AdvertiserId);
				OnPropertyChanged("AdvertiserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PrimaryAccount property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean PrimaryAccount
		{
			get
			{
				return this.entityData.PrimaryAccount; 
			}
			
			set
			{
				if (this.entityData.PrimaryAccount == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.PrimaryAccount, this.entityData.PrimaryAccount);
				this.entityData.PrimaryAccount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.PrimaryAccount, this.entityData.PrimaryAccount);
				OnPropertyChanged("PrimaryAccount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UserName property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 255)]
		public virtual System.String UserName
		{
			get
			{
				return this.entityData.UserName; 
			}
			
			set
			{
				if (this.entityData.UserName == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.UserName, this.entityData.UserName);
				this.entityData.UserName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.UserName, this.entityData.UserName);
				OnPropertyChanged("UserName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UserPassword property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 255)]
		public virtual System.String UserPassword
		{
			get
			{
				return this.entityData.UserPassword; 
			}
			
			set
			{
				if (this.entityData.UserPassword == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.UserPassword, this.entityData.UserPassword);
				this.entityData.UserPassword = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.UserPassword, this.entityData.UserPassword);
				OnPropertyChanged("UserPassword");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FirstName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 1000)]
		public virtual System.String FirstName
		{
			get
			{
				return this.entityData.FirstName; 
			}
			
			set
			{
				if (this.entityData.FirstName == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.FirstName, this.entityData.FirstName);
				this.entityData.FirstName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.FirstName, this.entityData.FirstName);
				OnPropertyChanged("FirstName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Surname property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 1000)]
		public virtual System.String Surname
		{
			get
			{
				return this.entityData.Surname; 
			}
			
			set
			{
				if (this.entityData.Surname == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.Surname, this.entityData.Surname);
				this.entityData.Surname = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.Surname, this.entityData.Surname);
				OnPropertyChanged("Surname");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 255)]
		public virtual System.String Email
		{
			get
			{
				return this.entityData.Email; 
			}
			
			set
			{
				if (this.entityData.Email == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.Email, this.entityData.Email);
				this.entityData.Email = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.Email, this.entityData.Email);
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ApplicationEmailAddress property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String ApplicationEmailAddress
		{
			get
			{
				return this.entityData.ApplicationEmailAddress; 
			}
			
			set
			{
				if (this.entityData.ApplicationEmailAddress == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.ApplicationEmailAddress, this.entityData.ApplicationEmailAddress);
				this.entityData.ApplicationEmailAddress = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.ApplicationEmailAddress, this.entityData.ApplicationEmailAddress);
				OnPropertyChanged("ApplicationEmailAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Phone property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 40)]
		public virtual System.String Phone
		{
			get
			{
				return this.entityData.Phone; 
			}
			
			set
			{
				if (this.entityData.Phone == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.Phone, this.entityData.Phone);
				this.entityData.Phone = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.Phone, this.entityData.Phone);
				OnPropertyChanged("Phone");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Fax property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 40)]
		public virtual System.String Fax
		{
			get
			{
				return this.entityData.Fax; 
			}
			
			set
			{
				if (this.entityData.Fax == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.Fax, this.entityData.Fax);
				this.entityData.Fax = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.Fax, this.entityData.Fax);
				OnPropertyChanged("Fax");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AccountStatus property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsAccountStatusNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? AccountStatus
		{
			get
			{
				return this.entityData.AccountStatus; 
			}
			
			set
			{
				if (this.entityData.AccountStatus == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.AccountStatus, this.entityData.AccountStatus);
				this.entityData.AccountStatus = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.AccountStatus, this.entityData.AccountStatus);
				OnPropertyChanged("AccountStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Newsletter property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean Newsletter
		{
			get
			{
				return this.entityData.Newsletter; 
			}
			
			set
			{
				if (this.entityData.Newsletter == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.Newsletter, this.entityData.Newsletter);
				this.entityData.Newsletter = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.Newsletter, this.entityData.Newsletter);
				OnPropertyChanged("Newsletter");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NewsletterFormat property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 NewsletterFormat
		{
			get
			{
				return this.entityData.NewsletterFormat; 
			}
			
			set
			{
				if (this.entityData.NewsletterFormat == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.NewsletterFormat, this.entityData.NewsletterFormat);
				this.entityData.NewsletterFormat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.NewsletterFormat, this.entityData.NewsletterFormat);
				OnPropertyChanged("NewsletterFormat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EmailFormat property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 EmailFormat
		{
			get
			{
				return this.entityData.EmailFormat; 
			}
			
			set
			{
				if (this.entityData.EmailFormat == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.EmailFormat, this.entityData.EmailFormat);
				this.entityData.EmailFormat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.EmailFormat, this.entityData.EmailFormat);
				OnPropertyChanged("EmailFormat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Validated property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsValidatedNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? Validated
		{
			get
			{
				return this.entityData.Validated; 
			}
			
			set
			{
				if (this.entityData.Validated == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.Validated, this.entityData.Validated);
				this.entityData.Validated = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.Validated, this.entityData.Validated);
				OnPropertyChanged("Validated");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ValidateGuid property. 
		///		
		/// </summary>
		/// <value>This type is uniqueidentifier.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return Guid.Empty. It is up to the developer
		/// to check the value of IsValidateGuidNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Guid? ValidateGuid
		{
			get
			{
				return this.entityData.ValidateGuid; 
			}
			
			set
			{
				if (this.entityData.ValidateGuid == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.ValidateGuid, this.entityData.ValidateGuid);
				this.entityData.ValidateGuid = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.ValidateGuid, this.entityData.ValidateGuid);
				OnPropertyChanged("ValidateGuid");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Description property. 
		///		
		/// </summary>
		/// <value>This type is ntext.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Description
		{
			get
			{
				return this.entityData.Description; 
			}
			
			set
			{
				if (this.entityData.Description == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.Description, this.entityData.Description);
				this.entityData.Description = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.Description, this.entityData.Description);
				OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastLoginDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastLoginDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastLoginDate
		{
			get
			{
				return this.entityData.LastLoginDate; 
			}
			
			set
			{
				if (this.entityData.LastLoginDate == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.LastLoginDate, this.entityData.LastLoginDate);
				this.entityData.LastLoginDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.LastLoginDate, this.entityData.LastLoginDate);
				OnPropertyChanged("LastLoginDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModified property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastModifiedNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastModified
		{
			get
			{
				return this.entityData.LastModified; 
			}
			
			set
			{
				if (this.entityData.LastModified == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.LastModified, this.entityData.LastModified);
				this.entityData.LastModified = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.LastModified, this.entityData.LastModified);
				OnPropertyChanged("LastModified");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModifiedBy property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 LastModifiedBy
		{
			get
			{
				return this.entityData.LastModifiedBy; 
			}
			
			set
			{
				if (this.entityData.LastModifiedBy == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.LastModifiedBy, this.entityData.LastModifiedBy);
				this.entityData.LastModifiedBy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.LastModifiedBy, this.entityData.LastModifiedBy);
				OnPropertyChanged("LastModifiedBy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobExpiryNotification property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean JobExpiryNotification
		{
			get
			{
				return this.entityData.JobExpiryNotification; 
			}
			
			set
			{
				if (this.entityData.JobExpiryNotification == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.JobExpiryNotification, this.entityData.JobExpiryNotification);
				this.entityData.JobExpiryNotification = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.JobExpiryNotification, this.entityData.JobExpiryNotification);
				OnPropertyChanged("JobExpiryNotification");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoginAttempts property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 LoginAttempts
		{
			get
			{
				return this.entityData.LoginAttempts; 
			}
			
			set
			{
				if (this.entityData.LoginAttempts == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.LoginAttempts, this.entityData.LoginAttempts);
				this.entityData.LoginAttempts = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.LoginAttempts, this.entityData.LoginAttempts);
				OnPropertyChanged("LoginAttempts");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastAttemptDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastAttemptDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastAttemptDate
		{
			get
			{
				return this.entityData.LastAttemptDate; 
			}
			
			set
			{
				if (this.entityData.LastAttemptDate == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.LastAttemptDate, this.entityData.LastAttemptDate);
				this.entityData.LastAttemptDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.LastAttemptDate, this.entityData.LastAttemptDate);
				OnPropertyChanged("LastAttemptDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Status property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 Status
		{
			get
			{
				return this.entityData.Status; 
			}
			
			set
			{
				if (this.entityData.Status == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.Status, this.entityData.Status);
				this.entityData.Status = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.Status, this.entityData.Status);
				OnPropertyChanged("Status");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastTermsAndConditionsDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastTermsAndConditionsDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastTermsAndConditionsDate
		{
			get
			{
				return this.entityData.LastTermsAndConditionsDate; 
			}
			
			set
			{
				if (this.entityData.LastTermsAndConditionsDate == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.LastTermsAndConditionsDate, this.entityData.LastTermsAndConditionsDate);
				this.entityData.LastTermsAndConditionsDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.LastTermsAndConditionsDate, this.entityData.LastTermsAndConditionsDate);
				OnPropertyChanged("LastTermsAndConditionsDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DefaultLanguageId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsDefaultLanguageIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? DefaultLanguageId
		{
			get
			{
				return this.entityData.DefaultLanguageId; 
			}
			
			set
			{
				if (this.entityData.DefaultLanguageId == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.DefaultLanguageId, this.entityData.DefaultLanguageId);
				this.entityData.DefaultLanguageId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.DefaultLanguageId, this.entityData.DefaultLanguageId);
				OnPropertyChanged("DefaultLanguageId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ExternalAdvertiserUserId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ExternalAdvertiserUserId
		{
			get
			{
				return this.entityData.ExternalAdvertiserUserId; 
			}
			
			set
			{
				if (this.entityData.ExternalAdvertiserUserId == value)
					return;
					
				OnColumnChanging(AdvertiserUsersColumn.ExternalAdvertiserUserId, this.entityData.ExternalAdvertiserUserId);
				this.entityData.ExternalAdvertiserUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertiserUsersColumn.ExternalAdvertiserUserId, this.entityData.ExternalAdvertiserUserId);
				OnPropertyChanged("ExternalAdvertiserUserId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="Advertisers"/>.
		/// </summary>
		/// <value>The source Advertisers for AdvertiserId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Advertisers AdvertiserIdSource
      	{
            get { return entityData.AdvertiserIdSource; }
            set { entityData.AdvertiserIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EmailFormats"/>.
		/// </summary>
		/// <value>The source EmailFormats for EmailFormat.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EmailFormats EmailFormatSource
      	{
            get { return entityData.EmailFormatSource; }
            set { entityData.EmailFormatSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdminUsers"/>.
		/// </summary>
		/// <value>The source AdminUsers for LastModifiedBy.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdminUsers LastModifiedBySource
      	{
            get { return entityData.LastModifiedBySource; }
            set { entityData.LastModifiedBySource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EmailFormats"/>.
		/// </summary>
		/// <value>The source EmailFormats for NewsletterFormat.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EmailFormats NewsletterFormatSource
      	{
            get { return entityData.NewsletterFormatSource; }
            set { entityData.NewsletterFormatSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of JobApplicationNotes objects
		///	which are related to this object through the relation FK__JobApplic__Adver__67D5DE90
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobApplicationNotes> JobApplicationNotesCollection
		{
			get { return entityData.JobApplicationNotesCollection; }
			set { entityData.JobApplicationNotesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of InvoiceItem objects
		///	which are related to this object through the relation FK__InvoiceIt__Adver__3CC9A72D
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<InvoiceItem> InvoiceItemCollection
		{
			get { return entityData.InvoiceItemCollection; }
			set { entityData.InvoiceItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Jobs objects
		///	which are related to this object through the relation FK__Jobs__LastModifi__6D58170E
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Jobs> JobsCollection
		{
			get { return entityData.JobsCollection; }
			set { entityData.JobsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of InvoiceOrder objects
		///	which are related to this object through the relation FK__InvoiceOr__Adver__324C18BA
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<InvoiceOrder> InvoiceOrderCollection
		{
			get { return entityData.InvoiceOrderCollection; }
			set { entityData.InvoiceOrderCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Invoice objects
		///	which are related to this object through the relation FK__Invoice__Adverti__3710CDD7
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Invoice> InvoiceCollection
		{
			get { return entityData.InvoiceCollection; }
			set { entityData.InvoiceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobsArchive objects
		///	which are related to this object through the relation FK__JobsArchi__LastM__025333F4
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobsArchive> JobsArchiveCollection
		{
			get { return entityData.JobsArchiveCollection; }
			set { entityData.JobsArchiveCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("UserName", "User Name"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UserName", "User Name", 255));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("UserPassword", "User Password"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UserPassword", "User Password", 255));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("FirstName", "First Name"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FirstName", "First Name", 1000));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("Surname", "Surname"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Surname", "Surname", 1000));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("Email", "Email"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Email", "Email", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ApplicationEmailAddress", "Application Email Address", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Phone", "Phone", 40));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Fax", "Fax", 40));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ExternalAdvertiserUserId", "External Advertiser User Id", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "AdvertiserUsers"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"AdvertiserUserID", "AdvertiserID", "PrimaryAccount", "UserName", "UserPassword", "FirstName", "Surname", "Email", "ApplicationEmailAddress", "Phone", "Fax", "AccountStatus", "Newsletter", "NewsletterFormat", "EmailFormat", "Validated", "ValidateGUID", "Description", "LastLoginDate", "LastModified", "LastModifiedBy", "JobExpiryNotification", "LoginAttempts", "LastAttemptDate", "Status", "LastTermsAndConditionsDate", "DefaultLanguageId", "ExternalAdvertiserUserID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as AdvertiserUsersEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (AdvertiserUsers) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<AdvertiserUsers>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as AdvertiserUsers);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed AdvertiserUsers Entity 
		///</summary>
		protected virtual AdvertiserUsers Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			AdvertiserUsers copy = new AdvertiserUsers();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.AdvertiserUserId = this.AdvertiserUserId;
				copy.AdvertiserId = this.AdvertiserId;
				copy.PrimaryAccount = this.PrimaryAccount;
				copy.UserName = this.UserName;
				copy.UserPassword = this.UserPassword;
				copy.FirstName = this.FirstName;
				copy.Surname = this.Surname;
				copy.Email = this.Email;
				copy.ApplicationEmailAddress = this.ApplicationEmailAddress;
				copy.Phone = this.Phone;
				copy.Fax = this.Fax;
				copy.AccountStatus = this.AccountStatus;
				copy.Newsletter = this.Newsletter;
				copy.NewsletterFormat = this.NewsletterFormat;
				copy.EmailFormat = this.EmailFormat;
				copy.Validated = this.Validated;
				copy.ValidateGuid = this.ValidateGuid;
				copy.Description = this.Description;
				copy.LastLoginDate = this.LastLoginDate;
				copy.LastModified = this.LastModified;
				copy.LastModifiedBy = this.LastModifiedBy;
				copy.JobExpiryNotification = this.JobExpiryNotification;
				copy.LoginAttempts = this.LoginAttempts;
				copy.LastAttemptDate = this.LastAttemptDate;
				copy.Status = this.Status;
				copy.LastTermsAndConditionsDate = this.LastTermsAndConditionsDate;
				copy.DefaultLanguageId = this.DefaultLanguageId;
				copy.ExternalAdvertiserUserId = this.ExternalAdvertiserUserId;
			
			if (this.AdvertiserIdSource != null && existingCopies.Contains(this.AdvertiserIdSource))
				copy.AdvertiserIdSource = existingCopies[this.AdvertiserIdSource] as Advertisers;
			else
				copy.AdvertiserIdSource = MakeCopyOf(this.AdvertiserIdSource, existingCopies) as Advertisers;
			if (this.EmailFormatSource != null && existingCopies.Contains(this.EmailFormatSource))
				copy.EmailFormatSource = existingCopies[this.EmailFormatSource] as EmailFormats;
			else
				copy.EmailFormatSource = MakeCopyOf(this.EmailFormatSource, existingCopies) as EmailFormats;
			if (this.LastModifiedBySource != null && existingCopies.Contains(this.LastModifiedBySource))
				copy.LastModifiedBySource = existingCopies[this.LastModifiedBySource] as AdminUsers;
			else
				copy.LastModifiedBySource = MakeCopyOf(this.LastModifiedBySource, existingCopies) as AdminUsers;
			if (this.NewsletterFormatSource != null && existingCopies.Contains(this.NewsletterFormatSource))
				copy.NewsletterFormatSource = existingCopies[this.NewsletterFormatSource] as EmailFormats;
			else
				copy.NewsletterFormatSource = MakeCopyOf(this.NewsletterFormatSource, existingCopies) as EmailFormats;
		
			//deep copy nested objects
			copy.JobApplicationNotesCollection = (TList<JobApplicationNotes>) MakeCopyOf(this.JobApplicationNotesCollection, existingCopies); 
			copy.InvoiceItemCollection = (TList<InvoiceItem>) MakeCopyOf(this.InvoiceItemCollection, existingCopies); 
			copy.JobsCollection = (TList<Jobs>) MakeCopyOf(this.JobsCollection, existingCopies); 
			copy.InvoiceOrderCollection = (TList<InvoiceOrder>) MakeCopyOf(this.InvoiceOrderCollection, existingCopies); 
			copy.InvoiceCollection = (TList<Invoice>) MakeCopyOf(this.InvoiceCollection, existingCopies); 
			copy.JobsArchiveCollection = (TList<JobsArchive>) MakeCopyOf(this.JobsArchiveCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed AdvertiserUsers Entity 
		///</summary>
		public virtual AdvertiserUsers Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed AdvertiserUsers Entity which is a deep copy of the current entity.
		///</summary>
		public virtual AdvertiserUsers DeepCopy()
		{
			return EntityHelper.Clone<AdvertiserUsers>(this as AdvertiserUsers);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as AdvertiserUsersEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new AdvertiserUsersEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as AdvertiserUsersEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(AdvertiserUsersColumn column)
		{
			switch(column)
			{
					case AdvertiserUsersColumn.AdvertiserUserId:
					return entityData.AdvertiserUserId != _originalData.AdvertiserUserId;
					case AdvertiserUsersColumn.AdvertiserId:
					return entityData.AdvertiserId != _originalData.AdvertiserId;
					case AdvertiserUsersColumn.PrimaryAccount:
					return entityData.PrimaryAccount != _originalData.PrimaryAccount;
					case AdvertiserUsersColumn.UserName:
					return entityData.UserName != _originalData.UserName;
					case AdvertiserUsersColumn.UserPassword:
					return entityData.UserPassword != _originalData.UserPassword;
					case AdvertiserUsersColumn.FirstName:
					return entityData.FirstName != _originalData.FirstName;
					case AdvertiserUsersColumn.Surname:
					return entityData.Surname != _originalData.Surname;
					case AdvertiserUsersColumn.Email:
					return entityData.Email != _originalData.Email;
					case AdvertiserUsersColumn.ApplicationEmailAddress:
					return entityData.ApplicationEmailAddress != _originalData.ApplicationEmailAddress;
					case AdvertiserUsersColumn.Phone:
					return entityData.Phone != _originalData.Phone;
					case AdvertiserUsersColumn.Fax:
					return entityData.Fax != _originalData.Fax;
					case AdvertiserUsersColumn.AccountStatus:
					return entityData.AccountStatus != _originalData.AccountStatus;
					case AdvertiserUsersColumn.Newsletter:
					return entityData.Newsletter != _originalData.Newsletter;
					case AdvertiserUsersColumn.NewsletterFormat:
					return entityData.NewsletterFormat != _originalData.NewsletterFormat;
					case AdvertiserUsersColumn.EmailFormat:
					return entityData.EmailFormat != _originalData.EmailFormat;
					case AdvertiserUsersColumn.Validated:
					return entityData.Validated != _originalData.Validated;
					case AdvertiserUsersColumn.ValidateGuid:
					return entityData.ValidateGuid != _originalData.ValidateGuid;
					case AdvertiserUsersColumn.Description:
					return entityData.Description != _originalData.Description;
					case AdvertiserUsersColumn.LastLoginDate:
					return entityData.LastLoginDate != _originalData.LastLoginDate;
					case AdvertiserUsersColumn.LastModified:
					return entityData.LastModified != _originalData.LastModified;
					case AdvertiserUsersColumn.LastModifiedBy:
					return entityData.LastModifiedBy != _originalData.LastModifiedBy;
					case AdvertiserUsersColumn.JobExpiryNotification:
					return entityData.JobExpiryNotification != _originalData.JobExpiryNotification;
					case AdvertiserUsersColumn.LoginAttempts:
					return entityData.LoginAttempts != _originalData.LoginAttempts;
					case AdvertiserUsersColumn.LastAttemptDate:
					return entityData.LastAttemptDate != _originalData.LastAttemptDate;
					case AdvertiserUsersColumn.Status:
					return entityData.Status != _originalData.Status;
					case AdvertiserUsersColumn.LastTermsAndConditionsDate:
					return entityData.LastTermsAndConditionsDate != _originalData.LastTermsAndConditionsDate;
					case AdvertiserUsersColumn.DefaultLanguageId:
					return entityData.DefaultLanguageId != _originalData.DefaultLanguageId;
					case AdvertiserUsersColumn.ExternalAdvertiserUserId:
					return entityData.ExternalAdvertiserUserId != _originalData.ExternalAdvertiserUserId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< AdvertiserUsersColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.AdvertiserUserId != _originalData.AdvertiserUserId;
			result = result || entityData.AdvertiserId != _originalData.AdvertiserId;
			result = result || entityData.PrimaryAccount != _originalData.PrimaryAccount;
			result = result || entityData.UserName != _originalData.UserName;
			result = result || entityData.UserPassword != _originalData.UserPassword;
			result = result || entityData.FirstName != _originalData.FirstName;
			result = result || entityData.Surname != _originalData.Surname;
			result = result || entityData.Email != _originalData.Email;
			result = result || entityData.ApplicationEmailAddress != _originalData.ApplicationEmailAddress;
			result = result || entityData.Phone != _originalData.Phone;
			result = result || entityData.Fax != _originalData.Fax;
			result = result || entityData.AccountStatus != _originalData.AccountStatus;
			result = result || entityData.Newsletter != _originalData.Newsletter;
			result = result || entityData.NewsletterFormat != _originalData.NewsletterFormat;
			result = result || entityData.EmailFormat != _originalData.EmailFormat;
			result = result || entityData.Validated != _originalData.Validated;
			result = result || entityData.ValidateGuid != _originalData.ValidateGuid;
			result = result || entityData.Description != _originalData.Description;
			result = result || entityData.LastLoginDate != _originalData.LastLoginDate;
			result = result || entityData.LastModified != _originalData.LastModified;
			result = result || entityData.LastModifiedBy != _originalData.LastModifiedBy;
			result = result || entityData.JobExpiryNotification != _originalData.JobExpiryNotification;
			result = result || entityData.LoginAttempts != _originalData.LoginAttempts;
			result = result || entityData.LastAttemptDate != _originalData.LastAttemptDate;
			result = result || entityData.Status != _originalData.Status;
			result = result || entityData.LastTermsAndConditionsDate != _originalData.LastTermsAndConditionsDate;
			result = result || entityData.DefaultLanguageId != _originalData.DefaultLanguageId;
			result = result || entityData.ExternalAdvertiserUserId != _originalData.ExternalAdvertiserUserId;
			return result;
		}	
		
		///<summary>
		///  Returns a AdvertiserUsers Entity with the original data.
		///</summary>
		public AdvertiserUsers GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateAdvertiserUsers(
				_originalData.AdvertiserId,
				_originalData.PrimaryAccount,
				_originalData.UserName,
				_originalData.UserPassword,
				_originalData.FirstName,
				_originalData.Surname,
				_originalData.Email,
				_originalData.ApplicationEmailAddress,
				_originalData.Phone,
				_originalData.Fax,
				_originalData.AccountStatus,
				_originalData.Newsletter,
				_originalData.NewsletterFormat,
				_originalData.EmailFormat,
				_originalData.Validated,
				_originalData.ValidateGuid,
				_originalData.Description,
				_originalData.LastLoginDate,
				_originalData.LastModified,
				_originalData.LastModifiedBy,
				_originalData.JobExpiryNotification,
				_originalData.LoginAttempts,
				_originalData.LastAttemptDate,
				_originalData.Status,
				_originalData.LastTermsAndConditionsDate,
				_originalData.DefaultLanguageId,
				_originalData.ExternalAdvertiserUserId
				);
				
			return (AdvertiserUsers)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="AdvertiserUsersBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is AdvertiserUsersBase)
				return ValueEquals(this, (AdvertiserUsersBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="AdvertiserUsersBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.AdvertiserUserId.GetHashCode() ^ 
					this.AdvertiserId.GetHashCode() ^ 
					this.PrimaryAccount.GetHashCode() ^ 
					this.UserName.GetHashCode() ^ 
					this.UserPassword.GetHashCode() ^ 
					this.FirstName.GetHashCode() ^ 
					this.Surname.GetHashCode() ^ 
					this.Email.GetHashCode() ^ 
					((this.ApplicationEmailAddress == null) ? string.Empty : this.ApplicationEmailAddress.ToString()).GetHashCode() ^ 
					((this.Phone == null) ? string.Empty : this.Phone.ToString()).GetHashCode() ^ 
					((this.Fax == null) ? string.Empty : this.Fax.ToString()).GetHashCode() ^ 
					((this.AccountStatus == null) ? string.Empty : this.AccountStatus.ToString()).GetHashCode() ^ 
					this.Newsletter.GetHashCode() ^ 
					this.NewsletterFormat.GetHashCode() ^ 
					this.EmailFormat.GetHashCode() ^ 
					((this.Validated == null) ? string.Empty : this.Validated.ToString()).GetHashCode() ^ 
					((this.ValidateGuid == null) ? string.Empty : this.ValidateGuid.ToString()).GetHashCode() ^ 
					((this.Description == null) ? string.Empty : this.Description.ToString()).GetHashCode() ^ 
					((this.LastLoginDate == null) ? string.Empty : this.LastLoginDate.ToString()).GetHashCode() ^ 
					((this.LastModified == null) ? string.Empty : this.LastModified.ToString()).GetHashCode() ^ 
					this.LastModifiedBy.GetHashCode() ^ 
					this.JobExpiryNotification.GetHashCode() ^ 
					this.LoginAttempts.GetHashCode() ^ 
					((this.LastAttemptDate == null) ? string.Empty : this.LastAttemptDate.ToString()).GetHashCode() ^ 
					this.Status.GetHashCode() ^ 
					((this.LastTermsAndConditionsDate == null) ? string.Empty : this.LastTermsAndConditionsDate.ToString()).GetHashCode() ^ 
					((this.DefaultLanguageId == null) ? string.Empty : this.DefaultLanguageId.ToString()).GetHashCode() ^ 
					((this.ExternalAdvertiserUserId == null) ? string.Empty : this.ExternalAdvertiserUserId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="AdvertiserUsersBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(AdvertiserUsersBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="AdvertiserUsersBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="AdvertiserUsersBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="AdvertiserUsersBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(AdvertiserUsersBase Object1, AdvertiserUsersBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.AdvertiserUserId != Object2.AdvertiserUserId)
				equal = false;
			if (Object1.AdvertiserId != Object2.AdvertiserId)
				equal = false;
			if (Object1.PrimaryAccount != Object2.PrimaryAccount)
				equal = false;
			if (Object1.UserName != Object2.UserName)
				equal = false;
			if (Object1.UserPassword != Object2.UserPassword)
				equal = false;
			if (Object1.FirstName != Object2.FirstName)
				equal = false;
			if (Object1.Surname != Object2.Surname)
				equal = false;
			if (Object1.Email != Object2.Email)
				equal = false;
			if ( Object1.ApplicationEmailAddress != null && Object2.ApplicationEmailAddress != null )
			{
				if (Object1.ApplicationEmailAddress != Object2.ApplicationEmailAddress)
					equal = false;
			}
			else if (Object1.ApplicationEmailAddress == null ^ Object2.ApplicationEmailAddress == null )
			{
				equal = false;
			}
			if ( Object1.Phone != null && Object2.Phone != null )
			{
				if (Object1.Phone != Object2.Phone)
					equal = false;
			}
			else if (Object1.Phone == null ^ Object2.Phone == null )
			{
				equal = false;
			}
			if ( Object1.Fax != null && Object2.Fax != null )
			{
				if (Object1.Fax != Object2.Fax)
					equal = false;
			}
			else if (Object1.Fax == null ^ Object2.Fax == null )
			{
				equal = false;
			}
			if ( Object1.AccountStatus != null && Object2.AccountStatus != null )
			{
				if (Object1.AccountStatus != Object2.AccountStatus)
					equal = false;
			}
			else if (Object1.AccountStatus == null ^ Object2.AccountStatus == null )
			{
				equal = false;
			}
			if (Object1.Newsletter != Object2.Newsletter)
				equal = false;
			if (Object1.NewsletterFormat != Object2.NewsletterFormat)
				equal = false;
			if (Object1.EmailFormat != Object2.EmailFormat)
				equal = false;
			if ( Object1.Validated != null && Object2.Validated != null )
			{
				if (Object1.Validated != Object2.Validated)
					equal = false;
			}
			else if (Object1.Validated == null ^ Object2.Validated == null )
			{
				equal = false;
			}
			if ( Object1.ValidateGuid != null && Object2.ValidateGuid != null )
			{
				if (Object1.ValidateGuid != Object2.ValidateGuid)
					equal = false;
			}
			else if (Object1.ValidateGuid == null ^ Object2.ValidateGuid == null )
			{
				equal = false;
			}
			if ( Object1.Description != null && Object2.Description != null )
			{
				if (Object1.Description != Object2.Description)
					equal = false;
			}
			else if (Object1.Description == null ^ Object2.Description == null )
			{
				equal = false;
			}
			if ( Object1.LastLoginDate != null && Object2.LastLoginDate != null )
			{
				if (Object1.LastLoginDate != Object2.LastLoginDate)
					equal = false;
			}
			else if (Object1.LastLoginDate == null ^ Object2.LastLoginDate == null )
			{
				equal = false;
			}
			if ( Object1.LastModified != null && Object2.LastModified != null )
			{
				if (Object1.LastModified != Object2.LastModified)
					equal = false;
			}
			else if (Object1.LastModified == null ^ Object2.LastModified == null )
			{
				equal = false;
			}
			if (Object1.LastModifiedBy != Object2.LastModifiedBy)
				equal = false;
			if (Object1.JobExpiryNotification != Object2.JobExpiryNotification)
				equal = false;
			if (Object1.LoginAttempts != Object2.LoginAttempts)
				equal = false;
			if ( Object1.LastAttemptDate != null && Object2.LastAttemptDate != null )
			{
				if (Object1.LastAttemptDate != Object2.LastAttemptDate)
					equal = false;
			}
			else if (Object1.LastAttemptDate == null ^ Object2.LastAttemptDate == null )
			{
				equal = false;
			}
			if (Object1.Status != Object2.Status)
				equal = false;
			if ( Object1.LastTermsAndConditionsDate != null && Object2.LastTermsAndConditionsDate != null )
			{
				if (Object1.LastTermsAndConditionsDate != Object2.LastTermsAndConditionsDate)
					equal = false;
			}
			else if (Object1.LastTermsAndConditionsDate == null ^ Object2.LastTermsAndConditionsDate == null )
			{
				equal = false;
			}
			if ( Object1.DefaultLanguageId != null && Object2.DefaultLanguageId != null )
			{
				if (Object1.DefaultLanguageId != Object2.DefaultLanguageId)
					equal = false;
			}
			else if (Object1.DefaultLanguageId == null ^ Object2.DefaultLanguageId == null )
			{
				equal = false;
			}
			if ( Object1.ExternalAdvertiserUserId != null && Object2.ExternalAdvertiserUserId != null )
			{
				if (Object1.ExternalAdvertiserUserId != Object2.ExternalAdvertiserUserId)
					equal = false;
			}
			else if (Object1.ExternalAdvertiserUserId == null ^ Object2.ExternalAdvertiserUserId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((AdvertiserUsersBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static AdvertiserUsersComparer GetComparer()
        {
            return new AdvertiserUsersComparer();
        }
        */

        // Comparer delegates back to AdvertiserUsers
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(AdvertiserUsers rhs, AdvertiserUsersColumn which)
        {
            switch (which)
            {
            	
            	
            	case AdvertiserUsersColumn.AdvertiserUserId:
            		return this.AdvertiserUserId.CompareTo(rhs.AdvertiserUserId);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.AdvertiserId:
            		return this.AdvertiserId.CompareTo(rhs.AdvertiserId);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.PrimaryAccount:
            		return this.PrimaryAccount.CompareTo(rhs.PrimaryAccount);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.UserName:
            		return this.UserName.CompareTo(rhs.UserName);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.UserPassword:
            		return this.UserPassword.CompareTo(rhs.UserPassword);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.FirstName:
            		return this.FirstName.CompareTo(rhs.FirstName);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.Surname:
            		return this.Surname.CompareTo(rhs.Surname);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.Email:
            		return this.Email.CompareTo(rhs.Email);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.ApplicationEmailAddress:
            		return this.ApplicationEmailAddress.CompareTo(rhs.ApplicationEmailAddress);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.Phone:
            		return this.Phone.CompareTo(rhs.Phone);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.Fax:
            		return this.Fax.CompareTo(rhs.Fax);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.AccountStatus:
            		return this.AccountStatus.Value.CompareTo(rhs.AccountStatus.Value);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.Newsletter:
            		return this.Newsletter.CompareTo(rhs.Newsletter);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.NewsletterFormat:
            		return this.NewsletterFormat.CompareTo(rhs.NewsletterFormat);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.EmailFormat:
            		return this.EmailFormat.CompareTo(rhs.EmailFormat);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.Validated:
            		return this.Validated.Value.CompareTo(rhs.Validated.Value);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.ValidateGuid:
            		return this.ValidateGuid.Value.CompareTo(rhs.ValidateGuid.Value);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.Description:
            		return this.Description.CompareTo(rhs.Description);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.LastLoginDate:
            		return this.LastLoginDate.Value.CompareTo(rhs.LastLoginDate.Value);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.LastModified:
            		return this.LastModified.Value.CompareTo(rhs.LastModified.Value);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.LastModifiedBy:
            		return this.LastModifiedBy.CompareTo(rhs.LastModifiedBy);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.JobExpiryNotification:
            		return this.JobExpiryNotification.CompareTo(rhs.JobExpiryNotification);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.LoginAttempts:
            		return this.LoginAttempts.CompareTo(rhs.LoginAttempts);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.LastAttemptDate:
            		return this.LastAttemptDate.Value.CompareTo(rhs.LastAttemptDate.Value);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.Status:
            		return this.Status.CompareTo(rhs.Status);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.LastTermsAndConditionsDate:
            		return this.LastTermsAndConditionsDate.Value.CompareTo(rhs.LastTermsAndConditionsDate.Value);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.DefaultLanguageId:
            		return this.DefaultLanguageId.Value.CompareTo(rhs.DefaultLanguageId.Value);
            		
            		                 
            	
            	
            	case AdvertiserUsersColumn.ExternalAdvertiserUserId:
            		return this.ExternalAdvertiserUserId.CompareTo(rhs.ExternalAdvertiserUserId);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<AdvertiserUsersKey> Members
		
		// member variable for the EntityId property
		private AdvertiserUsersKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual AdvertiserUsersKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new AdvertiserUsersKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("AdvertiserUsers")
					.Append("|").Append( this.AdvertiserUserId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{29}{28}- AdvertiserUserId: {0}{28}- AdvertiserId: {1}{28}- PrimaryAccount: {2}{28}- UserName: {3}{28}- UserPassword: {4}{28}- FirstName: {5}{28}- Surname: {6}{28}- Email: {7}{28}- ApplicationEmailAddress: {8}{28}- Phone: {9}{28}- Fax: {10}{28}- AccountStatus: {11}{28}- Newsletter: {12}{28}- NewsletterFormat: {13}{28}- EmailFormat: {14}{28}- Validated: {15}{28}- ValidateGuid: {16}{28}- Description: {17}{28}- LastLoginDate: {18}{28}- LastModified: {19}{28}- LastModifiedBy: {20}{28}- JobExpiryNotification: {21}{28}- LoginAttempts: {22}{28}- LastAttemptDate: {23}{28}- Status: {24}{28}- LastTermsAndConditionsDate: {25}{28}- DefaultLanguageId: {26}{28}- ExternalAdvertiserUserId: {27}{28}{30}", 
				this.AdvertiserUserId,
				this.AdvertiserId,
				this.PrimaryAccount,
				this.UserName,
				this.UserPassword,
				this.FirstName,
				this.Surname,
				this.Email,
				(this.ApplicationEmailAddress == null) ? string.Empty : this.ApplicationEmailAddress.ToString(),
				(this.Phone == null) ? string.Empty : this.Phone.ToString(),
				(this.Fax == null) ? string.Empty : this.Fax.ToString(),
				(this.AccountStatus == null) ? string.Empty : this.AccountStatus.ToString(),
				this.Newsletter,
				this.NewsletterFormat,
				this.EmailFormat,
				(this.Validated == null) ? string.Empty : this.Validated.ToString(),
				(this.ValidateGuid == null) ? string.Empty : this.ValidateGuid.ToString(),
				(this.Description == null) ? string.Empty : this.Description.ToString(),
				(this.LastLoginDate == null) ? string.Empty : this.LastLoginDate.ToString(),
				(this.LastModified == null) ? string.Empty : this.LastModified.ToString(),
				this.LastModifiedBy,
				this.JobExpiryNotification,
				this.LoginAttempts,
				(this.LastAttemptDate == null) ? string.Empty : this.LastAttemptDate.ToString(),
				this.Status,
				(this.LastTermsAndConditionsDate == null) ? string.Empty : this.LastTermsAndConditionsDate.ToString(),
				(this.DefaultLanguageId == null) ? string.Empty : this.DefaultLanguageId.ToString(),
				(this.ExternalAdvertiserUserId == null) ? string.Empty : this.ExternalAdvertiserUserId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'AdvertiserUsers' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class AdvertiserUsersEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// AdvertiserUserID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "AdvertiserUsers"</remarks>
		public System.Int32 AdvertiserUserId;
			
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// AdvertiserID : 
		/// </summary>
		public System.Int32		  AdvertiserId = (int)0;
		
		/// <summary>
		/// PrimaryAccount : 
		/// </summary>
		public System.Boolean		  PrimaryAccount = false;
		
		/// <summary>
		/// UserName : 
		/// </summary>
		public System.String		  UserName = string.Empty;
		
		/// <summary>
		/// UserPassword : 
		/// </summary>
		public System.String		  UserPassword = string.Empty;
		
		/// <summary>
		/// FirstName : 
		/// </summary>
		public System.String		  FirstName = string.Empty;
		
		/// <summary>
		/// Surname : 
		/// </summary>
		public System.String		  Surname = string.Empty;
		
		/// <summary>
		/// Email : 
		/// </summary>
		public System.String		  Email = string.Empty;
		
		/// <summary>
		/// ApplicationEmailAddress : 
		/// </summary>
		public System.String		  ApplicationEmailAddress = null;
		
		/// <summary>
		/// Phone : 
		/// </summary>
		public System.String		  Phone = null;
		
		/// <summary>
		/// Fax : 
		/// </summary>
		public System.String		  Fax = null;
		
		/// <summary>
		/// AccountStatus : 
		/// </summary>
		public System.Int32?		  AccountStatus = null;
		
		/// <summary>
		/// Newsletter : 
		/// </summary>
		public System.Boolean		  Newsletter = false;
		
		/// <summary>
		/// NewsletterFormat : 
		/// </summary>
		public System.Int32		  NewsletterFormat = (int)0;
		
		/// <summary>
		/// EmailFormat : 
		/// </summary>
		public System.Int32		  EmailFormat = (int)0;
		
		/// <summary>
		/// Validated : 
		/// </summary>
		public System.Boolean?		  Validated = null;
		
		/// <summary>
		/// ValidateGUID : 
		/// </summary>
		public System.Guid?		  ValidateGuid = null;
		
		/// <summary>
		/// Description : 
		/// </summary>
		public System.String		  Description = null;
		
		/// <summary>
		/// LastLoginDate : 
		/// </summary>
		public System.DateTime?		  LastLoginDate = null;
		
		/// <summary>
		/// LastModified : 
		/// </summary>
		public System.DateTime?		  LastModified = null;
		
		/// <summary>
		/// LastModifiedBy : 
		/// </summary>
		public System.Int32		  LastModifiedBy = (int)0;
		
		/// <summary>
		/// JobExpiryNotification : 
		/// </summary>
		public System.Boolean		  JobExpiryNotification = false;
		
		/// <summary>
		/// LoginAttempts : 
		/// </summary>
		public System.Int32		  LoginAttempts = (int)0;
		
		/// <summary>
		/// LastAttemptDate : 
		/// </summary>
		public System.DateTime?		  LastAttemptDate = null;
		
		/// <summary>
		/// Status : 
		/// </summary>
		public System.Int32		  Status = (int)0;
		
		/// <summary>
		/// LastTermsAndConditionsDate : 
		/// </summary>
		public System.DateTime?		  LastTermsAndConditionsDate = null;
		
		/// <summary>
		/// DefaultLanguageId : 
		/// </summary>
		public System.Int32?		  DefaultLanguageId = null;
		
		/// <summary>
		/// ExternalAdvertiserUserID : 
		/// </summary>
		public System.String		  ExternalAdvertiserUserId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private Advertisers _advertiserIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Advertisers"/>.
		/// </summary>
		/// <value>The source Advertisers for AdvertiserId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual Advertisers AdvertiserIdSource
      	{
            get { return this._advertiserIdSource; }
            set { this._advertiserIdSource = value; }
      	}
		private EmailFormats _emailFormatSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EmailFormats"/>.
		/// </summary>
		/// <value>The source EmailFormats for EmailFormat.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EmailFormats EmailFormatSource
      	{
            get { return this._emailFormatSource; }
            set { this._emailFormatSource = value; }
      	}
		private AdminUsers _lastModifiedBySource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdminUsers"/>.
		/// </summary>
		/// <value>The source AdminUsers for LastModifiedBy.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdminUsers LastModifiedBySource
      	{
            get { return this._lastModifiedBySource; }
            set { this._lastModifiedBySource = value; }
      	}
		private EmailFormats _newsletterFormatSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EmailFormats"/>.
		/// </summary>
		/// <value>The source EmailFormats for NewsletterFormat.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EmailFormats NewsletterFormatSource
      	{
            get { return this._newsletterFormatSource; }
            set { this._newsletterFormatSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region JobApplicationNotesCollection
		
		private TList<JobApplicationNotes> _jobApplicationNotesAdvertiserUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobApplicationNotesAdvertiserUserId
		/// </summary>
		
		public TList<JobApplicationNotes> JobApplicationNotesCollection
		{
			get
			{
				if (_jobApplicationNotesAdvertiserUserId == null)
				{
				_jobApplicationNotesAdvertiserUserId = new TList<JobApplicationNotes>();
				}
	
				return _jobApplicationNotesAdvertiserUserId;
			}
			set { _jobApplicationNotesAdvertiserUserId = value; }
		}
		
		#endregion

		#region InvoiceItemCollection
		
		private TList<InvoiceItem> _invoiceItemAdvertiserUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _invoiceItemAdvertiserUserId
		/// </summary>
		
		public TList<InvoiceItem> InvoiceItemCollection
		{
			get
			{
				if (_invoiceItemAdvertiserUserId == null)
				{
				_invoiceItemAdvertiserUserId = new TList<InvoiceItem>();
				}
	
				return _invoiceItemAdvertiserUserId;
			}
			set { _invoiceItemAdvertiserUserId = value; }
		}
		
		#endregion

		#region JobsCollection
		
		private TList<Jobs> _jobsLastModifiedByAdvertiserUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobsLastModifiedByAdvertiserUserId
		/// </summary>
		
		public TList<Jobs> JobsCollection
		{
			get
			{
				if (_jobsLastModifiedByAdvertiserUserId == null)
				{
				_jobsLastModifiedByAdvertiserUserId = new TList<Jobs>();
				}
	
				return _jobsLastModifiedByAdvertiserUserId;
			}
			set { _jobsLastModifiedByAdvertiserUserId = value; }
		}
		
		#endregion

		#region InvoiceOrderCollection
		
		private TList<InvoiceOrder> _invoiceOrderAdvertiserUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _invoiceOrderAdvertiserUserId
		/// </summary>
		
		public TList<InvoiceOrder> InvoiceOrderCollection
		{
			get
			{
				if (_invoiceOrderAdvertiserUserId == null)
				{
				_invoiceOrderAdvertiserUserId = new TList<InvoiceOrder>();
				}
	
				return _invoiceOrderAdvertiserUserId;
			}
			set { _invoiceOrderAdvertiserUserId = value; }
		}
		
		#endregion

		#region InvoiceCollection
		
		private TList<Invoice> _invoiceAdvertiserUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _invoiceAdvertiserUserId
		/// </summary>
		
		public TList<Invoice> InvoiceCollection
		{
			get
			{
				if (_invoiceAdvertiserUserId == null)
				{
				_invoiceAdvertiserUserId = new TList<Invoice>();
				}
	
				return _invoiceAdvertiserUserId;
			}
			set { _invoiceAdvertiserUserId = value; }
		}
		
		#endregion

		#region JobsArchiveCollection
		
		private TList<JobsArchive> _jobsArchiveLastModifiedByAdvertiserUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobsArchiveLastModifiedByAdvertiserUserId
		/// </summary>
		
		public TList<JobsArchive> JobsArchiveCollection
		{
			get
			{
				if (_jobsArchiveLastModifiedByAdvertiserUserId == null)
				{
				_jobsArchiveLastModifiedByAdvertiserUserId = new TList<JobsArchive>();
				}
	
				return _jobsArchiveLastModifiedByAdvertiserUserId;
			}
			set { _jobsArchiveLastModifiedByAdvertiserUserId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			AdvertiserUsersEntityData _tmp = new AdvertiserUsersEntityData();
						
			_tmp.AdvertiserUserId = this.AdvertiserUserId;
			
			_tmp.AdvertiserId = this.AdvertiserId;
			_tmp.PrimaryAccount = this.PrimaryAccount;
			_tmp.UserName = this.UserName;
			_tmp.UserPassword = this.UserPassword;
			_tmp.FirstName = this.FirstName;
			_tmp.Surname = this.Surname;
			_tmp.Email = this.Email;
			_tmp.ApplicationEmailAddress = this.ApplicationEmailAddress;
			_tmp.Phone = this.Phone;
			_tmp.Fax = this.Fax;
			_tmp.AccountStatus = this.AccountStatus;
			_tmp.Newsletter = this.Newsletter;
			_tmp.NewsletterFormat = this.NewsletterFormat;
			_tmp.EmailFormat = this.EmailFormat;
			_tmp.Validated = this.Validated;
			_tmp.ValidateGuid = this.ValidateGuid;
			_tmp.Description = this.Description;
			_tmp.LastLoginDate = this.LastLoginDate;
			_tmp.LastModified = this.LastModified;
			_tmp.LastModifiedBy = this.LastModifiedBy;
			_tmp.JobExpiryNotification = this.JobExpiryNotification;
			_tmp.LoginAttempts = this.LoginAttempts;
			_tmp.LastAttemptDate = this.LastAttemptDate;
			_tmp.Status = this.Status;
			_tmp.LastTermsAndConditionsDate = this.LastTermsAndConditionsDate;
			_tmp.DefaultLanguageId = this.DefaultLanguageId;
			_tmp.ExternalAdvertiserUserId = this.ExternalAdvertiserUserId;
			
			#region Source Parent Composite Entities
			if (this.AdvertiserIdSource != null)
				_tmp.AdvertiserIdSource = MakeCopyOf(this.AdvertiserIdSource) as Advertisers;
			if (this.EmailFormatSource != null)
				_tmp.EmailFormatSource = MakeCopyOf(this.EmailFormatSource) as EmailFormats;
			if (this.LastModifiedBySource != null)
				_tmp.LastModifiedBySource = MakeCopyOf(this.LastModifiedBySource) as AdminUsers;
			if (this.NewsletterFormatSource != null)
				_tmp.NewsletterFormatSource = MakeCopyOf(this.NewsletterFormatSource) as EmailFormats;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._jobApplicationNotesAdvertiserUserId != null)
				_tmp.JobApplicationNotesCollection = (TList<JobApplicationNotes>) MakeCopyOf(this.JobApplicationNotesCollection); 
			if (this._invoiceItemAdvertiserUserId != null)
				_tmp.InvoiceItemCollection = (TList<InvoiceItem>) MakeCopyOf(this.InvoiceItemCollection); 
			if (this._jobsLastModifiedByAdvertiserUserId != null)
				_tmp.JobsCollection = (TList<Jobs>) MakeCopyOf(this.JobsCollection); 
			if (this._invoiceOrderAdvertiserUserId != null)
				_tmp.InvoiceOrderCollection = (TList<InvoiceOrder>) MakeCopyOf(this.InvoiceOrderCollection); 
			if (this._invoiceAdvertiserUserId != null)
				_tmp.InvoiceCollection = (TList<Invoice>) MakeCopyOf(this.InvoiceCollection); 
			if (this._jobsArchiveLastModifiedByAdvertiserUserId != null)
				_tmp.JobsArchiveCollection = (TList<JobsArchive>) MakeCopyOf(this.JobsArchiveCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			AdvertiserUsersEntityData _tmp = new AdvertiserUsersEntityData();
						
			_tmp.AdvertiserUserId = this.AdvertiserUserId;
			
			_tmp.AdvertiserId = this.AdvertiserId;
			_tmp.PrimaryAccount = this.PrimaryAccount;
			_tmp.UserName = this.UserName;
			_tmp.UserPassword = this.UserPassword;
			_tmp.FirstName = this.FirstName;
			_tmp.Surname = this.Surname;
			_tmp.Email = this.Email;
			_tmp.ApplicationEmailAddress = this.ApplicationEmailAddress;
			_tmp.Phone = this.Phone;
			_tmp.Fax = this.Fax;
			_tmp.AccountStatus = this.AccountStatus;
			_tmp.Newsletter = this.Newsletter;
			_tmp.NewsletterFormat = this.NewsletterFormat;
			_tmp.EmailFormat = this.EmailFormat;
			_tmp.Validated = this.Validated;
			_tmp.ValidateGuid = this.ValidateGuid;
			_tmp.Description = this.Description;
			_tmp.LastLoginDate = this.LastLoginDate;
			_tmp.LastModified = this.LastModified;
			_tmp.LastModifiedBy = this.LastModifiedBy;
			_tmp.JobExpiryNotification = this.JobExpiryNotification;
			_tmp.LoginAttempts = this.LoginAttempts;
			_tmp.LastAttemptDate = this.LastAttemptDate;
			_tmp.Status = this.Status;
			_tmp.LastTermsAndConditionsDate = this.LastTermsAndConditionsDate;
			_tmp.DefaultLanguageId = this.DefaultLanguageId;
			_tmp.ExternalAdvertiserUserId = this.ExternalAdvertiserUserId;
			
			#region Source Parent Composite Entities
			if (this.AdvertiserIdSource != null && existingCopies.Contains(this.AdvertiserIdSource))
				_tmp.AdvertiserIdSource = existingCopies[this.AdvertiserIdSource] as Advertisers;
			else
				_tmp.AdvertiserIdSource = MakeCopyOf(this.AdvertiserIdSource, existingCopies) as Advertisers;
			if (this.EmailFormatSource != null && existingCopies.Contains(this.EmailFormatSource))
				_tmp.EmailFormatSource = existingCopies[this.EmailFormatSource] as EmailFormats;
			else
				_tmp.EmailFormatSource = MakeCopyOf(this.EmailFormatSource, existingCopies) as EmailFormats;
			if (this.LastModifiedBySource != null && existingCopies.Contains(this.LastModifiedBySource))
				_tmp.LastModifiedBySource = existingCopies[this.LastModifiedBySource] as AdminUsers;
			else
				_tmp.LastModifiedBySource = MakeCopyOf(this.LastModifiedBySource, existingCopies) as AdminUsers;
			if (this.NewsletterFormatSource != null && existingCopies.Contains(this.NewsletterFormatSource))
				_tmp.NewsletterFormatSource = existingCopies[this.NewsletterFormatSource] as EmailFormats;
			else
				_tmp.NewsletterFormatSource = MakeCopyOf(this.NewsletterFormatSource, existingCopies) as EmailFormats;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.JobApplicationNotesCollection = (TList<JobApplicationNotes>) MakeCopyOf(this.JobApplicationNotesCollection, existingCopies); 
			_tmp.InvoiceItemCollection = (TList<InvoiceItem>) MakeCopyOf(this.InvoiceItemCollection, existingCopies); 
			_tmp.JobsCollection = (TList<Jobs>) MakeCopyOf(this.JobsCollection, existingCopies); 
			_tmp.InvoiceOrderCollection = (TList<InvoiceOrder>) MakeCopyOf(this.InvoiceOrderCollection, existingCopies); 
			_tmp.InvoiceCollection = (TList<Invoice>) MakeCopyOf(this.InvoiceCollection, existingCopies); 
			_tmp.JobsArchiveCollection = (TList<JobsArchive>) MakeCopyOf(this.JobsArchiveCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdvertiserUsersColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(AdvertiserUsersColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdvertiserUsersColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(AdvertiserUsersColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdvertiserUsersColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(AdvertiserUsersColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				AdvertiserUsersEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new AdvertiserUsersEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdvertiserUsersColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(AdvertiserUsersColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				AdvertiserUsersEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new AdvertiserUsersEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region AdvertiserUsersEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="AdvertiserUsers"/> object.
	/// </remarks>
	public class AdvertiserUsersEventArgs : System.EventArgs
	{
		private AdvertiserUsersColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the AdvertiserUsersEventArgs class.
		///</summary>
		public AdvertiserUsersEventArgs(AdvertiserUsersColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the AdvertiserUsersEventArgs class.
		///</summary>
		public AdvertiserUsersEventArgs(AdvertiserUsersColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The AdvertiserUsersColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="AdvertiserUsersColumn" />
		public AdvertiserUsersColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all AdvertiserUsers related events.
	///</summary>
	public delegate void AdvertiserUsersEventHandler(object sender, AdvertiserUsersEventArgs e);
	
	#region AdvertiserUsersComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class AdvertiserUsersComparer : System.Collections.Generic.IComparer<AdvertiserUsers>
	{
		AdvertiserUsersColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:AdvertiserUsersComparer"/> class.
        /// </summary>
		public AdvertiserUsersComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:AdvertiserUsersComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public AdvertiserUsersComparer(AdvertiserUsersColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="AdvertiserUsers"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="AdvertiserUsers"/> to compare.</param>
        /// <param name="b">The second <c>AdvertiserUsers</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(AdvertiserUsers a, AdvertiserUsers b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(AdvertiserUsers entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(AdvertiserUsers a, AdvertiserUsers b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public AdvertiserUsersColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region AdvertiserUsersKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="AdvertiserUsers"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class AdvertiserUsersKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AdvertiserUsersKey class.
		/// </summary>
		public AdvertiserUsersKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the AdvertiserUsersKey class.
		/// </summary>
		public AdvertiserUsersKey(AdvertiserUsersBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.AdvertiserUserId = entity.AdvertiserUserId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the AdvertiserUsersKey class.
		/// </summary>
		public AdvertiserUsersKey(System.Int32 _advertiserUserId)
		{
			#region Init Properties

			this.AdvertiserUserId = _advertiserUserId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private AdvertiserUsersBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public AdvertiserUsersBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the AdvertiserUserId property
		private System.Int32 _advertiserUserId;
		
		/// <summary>
		/// Gets or sets the AdvertiserUserId property.
		/// </summary>
		public System.Int32 AdvertiserUserId
		{
			get { return _advertiserUserId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.AdvertiserUserId = value;
				
				_advertiserUserId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				AdvertiserUserId = ( values["AdvertiserUserId"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["AdvertiserUserId"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("AdvertiserUserId", AdvertiserUserId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("AdvertiserUserId: {0}{1}",
								AdvertiserUserId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region AdvertiserUsersColumn Enum
	
	/// <summary>
	/// Enumerate the AdvertiserUsers columns.
	/// </summary>
	[Serializable]
	public enum AdvertiserUsersColumn : int
	{
		/// <summary>
		/// AdvertiserUserId : 
		/// </summary>
		[EnumTextValue("AdvertiserUserID")]
		[ColumnEnum("AdvertiserUserID", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		AdvertiserUserId = 1,
		/// <summary>
		/// AdvertiserId : 
		/// </summary>
		[EnumTextValue("AdvertiserID")]
		[ColumnEnum("AdvertiserID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		AdvertiserId = 2,
		/// <summary>
		/// PrimaryAccount : 
		/// </summary>
		[EnumTextValue("PrimaryAccount")]
		[ColumnEnum("PrimaryAccount", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		PrimaryAccount = 3,
		/// <summary>
		/// UserName : 
		/// </summary>
		[EnumTextValue("UserName")]
		[ColumnEnum("UserName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 255)]
		UserName = 4,
		/// <summary>
		/// UserPassword : 
		/// </summary>
		[EnumTextValue("UserPassword")]
		[ColumnEnum("UserPassword", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 255)]
		UserPassword = 5,
		/// <summary>
		/// FirstName : 
		/// </summary>
		[EnumTextValue("FirstName")]
		[ColumnEnum("FirstName", typeof(System.String), System.Data.DbType.String, false, false, false, 1000)]
		FirstName = 6,
		/// <summary>
		/// Surname : 
		/// </summary>
		[EnumTextValue("Surname")]
		[ColumnEnum("Surname", typeof(System.String), System.Data.DbType.String, false, false, false, 1000)]
		Surname = 7,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 255)]
		Email = 8,
		/// <summary>
		/// ApplicationEmailAddress : 
		/// </summary>
		[EnumTextValue("ApplicationEmailAddress")]
		[ColumnEnum("ApplicationEmailAddress", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ApplicationEmailAddress = 9,
		/// <summary>
		/// Phone : 
		/// </summary>
		[EnumTextValue("Phone")]
		[ColumnEnum("Phone", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 40)]
		Phone = 10,
		/// <summary>
		/// Fax : 
		/// </summary>
		[EnumTextValue("Fax")]
		[ColumnEnum("Fax", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 40)]
		Fax = 11,
		/// <summary>
		/// AccountStatus : 
		/// </summary>
		[EnumTextValue("AccountStatus")]
		[ColumnEnum("AccountStatus", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		AccountStatus = 12,
		/// <summary>
		/// Newsletter : 
		/// </summary>
		[EnumTextValue("Newsletter")]
		[ColumnEnum("Newsletter", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		Newsletter = 13,
		/// <summary>
		/// NewsletterFormat : 
		/// </summary>
		[EnumTextValue("NewsletterFormat")]
		[ColumnEnum("NewsletterFormat", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		NewsletterFormat = 14,
		/// <summary>
		/// EmailFormat : 
		/// </summary>
		[EnumTextValue("EmailFormat")]
		[ColumnEnum("EmailFormat", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		EmailFormat = 15,
		/// <summary>
		/// Validated : 
		/// </summary>
		[EnumTextValue("Validated")]
		[ColumnEnum("Validated", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		Validated = 16,
		/// <summary>
		/// ValidateGuid : 
		/// </summary>
		[EnumTextValue("ValidateGUID")]
		[ColumnEnum("ValidateGUID", typeof(System.Guid), System.Data.DbType.Guid, false, false, true)]
		ValidateGuid = 17,
		/// <summary>
		/// Description : 
		/// </summary>
		[EnumTextValue("Description")]
		[ColumnEnum("Description", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Description = 18,
		/// <summary>
		/// LastLoginDate : 
		/// </summary>
		[EnumTextValue("LastLoginDate")]
		[ColumnEnum("LastLoginDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastLoginDate = 19,
		/// <summary>
		/// LastModified : 
		/// </summary>
		[EnumTextValue("LastModified")]
		[ColumnEnum("LastModified", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastModified = 20,
		/// <summary>
		/// LastModifiedBy : 
		/// </summary>
		[EnumTextValue("LastModifiedBy")]
		[ColumnEnum("LastModifiedBy", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		LastModifiedBy = 21,
		/// <summary>
		/// JobExpiryNotification : 
		/// </summary>
		[EnumTextValue("JobExpiryNotification")]
		[ColumnEnum("JobExpiryNotification", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		JobExpiryNotification = 22,
		/// <summary>
		/// LoginAttempts : 
		/// </summary>
		[EnumTextValue("LoginAttempts")]
		[ColumnEnum("LoginAttempts", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		LoginAttempts = 23,
		/// <summary>
		/// LastAttemptDate : 
		/// </summary>
		[EnumTextValue("LastAttemptDate")]
		[ColumnEnum("LastAttemptDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastAttemptDate = 24,
		/// <summary>
		/// Status : 
		/// </summary>
		[EnumTextValue("Status")]
		[ColumnEnum("Status", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		Status = 25,
		/// <summary>
		/// LastTermsAndConditionsDate : 
		/// </summary>
		[EnumTextValue("LastTermsAndConditionsDate")]
		[ColumnEnum("LastTermsAndConditionsDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastTermsAndConditionsDate = 26,
		/// <summary>
		/// DefaultLanguageId : 
		/// </summary>
		[EnumTextValue("DefaultLanguageId")]
		[ColumnEnum("DefaultLanguageId", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		DefaultLanguageId = 27,
		/// <summary>
		/// ExternalAdvertiserUserId : 
		/// </summary>
		[EnumTextValue("ExternalAdvertiserUserID")]
		[ColumnEnum("ExternalAdvertiserUserID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ExternalAdvertiserUserId = 28
	}//End enum

	#endregion AdvertiserUsersColumn Enum

} // end namespace

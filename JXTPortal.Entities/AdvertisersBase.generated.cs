
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Advertisers.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using JXTPortal.Entities.Validation;
#endregion

namespace JXTPortal.Entities
{
	///<summary>
	/// An object representation of the 'Advertisers' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class AdvertisersBase : EntityBase, IAdvertisers, IEntityId<AdvertisersKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private AdvertisersEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private AdvertisersEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private AdvertisersEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<Advertisers> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdvertisersEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdvertisersEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="AdvertisersBase"/> instance.
		///</summary>
		public AdvertisersBase()
		{
			this.entityData = new AdvertisersEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="AdvertisersBase"/> instance.
		///</summary>
		///<param name="_siteId"></param>
		///<param name="_advertiserAccountTypeId"></param>
		///<param name="_advertiserBusinessTypeId"></param>
		///<param name="_advertiserAccountStatusId"></param>
		///<param name="_companyName"></param>
		///<param name="_businessNumber"></param>
		///<param name="_streetAddress1"></param>
		///<param name="_streetAddress2"></param>
		///<param name="_lastModified"></param>
		///<param name="_lastModifiedBy"></param>
		///<param name="_postalAddress1"></param>
		///<param name="_postalAddress2"></param>
		///<param name="_webAddress"></param>
		///<param name="_noOfEmployees"></param>
		///<param name="_firstApprovedDate"></param>
		///<param name="_profile"></param>
		///<param name="_charityNumber"></param>
		///<param name="_searchField"></param>
		///<param name="_freeTrialStartDate"></param>
		///<param name="_freeTrialEndDate"></param>
		///<param name="_accountsPayableEmail"></param>
		///<param name="_requireLogonForExternalApplication"></param>
		///<param name="_advertiserLogo"></param>
		///<param name="_linkedInLogo"></param>
		///<param name="_linkedInCompanyId"></param>
		///<param name="_linkedInEmail"></param>
		///<param name="_registerDate"></param>
		///<param name="_externalAdvertiserId"></param>
		///<param name="_videoLink"></param>
		///<param name="_industry"></param>
		///<param name="_nominatedCompanyRole"></param>
		///<param name="_nominatedCompanyFirstName"></param>
		///<param name="_nominatedCompanyLastName"></param>
		///<param name="_nominatedCompanyEmailAddress"></param>
		///<param name="_nominatedCompanyPhone"></param>
		///<param name="_preferredContactMethod"></param>
		///<param name="_advertiserLogoUrl"></param>
		public AdvertisersBase(System.Int32? _siteId, System.Int32 _advertiserAccountTypeId, 
			System.Int32 _advertiserBusinessTypeId, System.Int32 _advertiserAccountStatusId, System.String _companyName, 
			System.String _businessNumber, System.String _streetAddress1, System.String _streetAddress2, 
			System.DateTime _lastModified, System.Int32 _lastModifiedBy, System.String _postalAddress1, 
			System.String _postalAddress2, System.String _webAddress, System.String _noOfEmployees, 
			System.DateTime? _firstApprovedDate, System.String _profile, System.String _charityNumber, 
			System.String _searchField, System.DateTime? _freeTrialStartDate, System.DateTime? _freeTrialEndDate, 
			System.String _accountsPayableEmail, System.Boolean _requireLogonForExternalApplication, System.Byte[] _advertiserLogo, 
			System.String _linkedInLogo, System.String _linkedInCompanyId, System.String _linkedInEmail, 
			System.DateTime? _registerDate, System.String _externalAdvertiserId, System.String _videoLink, 
			System.String _industry, System.String _nominatedCompanyRole, System.String _nominatedCompanyFirstName, 
			System.String _nominatedCompanyLastName, System.String _nominatedCompanyEmailAddress, System.String _nominatedCompanyPhone, 
			System.Int32? _preferredContactMethod, System.String _advertiserLogoUrl)
		{
			this.entityData = new AdvertisersEntityData();
			this.backupData = null;

			this.SiteId = _siteId;
			this.AdvertiserAccountTypeId = _advertiserAccountTypeId;
			this.AdvertiserBusinessTypeId = _advertiserBusinessTypeId;
			this.AdvertiserAccountStatusId = _advertiserAccountStatusId;
			this.CompanyName = _companyName;
			this.BusinessNumber = _businessNumber;
			this.StreetAddress1 = _streetAddress1;
			this.StreetAddress2 = _streetAddress2;
			this.LastModified = _lastModified;
			this.LastModifiedBy = _lastModifiedBy;
			this.PostalAddress1 = _postalAddress1;
			this.PostalAddress2 = _postalAddress2;
			this.WebAddress = _webAddress;
			this.NoOfEmployees = _noOfEmployees;
			this.FirstApprovedDate = _firstApprovedDate;
			this.Profile = _profile;
			this.CharityNumber = _charityNumber;
			this.SearchField = _searchField;
			this.FreeTrialStartDate = _freeTrialStartDate;
			this.FreeTrialEndDate = _freeTrialEndDate;
			this.AccountsPayableEmail = _accountsPayableEmail;
			this.RequireLogonForExternalApplication = _requireLogonForExternalApplication;
			this.AdvertiserLogo = _advertiserLogo;
			this.LinkedInLogo = _linkedInLogo;
			this.LinkedInCompanyId = _linkedInCompanyId;
			this.LinkedInEmail = _linkedInEmail;
			this.RegisterDate = _registerDate;
			this.ExternalAdvertiserId = _externalAdvertiserId;
			this.VideoLink = _videoLink;
			this.Industry = _industry;
			this.NominatedCompanyRole = _nominatedCompanyRole;
			this.NominatedCompanyFirstName = _nominatedCompanyFirstName;
			this.NominatedCompanyLastName = _nominatedCompanyLastName;
			this.NominatedCompanyEmailAddress = _nominatedCompanyEmailAddress;
			this.NominatedCompanyPhone = _nominatedCompanyPhone;
			this.PreferredContactMethod = _preferredContactMethod;
			this.AdvertiserLogoUrl = _advertiserLogoUrl;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Advertisers"/> instance.
		///</summary>
		///<param name="_siteId"></param>
		///<param name="_advertiserAccountTypeId"></param>
		///<param name="_advertiserBusinessTypeId"></param>
		///<param name="_advertiserAccountStatusId"></param>
		///<param name="_companyName"></param>
		///<param name="_businessNumber"></param>
		///<param name="_streetAddress1"></param>
		///<param name="_streetAddress2"></param>
		///<param name="_lastModified"></param>
		///<param name="_lastModifiedBy"></param>
		///<param name="_postalAddress1"></param>
		///<param name="_postalAddress2"></param>
		///<param name="_webAddress"></param>
		///<param name="_noOfEmployees"></param>
		///<param name="_firstApprovedDate"></param>
		///<param name="_profile"></param>
		///<param name="_charityNumber"></param>
		///<param name="_searchField"></param>
		///<param name="_freeTrialStartDate"></param>
		///<param name="_freeTrialEndDate"></param>
		///<param name="_accountsPayableEmail"></param>
		///<param name="_requireLogonForExternalApplication"></param>
		///<param name="_advertiserLogo"></param>
		///<param name="_linkedInLogo"></param>
		///<param name="_linkedInCompanyId"></param>
		///<param name="_linkedInEmail"></param>
		///<param name="_registerDate"></param>
		///<param name="_externalAdvertiserId"></param>
		///<param name="_videoLink"></param>
		///<param name="_industry"></param>
		///<param name="_nominatedCompanyRole"></param>
		///<param name="_nominatedCompanyFirstName"></param>
		///<param name="_nominatedCompanyLastName"></param>
		///<param name="_nominatedCompanyEmailAddress"></param>
		///<param name="_nominatedCompanyPhone"></param>
		///<param name="_preferredContactMethod"></param>
		///<param name="_advertiserLogoUrl"></param>
		public static Advertisers CreateAdvertisers(System.Int32? _siteId, System.Int32 _advertiserAccountTypeId, 
			System.Int32 _advertiserBusinessTypeId, System.Int32 _advertiserAccountStatusId, System.String _companyName, 
			System.String _businessNumber, System.String _streetAddress1, System.String _streetAddress2, 
			System.DateTime _lastModified, System.Int32 _lastModifiedBy, System.String _postalAddress1, 
			System.String _postalAddress2, System.String _webAddress, System.String _noOfEmployees, 
			System.DateTime? _firstApprovedDate, System.String _profile, System.String _charityNumber, 
			System.String _searchField, System.DateTime? _freeTrialStartDate, System.DateTime? _freeTrialEndDate, 
			System.String _accountsPayableEmail, System.Boolean _requireLogonForExternalApplication, System.Byte[] _advertiserLogo, 
			System.String _linkedInLogo, System.String _linkedInCompanyId, System.String _linkedInEmail, 
			System.DateTime? _registerDate, System.String _externalAdvertiserId, System.String _videoLink, 
			System.String _industry, System.String _nominatedCompanyRole, System.String _nominatedCompanyFirstName, 
			System.String _nominatedCompanyLastName, System.String _nominatedCompanyEmailAddress, System.String _nominatedCompanyPhone, 
			System.Int32? _preferredContactMethod, System.String _advertiserLogoUrl)
		{
			Advertisers newAdvertisers = new Advertisers();
			newAdvertisers.SiteId = _siteId;
			newAdvertisers.AdvertiserAccountTypeId = _advertiserAccountTypeId;
			newAdvertisers.AdvertiserBusinessTypeId = _advertiserBusinessTypeId;
			newAdvertisers.AdvertiserAccountStatusId = _advertiserAccountStatusId;
			newAdvertisers.CompanyName = _companyName;
			newAdvertisers.BusinessNumber = _businessNumber;
			newAdvertisers.StreetAddress1 = _streetAddress1;
			newAdvertisers.StreetAddress2 = _streetAddress2;
			newAdvertisers.LastModified = _lastModified;
			newAdvertisers.LastModifiedBy = _lastModifiedBy;
			newAdvertisers.PostalAddress1 = _postalAddress1;
			newAdvertisers.PostalAddress2 = _postalAddress2;
			newAdvertisers.WebAddress = _webAddress;
			newAdvertisers.NoOfEmployees = _noOfEmployees;
			newAdvertisers.FirstApprovedDate = _firstApprovedDate;
			newAdvertisers.Profile = _profile;
			newAdvertisers.CharityNumber = _charityNumber;
			newAdvertisers.SearchField = _searchField;
			newAdvertisers.FreeTrialStartDate = _freeTrialStartDate;
			newAdvertisers.FreeTrialEndDate = _freeTrialEndDate;
			newAdvertisers.AccountsPayableEmail = _accountsPayableEmail;
			newAdvertisers.RequireLogonForExternalApplication = _requireLogonForExternalApplication;
			newAdvertisers.AdvertiserLogo = _advertiserLogo;
			newAdvertisers.LinkedInLogo = _linkedInLogo;
			newAdvertisers.LinkedInCompanyId = _linkedInCompanyId;
			newAdvertisers.LinkedInEmail = _linkedInEmail;
			newAdvertisers.RegisterDate = _registerDate;
			newAdvertisers.ExternalAdvertiserId = _externalAdvertiserId;
			newAdvertisers.VideoLink = _videoLink;
			newAdvertisers.Industry = _industry;
			newAdvertisers.NominatedCompanyRole = _nominatedCompanyRole;
			newAdvertisers.NominatedCompanyFirstName = _nominatedCompanyFirstName;
			newAdvertisers.NominatedCompanyLastName = _nominatedCompanyLastName;
			newAdvertisers.NominatedCompanyEmailAddress = _nominatedCompanyEmailAddress;
			newAdvertisers.NominatedCompanyPhone = _nominatedCompanyPhone;
			newAdvertisers.PreferredContactMethod = _preferredContactMethod;
			newAdvertisers.AdvertiserLogoUrl = _advertiserLogoUrl;
			return newAdvertisers;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the AdvertiserId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 AdvertiserId
		{
			get
			{
				return this.entityData.AdvertiserId; 
			}
			
			set
			{
				if (this.entityData.AdvertiserId == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.AdvertiserId, this.entityData.AdvertiserId);
				this.entityData.AdvertiserId = value;
				this.EntityId.AdvertiserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.AdvertiserId, this.entityData.AdvertiserId);
				OnPropertyChanged("AdvertiserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SiteId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSiteIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SiteId
		{
			get
			{
				return this.entityData.SiteId; 
			}
			
			set
			{
				if (this.entityData.SiteId == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.SiteId, this.entityData.SiteId);
				this.entityData.SiteId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.SiteId, this.entityData.SiteId);
				OnPropertyChanged("SiteId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdvertiserAccountTypeId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 AdvertiserAccountTypeId
		{
			get
			{
				return this.entityData.AdvertiserAccountTypeId; 
			}
			
			set
			{
				if (this.entityData.AdvertiserAccountTypeId == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.AdvertiserAccountTypeId, this.entityData.AdvertiserAccountTypeId);
				this.entityData.AdvertiserAccountTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.AdvertiserAccountTypeId, this.entityData.AdvertiserAccountTypeId);
				OnPropertyChanged("AdvertiserAccountTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdvertiserBusinessTypeId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 AdvertiserBusinessTypeId
		{
			get
			{
				return this.entityData.AdvertiserBusinessTypeId; 
			}
			
			set
			{
				if (this.entityData.AdvertiserBusinessTypeId == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.AdvertiserBusinessTypeId, this.entityData.AdvertiserBusinessTypeId);
				this.entityData.AdvertiserBusinessTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.AdvertiserBusinessTypeId, this.entityData.AdvertiserBusinessTypeId);
				OnPropertyChanged("AdvertiserBusinessTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdvertiserAccountStatusId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 AdvertiserAccountStatusId
		{
			get
			{
				return this.entityData.AdvertiserAccountStatusId; 
			}
			
			set
			{
				if (this.entityData.AdvertiserAccountStatusId == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.AdvertiserAccountStatusId, this.entityData.AdvertiserAccountStatusId);
				this.entityData.AdvertiserAccountStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.AdvertiserAccountStatusId, this.entityData.AdvertiserAccountStatusId);
				OnPropertyChanged("AdvertiserAccountStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CompanyName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String CompanyName
		{
			get
			{
				return this.entityData.CompanyName; 
			}
			
			set
			{
				if (this.entityData.CompanyName == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.CompanyName, this.entityData.CompanyName);
				this.entityData.CompanyName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.CompanyName, this.entityData.CompanyName);
				OnPropertyChanged("CompanyName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BusinessNumber property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String BusinessNumber
		{
			get
			{
				return this.entityData.BusinessNumber; 
			}
			
			set
			{
				if (this.entityData.BusinessNumber == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.BusinessNumber, this.entityData.BusinessNumber);
				this.entityData.BusinessNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.BusinessNumber, this.entityData.BusinessNumber);
				OnPropertyChanged("BusinessNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StreetAddress1 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String StreetAddress1
		{
			get
			{
				return this.entityData.StreetAddress1; 
			}
			
			set
			{
				if (this.entityData.StreetAddress1 == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.StreetAddress1, this.entityData.StreetAddress1);
				this.entityData.StreetAddress1 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.StreetAddress1, this.entityData.StreetAddress1);
				OnPropertyChanged("StreetAddress1");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StreetAddress2 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String StreetAddress2
		{
			get
			{
				return this.entityData.StreetAddress2; 
			}
			
			set
			{
				if (this.entityData.StreetAddress2 == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.StreetAddress2, this.entityData.StreetAddress2);
				this.entityData.StreetAddress2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.StreetAddress2, this.entityData.StreetAddress2);
				OnPropertyChanged("StreetAddress2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModified property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime LastModified
		{
			get
			{
				return this.entityData.LastModified; 
			}
			
			set
			{
				if (this.entityData.LastModified == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.LastModified, this.entityData.LastModified);
				this.entityData.LastModified = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.LastModified, this.entityData.LastModified);
				OnPropertyChanged("LastModified");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModifiedBy property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 LastModifiedBy
		{
			get
			{
				return this.entityData.LastModifiedBy; 
			}
			
			set
			{
				if (this.entityData.LastModifiedBy == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.LastModifiedBy, this.entityData.LastModifiedBy);
				this.entityData.LastModifiedBy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.LastModifiedBy, this.entityData.LastModifiedBy);
				OnPropertyChanged("LastModifiedBy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PostalAddress1 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String PostalAddress1
		{
			get
			{
				return this.entityData.PostalAddress1; 
			}
			
			set
			{
				if (this.entityData.PostalAddress1 == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.PostalAddress1, this.entityData.PostalAddress1);
				this.entityData.PostalAddress1 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.PostalAddress1, this.entityData.PostalAddress1);
				OnPropertyChanged("PostalAddress1");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PostalAddress2 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String PostalAddress2
		{
			get
			{
				return this.entityData.PostalAddress2; 
			}
			
			set
			{
				if (this.entityData.PostalAddress2 == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.PostalAddress2, this.entityData.PostalAddress2);
				this.entityData.PostalAddress2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.PostalAddress2, this.entityData.PostalAddress2);
				OnPropertyChanged("PostalAddress2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebAddress property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String WebAddress
		{
			get
			{
				return this.entityData.WebAddress; 
			}
			
			set
			{
				if (this.entityData.WebAddress == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.WebAddress, this.entityData.WebAddress);
				this.entityData.WebAddress = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.WebAddress, this.entityData.WebAddress);
				OnPropertyChanged("WebAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoOfEmployees property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String NoOfEmployees
		{
			get
			{
				return this.entityData.NoOfEmployees; 
			}
			
			set
			{
				if (this.entityData.NoOfEmployees == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.NoOfEmployees, this.entityData.NoOfEmployees);
				this.entityData.NoOfEmployees = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.NoOfEmployees, this.entityData.NoOfEmployees);
				OnPropertyChanged("NoOfEmployees");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FirstApprovedDate property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsFirstApprovedDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? FirstApprovedDate
		{
			get
			{
				return this.entityData.FirstApprovedDate; 
			}
			
			set
			{
				if (this.entityData.FirstApprovedDate == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.FirstApprovedDate, this.entityData.FirstApprovedDate);
				this.entityData.FirstApprovedDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.FirstApprovedDate, this.entityData.FirstApprovedDate);
				OnPropertyChanged("FirstApprovedDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Profile property. 
		///		
		/// </summary>
		/// <value>This type is ntext.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Profile
		{
			get
			{
				return this.entityData.Profile; 
			}
			
			set
			{
				if (this.entityData.Profile == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.Profile, this.entityData.Profile);
				this.entityData.Profile = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.Profile, this.entityData.Profile);
				OnPropertyChanged("Profile");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CharityNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String CharityNumber
		{
			get
			{
				return this.entityData.CharityNumber; 
			}
			
			set
			{
				if (this.entityData.CharityNumber == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.CharityNumber, this.entityData.CharityNumber);
				this.entityData.CharityNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.CharityNumber, this.entityData.CharityNumber);
				OnPropertyChanged("CharityNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SearchField property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String SearchField
		{
			get
			{
				return this.entityData.SearchField; 
			}
			
			set
			{
				if (this.entityData.SearchField == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.SearchField, this.entityData.SearchField);
				this.entityData.SearchField = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.SearchField, this.entityData.SearchField);
				OnPropertyChanged("SearchField");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FreeTrialStartDate property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsFreeTrialStartDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? FreeTrialStartDate
		{
			get
			{
				return this.entityData.FreeTrialStartDate; 
			}
			
			set
			{
				if (this.entityData.FreeTrialStartDate == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.FreeTrialStartDate, this.entityData.FreeTrialStartDate);
				this.entityData.FreeTrialStartDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.FreeTrialStartDate, this.entityData.FreeTrialStartDate);
				OnPropertyChanged("FreeTrialStartDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FreeTrialEndDate property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsFreeTrialEndDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? FreeTrialEndDate
		{
			get
			{
				return this.entityData.FreeTrialEndDate; 
			}
			
			set
			{
				if (this.entityData.FreeTrialEndDate == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.FreeTrialEndDate, this.entityData.FreeTrialEndDate);
				this.entityData.FreeTrialEndDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.FreeTrialEndDate, this.entityData.FreeTrialEndDate);
				OnPropertyChanged("FreeTrialEndDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AccountsPayableEmail property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String AccountsPayableEmail
		{
			get
			{
				return this.entityData.AccountsPayableEmail; 
			}
			
			set
			{
				if (this.entityData.AccountsPayableEmail == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.AccountsPayableEmail, this.entityData.AccountsPayableEmail);
				this.entityData.AccountsPayableEmail = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.AccountsPayableEmail, this.entityData.AccountsPayableEmail);
				OnPropertyChanged("AccountsPayableEmail");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RequireLogonForExternalApplication property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean RequireLogonForExternalApplication
		{
			get
			{
				return this.entityData.RequireLogonForExternalApplication; 
			}
			
			set
			{
				if (this.entityData.RequireLogonForExternalApplication == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.RequireLogonForExternalApplication, this.entityData.RequireLogonForExternalApplication);
				this.entityData.RequireLogonForExternalApplication = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.RequireLogonForExternalApplication, this.entityData.RequireLogonForExternalApplication);
				OnPropertyChanged("RequireLogonForExternalApplication");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdvertiserLogo property. 
		///		
		/// </summary>
		/// <value>This type is image.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte[] AdvertiserLogo
		{
			get
			{
				return this.entityData.AdvertiserLogo; 
			}
			
			set
			{
				if (this.entityData.AdvertiserLogo == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.AdvertiserLogo, this.entityData.AdvertiserLogo);
				this.entityData.AdvertiserLogo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.AdvertiserLogo, this.entityData.AdvertiserLogo);
				OnPropertyChanged("AdvertiserLogo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LinkedInLogo property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LinkedInLogo
		{
			get
			{
				return this.entityData.LinkedInLogo; 
			}
			
			set
			{
				if (this.entityData.LinkedInLogo == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.LinkedInLogo, this.entityData.LinkedInLogo);
				this.entityData.LinkedInLogo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.LinkedInLogo, this.entityData.LinkedInLogo);
				OnPropertyChanged("LinkedInLogo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LinkedInCompanyId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LinkedInCompanyId
		{
			get
			{
				return this.entityData.LinkedInCompanyId; 
			}
			
			set
			{
				if (this.entityData.LinkedInCompanyId == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.LinkedInCompanyId, this.entityData.LinkedInCompanyId);
				this.entityData.LinkedInCompanyId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.LinkedInCompanyId, this.entityData.LinkedInCompanyId);
				OnPropertyChanged("LinkedInCompanyId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LinkedInEmail property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LinkedInEmail
		{
			get
			{
				return this.entityData.LinkedInEmail; 
			}
			
			set
			{
				if (this.entityData.LinkedInEmail == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.LinkedInEmail, this.entityData.LinkedInEmail);
				this.entityData.LinkedInEmail = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.LinkedInEmail, this.entityData.LinkedInEmail);
				OnPropertyChanged("LinkedInEmail");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RegisterDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsRegisterDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? RegisterDate
		{
			get
			{
				return this.entityData.RegisterDate; 
			}
			
			set
			{
				if (this.entityData.RegisterDate == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.RegisterDate, this.entityData.RegisterDate);
				this.entityData.RegisterDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.RegisterDate, this.entityData.RegisterDate);
				OnPropertyChanged("RegisterDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ExternalAdvertiserId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ExternalAdvertiserId
		{
			get
			{
				return this.entityData.ExternalAdvertiserId; 
			}
			
			set
			{
				if (this.entityData.ExternalAdvertiserId == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.ExternalAdvertiserId, this.entityData.ExternalAdvertiserId);
				this.entityData.ExternalAdvertiserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.ExternalAdvertiserId, this.entityData.ExternalAdvertiserId);
				OnPropertyChanged("ExternalAdvertiserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VideoLink property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String VideoLink
		{
			get
			{
				return this.entityData.VideoLink; 
			}
			
			set
			{
				if (this.entityData.VideoLink == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.VideoLink, this.entityData.VideoLink);
				this.entityData.VideoLink = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.VideoLink, this.entityData.VideoLink);
				OnPropertyChanged("VideoLink");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Industry property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String Industry
		{
			get
			{
				return this.entityData.Industry; 
			}
			
			set
			{
				if (this.entityData.Industry == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.Industry, this.entityData.Industry);
				this.entityData.Industry = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.Industry, this.entityData.Industry);
				OnPropertyChanged("Industry");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NominatedCompanyRole property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String NominatedCompanyRole
		{
			get
			{
				return this.entityData.NominatedCompanyRole; 
			}
			
			set
			{
				if (this.entityData.NominatedCompanyRole == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.NominatedCompanyRole, this.entityData.NominatedCompanyRole);
				this.entityData.NominatedCompanyRole = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.NominatedCompanyRole, this.entityData.NominatedCompanyRole);
				OnPropertyChanged("NominatedCompanyRole");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NominatedCompanyFirstName property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String NominatedCompanyFirstName
		{
			get
			{
				return this.entityData.NominatedCompanyFirstName; 
			}
			
			set
			{
				if (this.entityData.NominatedCompanyFirstName == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.NominatedCompanyFirstName, this.entityData.NominatedCompanyFirstName);
				this.entityData.NominatedCompanyFirstName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.NominatedCompanyFirstName, this.entityData.NominatedCompanyFirstName);
				OnPropertyChanged("NominatedCompanyFirstName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NominatedCompanyLastName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String NominatedCompanyLastName
		{
			get
			{
				return this.entityData.NominatedCompanyLastName; 
			}
			
			set
			{
				if (this.entityData.NominatedCompanyLastName == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.NominatedCompanyLastName, this.entityData.NominatedCompanyLastName);
				this.entityData.NominatedCompanyLastName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.NominatedCompanyLastName, this.entityData.NominatedCompanyLastName);
				OnPropertyChanged("NominatedCompanyLastName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NominatedCompanyEmailAddress property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String NominatedCompanyEmailAddress
		{
			get
			{
				return this.entityData.NominatedCompanyEmailAddress; 
			}
			
			set
			{
				if (this.entityData.NominatedCompanyEmailAddress == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.NominatedCompanyEmailAddress, this.entityData.NominatedCompanyEmailAddress);
				this.entityData.NominatedCompanyEmailAddress = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.NominatedCompanyEmailAddress, this.entityData.NominatedCompanyEmailAddress);
				OnPropertyChanged("NominatedCompanyEmailAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NominatedCompanyPhone property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 40)]
		public virtual System.String NominatedCompanyPhone
		{
			get
			{
				return this.entityData.NominatedCompanyPhone; 
			}
			
			set
			{
				if (this.entityData.NominatedCompanyPhone == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.NominatedCompanyPhone, this.entityData.NominatedCompanyPhone);
				this.entityData.NominatedCompanyPhone = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.NominatedCompanyPhone, this.entityData.NominatedCompanyPhone);
				OnPropertyChanged("NominatedCompanyPhone");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredContactMethod property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsPreferredContactMethodNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? PreferredContactMethod
		{
			get
			{
				return this.entityData.PreferredContactMethod; 
			}
			
			set
			{
				if (this.entityData.PreferredContactMethod == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.PreferredContactMethod, this.entityData.PreferredContactMethod);
				this.entityData.PreferredContactMethod = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.PreferredContactMethod, this.entityData.PreferredContactMethod);
				OnPropertyChanged("PreferredContactMethod");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdvertiserLogoUrl property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String AdvertiserLogoUrl
		{
			get
			{
				return this.entityData.AdvertiserLogoUrl; 
			}
			
			set
			{
				if (this.entityData.AdvertiserLogoUrl == value)
					return;
					
				OnColumnChanging(AdvertisersColumn.AdvertiserLogoUrl, this.entityData.AdvertiserLogoUrl);
				this.entityData.AdvertiserLogoUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdvertisersColumn.AdvertiserLogoUrl, this.entityData.AdvertiserLogoUrl);
				OnPropertyChanged("AdvertiserLogoUrl");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="AdvertiserAccountStatus"/>.
		/// </summary>
		/// <value>The source AdvertiserAccountStatus for AdvertiserAccountStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdvertiserAccountStatus AdvertiserAccountStatusIdSource
      	{
            get { return entityData.AdvertiserAccountStatusIdSource; }
            set { entityData.AdvertiserAccountStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdvertiserBusinessType"/>.
		/// </summary>
		/// <value>The source AdvertiserBusinessType for AdvertiserBusinessTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdvertiserBusinessType AdvertiserBusinessTypeIdSource
      	{
            get { return entityData.AdvertiserBusinessTypeIdSource; }
            set { entityData.AdvertiserBusinessTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdvertiserAccountType"/>.
		/// </summary>
		/// <value>The source AdvertiserAccountType for AdvertiserAccountTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdvertiserAccountType AdvertiserAccountTypeIdSource
      	{
            get { return entityData.AdvertiserAccountTypeIdSource; }
            set { entityData.AdvertiserAccountTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdminUsers"/>.
		/// </summary>
		/// <value>The source AdminUsers for LastModifiedBy.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdminUsers LastModifiedBySource
      	{
            get { return entityData.LastModifiedBySource; }
            set { entityData.LastModifiedBySource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Sites"/>.
		/// </summary>
		/// <value>The source Sites for SiteId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Sites SiteIdSource
      	{
            get { return entityData.SiteIdSource; }
            set { entityData.SiteIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of AdvertiserUsers objects
		///	which are related to this object through the relation FK__Advertise__Adver__04659998
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdvertiserUsers> AdvertiserUsersCollection
		{
			get { return entityData.AdvertiserUsersCollection; }
			set { entityData.AdvertiserUsersCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Jobs objects
		///	which are related to this object through the relation FK__Jobs__Advertiser__6C63F2D5
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Jobs> JobsCollection
		{
			get { return entityData.JobsCollection; }
			set { entityData.JobsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SiteAdvertiserFilter objects
		///	which are related to this object through the relation FK__SiteAdver__Adver__1F997E18
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SiteAdvertiserFilter> SiteAdvertiserFilterCollection
		{
			get { return entityData.SiteAdvertiserFilterCollection; }
			set { entityData.SiteAdvertiserFilterCollection = value; }	
		}

		/// <summary>
		///	Holds a collection of JobItemsTypeFromAdvertiserJobPricing objects
		///	which are related to this object through the junction table AdvertiserJobPricing
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobItemsType> JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing
		{
			get { return entityData.JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing; }
			set { entityData.JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdvertiserJobPricing objects
		///	which are related to this object through the relation FK__Advertise__Adver__2C933F64
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdvertiserJobPricing> AdvertiserJobPricingCollection
		{
			get { return entityData.AdvertiserJobPricingCollection; }
			set { entityData.AdvertiserJobPricingCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobCustomXml objects
		///	which are related to this object through the relation FK__JobCustom__Adver__0A6373FB
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobCustomXml> JobCustomXmlCollection
		{
			get { return entityData.JobCustomXmlCollection; }
			set { entityData.JobCustomXmlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdvertiserJobTemplateLogo objects
		///	which are related to this object through the relation FK__Advertise__Adver__6C9A93AD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdvertiserJobTemplateLogo> AdvertiserJobTemplateLogoCollection
		{
			get { return entityData.AdvertiserJobTemplateLogoCollection; }
			set { entityData.AdvertiserJobTemplateLogoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobTemplates objects
		///	which are related to this object through the relation FK__JobTempla__Adver__2C5C4C1E
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobTemplates> JobTemplatesCollection
		{
			get { return entityData.JobTemplatesCollection; }
			set { entityData.JobTemplatesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobsArchive objects
		///	which are related to this object through the relation FK__JobsArchi__Adver__015F0FBB
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobsArchive> JobsArchiveCollection
		{
			get { return entityData.JobsArchiveCollection; }
			set { entityData.JobsArchiveCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CompanyName", "Company Name", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("BusinessNumber", "Business Number", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StreetAddress1", "Street Address1", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StreetAddress2", "Street Address2", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PostalAddress1", "Postal Address1", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PostalAddress2", "Postal Address2", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("WebAddress", "Web Address", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NoOfEmployees", "No Of Employees", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CharityNumber", "Charity Number", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("AccountsPayableEmail", "Accounts Payable Email", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LinkedInLogo", "Linked In Logo", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LinkedInCompanyId", "Linked In Company Id", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LinkedInEmail", "Linked In Email", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ExternalAdvertiserId", "External Advertiser Id", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("VideoLink", "Video Link", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Industry", "Industry", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NominatedCompanyRole", "Nominated Company Role", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NominatedCompanyFirstName", "Nominated Company First Name", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NominatedCompanyLastName", "Nominated Company Last Name", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NominatedCompanyEmailAddress", "Nominated Company Email Address", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NominatedCompanyPhone", "Nominated Company Phone", 40));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("AdvertiserLogoUrl", "Advertiser Logo Url", 1000));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "Advertisers"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"AdvertiserID", "SiteID", "AdvertiserAccountTypeID", "AdvertiserBusinessTypeID", "AdvertiserAccountStatusID", "CompanyName", "BusinessNumber", "StreetAddress1", "StreetAddress2", "LastModified", "LastModifiedBy", "PostalAddress1", "PostalAddress2", "WebAddress", "NoOfEmployees", "FirstApprovedDate", "Profile", "CharityNumber", "SearchField", "FreeTrialStartDate", "FreeTrialEndDate", "AccountsPayableEmail", "RequireLogonForExternalApplication", "AdvertiserLogo", "LinkedInLogo", "LinkedInCompanyId", "LinkedInEmail", "RegisterDate", "ExternalAdvertiserID", "VideoLink", "Industry", "NominatedCompanyRole", "NominatedCompanyFirstName", "NominatedCompanyLastName", "NominatedCompanyEmailAddress", "NominatedCompanyPhone", "PreferredContactMethod", "AdvertiserLogoUrl"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as AdvertisersEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (Advertisers) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<Advertisers>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as Advertisers);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Advertisers Entity 
		///</summary>
		protected virtual Advertisers Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			Advertisers copy = new Advertisers();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.AdvertiserId = this.AdvertiserId;
				copy.SiteId = this.SiteId;
				copy.AdvertiserAccountTypeId = this.AdvertiserAccountTypeId;
				copy.AdvertiserBusinessTypeId = this.AdvertiserBusinessTypeId;
				copy.AdvertiserAccountStatusId = this.AdvertiserAccountStatusId;
				copy.CompanyName = this.CompanyName;
				copy.BusinessNumber = this.BusinessNumber;
				copy.StreetAddress1 = this.StreetAddress1;
				copy.StreetAddress2 = this.StreetAddress2;
				copy.LastModified = this.LastModified;
				copy.LastModifiedBy = this.LastModifiedBy;
				copy.PostalAddress1 = this.PostalAddress1;
				copy.PostalAddress2 = this.PostalAddress2;
				copy.WebAddress = this.WebAddress;
				copy.NoOfEmployees = this.NoOfEmployees;
				copy.FirstApprovedDate = this.FirstApprovedDate;
				copy.Profile = this.Profile;
				copy.CharityNumber = this.CharityNumber;
				copy.SearchField = this.SearchField;
				copy.FreeTrialStartDate = this.FreeTrialStartDate;
				copy.FreeTrialEndDate = this.FreeTrialEndDate;
				copy.AccountsPayableEmail = this.AccountsPayableEmail;
				copy.RequireLogonForExternalApplication = this.RequireLogonForExternalApplication;
				copy.AdvertiserLogo = this.AdvertiserLogo;
				copy.LinkedInLogo = this.LinkedInLogo;
				copy.LinkedInCompanyId = this.LinkedInCompanyId;
				copy.LinkedInEmail = this.LinkedInEmail;
				copy.RegisterDate = this.RegisterDate;
				copy.ExternalAdvertiserId = this.ExternalAdvertiserId;
				copy.VideoLink = this.VideoLink;
				copy.Industry = this.Industry;
				copy.NominatedCompanyRole = this.NominatedCompanyRole;
				copy.NominatedCompanyFirstName = this.NominatedCompanyFirstName;
				copy.NominatedCompanyLastName = this.NominatedCompanyLastName;
				copy.NominatedCompanyEmailAddress = this.NominatedCompanyEmailAddress;
				copy.NominatedCompanyPhone = this.NominatedCompanyPhone;
				copy.PreferredContactMethod = this.PreferredContactMethod;
				copy.AdvertiserLogoUrl = this.AdvertiserLogoUrl;
			
			if (this.AdvertiserAccountStatusIdSource != null && existingCopies.Contains(this.AdvertiserAccountStatusIdSource))
				copy.AdvertiserAccountStatusIdSource = existingCopies[this.AdvertiserAccountStatusIdSource] as AdvertiserAccountStatus;
			else
				copy.AdvertiserAccountStatusIdSource = MakeCopyOf(this.AdvertiserAccountStatusIdSource, existingCopies) as AdvertiserAccountStatus;
			if (this.AdvertiserBusinessTypeIdSource != null && existingCopies.Contains(this.AdvertiserBusinessTypeIdSource))
				copy.AdvertiserBusinessTypeIdSource = existingCopies[this.AdvertiserBusinessTypeIdSource] as AdvertiserBusinessType;
			else
				copy.AdvertiserBusinessTypeIdSource = MakeCopyOf(this.AdvertiserBusinessTypeIdSource, existingCopies) as AdvertiserBusinessType;
			if (this.AdvertiserAccountTypeIdSource != null && existingCopies.Contains(this.AdvertiserAccountTypeIdSource))
				copy.AdvertiserAccountTypeIdSource = existingCopies[this.AdvertiserAccountTypeIdSource] as AdvertiserAccountType;
			else
				copy.AdvertiserAccountTypeIdSource = MakeCopyOf(this.AdvertiserAccountTypeIdSource, existingCopies) as AdvertiserAccountType;
			if (this.LastModifiedBySource != null && existingCopies.Contains(this.LastModifiedBySource))
				copy.LastModifiedBySource = existingCopies[this.LastModifiedBySource] as AdminUsers;
			else
				copy.LastModifiedBySource = MakeCopyOf(this.LastModifiedBySource, existingCopies) as AdminUsers;
			if (this.SiteIdSource != null && existingCopies.Contains(this.SiteIdSource))
				copy.SiteIdSource = existingCopies[this.SiteIdSource] as Sites;
			else
				copy.SiteIdSource = MakeCopyOf(this.SiteIdSource, existingCopies) as Sites;
		
			//deep copy nested objects
			copy.AdvertiserUsersCollection = (TList<AdvertiserUsers>) MakeCopyOf(this.AdvertiserUsersCollection, existingCopies); 
			copy.JobsCollection = (TList<Jobs>) MakeCopyOf(this.JobsCollection, existingCopies); 
			copy.SiteAdvertiserFilterCollection = (TList<SiteAdvertiserFilter>) MakeCopyOf(this.SiteAdvertiserFilterCollection, existingCopies); 
			copy.JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing = (TList<JobItemsType>) MakeCopyOf(this.JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing, existingCopies); 
			copy.AdvertiserJobPricingCollection = (TList<AdvertiserJobPricing>) MakeCopyOf(this.AdvertiserJobPricingCollection, existingCopies); 
			copy.JobCustomXmlCollection = (TList<JobCustomXml>) MakeCopyOf(this.JobCustomXmlCollection, existingCopies); 
			copy.AdvertiserJobTemplateLogoCollection = (TList<AdvertiserJobTemplateLogo>) MakeCopyOf(this.AdvertiserJobTemplateLogoCollection, existingCopies); 
			copy.JobTemplatesCollection = (TList<JobTemplates>) MakeCopyOf(this.JobTemplatesCollection, existingCopies); 
			copy.JobsArchiveCollection = (TList<JobsArchive>) MakeCopyOf(this.JobsArchiveCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed Advertisers Entity 
		///</summary>
		public virtual Advertisers Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed Advertisers Entity which is a deep copy of the current entity.
		///</summary>
		public virtual Advertisers DeepCopy()
		{
			return EntityHelper.Clone<Advertisers>(this as Advertisers);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as AdvertisersEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new AdvertisersEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as AdvertisersEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(AdvertisersColumn column)
		{
			switch(column)
			{
					case AdvertisersColumn.AdvertiserId:
					return entityData.AdvertiserId != _originalData.AdvertiserId;
					case AdvertisersColumn.SiteId:
					return entityData.SiteId != _originalData.SiteId;
					case AdvertisersColumn.AdvertiserAccountTypeId:
					return entityData.AdvertiserAccountTypeId != _originalData.AdvertiserAccountTypeId;
					case AdvertisersColumn.AdvertiserBusinessTypeId:
					return entityData.AdvertiserBusinessTypeId != _originalData.AdvertiserBusinessTypeId;
					case AdvertisersColumn.AdvertiserAccountStatusId:
					return entityData.AdvertiserAccountStatusId != _originalData.AdvertiserAccountStatusId;
					case AdvertisersColumn.CompanyName:
					return entityData.CompanyName != _originalData.CompanyName;
					case AdvertisersColumn.BusinessNumber:
					return entityData.BusinessNumber != _originalData.BusinessNumber;
					case AdvertisersColumn.StreetAddress1:
					return entityData.StreetAddress1 != _originalData.StreetAddress1;
					case AdvertisersColumn.StreetAddress2:
					return entityData.StreetAddress2 != _originalData.StreetAddress2;
					case AdvertisersColumn.LastModified:
					return entityData.LastModified != _originalData.LastModified;
					case AdvertisersColumn.LastModifiedBy:
					return entityData.LastModifiedBy != _originalData.LastModifiedBy;
					case AdvertisersColumn.PostalAddress1:
					return entityData.PostalAddress1 != _originalData.PostalAddress1;
					case AdvertisersColumn.PostalAddress2:
					return entityData.PostalAddress2 != _originalData.PostalAddress2;
					case AdvertisersColumn.WebAddress:
					return entityData.WebAddress != _originalData.WebAddress;
					case AdvertisersColumn.NoOfEmployees:
					return entityData.NoOfEmployees != _originalData.NoOfEmployees;
					case AdvertisersColumn.FirstApprovedDate:
					return entityData.FirstApprovedDate != _originalData.FirstApprovedDate;
					case AdvertisersColumn.Profile:
					return entityData.Profile != _originalData.Profile;
					case AdvertisersColumn.CharityNumber:
					return entityData.CharityNumber != _originalData.CharityNumber;
					case AdvertisersColumn.SearchField:
					return entityData.SearchField != _originalData.SearchField;
					case AdvertisersColumn.FreeTrialStartDate:
					return entityData.FreeTrialStartDate != _originalData.FreeTrialStartDate;
					case AdvertisersColumn.FreeTrialEndDate:
					return entityData.FreeTrialEndDate != _originalData.FreeTrialEndDate;
					case AdvertisersColumn.AccountsPayableEmail:
					return entityData.AccountsPayableEmail != _originalData.AccountsPayableEmail;
					case AdvertisersColumn.RequireLogonForExternalApplication:
					return entityData.RequireLogonForExternalApplication != _originalData.RequireLogonForExternalApplication;
					case AdvertisersColumn.AdvertiserLogo:
					return entityData.AdvertiserLogo != _originalData.AdvertiserLogo;
					case AdvertisersColumn.LinkedInLogo:
					return entityData.LinkedInLogo != _originalData.LinkedInLogo;
					case AdvertisersColumn.LinkedInCompanyId:
					return entityData.LinkedInCompanyId != _originalData.LinkedInCompanyId;
					case AdvertisersColumn.LinkedInEmail:
					return entityData.LinkedInEmail != _originalData.LinkedInEmail;
					case AdvertisersColumn.RegisterDate:
					return entityData.RegisterDate != _originalData.RegisterDate;
					case AdvertisersColumn.ExternalAdvertiserId:
					return entityData.ExternalAdvertiserId != _originalData.ExternalAdvertiserId;
					case AdvertisersColumn.VideoLink:
					return entityData.VideoLink != _originalData.VideoLink;
					case AdvertisersColumn.Industry:
					return entityData.Industry != _originalData.Industry;
					case AdvertisersColumn.NominatedCompanyRole:
					return entityData.NominatedCompanyRole != _originalData.NominatedCompanyRole;
					case AdvertisersColumn.NominatedCompanyFirstName:
					return entityData.NominatedCompanyFirstName != _originalData.NominatedCompanyFirstName;
					case AdvertisersColumn.NominatedCompanyLastName:
					return entityData.NominatedCompanyLastName != _originalData.NominatedCompanyLastName;
					case AdvertisersColumn.NominatedCompanyEmailAddress:
					return entityData.NominatedCompanyEmailAddress != _originalData.NominatedCompanyEmailAddress;
					case AdvertisersColumn.NominatedCompanyPhone:
					return entityData.NominatedCompanyPhone != _originalData.NominatedCompanyPhone;
					case AdvertisersColumn.PreferredContactMethod:
					return entityData.PreferredContactMethod != _originalData.PreferredContactMethod;
					case AdvertisersColumn.AdvertiserLogoUrl:
					return entityData.AdvertiserLogoUrl != _originalData.AdvertiserLogoUrl;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< AdvertisersColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.AdvertiserId != _originalData.AdvertiserId;
			result = result || entityData.SiteId != _originalData.SiteId;
			result = result || entityData.AdvertiserAccountTypeId != _originalData.AdvertiserAccountTypeId;
			result = result || entityData.AdvertiserBusinessTypeId != _originalData.AdvertiserBusinessTypeId;
			result = result || entityData.AdvertiserAccountStatusId != _originalData.AdvertiserAccountStatusId;
			result = result || entityData.CompanyName != _originalData.CompanyName;
			result = result || entityData.BusinessNumber != _originalData.BusinessNumber;
			result = result || entityData.StreetAddress1 != _originalData.StreetAddress1;
			result = result || entityData.StreetAddress2 != _originalData.StreetAddress2;
			result = result || entityData.LastModified != _originalData.LastModified;
			result = result || entityData.LastModifiedBy != _originalData.LastModifiedBy;
			result = result || entityData.PostalAddress1 != _originalData.PostalAddress1;
			result = result || entityData.PostalAddress2 != _originalData.PostalAddress2;
			result = result || entityData.WebAddress != _originalData.WebAddress;
			result = result || entityData.NoOfEmployees != _originalData.NoOfEmployees;
			result = result || entityData.FirstApprovedDate != _originalData.FirstApprovedDate;
			result = result || entityData.Profile != _originalData.Profile;
			result = result || entityData.CharityNumber != _originalData.CharityNumber;
			result = result || entityData.SearchField != _originalData.SearchField;
			result = result || entityData.FreeTrialStartDate != _originalData.FreeTrialStartDate;
			result = result || entityData.FreeTrialEndDate != _originalData.FreeTrialEndDate;
			result = result || entityData.AccountsPayableEmail != _originalData.AccountsPayableEmail;
			result = result || entityData.RequireLogonForExternalApplication != _originalData.RequireLogonForExternalApplication;
			result = result || entityData.AdvertiserLogo != _originalData.AdvertiserLogo;
			result = result || entityData.LinkedInLogo != _originalData.LinkedInLogo;
			result = result || entityData.LinkedInCompanyId != _originalData.LinkedInCompanyId;
			result = result || entityData.LinkedInEmail != _originalData.LinkedInEmail;
			result = result || entityData.RegisterDate != _originalData.RegisterDate;
			result = result || entityData.ExternalAdvertiserId != _originalData.ExternalAdvertiserId;
			result = result || entityData.VideoLink != _originalData.VideoLink;
			result = result || entityData.Industry != _originalData.Industry;
			result = result || entityData.NominatedCompanyRole != _originalData.NominatedCompanyRole;
			result = result || entityData.NominatedCompanyFirstName != _originalData.NominatedCompanyFirstName;
			result = result || entityData.NominatedCompanyLastName != _originalData.NominatedCompanyLastName;
			result = result || entityData.NominatedCompanyEmailAddress != _originalData.NominatedCompanyEmailAddress;
			result = result || entityData.NominatedCompanyPhone != _originalData.NominatedCompanyPhone;
			result = result || entityData.PreferredContactMethod != _originalData.PreferredContactMethod;
			result = result || entityData.AdvertiserLogoUrl != _originalData.AdvertiserLogoUrl;
			return result;
		}	
		
		///<summary>
		///  Returns a Advertisers Entity with the original data.
		///</summary>
		public Advertisers GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateAdvertisers(
				_originalData.SiteId,
				_originalData.AdvertiserAccountTypeId,
				_originalData.AdvertiserBusinessTypeId,
				_originalData.AdvertiserAccountStatusId,
				_originalData.CompanyName,
				_originalData.BusinessNumber,
				_originalData.StreetAddress1,
				_originalData.StreetAddress2,
				_originalData.LastModified,
				_originalData.LastModifiedBy,
				_originalData.PostalAddress1,
				_originalData.PostalAddress2,
				_originalData.WebAddress,
				_originalData.NoOfEmployees,
				_originalData.FirstApprovedDate,
				_originalData.Profile,
				_originalData.CharityNumber,
				_originalData.SearchField,
				_originalData.FreeTrialStartDate,
				_originalData.FreeTrialEndDate,
				_originalData.AccountsPayableEmail,
				_originalData.RequireLogonForExternalApplication,
				_originalData.AdvertiserLogo,
				_originalData.LinkedInLogo,
				_originalData.LinkedInCompanyId,
				_originalData.LinkedInEmail,
				_originalData.RegisterDate,
				_originalData.ExternalAdvertiserId,
				_originalData.VideoLink,
				_originalData.Industry,
				_originalData.NominatedCompanyRole,
				_originalData.NominatedCompanyFirstName,
				_originalData.NominatedCompanyLastName,
				_originalData.NominatedCompanyEmailAddress,
				_originalData.NominatedCompanyPhone,
				_originalData.PreferredContactMethod,
				_originalData.AdvertiserLogoUrl
				);
				
			return (Advertisers)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="AdvertisersBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is AdvertisersBase)
				return ValueEquals(this, (AdvertisersBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="AdvertisersBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.AdvertiserId.GetHashCode() ^ 
					((this.SiteId == null) ? string.Empty : this.SiteId.ToString()).GetHashCode() ^ 
					this.AdvertiserAccountTypeId.GetHashCode() ^ 
					this.AdvertiserBusinessTypeId.GetHashCode() ^ 
					this.AdvertiserAccountStatusId.GetHashCode() ^ 
					((this.CompanyName == null) ? string.Empty : this.CompanyName.ToString()).GetHashCode() ^ 
					((this.BusinessNumber == null) ? string.Empty : this.BusinessNumber.ToString()).GetHashCode() ^ 
					((this.StreetAddress1 == null) ? string.Empty : this.StreetAddress1.ToString()).GetHashCode() ^ 
					((this.StreetAddress2 == null) ? string.Empty : this.StreetAddress2.ToString()).GetHashCode() ^ 
					this.LastModified.GetHashCode() ^ 
					this.LastModifiedBy.GetHashCode() ^ 
					((this.PostalAddress1 == null) ? string.Empty : this.PostalAddress1.ToString()).GetHashCode() ^ 
					((this.PostalAddress2 == null) ? string.Empty : this.PostalAddress2.ToString()).GetHashCode() ^ 
					((this.WebAddress == null) ? string.Empty : this.WebAddress.ToString()).GetHashCode() ^ 
					((this.NoOfEmployees == null) ? string.Empty : this.NoOfEmployees.ToString()).GetHashCode() ^ 
					((this.FirstApprovedDate == null) ? string.Empty : this.FirstApprovedDate.ToString()).GetHashCode() ^ 
					((this.Profile == null) ? string.Empty : this.Profile.ToString()).GetHashCode() ^ 
					((this.CharityNumber == null) ? string.Empty : this.CharityNumber.ToString()).GetHashCode() ^ 
					((this.SearchField == null) ? string.Empty : this.SearchField.ToString()).GetHashCode() ^ 
					((this.FreeTrialStartDate == null) ? string.Empty : this.FreeTrialStartDate.ToString()).GetHashCode() ^ 
					((this.FreeTrialEndDate == null) ? string.Empty : this.FreeTrialEndDate.ToString()).GetHashCode() ^ 
					((this.AccountsPayableEmail == null) ? string.Empty : this.AccountsPayableEmail.ToString()).GetHashCode() ^ 
					this.RequireLogonForExternalApplication.GetHashCode() ^ 
					((this.AdvertiserLogo == null) ? string.Empty : this.AdvertiserLogo.ToString()).GetHashCode() ^ 
					((this.LinkedInLogo == null) ? string.Empty : this.LinkedInLogo.ToString()).GetHashCode() ^ 
					((this.LinkedInCompanyId == null) ? string.Empty : this.LinkedInCompanyId.ToString()).GetHashCode() ^ 
					((this.LinkedInEmail == null) ? string.Empty : this.LinkedInEmail.ToString()).GetHashCode() ^ 
					((this.RegisterDate == null) ? string.Empty : this.RegisterDate.ToString()).GetHashCode() ^ 
					((this.ExternalAdvertiserId == null) ? string.Empty : this.ExternalAdvertiserId.ToString()).GetHashCode() ^ 
					((this.VideoLink == null) ? string.Empty : this.VideoLink.ToString()).GetHashCode() ^ 
					((this.Industry == null) ? string.Empty : this.Industry.ToString()).GetHashCode() ^ 
					((this.NominatedCompanyRole == null) ? string.Empty : this.NominatedCompanyRole.ToString()).GetHashCode() ^ 
					((this.NominatedCompanyFirstName == null) ? string.Empty : this.NominatedCompanyFirstName.ToString()).GetHashCode() ^ 
					((this.NominatedCompanyLastName == null) ? string.Empty : this.NominatedCompanyLastName.ToString()).GetHashCode() ^ 
					((this.NominatedCompanyEmailAddress == null) ? string.Empty : this.NominatedCompanyEmailAddress.ToString()).GetHashCode() ^ 
					((this.NominatedCompanyPhone == null) ? string.Empty : this.NominatedCompanyPhone.ToString()).GetHashCode() ^ 
					((this.PreferredContactMethod == null) ? string.Empty : this.PreferredContactMethod.ToString()).GetHashCode() ^ 
					((this.AdvertiserLogoUrl == null) ? string.Empty : this.AdvertiserLogoUrl.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="AdvertisersBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(AdvertisersBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="AdvertisersBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="AdvertisersBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="AdvertisersBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(AdvertisersBase Object1, AdvertisersBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.AdvertiserId != Object2.AdvertiserId)
				equal = false;
			if ( Object1.SiteId != null && Object2.SiteId != null )
			{
				if (Object1.SiteId != Object2.SiteId)
					equal = false;
			}
			else if (Object1.SiteId == null ^ Object2.SiteId == null )
			{
				equal = false;
			}
			if (Object1.AdvertiserAccountTypeId != Object2.AdvertiserAccountTypeId)
				equal = false;
			if (Object1.AdvertiserBusinessTypeId != Object2.AdvertiserBusinessTypeId)
				equal = false;
			if (Object1.AdvertiserAccountStatusId != Object2.AdvertiserAccountStatusId)
				equal = false;
			if ( Object1.CompanyName != null && Object2.CompanyName != null )
			{
				if (Object1.CompanyName != Object2.CompanyName)
					equal = false;
			}
			else if (Object1.CompanyName == null ^ Object2.CompanyName == null )
			{
				equal = false;
			}
			if ( Object1.BusinessNumber != null && Object2.BusinessNumber != null )
			{
				if (Object1.BusinessNumber != Object2.BusinessNumber)
					equal = false;
			}
			else if (Object1.BusinessNumber == null ^ Object2.BusinessNumber == null )
			{
				equal = false;
			}
			if ( Object1.StreetAddress1 != null && Object2.StreetAddress1 != null )
			{
				if (Object1.StreetAddress1 != Object2.StreetAddress1)
					equal = false;
			}
			else if (Object1.StreetAddress1 == null ^ Object2.StreetAddress1 == null )
			{
				equal = false;
			}
			if ( Object1.StreetAddress2 != null && Object2.StreetAddress2 != null )
			{
				if (Object1.StreetAddress2 != Object2.StreetAddress2)
					equal = false;
			}
			else if (Object1.StreetAddress2 == null ^ Object2.StreetAddress2 == null )
			{
				equal = false;
			}
			if (Object1.LastModified != Object2.LastModified)
				equal = false;
			if (Object1.LastModifiedBy != Object2.LastModifiedBy)
				equal = false;
			if ( Object1.PostalAddress1 != null && Object2.PostalAddress1 != null )
			{
				if (Object1.PostalAddress1 != Object2.PostalAddress1)
					equal = false;
			}
			else if (Object1.PostalAddress1 == null ^ Object2.PostalAddress1 == null )
			{
				equal = false;
			}
			if ( Object1.PostalAddress2 != null && Object2.PostalAddress2 != null )
			{
				if (Object1.PostalAddress2 != Object2.PostalAddress2)
					equal = false;
			}
			else if (Object1.PostalAddress2 == null ^ Object2.PostalAddress2 == null )
			{
				equal = false;
			}
			if ( Object1.WebAddress != null && Object2.WebAddress != null )
			{
				if (Object1.WebAddress != Object2.WebAddress)
					equal = false;
			}
			else if (Object1.WebAddress == null ^ Object2.WebAddress == null )
			{
				equal = false;
			}
			if ( Object1.NoOfEmployees != null && Object2.NoOfEmployees != null )
			{
				if (Object1.NoOfEmployees != Object2.NoOfEmployees)
					equal = false;
			}
			else if (Object1.NoOfEmployees == null ^ Object2.NoOfEmployees == null )
			{
				equal = false;
			}
			if ( Object1.FirstApprovedDate != null && Object2.FirstApprovedDate != null )
			{
				if (Object1.FirstApprovedDate != Object2.FirstApprovedDate)
					equal = false;
			}
			else if (Object1.FirstApprovedDate == null ^ Object2.FirstApprovedDate == null )
			{
				equal = false;
			}
			if ( Object1.Profile != null && Object2.Profile != null )
			{
				if (Object1.Profile != Object2.Profile)
					equal = false;
			}
			else if (Object1.Profile == null ^ Object2.Profile == null )
			{
				equal = false;
			}
			if ( Object1.CharityNumber != null && Object2.CharityNumber != null )
			{
				if (Object1.CharityNumber != Object2.CharityNumber)
					equal = false;
			}
			else if (Object1.CharityNumber == null ^ Object2.CharityNumber == null )
			{
				equal = false;
			}
			if ( Object1.SearchField != null && Object2.SearchField != null )
			{
				if (Object1.SearchField != Object2.SearchField)
					equal = false;
			}
			else if (Object1.SearchField == null ^ Object2.SearchField == null )
			{
				equal = false;
			}
			if ( Object1.FreeTrialStartDate != null && Object2.FreeTrialStartDate != null )
			{
				if (Object1.FreeTrialStartDate != Object2.FreeTrialStartDate)
					equal = false;
			}
			else if (Object1.FreeTrialStartDate == null ^ Object2.FreeTrialStartDate == null )
			{
				equal = false;
			}
			if ( Object1.FreeTrialEndDate != null && Object2.FreeTrialEndDate != null )
			{
				if (Object1.FreeTrialEndDate != Object2.FreeTrialEndDate)
					equal = false;
			}
			else if (Object1.FreeTrialEndDate == null ^ Object2.FreeTrialEndDate == null )
			{
				equal = false;
			}
			if ( Object1.AccountsPayableEmail != null && Object2.AccountsPayableEmail != null )
			{
				if (Object1.AccountsPayableEmail != Object2.AccountsPayableEmail)
					equal = false;
			}
			else if (Object1.AccountsPayableEmail == null ^ Object2.AccountsPayableEmail == null )
			{
				equal = false;
			}
			if (Object1.RequireLogonForExternalApplication != Object2.RequireLogonForExternalApplication)
				equal = false;
			if ( Object1.AdvertiserLogo != null && Object2.AdvertiserLogo != null )
			{
				if (Object1.AdvertiserLogo != Object2.AdvertiserLogo)
					equal = false;
			}
			else if (Object1.AdvertiserLogo == null ^ Object2.AdvertiserLogo == null )
			{
				equal = false;
			}
			if ( Object1.LinkedInLogo != null && Object2.LinkedInLogo != null )
			{
				if (Object1.LinkedInLogo != Object2.LinkedInLogo)
					equal = false;
			}
			else if (Object1.LinkedInLogo == null ^ Object2.LinkedInLogo == null )
			{
				equal = false;
			}
			if ( Object1.LinkedInCompanyId != null && Object2.LinkedInCompanyId != null )
			{
				if (Object1.LinkedInCompanyId != Object2.LinkedInCompanyId)
					equal = false;
			}
			else if (Object1.LinkedInCompanyId == null ^ Object2.LinkedInCompanyId == null )
			{
				equal = false;
			}
			if ( Object1.LinkedInEmail != null && Object2.LinkedInEmail != null )
			{
				if (Object1.LinkedInEmail != Object2.LinkedInEmail)
					equal = false;
			}
			else if (Object1.LinkedInEmail == null ^ Object2.LinkedInEmail == null )
			{
				equal = false;
			}
			if ( Object1.RegisterDate != null && Object2.RegisterDate != null )
			{
				if (Object1.RegisterDate != Object2.RegisterDate)
					equal = false;
			}
			else if (Object1.RegisterDate == null ^ Object2.RegisterDate == null )
			{
				equal = false;
			}
			if ( Object1.ExternalAdvertiserId != null && Object2.ExternalAdvertiserId != null )
			{
				if (Object1.ExternalAdvertiserId != Object2.ExternalAdvertiserId)
					equal = false;
			}
			else if (Object1.ExternalAdvertiserId == null ^ Object2.ExternalAdvertiserId == null )
			{
				equal = false;
			}
			if ( Object1.VideoLink != null && Object2.VideoLink != null )
			{
				if (Object1.VideoLink != Object2.VideoLink)
					equal = false;
			}
			else if (Object1.VideoLink == null ^ Object2.VideoLink == null )
			{
				equal = false;
			}
			if ( Object1.Industry != null && Object2.Industry != null )
			{
				if (Object1.Industry != Object2.Industry)
					equal = false;
			}
			else if (Object1.Industry == null ^ Object2.Industry == null )
			{
				equal = false;
			}
			if ( Object1.NominatedCompanyRole != null && Object2.NominatedCompanyRole != null )
			{
				if (Object1.NominatedCompanyRole != Object2.NominatedCompanyRole)
					equal = false;
			}
			else if (Object1.NominatedCompanyRole == null ^ Object2.NominatedCompanyRole == null )
			{
				equal = false;
			}
			if ( Object1.NominatedCompanyFirstName != null && Object2.NominatedCompanyFirstName != null )
			{
				if (Object1.NominatedCompanyFirstName != Object2.NominatedCompanyFirstName)
					equal = false;
			}
			else if (Object1.NominatedCompanyFirstName == null ^ Object2.NominatedCompanyFirstName == null )
			{
				equal = false;
			}
			if ( Object1.NominatedCompanyLastName != null && Object2.NominatedCompanyLastName != null )
			{
				if (Object1.NominatedCompanyLastName != Object2.NominatedCompanyLastName)
					equal = false;
			}
			else if (Object1.NominatedCompanyLastName == null ^ Object2.NominatedCompanyLastName == null )
			{
				equal = false;
			}
			if ( Object1.NominatedCompanyEmailAddress != null && Object2.NominatedCompanyEmailAddress != null )
			{
				if (Object1.NominatedCompanyEmailAddress != Object2.NominatedCompanyEmailAddress)
					equal = false;
			}
			else if (Object1.NominatedCompanyEmailAddress == null ^ Object2.NominatedCompanyEmailAddress == null )
			{
				equal = false;
			}
			if ( Object1.NominatedCompanyPhone != null && Object2.NominatedCompanyPhone != null )
			{
				if (Object1.NominatedCompanyPhone != Object2.NominatedCompanyPhone)
					equal = false;
			}
			else if (Object1.NominatedCompanyPhone == null ^ Object2.NominatedCompanyPhone == null )
			{
				equal = false;
			}
			if ( Object1.PreferredContactMethod != null && Object2.PreferredContactMethod != null )
			{
				if (Object1.PreferredContactMethod != Object2.PreferredContactMethod)
					equal = false;
			}
			else if (Object1.PreferredContactMethod == null ^ Object2.PreferredContactMethod == null )
			{
				equal = false;
			}
			if ( Object1.AdvertiserLogoUrl != null && Object2.AdvertiserLogoUrl != null )
			{
				if (Object1.AdvertiserLogoUrl != Object2.AdvertiserLogoUrl)
					equal = false;
			}
			else if (Object1.AdvertiserLogoUrl == null ^ Object2.AdvertiserLogoUrl == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((AdvertisersBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static AdvertisersComparer GetComparer()
        {
            return new AdvertisersComparer();
        }
        */

        // Comparer delegates back to Advertisers
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(Advertisers rhs, AdvertisersColumn which)
        {
            switch (which)
            {
            	
            	
            	case AdvertisersColumn.AdvertiserId:
            		return this.AdvertiserId.CompareTo(rhs.AdvertiserId);
            		
            		                 
            	
            	
            	case AdvertisersColumn.SiteId:
            		return this.SiteId.Value.CompareTo(rhs.SiteId.Value);
            		
            		                 
            	
            	
            	case AdvertisersColumn.AdvertiserAccountTypeId:
            		return this.AdvertiserAccountTypeId.CompareTo(rhs.AdvertiserAccountTypeId);
            		
            		                 
            	
            	
            	case AdvertisersColumn.AdvertiserBusinessTypeId:
            		return this.AdvertiserBusinessTypeId.CompareTo(rhs.AdvertiserBusinessTypeId);
            		
            		                 
            	
            	
            	case AdvertisersColumn.AdvertiserAccountStatusId:
            		return this.AdvertiserAccountStatusId.CompareTo(rhs.AdvertiserAccountStatusId);
            		
            		                 
            	
            	
            	case AdvertisersColumn.CompanyName:
            		return this.CompanyName.CompareTo(rhs.CompanyName);
            		
            		                 
            	
            	
            	case AdvertisersColumn.BusinessNumber:
            		return this.BusinessNumber.CompareTo(rhs.BusinessNumber);
            		
            		                 
            	
            	
            	case AdvertisersColumn.StreetAddress1:
            		return this.StreetAddress1.CompareTo(rhs.StreetAddress1);
            		
            		                 
            	
            	
            	case AdvertisersColumn.StreetAddress2:
            		return this.StreetAddress2.CompareTo(rhs.StreetAddress2);
            		
            		                 
            	
            	
            	case AdvertisersColumn.LastModified:
            		return this.LastModified.CompareTo(rhs.LastModified);
            		
            		                 
            	
            	
            	case AdvertisersColumn.LastModifiedBy:
            		return this.LastModifiedBy.CompareTo(rhs.LastModifiedBy);
            		
            		                 
            	
            	
            	case AdvertisersColumn.PostalAddress1:
            		return this.PostalAddress1.CompareTo(rhs.PostalAddress1);
            		
            		                 
            	
            	
            	case AdvertisersColumn.PostalAddress2:
            		return this.PostalAddress2.CompareTo(rhs.PostalAddress2);
            		
            		                 
            	
            	
            	case AdvertisersColumn.WebAddress:
            		return this.WebAddress.CompareTo(rhs.WebAddress);
            		
            		                 
            	
            	
            	case AdvertisersColumn.NoOfEmployees:
            		return this.NoOfEmployees.CompareTo(rhs.NoOfEmployees);
            		
            		                 
            	
            	
            	case AdvertisersColumn.FirstApprovedDate:
            		return this.FirstApprovedDate.Value.CompareTo(rhs.FirstApprovedDate.Value);
            		
            		                 
            	
            	
            	case AdvertisersColumn.Profile:
            		return this.Profile.CompareTo(rhs.Profile);
            		
            		                 
            	
            	
            	case AdvertisersColumn.CharityNumber:
            		return this.CharityNumber.CompareTo(rhs.CharityNumber);
            		
            		                 
            	
            	
            	case AdvertisersColumn.SearchField:
            		return this.SearchField.CompareTo(rhs.SearchField);
            		
            		                 
            	
            	
            	case AdvertisersColumn.FreeTrialStartDate:
            		return this.FreeTrialStartDate.Value.CompareTo(rhs.FreeTrialStartDate.Value);
            		
            		                 
            	
            	
            	case AdvertisersColumn.FreeTrialEndDate:
            		return this.FreeTrialEndDate.Value.CompareTo(rhs.FreeTrialEndDate.Value);
            		
            		                 
            	
            	
            	case AdvertisersColumn.AccountsPayableEmail:
            		return this.AccountsPayableEmail.CompareTo(rhs.AccountsPayableEmail);
            		
            		                 
            	
            	
            	case AdvertisersColumn.RequireLogonForExternalApplication:
            		return this.RequireLogonForExternalApplication.CompareTo(rhs.RequireLogonForExternalApplication);
            		
            		                 
            	
            		                 
            	
            	
            	case AdvertisersColumn.LinkedInLogo:
            		return this.LinkedInLogo.CompareTo(rhs.LinkedInLogo);
            		
            		                 
            	
            	
            	case AdvertisersColumn.LinkedInCompanyId:
            		return this.LinkedInCompanyId.CompareTo(rhs.LinkedInCompanyId);
            		
            		                 
            	
            	
            	case AdvertisersColumn.LinkedInEmail:
            		return this.LinkedInEmail.CompareTo(rhs.LinkedInEmail);
            		
            		                 
            	
            	
            	case AdvertisersColumn.RegisterDate:
            		return this.RegisterDate.Value.CompareTo(rhs.RegisterDate.Value);
            		
            		                 
            	
            	
            	case AdvertisersColumn.ExternalAdvertiserId:
            		return this.ExternalAdvertiserId.CompareTo(rhs.ExternalAdvertiserId);
            		
            		                 
            	
            	
            	case AdvertisersColumn.VideoLink:
            		return this.VideoLink.CompareTo(rhs.VideoLink);
            		
            		                 
            	
            	
            	case AdvertisersColumn.Industry:
            		return this.Industry.CompareTo(rhs.Industry);
            		
            		                 
            	
            	
            	case AdvertisersColumn.NominatedCompanyRole:
            		return this.NominatedCompanyRole.CompareTo(rhs.NominatedCompanyRole);
            		
            		                 
            	
            	
            	case AdvertisersColumn.NominatedCompanyFirstName:
            		return this.NominatedCompanyFirstName.CompareTo(rhs.NominatedCompanyFirstName);
            		
            		                 
            	
            	
            	case AdvertisersColumn.NominatedCompanyLastName:
            		return this.NominatedCompanyLastName.CompareTo(rhs.NominatedCompanyLastName);
            		
            		                 
            	
            	
            	case AdvertisersColumn.NominatedCompanyEmailAddress:
            		return this.NominatedCompanyEmailAddress.CompareTo(rhs.NominatedCompanyEmailAddress);
            		
            		                 
            	
            	
            	case AdvertisersColumn.NominatedCompanyPhone:
            		return this.NominatedCompanyPhone.CompareTo(rhs.NominatedCompanyPhone);
            		
            		                 
            	
            	
            	case AdvertisersColumn.PreferredContactMethod:
            		return this.PreferredContactMethod.Value.CompareTo(rhs.PreferredContactMethod.Value);
            		
            		                 
            	
            	
            	case AdvertisersColumn.AdvertiserLogoUrl:
            		return this.AdvertiserLogoUrl.CompareTo(rhs.AdvertiserLogoUrl);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<AdvertisersKey> Members
		
		// member variable for the EntityId property
		private AdvertisersKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual AdvertisersKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new AdvertisersKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("Advertisers")
					.Append("|").Append( this.AdvertiserId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{39}{38}- AdvertiserId: {0}{38}- SiteId: {1}{38}- AdvertiserAccountTypeId: {2}{38}- AdvertiserBusinessTypeId: {3}{38}- AdvertiserAccountStatusId: {4}{38}- CompanyName: {5}{38}- BusinessNumber: {6}{38}- StreetAddress1: {7}{38}- StreetAddress2: {8}{38}- LastModified: {9}{38}- LastModifiedBy: {10}{38}- PostalAddress1: {11}{38}- PostalAddress2: {12}{38}- WebAddress: {13}{38}- NoOfEmployees: {14}{38}- FirstApprovedDate: {15}{38}- Profile: {16}{38}- CharityNumber: {17}{38}- SearchField: {18}{38}- FreeTrialStartDate: {19}{38}- FreeTrialEndDate: {20}{38}- AccountsPayableEmail: {21}{38}- RequireLogonForExternalApplication: {22}{38}- AdvertiserLogo: {23}{38}- LinkedInLogo: {24}{38}- LinkedInCompanyId: {25}{38}- LinkedInEmail: {26}{38}- RegisterDate: {27}{38}- ExternalAdvertiserId: {28}{38}- VideoLink: {29}{38}- Industry: {30}{38}- NominatedCompanyRole: {31}{38}- NominatedCompanyFirstName: {32}{38}- NominatedCompanyLastName: {33}{38}- NominatedCompanyEmailAddress: {34}{38}- NominatedCompanyPhone: {35}{38}- PreferredContactMethod: {36}{38}- AdvertiserLogoUrl: {37}{38}{40}", 
				this.AdvertiserId,
				(this.SiteId == null) ? string.Empty : this.SiteId.ToString(),
				this.AdvertiserAccountTypeId,
				this.AdvertiserBusinessTypeId,
				this.AdvertiserAccountStatusId,
				(this.CompanyName == null) ? string.Empty : this.CompanyName.ToString(),
				(this.BusinessNumber == null) ? string.Empty : this.BusinessNumber.ToString(),
				(this.StreetAddress1 == null) ? string.Empty : this.StreetAddress1.ToString(),
				(this.StreetAddress2 == null) ? string.Empty : this.StreetAddress2.ToString(),
				this.LastModified,
				this.LastModifiedBy,
				(this.PostalAddress1 == null) ? string.Empty : this.PostalAddress1.ToString(),
				(this.PostalAddress2 == null) ? string.Empty : this.PostalAddress2.ToString(),
				(this.WebAddress == null) ? string.Empty : this.WebAddress.ToString(),
				(this.NoOfEmployees == null) ? string.Empty : this.NoOfEmployees.ToString(),
				(this.FirstApprovedDate == null) ? string.Empty : this.FirstApprovedDate.ToString(),
				(this.Profile == null) ? string.Empty : this.Profile.ToString(),
				(this.CharityNumber == null) ? string.Empty : this.CharityNumber.ToString(),
				(this.SearchField == null) ? string.Empty : this.SearchField.ToString(),
				(this.FreeTrialStartDate == null) ? string.Empty : this.FreeTrialStartDate.ToString(),
				(this.FreeTrialEndDate == null) ? string.Empty : this.FreeTrialEndDate.ToString(),
				(this.AccountsPayableEmail == null) ? string.Empty : this.AccountsPayableEmail.ToString(),
				this.RequireLogonForExternalApplication,
				(this.AdvertiserLogo == null) ? string.Empty : this.AdvertiserLogo.ToString(),
				(this.LinkedInLogo == null) ? string.Empty : this.LinkedInLogo.ToString(),
				(this.LinkedInCompanyId == null) ? string.Empty : this.LinkedInCompanyId.ToString(),
				(this.LinkedInEmail == null) ? string.Empty : this.LinkedInEmail.ToString(),
				(this.RegisterDate == null) ? string.Empty : this.RegisterDate.ToString(),
				(this.ExternalAdvertiserId == null) ? string.Empty : this.ExternalAdvertiserId.ToString(),
				(this.VideoLink == null) ? string.Empty : this.VideoLink.ToString(),
				(this.Industry == null) ? string.Empty : this.Industry.ToString(),
				(this.NominatedCompanyRole == null) ? string.Empty : this.NominatedCompanyRole.ToString(),
				(this.NominatedCompanyFirstName == null) ? string.Empty : this.NominatedCompanyFirstName.ToString(),
				(this.NominatedCompanyLastName == null) ? string.Empty : this.NominatedCompanyLastName.ToString(),
				(this.NominatedCompanyEmailAddress == null) ? string.Empty : this.NominatedCompanyEmailAddress.ToString(),
				(this.NominatedCompanyPhone == null) ? string.Empty : this.NominatedCompanyPhone.ToString(),
				(this.PreferredContactMethod == null) ? string.Empty : this.PreferredContactMethod.ToString(),
				(this.AdvertiserLogoUrl == null) ? string.Empty : this.AdvertiserLogoUrl.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'Advertisers' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class AdvertisersEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// AdvertiserID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "Advertisers"</remarks>
		public System.Int32 AdvertiserId;
			
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// SiteID : 
		/// </summary>
		public System.Int32?		  SiteId = null;
		
		/// <summary>
		/// AdvertiserAccountTypeID : 
		/// </summary>
		public System.Int32		  AdvertiserAccountTypeId = (int)0;
		
		/// <summary>
		/// AdvertiserBusinessTypeID : 
		/// </summary>
		public System.Int32		  AdvertiserBusinessTypeId = (int)0;
		
		/// <summary>
		/// AdvertiserAccountStatusID : 
		/// </summary>
		public System.Int32		  AdvertiserAccountStatusId = (int)0;
		
		/// <summary>
		/// CompanyName : 
		/// </summary>
		public System.String		  CompanyName = null;
		
		/// <summary>
		/// BusinessNumber : 
		/// </summary>
		public System.String		  BusinessNumber = null;
		
		/// <summary>
		/// StreetAddress1 : 
		/// </summary>
		public System.String		  StreetAddress1 = null;
		
		/// <summary>
		/// StreetAddress2 : 
		/// </summary>
		public System.String		  StreetAddress2 = null;
		
		/// <summary>
		/// LastModified : 
		/// </summary>
		public System.DateTime		  LastModified = DateTime.MinValue;
		
		/// <summary>
		/// LastModifiedBy : 
		/// </summary>
		public System.Int32		  LastModifiedBy = (int)0;
		
		/// <summary>
		/// PostalAddress1 : 
		/// </summary>
		public System.String		  PostalAddress1 = null;
		
		/// <summary>
		/// PostalAddress2 : 
		/// </summary>
		public System.String		  PostalAddress2 = null;
		
		/// <summary>
		/// WebAddress : 
		/// </summary>
		public System.String		  WebAddress = null;
		
		/// <summary>
		/// NoOfEmployees : 
		/// </summary>
		public System.String		  NoOfEmployees = null;
		
		/// <summary>
		/// FirstApprovedDate : 
		/// </summary>
		public System.DateTime?		  FirstApprovedDate = null;
		
		/// <summary>
		/// Profile : 
		/// </summary>
		public System.String		  Profile = null;
		
		/// <summary>
		/// CharityNumber : 
		/// </summary>
		public System.String		  CharityNumber = null;
		
		/// <summary>
		/// SearchField : 
		/// </summary>
		public System.String		  SearchField = null;
		
		/// <summary>
		/// FreeTrialStartDate : 
		/// </summary>
		public System.DateTime?		  FreeTrialStartDate = null;
		
		/// <summary>
		/// FreeTrialEndDate : 
		/// </summary>
		public System.DateTime?		  FreeTrialEndDate = null;
		
		/// <summary>
		/// AccountsPayableEmail : 
		/// </summary>
		public System.String		  AccountsPayableEmail = null;
		
		/// <summary>
		/// RequireLogonForExternalApplication : 
		/// </summary>
		public System.Boolean		  RequireLogonForExternalApplication = false;
		
		/// <summary>
		/// AdvertiserLogo : 
		/// </summary>
		public System.Byte[]		  AdvertiserLogo = null;
		
		/// <summary>
		/// LinkedInLogo : 
		/// </summary>
		public System.String		  LinkedInLogo = null;
		
		/// <summary>
		/// LinkedInCompanyId : 
		/// </summary>
		public System.String		  LinkedInCompanyId = null;
		
		/// <summary>
		/// LinkedInEmail : 
		/// </summary>
		public System.String		  LinkedInEmail = null;
		
		/// <summary>
		/// RegisterDate : 
		/// </summary>
		public System.DateTime?		  RegisterDate = null;
		
		/// <summary>
		/// ExternalAdvertiserID : 
		/// </summary>
		public System.String		  ExternalAdvertiserId = null;
		
		/// <summary>
		/// VideoLink : 
		/// </summary>
		public System.String		  VideoLink = null;
		
		/// <summary>
		/// Industry : 
		/// </summary>
		public System.String		  Industry = null;
		
		/// <summary>
		/// NominatedCompanyRole : 
		/// </summary>
		public System.String		  NominatedCompanyRole = null;
		
		/// <summary>
		/// NominatedCompanyFirstName : 
		/// </summary>
		public System.String		  NominatedCompanyFirstName = null;
		
		/// <summary>
		/// NominatedCompanyLastName : 
		/// </summary>
		public System.String		  NominatedCompanyLastName = null;
		
		/// <summary>
		/// NominatedCompanyEmailAddress : 
		/// </summary>
		public System.String		  NominatedCompanyEmailAddress = null;
		
		/// <summary>
		/// NominatedCompanyPhone : 
		/// </summary>
		public System.String		  NominatedCompanyPhone = null;
		
		/// <summary>
		/// PreferredContactMethod : 
		/// </summary>
		public System.Int32?		  PreferredContactMethod = null;
		
		/// <summary>
		/// AdvertiserLogoUrl : 
		/// </summary>
		public System.String		  AdvertiserLogoUrl = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private AdvertiserAccountStatus _advertiserAccountStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdvertiserAccountStatus"/>.
		/// </summary>
		/// <value>The source AdvertiserAccountStatus for AdvertiserAccountStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdvertiserAccountStatus AdvertiserAccountStatusIdSource
      	{
            get { return this._advertiserAccountStatusIdSource; }
            set { this._advertiserAccountStatusIdSource = value; }
      	}
		private AdvertiserBusinessType _advertiserBusinessTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdvertiserBusinessType"/>.
		/// </summary>
		/// <value>The source AdvertiserBusinessType for AdvertiserBusinessTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdvertiserBusinessType AdvertiserBusinessTypeIdSource
      	{
            get { return this._advertiserBusinessTypeIdSource; }
            set { this._advertiserBusinessTypeIdSource = value; }
      	}
		private AdvertiserAccountType _advertiserAccountTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdvertiserAccountType"/>.
		/// </summary>
		/// <value>The source AdvertiserAccountType for AdvertiserAccountTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdvertiserAccountType AdvertiserAccountTypeIdSource
      	{
            get { return this._advertiserAccountTypeIdSource; }
            set { this._advertiserAccountTypeIdSource = value; }
      	}
		private AdminUsers _lastModifiedBySource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdminUsers"/>.
		/// </summary>
		/// <value>The source AdminUsers for LastModifiedBy.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdminUsers LastModifiedBySource
      	{
            get { return this._lastModifiedBySource; }
            set { this._lastModifiedBySource = value; }
      	}
		private Sites _siteIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Sites"/>.
		/// </summary>
		/// <value>The source Sites for SiteId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual Sites SiteIdSource
      	{
            get { return this._siteIdSource; }
            set { this._siteIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region AdvertiserUsersCollection
		
		private TList<AdvertiserUsers> _advertiserUsersAdvertiserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _advertiserUsersAdvertiserId
		/// </summary>
		
		public TList<AdvertiserUsers> AdvertiserUsersCollection
		{
			get
			{
				if (_advertiserUsersAdvertiserId == null)
				{
				_advertiserUsersAdvertiserId = new TList<AdvertiserUsers>();
				}
	
				return _advertiserUsersAdvertiserId;
			}
			set { _advertiserUsersAdvertiserId = value; }
		}
		
		#endregion

		#region JobsCollection
		
		private TList<Jobs> _jobsAdvertiserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobsAdvertiserId
		/// </summary>
		
		public TList<Jobs> JobsCollection
		{
			get
			{
				if (_jobsAdvertiserId == null)
				{
				_jobsAdvertiserId = new TList<Jobs>();
				}
	
				return _jobsAdvertiserId;
			}
			set { _jobsAdvertiserId = value; }
		}
		
		#endregion

		#region SiteAdvertiserFilterCollection
		
		private TList<SiteAdvertiserFilter> _siteAdvertiserFilterAdvertiserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _siteAdvertiserFilterAdvertiserId
		/// </summary>
		
		public TList<SiteAdvertiserFilter> SiteAdvertiserFilterCollection
		{
			get
			{
				if (_siteAdvertiserFilterAdvertiserId == null)
				{
				_siteAdvertiserFilterAdvertiserId = new TList<SiteAdvertiserFilter>();
				}
	
				return _siteAdvertiserFilterAdvertiserId;
			}
			set { _siteAdvertiserFilterAdvertiserId = value; }
		}
		
		#endregion

		#region JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing
		
		private TList<JobItemsType> jobItemsTypeIdJobItemsTypeCollectionFromAdvertiserJobPricing;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table jobItemsTypeIdJobItemsTypeCollectionFromAdvertiserJobPricing
		/// </summary>
		
		public TList<JobItemsType> JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing
		{
			get
			{
				if (jobItemsTypeIdJobItemsTypeCollectionFromAdvertiserJobPricing == null)
				{
				jobItemsTypeIdJobItemsTypeCollectionFromAdvertiserJobPricing = new TList<JobItemsType>();
				}
	
				return jobItemsTypeIdJobItemsTypeCollectionFromAdvertiserJobPricing;
			}
			set { jobItemsTypeIdJobItemsTypeCollectionFromAdvertiserJobPricing = value; }
		}
		
		#endregion 

		#region AdvertiserJobPricingCollection
		
		private TList<AdvertiserJobPricing> _advertiserJobPricingAdvertiserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _advertiserJobPricingAdvertiserId
		/// </summary>
		
		public TList<AdvertiserJobPricing> AdvertiserJobPricingCollection
		{
			get
			{
				if (_advertiserJobPricingAdvertiserId == null)
				{
				_advertiserJobPricingAdvertiserId = new TList<AdvertiserJobPricing>();
				}
	
				return _advertiserJobPricingAdvertiserId;
			}
			set { _advertiserJobPricingAdvertiserId = value; }
		}
		
		#endregion

		#region JobCustomXmlCollection
		
		private TList<JobCustomXml> _jobCustomXmlAdvertiserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobCustomXmlAdvertiserId
		/// </summary>
		
		public TList<JobCustomXml> JobCustomXmlCollection
		{
			get
			{
				if (_jobCustomXmlAdvertiserId == null)
				{
				_jobCustomXmlAdvertiserId = new TList<JobCustomXml>();
				}
	
				return _jobCustomXmlAdvertiserId;
			}
			set { _jobCustomXmlAdvertiserId = value; }
		}
		
		#endregion

		#region AdvertiserJobTemplateLogoCollection
		
		private TList<AdvertiserJobTemplateLogo> _advertiserJobTemplateLogoAdvertiserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _advertiserJobTemplateLogoAdvertiserId
		/// </summary>
		
		public TList<AdvertiserJobTemplateLogo> AdvertiserJobTemplateLogoCollection
		{
			get
			{
				if (_advertiserJobTemplateLogoAdvertiserId == null)
				{
				_advertiserJobTemplateLogoAdvertiserId = new TList<AdvertiserJobTemplateLogo>();
				}
	
				return _advertiserJobTemplateLogoAdvertiserId;
			}
			set { _advertiserJobTemplateLogoAdvertiserId = value; }
		}
		
		#endregion

		#region JobTemplatesCollection
		
		private TList<JobTemplates> _jobTemplatesAdvertiserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobTemplatesAdvertiserId
		/// </summary>
		
		public TList<JobTemplates> JobTemplatesCollection
		{
			get
			{
				if (_jobTemplatesAdvertiserId == null)
				{
				_jobTemplatesAdvertiserId = new TList<JobTemplates>();
				}
	
				return _jobTemplatesAdvertiserId;
			}
			set { _jobTemplatesAdvertiserId = value; }
		}
		
		#endregion

		#region JobsArchiveCollection
		
		private TList<JobsArchive> _jobsArchiveAdvertiserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobsArchiveAdvertiserId
		/// </summary>
		
		public TList<JobsArchive> JobsArchiveCollection
		{
			get
			{
				if (_jobsArchiveAdvertiserId == null)
				{
				_jobsArchiveAdvertiserId = new TList<JobsArchive>();
				}
	
				return _jobsArchiveAdvertiserId;
			}
			set { _jobsArchiveAdvertiserId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			AdvertisersEntityData _tmp = new AdvertisersEntityData();
						
			_tmp.AdvertiserId = this.AdvertiserId;
			
			_tmp.SiteId = this.SiteId;
			_tmp.AdvertiserAccountTypeId = this.AdvertiserAccountTypeId;
			_tmp.AdvertiserBusinessTypeId = this.AdvertiserBusinessTypeId;
			_tmp.AdvertiserAccountStatusId = this.AdvertiserAccountStatusId;
			_tmp.CompanyName = this.CompanyName;
			_tmp.BusinessNumber = this.BusinessNumber;
			_tmp.StreetAddress1 = this.StreetAddress1;
			_tmp.StreetAddress2 = this.StreetAddress2;
			_tmp.LastModified = this.LastModified;
			_tmp.LastModifiedBy = this.LastModifiedBy;
			_tmp.PostalAddress1 = this.PostalAddress1;
			_tmp.PostalAddress2 = this.PostalAddress2;
			_tmp.WebAddress = this.WebAddress;
			_tmp.NoOfEmployees = this.NoOfEmployees;
			_tmp.FirstApprovedDate = this.FirstApprovedDate;
			_tmp.Profile = this.Profile;
			_tmp.CharityNumber = this.CharityNumber;
			_tmp.SearchField = this.SearchField;
			_tmp.FreeTrialStartDate = this.FreeTrialStartDate;
			_tmp.FreeTrialEndDate = this.FreeTrialEndDate;
			_tmp.AccountsPayableEmail = this.AccountsPayableEmail;
			_tmp.RequireLogonForExternalApplication = this.RequireLogonForExternalApplication;
			_tmp.AdvertiserLogo = this.AdvertiserLogo;
			_tmp.LinkedInLogo = this.LinkedInLogo;
			_tmp.LinkedInCompanyId = this.LinkedInCompanyId;
			_tmp.LinkedInEmail = this.LinkedInEmail;
			_tmp.RegisterDate = this.RegisterDate;
			_tmp.ExternalAdvertiserId = this.ExternalAdvertiserId;
			_tmp.VideoLink = this.VideoLink;
			_tmp.Industry = this.Industry;
			_tmp.NominatedCompanyRole = this.NominatedCompanyRole;
			_tmp.NominatedCompanyFirstName = this.NominatedCompanyFirstName;
			_tmp.NominatedCompanyLastName = this.NominatedCompanyLastName;
			_tmp.NominatedCompanyEmailAddress = this.NominatedCompanyEmailAddress;
			_tmp.NominatedCompanyPhone = this.NominatedCompanyPhone;
			_tmp.PreferredContactMethod = this.PreferredContactMethod;
			_tmp.AdvertiserLogoUrl = this.AdvertiserLogoUrl;
			
			#region Source Parent Composite Entities
			if (this.AdvertiserAccountStatusIdSource != null)
				_tmp.AdvertiserAccountStatusIdSource = MakeCopyOf(this.AdvertiserAccountStatusIdSource) as AdvertiserAccountStatus;
			if (this.AdvertiserBusinessTypeIdSource != null)
				_tmp.AdvertiserBusinessTypeIdSource = MakeCopyOf(this.AdvertiserBusinessTypeIdSource) as AdvertiserBusinessType;
			if (this.AdvertiserAccountTypeIdSource != null)
				_tmp.AdvertiserAccountTypeIdSource = MakeCopyOf(this.AdvertiserAccountTypeIdSource) as AdvertiserAccountType;
			if (this.LastModifiedBySource != null)
				_tmp.LastModifiedBySource = MakeCopyOf(this.LastModifiedBySource) as AdminUsers;
			if (this.SiteIdSource != null)
				_tmp.SiteIdSource = MakeCopyOf(this.SiteIdSource) as Sites;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._advertiserUsersAdvertiserId != null)
				_tmp.AdvertiserUsersCollection = (TList<AdvertiserUsers>) MakeCopyOf(this.AdvertiserUsersCollection); 
			if (this._jobsAdvertiserId != null)
				_tmp.JobsCollection = (TList<Jobs>) MakeCopyOf(this.JobsCollection); 
			if (this._siteAdvertiserFilterAdvertiserId != null)
				_tmp.SiteAdvertiserFilterCollection = (TList<SiteAdvertiserFilter>) MakeCopyOf(this.SiteAdvertiserFilterCollection); 
			if (this.jobItemsTypeIdJobItemsTypeCollectionFromAdvertiserJobPricing != null)
				_tmp.JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing = (TList<JobItemsType>) MakeCopyOf(this.JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing); 
			if (this._advertiserJobPricingAdvertiserId != null)
				_tmp.AdvertiserJobPricingCollection = (TList<AdvertiserJobPricing>) MakeCopyOf(this.AdvertiserJobPricingCollection); 
			if (this._jobCustomXmlAdvertiserId != null)
				_tmp.JobCustomXmlCollection = (TList<JobCustomXml>) MakeCopyOf(this.JobCustomXmlCollection); 
			if (this._advertiserJobTemplateLogoAdvertiserId != null)
				_tmp.AdvertiserJobTemplateLogoCollection = (TList<AdvertiserJobTemplateLogo>) MakeCopyOf(this.AdvertiserJobTemplateLogoCollection); 
			if (this._jobTemplatesAdvertiserId != null)
				_tmp.JobTemplatesCollection = (TList<JobTemplates>) MakeCopyOf(this.JobTemplatesCollection); 
			if (this._jobsArchiveAdvertiserId != null)
				_tmp.JobsArchiveCollection = (TList<JobsArchive>) MakeCopyOf(this.JobsArchiveCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			AdvertisersEntityData _tmp = new AdvertisersEntityData();
						
			_tmp.AdvertiserId = this.AdvertiserId;
			
			_tmp.SiteId = this.SiteId;
			_tmp.AdvertiserAccountTypeId = this.AdvertiserAccountTypeId;
			_tmp.AdvertiserBusinessTypeId = this.AdvertiserBusinessTypeId;
			_tmp.AdvertiserAccountStatusId = this.AdvertiserAccountStatusId;
			_tmp.CompanyName = this.CompanyName;
			_tmp.BusinessNumber = this.BusinessNumber;
			_tmp.StreetAddress1 = this.StreetAddress1;
			_tmp.StreetAddress2 = this.StreetAddress2;
			_tmp.LastModified = this.LastModified;
			_tmp.LastModifiedBy = this.LastModifiedBy;
			_tmp.PostalAddress1 = this.PostalAddress1;
			_tmp.PostalAddress2 = this.PostalAddress2;
			_tmp.WebAddress = this.WebAddress;
			_tmp.NoOfEmployees = this.NoOfEmployees;
			_tmp.FirstApprovedDate = this.FirstApprovedDate;
			_tmp.Profile = this.Profile;
			_tmp.CharityNumber = this.CharityNumber;
			_tmp.SearchField = this.SearchField;
			_tmp.FreeTrialStartDate = this.FreeTrialStartDate;
			_tmp.FreeTrialEndDate = this.FreeTrialEndDate;
			_tmp.AccountsPayableEmail = this.AccountsPayableEmail;
			_tmp.RequireLogonForExternalApplication = this.RequireLogonForExternalApplication;
			_tmp.AdvertiserLogo = this.AdvertiserLogo;
			_tmp.LinkedInLogo = this.LinkedInLogo;
			_tmp.LinkedInCompanyId = this.LinkedInCompanyId;
			_tmp.LinkedInEmail = this.LinkedInEmail;
			_tmp.RegisterDate = this.RegisterDate;
			_tmp.ExternalAdvertiserId = this.ExternalAdvertiserId;
			_tmp.VideoLink = this.VideoLink;
			_tmp.Industry = this.Industry;
			_tmp.NominatedCompanyRole = this.NominatedCompanyRole;
			_tmp.NominatedCompanyFirstName = this.NominatedCompanyFirstName;
			_tmp.NominatedCompanyLastName = this.NominatedCompanyLastName;
			_tmp.NominatedCompanyEmailAddress = this.NominatedCompanyEmailAddress;
			_tmp.NominatedCompanyPhone = this.NominatedCompanyPhone;
			_tmp.PreferredContactMethod = this.PreferredContactMethod;
			_tmp.AdvertiserLogoUrl = this.AdvertiserLogoUrl;
			
			#region Source Parent Composite Entities
			if (this.AdvertiserAccountStatusIdSource != null && existingCopies.Contains(this.AdvertiserAccountStatusIdSource))
				_tmp.AdvertiserAccountStatusIdSource = existingCopies[this.AdvertiserAccountStatusIdSource] as AdvertiserAccountStatus;
			else
				_tmp.AdvertiserAccountStatusIdSource = MakeCopyOf(this.AdvertiserAccountStatusIdSource, existingCopies) as AdvertiserAccountStatus;
			if (this.AdvertiserBusinessTypeIdSource != null && existingCopies.Contains(this.AdvertiserBusinessTypeIdSource))
				_tmp.AdvertiserBusinessTypeIdSource = existingCopies[this.AdvertiserBusinessTypeIdSource] as AdvertiserBusinessType;
			else
				_tmp.AdvertiserBusinessTypeIdSource = MakeCopyOf(this.AdvertiserBusinessTypeIdSource, existingCopies) as AdvertiserBusinessType;
			if (this.AdvertiserAccountTypeIdSource != null && existingCopies.Contains(this.AdvertiserAccountTypeIdSource))
				_tmp.AdvertiserAccountTypeIdSource = existingCopies[this.AdvertiserAccountTypeIdSource] as AdvertiserAccountType;
			else
				_tmp.AdvertiserAccountTypeIdSource = MakeCopyOf(this.AdvertiserAccountTypeIdSource, existingCopies) as AdvertiserAccountType;
			if (this.LastModifiedBySource != null && existingCopies.Contains(this.LastModifiedBySource))
				_tmp.LastModifiedBySource = existingCopies[this.LastModifiedBySource] as AdminUsers;
			else
				_tmp.LastModifiedBySource = MakeCopyOf(this.LastModifiedBySource, existingCopies) as AdminUsers;
			if (this.SiteIdSource != null && existingCopies.Contains(this.SiteIdSource))
				_tmp.SiteIdSource = existingCopies[this.SiteIdSource] as Sites;
			else
				_tmp.SiteIdSource = MakeCopyOf(this.SiteIdSource, existingCopies) as Sites;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.AdvertiserUsersCollection = (TList<AdvertiserUsers>) MakeCopyOf(this.AdvertiserUsersCollection, existingCopies); 
			_tmp.JobsCollection = (TList<Jobs>) MakeCopyOf(this.JobsCollection, existingCopies); 
			_tmp.SiteAdvertiserFilterCollection = (TList<SiteAdvertiserFilter>) MakeCopyOf(this.SiteAdvertiserFilterCollection, existingCopies); 
			_tmp.JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing = (TList<JobItemsType>) MakeCopyOf(this.JobItemsTypeIdJobItemsTypeCollection_From_AdvertiserJobPricing, existingCopies); 
			_tmp.AdvertiserJobPricingCollection = (TList<AdvertiserJobPricing>) MakeCopyOf(this.AdvertiserJobPricingCollection, existingCopies); 
			_tmp.JobCustomXmlCollection = (TList<JobCustomXml>) MakeCopyOf(this.JobCustomXmlCollection, existingCopies); 
			_tmp.AdvertiserJobTemplateLogoCollection = (TList<AdvertiserJobTemplateLogo>) MakeCopyOf(this.AdvertiserJobTemplateLogoCollection, existingCopies); 
			_tmp.JobTemplatesCollection = (TList<JobTemplates>) MakeCopyOf(this.JobTemplatesCollection, existingCopies); 
			_tmp.JobsArchiveCollection = (TList<JobsArchive>) MakeCopyOf(this.JobsArchiveCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdvertisersColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(AdvertisersColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdvertisersColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(AdvertisersColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdvertisersColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(AdvertisersColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				AdvertisersEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new AdvertisersEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdvertisersColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(AdvertisersColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				AdvertisersEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new AdvertisersEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region AdvertisersEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="Advertisers"/> object.
	/// </remarks>
	public class AdvertisersEventArgs : System.EventArgs
	{
		private AdvertisersColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the AdvertisersEventArgs class.
		///</summary>
		public AdvertisersEventArgs(AdvertisersColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the AdvertisersEventArgs class.
		///</summary>
		public AdvertisersEventArgs(AdvertisersColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The AdvertisersColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="AdvertisersColumn" />
		public AdvertisersColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all Advertisers related events.
	///</summary>
	public delegate void AdvertisersEventHandler(object sender, AdvertisersEventArgs e);
	
	#region AdvertisersComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class AdvertisersComparer : System.Collections.Generic.IComparer<Advertisers>
	{
		AdvertisersColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:AdvertisersComparer"/> class.
        /// </summary>
		public AdvertisersComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:AdvertisersComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public AdvertisersComparer(AdvertisersColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="Advertisers"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="Advertisers"/> to compare.</param>
        /// <param name="b">The second <c>Advertisers</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(Advertisers a, Advertisers b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(Advertisers entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(Advertisers a, Advertisers b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public AdvertisersColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region AdvertisersKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="Advertisers"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class AdvertisersKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AdvertisersKey class.
		/// </summary>
		public AdvertisersKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the AdvertisersKey class.
		/// </summary>
		public AdvertisersKey(AdvertisersBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.AdvertiserId = entity.AdvertiserId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the AdvertisersKey class.
		/// </summary>
		public AdvertisersKey(System.Int32 _advertiserId)
		{
			#region Init Properties

			this.AdvertiserId = _advertiserId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private AdvertisersBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public AdvertisersBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the AdvertiserId property
		private System.Int32 _advertiserId;
		
		/// <summary>
		/// Gets or sets the AdvertiserId property.
		/// </summary>
		public System.Int32 AdvertiserId
		{
			get { return _advertiserId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.AdvertiserId = value;
				
				_advertiserId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				AdvertiserId = ( values["AdvertiserId"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["AdvertiserId"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("AdvertiserId", AdvertiserId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("AdvertiserId: {0}{1}",
								AdvertiserId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region AdvertisersColumn Enum
	
	/// <summary>
	/// Enumerate the Advertisers columns.
	/// </summary>
	[Serializable]
	public enum AdvertisersColumn : int
	{
		/// <summary>
		/// AdvertiserId : 
		/// </summary>
		[EnumTextValue("AdvertiserID")]
		[ColumnEnum("AdvertiserID", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		AdvertiserId = 1,
		/// <summary>
		/// SiteId : 
		/// </summary>
		[EnumTextValue("SiteID")]
		[ColumnEnum("SiteID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SiteId = 2,
		/// <summary>
		/// AdvertiserAccountTypeId : 
		/// </summary>
		[EnumTextValue("AdvertiserAccountTypeID")]
		[ColumnEnum("AdvertiserAccountTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		AdvertiserAccountTypeId = 3,
		/// <summary>
		/// AdvertiserBusinessTypeId : 
		/// </summary>
		[EnumTextValue("AdvertiserBusinessTypeID")]
		[ColumnEnum("AdvertiserBusinessTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		AdvertiserBusinessTypeId = 4,
		/// <summary>
		/// AdvertiserAccountStatusId : 
		/// </summary>
		[EnumTextValue("AdvertiserAccountStatusID")]
		[ColumnEnum("AdvertiserAccountStatusID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		AdvertiserAccountStatusId = 5,
		/// <summary>
		/// CompanyName : 
		/// </summary>
		[EnumTextValue("CompanyName")]
		[ColumnEnum("CompanyName", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		CompanyName = 6,
		/// <summary>
		/// BusinessNumber : 
		/// </summary>
		[EnumTextValue("BusinessNumber")]
		[ColumnEnum("BusinessNumber", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		BusinessNumber = 7,
		/// <summary>
		/// StreetAddress1 : 
		/// </summary>
		[EnumTextValue("StreetAddress1")]
		[ColumnEnum("StreetAddress1", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		StreetAddress1 = 8,
		/// <summary>
		/// StreetAddress2 : 
		/// </summary>
		[EnumTextValue("StreetAddress2")]
		[ColumnEnum("StreetAddress2", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		StreetAddress2 = 9,
		/// <summary>
		/// LastModified : 
		/// </summary>
		[EnumTextValue("LastModified")]
		[ColumnEnum("LastModified", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		LastModified = 10,
		/// <summary>
		/// LastModifiedBy : 
		/// </summary>
		[EnumTextValue("LastModifiedBy")]
		[ColumnEnum("LastModifiedBy", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		LastModifiedBy = 11,
		/// <summary>
		/// PostalAddress1 : 
		/// </summary>
		[EnumTextValue("PostalAddress1")]
		[ColumnEnum("PostalAddress1", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		PostalAddress1 = 12,
		/// <summary>
		/// PostalAddress2 : 
		/// </summary>
		[EnumTextValue("PostalAddress2")]
		[ColumnEnum("PostalAddress2", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		PostalAddress2 = 13,
		/// <summary>
		/// WebAddress : 
		/// </summary>
		[EnumTextValue("WebAddress")]
		[ColumnEnum("WebAddress", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		WebAddress = 14,
		/// <summary>
		/// NoOfEmployees : 
		/// </summary>
		[EnumTextValue("NoOfEmployees")]
		[ColumnEnum("NoOfEmployees", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		NoOfEmployees = 15,
		/// <summary>
		/// FirstApprovedDate : 
		/// </summary>
		[EnumTextValue("FirstApprovedDate")]
		[ColumnEnum("FirstApprovedDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		FirstApprovedDate = 16,
		/// <summary>
		/// Profile : 
		/// </summary>
		[EnumTextValue("Profile")]
		[ColumnEnum("Profile", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Profile = 17,
		/// <summary>
		/// CharityNumber : 
		/// </summary>
		[EnumTextValue("CharityNumber")]
		[ColumnEnum("CharityNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		CharityNumber = 18,
		/// <summary>
		/// SearchField : 
		/// </summary>
		[EnumTextValue("SearchField")]
		[ColumnEnum("SearchField", typeof(System.String), System.Data.DbType.String, false, false, true)]
		SearchField = 19,
		/// <summary>
		/// FreeTrialStartDate : 
		/// </summary>
		[EnumTextValue("FreeTrialStartDate")]
		[ColumnEnum("FreeTrialStartDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		FreeTrialStartDate = 20,
		/// <summary>
		/// FreeTrialEndDate : 
		/// </summary>
		[EnumTextValue("FreeTrialEndDate")]
		[ColumnEnum("FreeTrialEndDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		FreeTrialEndDate = 21,
		/// <summary>
		/// AccountsPayableEmail : 
		/// </summary>
		[EnumTextValue("AccountsPayableEmail")]
		[ColumnEnum("AccountsPayableEmail", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		AccountsPayableEmail = 22,
		/// <summary>
		/// RequireLogonForExternalApplication : 
		/// </summary>
		[EnumTextValue("RequireLogonForExternalApplication")]
		[ColumnEnum("RequireLogonForExternalApplication", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		RequireLogonForExternalApplication = 23,
		/// <summary>
		/// AdvertiserLogo : 
		/// </summary>
		[EnumTextValue("AdvertiserLogo")]
		[ColumnEnum("AdvertiserLogo", typeof(System.Byte[]), System.Data.DbType.Binary, false, false, true)]
		AdvertiserLogo = 24,
		/// <summary>
		/// LinkedInLogo : 
		/// </summary>
		[EnumTextValue("LinkedInLogo")]
		[ColumnEnum("LinkedInLogo", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		LinkedInLogo = 25,
		/// <summary>
		/// LinkedInCompanyId : 
		/// </summary>
		[EnumTextValue("LinkedInCompanyId")]
		[ColumnEnum("LinkedInCompanyId", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		LinkedInCompanyId = 26,
		/// <summary>
		/// LinkedInEmail : 
		/// </summary>
		[EnumTextValue("LinkedInEmail")]
		[ColumnEnum("LinkedInEmail", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		LinkedInEmail = 27,
		/// <summary>
		/// RegisterDate : 
		/// </summary>
		[EnumTextValue("RegisterDate")]
		[ColumnEnum("RegisterDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		RegisterDate = 28,
		/// <summary>
		/// ExternalAdvertiserId : 
		/// </summary>
		[EnumTextValue("ExternalAdvertiserID")]
		[ColumnEnum("ExternalAdvertiserID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ExternalAdvertiserId = 29,
		/// <summary>
		/// VideoLink : 
		/// </summary>
		[EnumTextValue("VideoLink")]
		[ColumnEnum("VideoLink", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		VideoLink = 30,
		/// <summary>
		/// Industry : 
		/// </summary>
		[EnumTextValue("Industry")]
		[ColumnEnum("Industry", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		Industry = 31,
		/// <summary>
		/// NominatedCompanyRole : 
		/// </summary>
		[EnumTextValue("NominatedCompanyRole")]
		[ColumnEnum("NominatedCompanyRole", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		NominatedCompanyRole = 32,
		/// <summary>
		/// NominatedCompanyFirstName : 
		/// </summary>
		[EnumTextValue("NominatedCompanyFirstName")]
		[ColumnEnum("NominatedCompanyFirstName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 510)]
		NominatedCompanyFirstName = 33,
		/// <summary>
		/// NominatedCompanyLastName : 
		/// </summary>
		[EnumTextValue("NominatedCompanyLastName")]
		[ColumnEnum("NominatedCompanyLastName", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		NominatedCompanyLastName = 34,
		/// <summary>
		/// NominatedCompanyEmailAddress : 
		/// </summary>
		[EnumTextValue("NominatedCompanyEmailAddress")]
		[ColumnEnum("NominatedCompanyEmailAddress", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		NominatedCompanyEmailAddress = 35,
		/// <summary>
		/// NominatedCompanyPhone : 
		/// </summary>
		[EnumTextValue("NominatedCompanyPhone")]
		[ColumnEnum("NominatedCompanyPhone", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 40)]
		NominatedCompanyPhone = 36,
		/// <summary>
		/// PreferredContactMethod : 
		/// </summary>
		[EnumTextValue("PreferredContactMethod")]
		[ColumnEnum("PreferredContactMethod", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		PreferredContactMethod = 37,
		/// <summary>
		/// AdvertiserLogoUrl : 
		/// </summary>
		[EnumTextValue("AdvertiserLogoUrl")]
		[ColumnEnum("AdvertiserLogoUrl", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		AdvertiserLogoUrl = 38
	}//End enum

	#endregion AdvertisersColumn Enum

} // end namespace


/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Consultants.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using JXTPortal.Entities.Validation;
#endregion

namespace JXTPortal.Entities
{
	///<summary>
	/// An object representation of the 'Consultants' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class ConsultantsBase : EntityBase, IConsultants, IEntityId<ConsultantsKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private ConsultantsEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private ConsultantsEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private ConsultantsEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<Consultants> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event ConsultantsEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event ConsultantsEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ConsultantsBase"/> instance.
		///</summary>
		public ConsultantsBase()
		{
			this.entityData = new ConsultantsEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="ConsultantsBase"/> instance.
		///</summary>
		///<param name="_siteId"></param>
		///<param name="_languageId"></param>
		///<param name="_title"></param>
		///<param name="_firstName"></param>
		///<param name="_email"></param>
		///<param name="_phone"></param>
		///<param name="_mobile"></param>
		///<param name="_positionTitle"></param>
		///<param name="_officeLocation"></param>
		///<param name="_categories"></param>
		///<param name="_location"></param>
		///<param name="_friendlyUrl"></param>
		///<param name="_shortDescription"></param>
		///<param name="_testimonial"></param>
		///<param name="_fullDescription"></param>
		///<param name="_consultantData"></param>
		///<param name="_linkedInUrl"></param>
		///<param name="_twitterUrl"></param>
		///<param name="_facebookUrl"></param>
		///<param name="_googleUrl"></param>
		///<param name="_link"></param>
		///<param name="_wechatUrl"></param>
		///<param name="_featuredTeamMember"></param>
		///<param name="_imageUrl"></param>
		///<param name="_videoUrl"></param>
		///<param name="_blogRss"></param>
		///<param name="_newsRss"></param>
		///<param name="_jobRss"></param>
		///<param name="_testimonialsRss"></param>
		///<param name="_valid"></param>
		///<param name="_metaTitle"></param>
		///<param name="_metaDescription"></param>
		///<param name="_metaKeywords"></param>
		///<param name="_lastModifiedBy"></param>
		///<param name="_lastModified"></param>
		///<param name="_sequence"></param>
		///<param name="_lastName"></param>
		///<param name="_consultantsXml"></param>
		///<param name="_consultantImageUrl"></param>
		public ConsultantsBase(System.Int32 _siteId, System.Int32? _languageId, System.String _title, 
			System.String _firstName, System.String _email, System.String _phone, System.String _mobile, 
			System.String _positionTitle, System.String _officeLocation, System.String _categories, 
			System.String _location, System.String _friendlyUrl, System.String _shortDescription, System.String _testimonial, 
			System.String _fullDescription, System.String _consultantData, System.String _linkedInUrl, 
			System.String _twitterUrl, System.String _facebookUrl, System.String _googleUrl, System.String _link, 
			System.String _wechatUrl, System.Int32 _featuredTeamMember, System.Byte[] _imageUrl, System.String _videoUrl, 
			System.String _blogRss, System.String _newsRss, System.String _jobRss, System.String _testimonialsRss, 
			System.Int32 _valid, System.String _metaTitle, System.String _metaDescription, System.String _metaKeywords, 
			System.Int32? _lastModifiedBy, System.DateTime? _lastModified, System.Int32 _sequence, System.String _lastName, 
			System.String _consultantsXml, System.String _consultantImageUrl)
		{
			this.entityData = new ConsultantsEntityData();
			this.backupData = null;

			this.SiteId = _siteId;
			this.LanguageId = _languageId;
			this.Title = _title;
			this.FirstName = _firstName;
			this.Email = _email;
			this.Phone = _phone;
			this.Mobile = _mobile;
			this.PositionTitle = _positionTitle;
			this.OfficeLocation = _officeLocation;
			this.Categories = _categories;
			this.Location = _location;
			this.FriendlyUrl = _friendlyUrl;
			this.ShortDescription = _shortDescription;
			this.Testimonial = _testimonial;
			this.FullDescription = _fullDescription;
			this.ConsultantData = _consultantData;
			this.LinkedInUrl = _linkedInUrl;
			this.TwitterUrl = _twitterUrl;
			this.FacebookUrl = _facebookUrl;
			this.GoogleUrl = _googleUrl;
			this.Link = _link;
			this.WechatUrl = _wechatUrl;
			this.FeaturedTeamMember = _featuredTeamMember;
			this.ImageUrl = _imageUrl;
			this.VideoUrl = _videoUrl;
			this.BlogRss = _blogRss;
			this.NewsRss = _newsRss;
			this.JobRss = _jobRss;
			this.TestimonialsRss = _testimonialsRss;
			this.Valid = _valid;
			this.MetaTitle = _metaTitle;
			this.MetaDescription = _metaDescription;
			this.MetaKeywords = _metaKeywords;
			this.LastModifiedBy = _lastModifiedBy;
			this.LastModified = _lastModified;
			this.Sequence = _sequence;
			this.LastName = _lastName;
			this.ConsultantsXml = _consultantsXml;
			this.ConsultantImageUrl = _consultantImageUrl;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Consultants"/> instance.
		///</summary>
		///<param name="_siteId"></param>
		///<param name="_languageId"></param>
		///<param name="_title"></param>
		///<param name="_firstName"></param>
		///<param name="_email"></param>
		///<param name="_phone"></param>
		///<param name="_mobile"></param>
		///<param name="_positionTitle"></param>
		///<param name="_officeLocation"></param>
		///<param name="_categories"></param>
		///<param name="_location"></param>
		///<param name="_friendlyUrl"></param>
		///<param name="_shortDescription"></param>
		///<param name="_testimonial"></param>
		///<param name="_fullDescription"></param>
		///<param name="_consultantData"></param>
		///<param name="_linkedInUrl"></param>
		///<param name="_twitterUrl"></param>
		///<param name="_facebookUrl"></param>
		///<param name="_googleUrl"></param>
		///<param name="_link"></param>
		///<param name="_wechatUrl"></param>
		///<param name="_featuredTeamMember"></param>
		///<param name="_imageUrl"></param>
		///<param name="_videoUrl"></param>
		///<param name="_blogRss"></param>
		///<param name="_newsRss"></param>
		///<param name="_jobRss"></param>
		///<param name="_testimonialsRss"></param>
		///<param name="_valid"></param>
		///<param name="_metaTitle"></param>
		///<param name="_metaDescription"></param>
		///<param name="_metaKeywords"></param>
		///<param name="_lastModifiedBy"></param>
		///<param name="_lastModified"></param>
		///<param name="_sequence"></param>
		///<param name="_lastName"></param>
		///<param name="_consultantsXml"></param>
		///<param name="_consultantImageUrl"></param>
		public static Consultants CreateConsultants(System.Int32 _siteId, System.Int32? _languageId, System.String _title, 
			System.String _firstName, System.String _email, System.String _phone, System.String _mobile, 
			System.String _positionTitle, System.String _officeLocation, System.String _categories, 
			System.String _location, System.String _friendlyUrl, System.String _shortDescription, System.String _testimonial, 
			System.String _fullDescription, System.String _consultantData, System.String _linkedInUrl, 
			System.String _twitterUrl, System.String _facebookUrl, System.String _googleUrl, System.String _link, 
			System.String _wechatUrl, System.Int32 _featuredTeamMember, System.Byte[] _imageUrl, System.String _videoUrl, 
			System.String _blogRss, System.String _newsRss, System.String _jobRss, System.String _testimonialsRss, 
			System.Int32 _valid, System.String _metaTitle, System.String _metaDescription, System.String _metaKeywords, 
			System.Int32? _lastModifiedBy, System.DateTime? _lastModified, System.Int32 _sequence, System.String _lastName, 
			System.String _consultantsXml, System.String _consultantImageUrl)
		{
			Consultants newConsultants = new Consultants();
			newConsultants.SiteId = _siteId;
			newConsultants.LanguageId = _languageId;
			newConsultants.Title = _title;
			newConsultants.FirstName = _firstName;
			newConsultants.Email = _email;
			newConsultants.Phone = _phone;
			newConsultants.Mobile = _mobile;
			newConsultants.PositionTitle = _positionTitle;
			newConsultants.OfficeLocation = _officeLocation;
			newConsultants.Categories = _categories;
			newConsultants.Location = _location;
			newConsultants.FriendlyUrl = _friendlyUrl;
			newConsultants.ShortDescription = _shortDescription;
			newConsultants.Testimonial = _testimonial;
			newConsultants.FullDescription = _fullDescription;
			newConsultants.ConsultantData = _consultantData;
			newConsultants.LinkedInUrl = _linkedInUrl;
			newConsultants.TwitterUrl = _twitterUrl;
			newConsultants.FacebookUrl = _facebookUrl;
			newConsultants.GoogleUrl = _googleUrl;
			newConsultants.Link = _link;
			newConsultants.WechatUrl = _wechatUrl;
			newConsultants.FeaturedTeamMember = _featuredTeamMember;
			newConsultants.ImageUrl = _imageUrl;
			newConsultants.VideoUrl = _videoUrl;
			newConsultants.BlogRss = _blogRss;
			newConsultants.NewsRss = _newsRss;
			newConsultants.JobRss = _jobRss;
			newConsultants.TestimonialsRss = _testimonialsRss;
			newConsultants.Valid = _valid;
			newConsultants.MetaTitle = _metaTitle;
			newConsultants.MetaDescription = _metaDescription;
			newConsultants.MetaKeywords = _metaKeywords;
			newConsultants.LastModifiedBy = _lastModifiedBy;
			newConsultants.LastModified = _lastModified;
			newConsultants.Sequence = _sequence;
			newConsultants.LastName = _lastName;
			newConsultants.ConsultantsXml = _consultantsXml;
			newConsultants.ConsultantImageUrl = _consultantImageUrl;
			return newConsultants;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the ConsultantId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 ConsultantId
		{
			get
			{
				return this.entityData.ConsultantId; 
			}
			
			set
			{
				if (this.entityData.ConsultantId == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.ConsultantId, this.entityData.ConsultantId);
				this.entityData.ConsultantId = value;
				this.EntityId.ConsultantId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.ConsultantId, this.entityData.ConsultantId);
				OnPropertyChanged("ConsultantId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SiteId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 SiteId
		{
			get
			{
				return this.entityData.SiteId; 
			}
			
			set
			{
				if (this.entityData.SiteId == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.SiteId, this.entityData.SiteId);
				this.entityData.SiteId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.SiteId, this.entityData.SiteId);
				OnPropertyChanged("SiteId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LanguageId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsLanguageIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? LanguageId
		{
			get
			{
				return this.entityData.LanguageId; 
			}
			
			set
			{
				if (this.entityData.LanguageId == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.LanguageId, this.entityData.LanguageId);
				this.entityData.LanguageId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.LanguageId, this.entityData.LanguageId);
				OnPropertyChanged("LanguageId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Title property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 128)]
		public virtual System.String Title
		{
			get
			{
				return this.entityData.Title; 
			}
			
			set
			{
				if (this.entityData.Title == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Title, this.entityData.Title);
				this.entityData.Title = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Title, this.entityData.Title);
				OnPropertyChanged("Title");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FirstName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String FirstName
		{
			get
			{
				return this.entityData.FirstName; 
			}
			
			set
			{
				if (this.entityData.FirstName == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.FirstName, this.entityData.FirstName);
				this.entityData.FirstName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.FirstName, this.entityData.FirstName);
				OnPropertyChanged("FirstName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Email
		{
			get
			{
				return this.entityData.Email; 
			}
			
			set
			{
				if (this.entityData.Email == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Email, this.entityData.Email);
				this.entityData.Email = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Email, this.entityData.Email);
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Phone property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String Phone
		{
			get
			{
				return this.entityData.Phone; 
			}
			
			set
			{
				if (this.entityData.Phone == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Phone, this.entityData.Phone);
				this.entityData.Phone = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Phone, this.entityData.Phone);
				OnPropertyChanged("Phone");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Mobile property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String Mobile
		{
			get
			{
				return this.entityData.Mobile; 
			}
			
			set
			{
				if (this.entityData.Mobile == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Mobile, this.entityData.Mobile);
				this.entityData.Mobile = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Mobile, this.entityData.Mobile);
				OnPropertyChanged("Mobile");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PositionTitle property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 128)]
		public virtual System.String PositionTitle
		{
			get
			{
				return this.entityData.PositionTitle; 
			}
			
			set
			{
				if (this.entityData.PositionTitle == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.PositionTitle, this.entityData.PositionTitle);
				this.entityData.PositionTitle = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.PositionTitle, this.entityData.PositionTitle);
				OnPropertyChanged("PositionTitle");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OfficeLocation property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1024)]
		public virtual System.String OfficeLocation
		{
			get
			{
				return this.entityData.OfficeLocation; 
			}
			
			set
			{
				if (this.entityData.OfficeLocation == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.OfficeLocation, this.entityData.OfficeLocation);
				this.entityData.OfficeLocation = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.OfficeLocation, this.entityData.OfficeLocation);
				OnPropertyChanged("OfficeLocation");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Categories property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1024)]
		public virtual System.String Categories
		{
			get
			{
				return this.entityData.Categories; 
			}
			
			set
			{
				if (this.entityData.Categories == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Categories, this.entityData.Categories);
				this.entityData.Categories = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Categories, this.entityData.Categories);
				OnPropertyChanged("Categories");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Location property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1024)]
		public virtual System.String Location
		{
			get
			{
				return this.entityData.Location; 
			}
			
			set
			{
				if (this.entityData.Location == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Location, this.entityData.Location);
				this.entityData.Location = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Location, this.entityData.Location);
				OnPropertyChanged("Location");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FriendlyUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 128)]
		public virtual System.String FriendlyUrl
		{
			get
			{
				return this.entityData.FriendlyUrl; 
			}
			
			set
			{
				if (this.entityData.FriendlyUrl == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.FriendlyUrl, this.entityData.FriendlyUrl);
				this.entityData.FriendlyUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.FriendlyUrl, this.entityData.FriendlyUrl);
				OnPropertyChanged("FriendlyUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ShortDescription property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String ShortDescription
		{
			get
			{
				return this.entityData.ShortDescription; 
			}
			
			set
			{
				if (this.entityData.ShortDescription == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.ShortDescription, this.entityData.ShortDescription);
				this.entityData.ShortDescription = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.ShortDescription, this.entityData.ShortDescription);
				OnPropertyChanged("ShortDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Testimonial property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Testimonial
		{
			get
			{
				return this.entityData.Testimonial; 
			}
			
			set
			{
				if (this.entityData.Testimonial == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Testimonial, this.entityData.Testimonial);
				this.entityData.Testimonial = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Testimonial, this.entityData.Testimonial);
				OnPropertyChanged("Testimonial");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FullDescription property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String FullDescription
		{
			get
			{
				return this.entityData.FullDescription; 
			}
			
			set
			{
				if (this.entityData.FullDescription == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.FullDescription, this.entityData.FullDescription);
				this.entityData.FullDescription = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.FullDescription, this.entityData.FullDescription);
				OnPropertyChanged("FullDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ConsultantData property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String ConsultantData
		{
			get
			{
				return this.entityData.ConsultantData; 
			}
			
			set
			{
				if (this.entityData.ConsultantData == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.ConsultantData, this.entityData.ConsultantData);
				this.entityData.ConsultantData = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.ConsultantData, this.entityData.ConsultantData);
				OnPropertyChanged("ConsultantData");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LinkedInUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String LinkedInUrl
		{
			get
			{
				return this.entityData.LinkedInUrl; 
			}
			
			set
			{
				if (this.entityData.LinkedInUrl == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.LinkedInUrl, this.entityData.LinkedInUrl);
				this.entityData.LinkedInUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.LinkedInUrl, this.entityData.LinkedInUrl);
				OnPropertyChanged("LinkedInUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TwitterUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String TwitterUrl
		{
			get
			{
				return this.entityData.TwitterUrl; 
			}
			
			set
			{
				if (this.entityData.TwitterUrl == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.TwitterUrl, this.entityData.TwitterUrl);
				this.entityData.TwitterUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.TwitterUrl, this.entityData.TwitterUrl);
				OnPropertyChanged("TwitterUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FacebookUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String FacebookUrl
		{
			get
			{
				return this.entityData.FacebookUrl; 
			}
			
			set
			{
				if (this.entityData.FacebookUrl == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.FacebookUrl, this.entityData.FacebookUrl);
				this.entityData.FacebookUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.FacebookUrl, this.entityData.FacebookUrl);
				OnPropertyChanged("FacebookUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GoogleUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String GoogleUrl
		{
			get
			{
				return this.entityData.GoogleUrl; 
			}
			
			set
			{
				if (this.entityData.GoogleUrl == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.GoogleUrl, this.entityData.GoogleUrl);
				this.entityData.GoogleUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.GoogleUrl, this.entityData.GoogleUrl);
				OnPropertyChanged("GoogleUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Link property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String Link
		{
			get
			{
				return this.entityData.Link; 
			}
			
			set
			{
				if (this.entityData.Link == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Link, this.entityData.Link);
				this.entityData.Link = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Link, this.entityData.Link);
				OnPropertyChanged("Link");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WechatUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String WechatUrl
		{
			get
			{
				return this.entityData.WechatUrl; 
			}
			
			set
			{
				if (this.entityData.WechatUrl == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.WechatUrl, this.entityData.WechatUrl);
				this.entityData.WechatUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.WechatUrl, this.entityData.WechatUrl);
				OnPropertyChanged("WechatUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeaturedTeamMember property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 FeaturedTeamMember
		{
			get
			{
				return this.entityData.FeaturedTeamMember; 
			}
			
			set
			{
				if (this.entityData.FeaturedTeamMember == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.FeaturedTeamMember, this.entityData.FeaturedTeamMember);
				this.entityData.FeaturedTeamMember = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.FeaturedTeamMember, this.entityData.FeaturedTeamMember);
				OnPropertyChanged("FeaturedTeamMember");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ImageUrl property. 
		///		
		/// </summary>
		/// <value>This type is image.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte[] ImageUrl
		{
			get
			{
				return this.entityData.ImageUrl; 
			}
			
			set
			{
				if (this.entityData.ImageUrl == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.ImageUrl, this.entityData.ImageUrl);
				this.entityData.ImageUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.ImageUrl, this.entityData.ImageUrl);
				OnPropertyChanged("ImageUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VideoUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String VideoUrl
		{
			get
			{
				return this.entityData.VideoUrl; 
			}
			
			set
			{
				if (this.entityData.VideoUrl == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.VideoUrl, this.entityData.VideoUrl);
				this.entityData.VideoUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.VideoUrl, this.entityData.VideoUrl);
				OnPropertyChanged("VideoUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BlogRss property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String BlogRss
		{
			get
			{
				return this.entityData.BlogRss; 
			}
			
			set
			{
				if (this.entityData.BlogRss == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.BlogRss, this.entityData.BlogRss);
				this.entityData.BlogRss = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.BlogRss, this.entityData.BlogRss);
				OnPropertyChanged("BlogRss");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NewsRss property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String NewsRss
		{
			get
			{
				return this.entityData.NewsRss; 
			}
			
			set
			{
				if (this.entityData.NewsRss == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.NewsRss, this.entityData.NewsRss);
				this.entityData.NewsRss = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.NewsRss, this.entityData.NewsRss);
				OnPropertyChanged("NewsRss");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobRss property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String JobRss
		{
			get
			{
				return this.entityData.JobRss; 
			}
			
			set
			{
				if (this.entityData.JobRss == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.JobRss, this.entityData.JobRss);
				this.entityData.JobRss = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.JobRss, this.entityData.JobRss);
				OnPropertyChanged("JobRss");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TestimonialsRss property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String TestimonialsRss
		{
			get
			{
				return this.entityData.TestimonialsRss; 
			}
			
			set
			{
				if (this.entityData.TestimonialsRss == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.TestimonialsRss, this.entityData.TestimonialsRss);
				this.entityData.TestimonialsRss = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.TestimonialsRss, this.entityData.TestimonialsRss);
				OnPropertyChanged("TestimonialsRss");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Valid property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 Valid
		{
			get
			{
				return this.entityData.Valid; 
			}
			
			set
			{
				if (this.entityData.Valid == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Valid, this.entityData.Valid);
				this.entityData.Valid = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Valid, this.entityData.Valid);
				OnPropertyChanged("Valid");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MetaTitle property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String MetaTitle
		{
			get
			{
				return this.entityData.MetaTitle; 
			}
			
			set
			{
				if (this.entityData.MetaTitle == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.MetaTitle, this.entityData.MetaTitle);
				this.entityData.MetaTitle = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.MetaTitle, this.entityData.MetaTitle);
				OnPropertyChanged("MetaTitle");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MetaDescription property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1024)]
		public virtual System.String MetaDescription
		{
			get
			{
				return this.entityData.MetaDescription; 
			}
			
			set
			{
				if (this.entityData.MetaDescription == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.MetaDescription, this.entityData.MetaDescription);
				this.entityData.MetaDescription = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.MetaDescription, this.entityData.MetaDescription);
				OnPropertyChanged("MetaDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MetaKeywords property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String MetaKeywords
		{
			get
			{
				return this.entityData.MetaKeywords; 
			}
			
			set
			{
				if (this.entityData.MetaKeywords == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.MetaKeywords, this.entityData.MetaKeywords);
				this.entityData.MetaKeywords = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.MetaKeywords, this.entityData.MetaKeywords);
				OnPropertyChanged("MetaKeywords");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModifiedBy property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsLastModifiedByNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? LastModifiedBy
		{
			get
			{
				return this.entityData.LastModifiedBy; 
			}
			
			set
			{
				if (this.entityData.LastModifiedBy == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.LastModifiedBy, this.entityData.LastModifiedBy);
				this.entityData.LastModifiedBy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.LastModifiedBy, this.entityData.LastModifiedBy);
				OnPropertyChanged("LastModifiedBy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModified property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastModifiedNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastModified
		{
			get
			{
				return this.entityData.LastModified; 
			}
			
			set
			{
				if (this.entityData.LastModified == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.LastModified, this.entityData.LastModified);
				this.entityData.LastModified = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.LastModified, this.entityData.LastModified);
				OnPropertyChanged("LastModified");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sequence property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 Sequence
		{
			get
			{
				return this.entityData.Sequence; 
			}
			
			set
			{
				if (this.entityData.Sequence == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.Sequence, this.entityData.Sequence);
				this.entityData.Sequence = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.Sequence, this.entityData.Sequence);
				OnPropertyChanged("Sequence");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String LastName
		{
			get
			{
				return this.entityData.LastName; 
			}
			
			set
			{
				if (this.entityData.LastName == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.LastName, this.entityData.LastName);
				this.entityData.LastName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.LastName, this.entityData.LastName);
				OnPropertyChanged("LastName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ConsultantsXml property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String ConsultantsXml
		{
			get
			{
				return this.entityData.ConsultantsXml; 
			}
			
			set
			{
				if (this.entityData.ConsultantsXml == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.ConsultantsXml, this.entityData.ConsultantsXml);
				this.entityData.ConsultantsXml = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.ConsultantsXml, this.entityData.ConsultantsXml);
				OnPropertyChanged("ConsultantsXml");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ConsultantImageUrl property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String ConsultantImageUrl
		{
			get
			{
				return this.entityData.ConsultantImageUrl; 
			}
			
			set
			{
				if (this.entityData.ConsultantImageUrl == value)
					return;
					
				OnColumnChanging(ConsultantsColumn.ConsultantImageUrl, this.entityData.ConsultantImageUrl);
				this.entityData.ConsultantImageUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ConsultantsColumn.ConsultantImageUrl, this.entityData.ConsultantImageUrl);
				OnPropertyChanged("ConsultantImageUrl");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="Sites"/>.
		/// </summary>
		/// <value>The source Sites for SiteId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Sites SiteIdSource
      	{
            get { return entityData.SiteIdSource; }
            set { entityData.SiteIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Title", "Title", 128));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FirstName", "First Name", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Email", "Email", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Phone", "Phone", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Mobile", "Mobile", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PositionTitle", "Position Title", 128));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("OfficeLocation", "Office Location", 1024));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Categories", "Categories", 1024));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Location", "Location", 1024));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FriendlyUrl", "Friendly Url", 128));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LinkedInUrl", "Linked In Url", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TwitterUrl", "Twitter Url", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FacebookUrl", "Facebook Url", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GoogleUrl", "Google Url", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Link", "Link", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("WechatUrl", "Wechat Url", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("VideoUrl", "Video Url", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("BlogRss", "Blog Rss", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NewsRss", "News Rss", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("JobRss", "Job Rss", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TestimonialsRss", "Testimonials Rss", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MetaTitle", "Meta Title", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MetaDescription", "Meta Description", 1024));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MetaKeywords", "Meta Keywords", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LastName", "Last Name", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ConsultantImageUrl", "Consultant Image Url", 1000));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "Consultants"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ConsultantID", "SiteID", "LanguageID", "Title", "FirstName", "Email", "Phone", "Mobile", "PositionTitle", "OfficeLocation", "Categories", "Location", "FriendlyURL", "ShortDescription", "Testimonial", "FullDescription", "ConsultantData", "LinkedInURL", "TwitterURL", "FacebookURL", "GoogleURL", "Link", "WechatURL", "FeaturedTeamMember", "ImageURL", "VideoURL", "BlogRSS", "NewsRSS", "JobRSS", "TestimonialsRSS", "Valid", "MetaTitle", "MetaDescription", "MetaKeywords", "LastModifiedBy", "LastModified", "Sequence", "LastName", "ConsultantsXML", "ConsultantImageUrl"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as ConsultantsEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (Consultants) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<Consultants>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as Consultants);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Consultants Entity 
		///</summary>
		protected virtual Consultants Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			Consultants copy = new Consultants();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.ConsultantId = this.ConsultantId;
				copy.SiteId = this.SiteId;
				copy.LanguageId = this.LanguageId;
				copy.Title = this.Title;
				copy.FirstName = this.FirstName;
				copy.Email = this.Email;
				copy.Phone = this.Phone;
				copy.Mobile = this.Mobile;
				copy.PositionTitle = this.PositionTitle;
				copy.OfficeLocation = this.OfficeLocation;
				copy.Categories = this.Categories;
				copy.Location = this.Location;
				copy.FriendlyUrl = this.FriendlyUrl;
				copy.ShortDescription = this.ShortDescription;
				copy.Testimonial = this.Testimonial;
				copy.FullDescription = this.FullDescription;
				copy.ConsultantData = this.ConsultantData;
				copy.LinkedInUrl = this.LinkedInUrl;
				copy.TwitterUrl = this.TwitterUrl;
				copy.FacebookUrl = this.FacebookUrl;
				copy.GoogleUrl = this.GoogleUrl;
				copy.Link = this.Link;
				copy.WechatUrl = this.WechatUrl;
				copy.FeaturedTeamMember = this.FeaturedTeamMember;
				copy.ImageUrl = this.ImageUrl;
				copy.VideoUrl = this.VideoUrl;
				copy.BlogRss = this.BlogRss;
				copy.NewsRss = this.NewsRss;
				copy.JobRss = this.JobRss;
				copy.TestimonialsRss = this.TestimonialsRss;
				copy.Valid = this.Valid;
				copy.MetaTitle = this.MetaTitle;
				copy.MetaDescription = this.MetaDescription;
				copy.MetaKeywords = this.MetaKeywords;
				copy.LastModifiedBy = this.LastModifiedBy;
				copy.LastModified = this.LastModified;
				copy.Sequence = this.Sequence;
				copy.LastName = this.LastName;
				copy.ConsultantsXml = this.ConsultantsXml;
				copy.ConsultantImageUrl = this.ConsultantImageUrl;
			
			if (this.SiteIdSource != null && existingCopies.Contains(this.SiteIdSource))
				copy.SiteIdSource = existingCopies[this.SiteIdSource] as Sites;
			else
				copy.SiteIdSource = MakeCopyOf(this.SiteIdSource, existingCopies) as Sites;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed Consultants Entity 
		///</summary>
		public virtual Consultants Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed Consultants Entity which is a deep copy of the current entity.
		///</summary>
		public virtual Consultants DeepCopy()
		{
			return EntityHelper.Clone<Consultants>(this as Consultants);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as ConsultantsEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new ConsultantsEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as ConsultantsEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(ConsultantsColumn column)
		{
			switch(column)
			{
					case ConsultantsColumn.ConsultantId:
					return entityData.ConsultantId != _originalData.ConsultantId;
					case ConsultantsColumn.SiteId:
					return entityData.SiteId != _originalData.SiteId;
					case ConsultantsColumn.LanguageId:
					return entityData.LanguageId != _originalData.LanguageId;
					case ConsultantsColumn.Title:
					return entityData.Title != _originalData.Title;
					case ConsultantsColumn.FirstName:
					return entityData.FirstName != _originalData.FirstName;
					case ConsultantsColumn.Email:
					return entityData.Email != _originalData.Email;
					case ConsultantsColumn.Phone:
					return entityData.Phone != _originalData.Phone;
					case ConsultantsColumn.Mobile:
					return entityData.Mobile != _originalData.Mobile;
					case ConsultantsColumn.PositionTitle:
					return entityData.PositionTitle != _originalData.PositionTitle;
					case ConsultantsColumn.OfficeLocation:
					return entityData.OfficeLocation != _originalData.OfficeLocation;
					case ConsultantsColumn.Categories:
					return entityData.Categories != _originalData.Categories;
					case ConsultantsColumn.Location:
					return entityData.Location != _originalData.Location;
					case ConsultantsColumn.FriendlyUrl:
					return entityData.FriendlyUrl != _originalData.FriendlyUrl;
					case ConsultantsColumn.ShortDescription:
					return entityData.ShortDescription != _originalData.ShortDescription;
					case ConsultantsColumn.Testimonial:
					return entityData.Testimonial != _originalData.Testimonial;
					case ConsultantsColumn.FullDescription:
					return entityData.FullDescription != _originalData.FullDescription;
					case ConsultantsColumn.ConsultantData:
					return entityData.ConsultantData != _originalData.ConsultantData;
					case ConsultantsColumn.LinkedInUrl:
					return entityData.LinkedInUrl != _originalData.LinkedInUrl;
					case ConsultantsColumn.TwitterUrl:
					return entityData.TwitterUrl != _originalData.TwitterUrl;
					case ConsultantsColumn.FacebookUrl:
					return entityData.FacebookUrl != _originalData.FacebookUrl;
					case ConsultantsColumn.GoogleUrl:
					return entityData.GoogleUrl != _originalData.GoogleUrl;
					case ConsultantsColumn.Link:
					return entityData.Link != _originalData.Link;
					case ConsultantsColumn.WechatUrl:
					return entityData.WechatUrl != _originalData.WechatUrl;
					case ConsultantsColumn.FeaturedTeamMember:
					return entityData.FeaturedTeamMember != _originalData.FeaturedTeamMember;
					case ConsultantsColumn.ImageUrl:
					return entityData.ImageUrl != _originalData.ImageUrl;
					case ConsultantsColumn.VideoUrl:
					return entityData.VideoUrl != _originalData.VideoUrl;
					case ConsultantsColumn.BlogRss:
					return entityData.BlogRss != _originalData.BlogRss;
					case ConsultantsColumn.NewsRss:
					return entityData.NewsRss != _originalData.NewsRss;
					case ConsultantsColumn.JobRss:
					return entityData.JobRss != _originalData.JobRss;
					case ConsultantsColumn.TestimonialsRss:
					return entityData.TestimonialsRss != _originalData.TestimonialsRss;
					case ConsultantsColumn.Valid:
					return entityData.Valid != _originalData.Valid;
					case ConsultantsColumn.MetaTitle:
					return entityData.MetaTitle != _originalData.MetaTitle;
					case ConsultantsColumn.MetaDescription:
					return entityData.MetaDescription != _originalData.MetaDescription;
					case ConsultantsColumn.MetaKeywords:
					return entityData.MetaKeywords != _originalData.MetaKeywords;
					case ConsultantsColumn.LastModifiedBy:
					return entityData.LastModifiedBy != _originalData.LastModifiedBy;
					case ConsultantsColumn.LastModified:
					return entityData.LastModified != _originalData.LastModified;
					case ConsultantsColumn.Sequence:
					return entityData.Sequence != _originalData.Sequence;
					case ConsultantsColumn.LastName:
					return entityData.LastName != _originalData.LastName;
					case ConsultantsColumn.ConsultantsXml:
					return entityData.ConsultantsXml != _originalData.ConsultantsXml;
					case ConsultantsColumn.ConsultantImageUrl:
					return entityData.ConsultantImageUrl != _originalData.ConsultantImageUrl;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< ConsultantsColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.ConsultantId != _originalData.ConsultantId;
			result = result || entityData.SiteId != _originalData.SiteId;
			result = result || entityData.LanguageId != _originalData.LanguageId;
			result = result || entityData.Title != _originalData.Title;
			result = result || entityData.FirstName != _originalData.FirstName;
			result = result || entityData.Email != _originalData.Email;
			result = result || entityData.Phone != _originalData.Phone;
			result = result || entityData.Mobile != _originalData.Mobile;
			result = result || entityData.PositionTitle != _originalData.PositionTitle;
			result = result || entityData.OfficeLocation != _originalData.OfficeLocation;
			result = result || entityData.Categories != _originalData.Categories;
			result = result || entityData.Location != _originalData.Location;
			result = result || entityData.FriendlyUrl != _originalData.FriendlyUrl;
			result = result || entityData.ShortDescription != _originalData.ShortDescription;
			result = result || entityData.Testimonial != _originalData.Testimonial;
			result = result || entityData.FullDescription != _originalData.FullDescription;
			result = result || entityData.ConsultantData != _originalData.ConsultantData;
			result = result || entityData.LinkedInUrl != _originalData.LinkedInUrl;
			result = result || entityData.TwitterUrl != _originalData.TwitterUrl;
			result = result || entityData.FacebookUrl != _originalData.FacebookUrl;
			result = result || entityData.GoogleUrl != _originalData.GoogleUrl;
			result = result || entityData.Link != _originalData.Link;
			result = result || entityData.WechatUrl != _originalData.WechatUrl;
			result = result || entityData.FeaturedTeamMember != _originalData.FeaturedTeamMember;
			result = result || entityData.ImageUrl != _originalData.ImageUrl;
			result = result || entityData.VideoUrl != _originalData.VideoUrl;
			result = result || entityData.BlogRss != _originalData.BlogRss;
			result = result || entityData.NewsRss != _originalData.NewsRss;
			result = result || entityData.JobRss != _originalData.JobRss;
			result = result || entityData.TestimonialsRss != _originalData.TestimonialsRss;
			result = result || entityData.Valid != _originalData.Valid;
			result = result || entityData.MetaTitle != _originalData.MetaTitle;
			result = result || entityData.MetaDescription != _originalData.MetaDescription;
			result = result || entityData.MetaKeywords != _originalData.MetaKeywords;
			result = result || entityData.LastModifiedBy != _originalData.LastModifiedBy;
			result = result || entityData.LastModified != _originalData.LastModified;
			result = result || entityData.Sequence != _originalData.Sequence;
			result = result || entityData.LastName != _originalData.LastName;
			result = result || entityData.ConsultantsXml != _originalData.ConsultantsXml;
			result = result || entityData.ConsultantImageUrl != _originalData.ConsultantImageUrl;
			return result;
		}	
		
		///<summary>
		///  Returns a Consultants Entity with the original data.
		///</summary>
		public Consultants GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateConsultants(
				_originalData.SiteId,
				_originalData.LanguageId,
				_originalData.Title,
				_originalData.FirstName,
				_originalData.Email,
				_originalData.Phone,
				_originalData.Mobile,
				_originalData.PositionTitle,
				_originalData.OfficeLocation,
				_originalData.Categories,
				_originalData.Location,
				_originalData.FriendlyUrl,
				_originalData.ShortDescription,
				_originalData.Testimonial,
				_originalData.FullDescription,
				_originalData.ConsultantData,
				_originalData.LinkedInUrl,
				_originalData.TwitterUrl,
				_originalData.FacebookUrl,
				_originalData.GoogleUrl,
				_originalData.Link,
				_originalData.WechatUrl,
				_originalData.FeaturedTeamMember,
				_originalData.ImageUrl,
				_originalData.VideoUrl,
				_originalData.BlogRss,
				_originalData.NewsRss,
				_originalData.JobRss,
				_originalData.TestimonialsRss,
				_originalData.Valid,
				_originalData.MetaTitle,
				_originalData.MetaDescription,
				_originalData.MetaKeywords,
				_originalData.LastModifiedBy,
				_originalData.LastModified,
				_originalData.Sequence,
				_originalData.LastName,
				_originalData.ConsultantsXml,
				_originalData.ConsultantImageUrl
				);
				
			return (Consultants)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="ConsultantsBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is ConsultantsBase)
				return ValueEquals(this, (ConsultantsBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="ConsultantsBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.ConsultantId.GetHashCode() ^ 
					this.SiteId.GetHashCode() ^ 
					((this.LanguageId == null) ? string.Empty : this.LanguageId.ToString()).GetHashCode() ^ 
					((this.Title == null) ? string.Empty : this.Title.ToString()).GetHashCode() ^ 
					((this.FirstName == null) ? string.Empty : this.FirstName.ToString()).GetHashCode() ^ 
					((this.Email == null) ? string.Empty : this.Email.ToString()).GetHashCode() ^ 
					((this.Phone == null) ? string.Empty : this.Phone.ToString()).GetHashCode() ^ 
					((this.Mobile == null) ? string.Empty : this.Mobile.ToString()).GetHashCode() ^ 
					((this.PositionTitle == null) ? string.Empty : this.PositionTitle.ToString()).GetHashCode() ^ 
					((this.OfficeLocation == null) ? string.Empty : this.OfficeLocation.ToString()).GetHashCode() ^ 
					((this.Categories == null) ? string.Empty : this.Categories.ToString()).GetHashCode() ^ 
					((this.Location == null) ? string.Empty : this.Location.ToString()).GetHashCode() ^ 
					((this.FriendlyUrl == null) ? string.Empty : this.FriendlyUrl.ToString()).GetHashCode() ^ 
					((this.ShortDescription == null) ? string.Empty : this.ShortDescription.ToString()).GetHashCode() ^ 
					((this.Testimonial == null) ? string.Empty : this.Testimonial.ToString()).GetHashCode() ^ 
					((this.FullDescription == null) ? string.Empty : this.FullDescription.ToString()).GetHashCode() ^ 
					((this.ConsultantData == null) ? string.Empty : this.ConsultantData.ToString()).GetHashCode() ^ 
					((this.LinkedInUrl == null) ? string.Empty : this.LinkedInUrl.ToString()).GetHashCode() ^ 
					((this.TwitterUrl == null) ? string.Empty : this.TwitterUrl.ToString()).GetHashCode() ^ 
					((this.FacebookUrl == null) ? string.Empty : this.FacebookUrl.ToString()).GetHashCode() ^ 
					((this.GoogleUrl == null) ? string.Empty : this.GoogleUrl.ToString()).GetHashCode() ^ 
					((this.Link == null) ? string.Empty : this.Link.ToString()).GetHashCode() ^ 
					((this.WechatUrl == null) ? string.Empty : this.WechatUrl.ToString()).GetHashCode() ^ 
					this.FeaturedTeamMember.GetHashCode() ^ 
					((this.ImageUrl == null) ? string.Empty : this.ImageUrl.ToString()).GetHashCode() ^ 
					((this.VideoUrl == null) ? string.Empty : this.VideoUrl.ToString()).GetHashCode() ^ 
					((this.BlogRss == null) ? string.Empty : this.BlogRss.ToString()).GetHashCode() ^ 
					((this.NewsRss == null) ? string.Empty : this.NewsRss.ToString()).GetHashCode() ^ 
					((this.JobRss == null) ? string.Empty : this.JobRss.ToString()).GetHashCode() ^ 
					((this.TestimonialsRss == null) ? string.Empty : this.TestimonialsRss.ToString()).GetHashCode() ^ 
					this.Valid.GetHashCode() ^ 
					((this.MetaTitle == null) ? string.Empty : this.MetaTitle.ToString()).GetHashCode() ^ 
					((this.MetaDescription == null) ? string.Empty : this.MetaDescription.ToString()).GetHashCode() ^ 
					((this.MetaKeywords == null) ? string.Empty : this.MetaKeywords.ToString()).GetHashCode() ^ 
					((this.LastModifiedBy == null) ? string.Empty : this.LastModifiedBy.ToString()).GetHashCode() ^ 
					((this.LastModified == null) ? string.Empty : this.LastModified.ToString()).GetHashCode() ^ 
					this.Sequence.GetHashCode() ^ 
					((this.LastName == null) ? string.Empty : this.LastName.ToString()).GetHashCode() ^ 
					((this.ConsultantsXml == null) ? string.Empty : this.ConsultantsXml.ToString()).GetHashCode() ^ 
					((this.ConsultantImageUrl == null) ? string.Empty : this.ConsultantImageUrl.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ConsultantsBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ConsultantsBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="ConsultantsBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="ConsultantsBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ConsultantsBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(ConsultantsBase Object1, ConsultantsBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.ConsultantId != Object2.ConsultantId)
				equal = false;
			if (Object1.SiteId != Object2.SiteId)
				equal = false;
			if ( Object1.LanguageId != null && Object2.LanguageId != null )
			{
				if (Object1.LanguageId != Object2.LanguageId)
					equal = false;
			}
			else if (Object1.LanguageId == null ^ Object2.LanguageId == null )
			{
				equal = false;
			}
			if ( Object1.Title != null && Object2.Title != null )
			{
				if (Object1.Title != Object2.Title)
					equal = false;
			}
			else if (Object1.Title == null ^ Object2.Title == null )
			{
				equal = false;
			}
			if ( Object1.FirstName != null && Object2.FirstName != null )
			{
				if (Object1.FirstName != Object2.FirstName)
					equal = false;
			}
			else if (Object1.FirstName == null ^ Object2.FirstName == null )
			{
				equal = false;
			}
			if ( Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object2.Email == null )
			{
				equal = false;
			}
			if ( Object1.Phone != null && Object2.Phone != null )
			{
				if (Object1.Phone != Object2.Phone)
					equal = false;
			}
			else if (Object1.Phone == null ^ Object2.Phone == null )
			{
				equal = false;
			}
			if ( Object1.Mobile != null && Object2.Mobile != null )
			{
				if (Object1.Mobile != Object2.Mobile)
					equal = false;
			}
			else if (Object1.Mobile == null ^ Object2.Mobile == null )
			{
				equal = false;
			}
			if ( Object1.PositionTitle != null && Object2.PositionTitle != null )
			{
				if (Object1.PositionTitle != Object2.PositionTitle)
					equal = false;
			}
			else if (Object1.PositionTitle == null ^ Object2.PositionTitle == null )
			{
				equal = false;
			}
			if ( Object1.OfficeLocation != null && Object2.OfficeLocation != null )
			{
				if (Object1.OfficeLocation != Object2.OfficeLocation)
					equal = false;
			}
			else if (Object1.OfficeLocation == null ^ Object2.OfficeLocation == null )
			{
				equal = false;
			}
			if ( Object1.Categories != null && Object2.Categories != null )
			{
				if (Object1.Categories != Object2.Categories)
					equal = false;
			}
			else if (Object1.Categories == null ^ Object2.Categories == null )
			{
				equal = false;
			}
			if ( Object1.Location != null && Object2.Location != null )
			{
				if (Object1.Location != Object2.Location)
					equal = false;
			}
			else if (Object1.Location == null ^ Object2.Location == null )
			{
				equal = false;
			}
			if ( Object1.FriendlyUrl != null && Object2.FriendlyUrl != null )
			{
				if (Object1.FriendlyUrl != Object2.FriendlyUrl)
					equal = false;
			}
			else if (Object1.FriendlyUrl == null ^ Object2.FriendlyUrl == null )
			{
				equal = false;
			}
			if ( Object1.ShortDescription != null && Object2.ShortDescription != null )
			{
				if (Object1.ShortDescription != Object2.ShortDescription)
					equal = false;
			}
			else if (Object1.ShortDescription == null ^ Object2.ShortDescription == null )
			{
				equal = false;
			}
			if ( Object1.Testimonial != null && Object2.Testimonial != null )
			{
				if (Object1.Testimonial != Object2.Testimonial)
					equal = false;
			}
			else if (Object1.Testimonial == null ^ Object2.Testimonial == null )
			{
				equal = false;
			}
			if ( Object1.FullDescription != null && Object2.FullDescription != null )
			{
				if (Object1.FullDescription != Object2.FullDescription)
					equal = false;
			}
			else if (Object1.FullDescription == null ^ Object2.FullDescription == null )
			{
				equal = false;
			}
			if ( Object1.ConsultantData != null && Object2.ConsultantData != null )
			{
				if (Object1.ConsultantData != Object2.ConsultantData)
					equal = false;
			}
			else if (Object1.ConsultantData == null ^ Object2.ConsultantData == null )
			{
				equal = false;
			}
			if ( Object1.LinkedInUrl != null && Object2.LinkedInUrl != null )
			{
				if (Object1.LinkedInUrl != Object2.LinkedInUrl)
					equal = false;
			}
			else if (Object1.LinkedInUrl == null ^ Object2.LinkedInUrl == null )
			{
				equal = false;
			}
			if ( Object1.TwitterUrl != null && Object2.TwitterUrl != null )
			{
				if (Object1.TwitterUrl != Object2.TwitterUrl)
					equal = false;
			}
			else if (Object1.TwitterUrl == null ^ Object2.TwitterUrl == null )
			{
				equal = false;
			}
			if ( Object1.FacebookUrl != null && Object2.FacebookUrl != null )
			{
				if (Object1.FacebookUrl != Object2.FacebookUrl)
					equal = false;
			}
			else if (Object1.FacebookUrl == null ^ Object2.FacebookUrl == null )
			{
				equal = false;
			}
			if ( Object1.GoogleUrl != null && Object2.GoogleUrl != null )
			{
				if (Object1.GoogleUrl != Object2.GoogleUrl)
					equal = false;
			}
			else if (Object1.GoogleUrl == null ^ Object2.GoogleUrl == null )
			{
				equal = false;
			}
			if ( Object1.Link != null && Object2.Link != null )
			{
				if (Object1.Link != Object2.Link)
					equal = false;
			}
			else if (Object1.Link == null ^ Object2.Link == null )
			{
				equal = false;
			}
			if ( Object1.WechatUrl != null && Object2.WechatUrl != null )
			{
				if (Object1.WechatUrl != Object2.WechatUrl)
					equal = false;
			}
			else if (Object1.WechatUrl == null ^ Object2.WechatUrl == null )
			{
				equal = false;
			}
			if (Object1.FeaturedTeamMember != Object2.FeaturedTeamMember)
				equal = false;
			if ( Object1.ImageUrl != null && Object2.ImageUrl != null )
			{
				if (Object1.ImageUrl != Object2.ImageUrl)
					equal = false;
			}
			else if (Object1.ImageUrl == null ^ Object2.ImageUrl == null )
			{
				equal = false;
			}
			if ( Object1.VideoUrl != null && Object2.VideoUrl != null )
			{
				if (Object1.VideoUrl != Object2.VideoUrl)
					equal = false;
			}
			else if (Object1.VideoUrl == null ^ Object2.VideoUrl == null )
			{
				equal = false;
			}
			if ( Object1.BlogRss != null && Object2.BlogRss != null )
			{
				if (Object1.BlogRss != Object2.BlogRss)
					equal = false;
			}
			else if (Object1.BlogRss == null ^ Object2.BlogRss == null )
			{
				equal = false;
			}
			if ( Object1.NewsRss != null && Object2.NewsRss != null )
			{
				if (Object1.NewsRss != Object2.NewsRss)
					equal = false;
			}
			else if (Object1.NewsRss == null ^ Object2.NewsRss == null )
			{
				equal = false;
			}
			if ( Object1.JobRss != null && Object2.JobRss != null )
			{
				if (Object1.JobRss != Object2.JobRss)
					equal = false;
			}
			else if (Object1.JobRss == null ^ Object2.JobRss == null )
			{
				equal = false;
			}
			if ( Object1.TestimonialsRss != null && Object2.TestimonialsRss != null )
			{
				if (Object1.TestimonialsRss != Object2.TestimonialsRss)
					equal = false;
			}
			else if (Object1.TestimonialsRss == null ^ Object2.TestimonialsRss == null )
			{
				equal = false;
			}
			if (Object1.Valid != Object2.Valid)
				equal = false;
			if ( Object1.MetaTitle != null && Object2.MetaTitle != null )
			{
				if (Object1.MetaTitle != Object2.MetaTitle)
					equal = false;
			}
			else if (Object1.MetaTitle == null ^ Object2.MetaTitle == null )
			{
				equal = false;
			}
			if ( Object1.MetaDescription != null && Object2.MetaDescription != null )
			{
				if (Object1.MetaDescription != Object2.MetaDescription)
					equal = false;
			}
			else if (Object1.MetaDescription == null ^ Object2.MetaDescription == null )
			{
				equal = false;
			}
			if ( Object1.MetaKeywords != null && Object2.MetaKeywords != null )
			{
				if (Object1.MetaKeywords != Object2.MetaKeywords)
					equal = false;
			}
			else if (Object1.MetaKeywords == null ^ Object2.MetaKeywords == null )
			{
				equal = false;
			}
			if ( Object1.LastModifiedBy != null && Object2.LastModifiedBy != null )
			{
				if (Object1.LastModifiedBy != Object2.LastModifiedBy)
					equal = false;
			}
			else if (Object1.LastModifiedBy == null ^ Object2.LastModifiedBy == null )
			{
				equal = false;
			}
			if ( Object1.LastModified != null && Object2.LastModified != null )
			{
				if (Object1.LastModified != Object2.LastModified)
					equal = false;
			}
			else if (Object1.LastModified == null ^ Object2.LastModified == null )
			{
				equal = false;
			}
			if (Object1.Sequence != Object2.Sequence)
				equal = false;
			if ( Object1.LastName != null && Object2.LastName != null )
			{
				if (Object1.LastName != Object2.LastName)
					equal = false;
			}
			else if (Object1.LastName == null ^ Object2.LastName == null )
			{
				equal = false;
			}
			if ( Object1.ConsultantsXml != null && Object2.ConsultantsXml != null )
			{
				if (Object1.ConsultantsXml != Object2.ConsultantsXml)
					equal = false;
			}
			else if (Object1.ConsultantsXml == null ^ Object2.ConsultantsXml == null )
			{
				equal = false;
			}
			if ( Object1.ConsultantImageUrl != null && Object2.ConsultantImageUrl != null )
			{
				if (Object1.ConsultantImageUrl != Object2.ConsultantImageUrl)
					equal = false;
			}
			else if (Object1.ConsultantImageUrl == null ^ Object2.ConsultantImageUrl == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((ConsultantsBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static ConsultantsComparer GetComparer()
        {
            return new ConsultantsComparer();
        }
        */

        // Comparer delegates back to Consultants
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(Consultants rhs, ConsultantsColumn which)
        {
            switch (which)
            {
            	
            	
            	case ConsultantsColumn.ConsultantId:
            		return this.ConsultantId.CompareTo(rhs.ConsultantId);
            		
            		                 
            	
            	
            	case ConsultantsColumn.SiteId:
            		return this.SiteId.CompareTo(rhs.SiteId);
            		
            		                 
            	
            	
            	case ConsultantsColumn.LanguageId:
            		return this.LanguageId.Value.CompareTo(rhs.LanguageId.Value);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Title:
            		return this.Title.CompareTo(rhs.Title);
            		
            		                 
            	
            	
            	case ConsultantsColumn.FirstName:
            		return this.FirstName.CompareTo(rhs.FirstName);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Email:
            		return this.Email.CompareTo(rhs.Email);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Phone:
            		return this.Phone.CompareTo(rhs.Phone);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Mobile:
            		return this.Mobile.CompareTo(rhs.Mobile);
            		
            		                 
            	
            	
            	case ConsultantsColumn.PositionTitle:
            		return this.PositionTitle.CompareTo(rhs.PositionTitle);
            		
            		                 
            	
            	
            	case ConsultantsColumn.OfficeLocation:
            		return this.OfficeLocation.CompareTo(rhs.OfficeLocation);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Categories:
            		return this.Categories.CompareTo(rhs.Categories);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Location:
            		return this.Location.CompareTo(rhs.Location);
            		
            		                 
            	
            	
            	case ConsultantsColumn.FriendlyUrl:
            		return this.FriendlyUrl.CompareTo(rhs.FriendlyUrl);
            		
            		                 
            	
            	
            	case ConsultantsColumn.ShortDescription:
            		return this.ShortDescription.CompareTo(rhs.ShortDescription);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Testimonial:
            		return this.Testimonial.CompareTo(rhs.Testimonial);
            		
            		                 
            	
            	
            	case ConsultantsColumn.FullDescription:
            		return this.FullDescription.CompareTo(rhs.FullDescription);
            		
            		                 
            	
            	
            	case ConsultantsColumn.ConsultantData:
            		return this.ConsultantData.CompareTo(rhs.ConsultantData);
            		
            		                 
            	
            	
            	case ConsultantsColumn.LinkedInUrl:
            		return this.LinkedInUrl.CompareTo(rhs.LinkedInUrl);
            		
            		                 
            	
            	
            	case ConsultantsColumn.TwitterUrl:
            		return this.TwitterUrl.CompareTo(rhs.TwitterUrl);
            		
            		                 
            	
            	
            	case ConsultantsColumn.FacebookUrl:
            		return this.FacebookUrl.CompareTo(rhs.FacebookUrl);
            		
            		                 
            	
            	
            	case ConsultantsColumn.GoogleUrl:
            		return this.GoogleUrl.CompareTo(rhs.GoogleUrl);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Link:
            		return this.Link.CompareTo(rhs.Link);
            		
            		                 
            	
            	
            	case ConsultantsColumn.WechatUrl:
            		return this.WechatUrl.CompareTo(rhs.WechatUrl);
            		
            		                 
            	
            	
            	case ConsultantsColumn.FeaturedTeamMember:
            		return this.FeaturedTeamMember.CompareTo(rhs.FeaturedTeamMember);
            		
            		                 
            	
            		                 
            	
            	
            	case ConsultantsColumn.VideoUrl:
            		return this.VideoUrl.CompareTo(rhs.VideoUrl);
            		
            		                 
            	
            	
            	case ConsultantsColumn.BlogRss:
            		return this.BlogRss.CompareTo(rhs.BlogRss);
            		
            		                 
            	
            	
            	case ConsultantsColumn.NewsRss:
            		return this.NewsRss.CompareTo(rhs.NewsRss);
            		
            		                 
            	
            	
            	case ConsultantsColumn.JobRss:
            		return this.JobRss.CompareTo(rhs.JobRss);
            		
            		                 
            	
            	
            	case ConsultantsColumn.TestimonialsRss:
            		return this.TestimonialsRss.CompareTo(rhs.TestimonialsRss);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Valid:
            		return this.Valid.CompareTo(rhs.Valid);
            		
            		                 
            	
            	
            	case ConsultantsColumn.MetaTitle:
            		return this.MetaTitle.CompareTo(rhs.MetaTitle);
            		
            		                 
            	
            	
            	case ConsultantsColumn.MetaDescription:
            		return this.MetaDescription.CompareTo(rhs.MetaDescription);
            		
            		                 
            	
            	
            	case ConsultantsColumn.MetaKeywords:
            		return this.MetaKeywords.CompareTo(rhs.MetaKeywords);
            		
            		                 
            	
            	
            	case ConsultantsColumn.LastModifiedBy:
            		return this.LastModifiedBy.Value.CompareTo(rhs.LastModifiedBy.Value);
            		
            		                 
            	
            	
            	case ConsultantsColumn.LastModified:
            		return this.LastModified.Value.CompareTo(rhs.LastModified.Value);
            		
            		                 
            	
            	
            	case ConsultantsColumn.Sequence:
            		return this.Sequence.CompareTo(rhs.Sequence);
            		
            		                 
            	
            	
            	case ConsultantsColumn.LastName:
            		return this.LastName.CompareTo(rhs.LastName);
            		
            		                 
            	
            	
            	case ConsultantsColumn.ConsultantsXml:
            		return this.ConsultantsXml.CompareTo(rhs.ConsultantsXml);
            		
            		                 
            	
            	
            	case ConsultantsColumn.ConsultantImageUrl:
            		return this.ConsultantImageUrl.CompareTo(rhs.ConsultantImageUrl);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<ConsultantsKey> Members
		
		// member variable for the EntityId property
		private ConsultantsKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual ConsultantsKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new ConsultantsKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("Consultants")
					.Append("|").Append( this.ConsultantId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{41}{40}- ConsultantId: {0}{40}- SiteId: {1}{40}- LanguageId: {2}{40}- Title: {3}{40}- FirstName: {4}{40}- Email: {5}{40}- Phone: {6}{40}- Mobile: {7}{40}- PositionTitle: {8}{40}- OfficeLocation: {9}{40}- Categories: {10}{40}- Location: {11}{40}- FriendlyUrl: {12}{40}- ShortDescription: {13}{40}- Testimonial: {14}{40}- FullDescription: {15}{40}- ConsultantData: {16}{40}- LinkedInUrl: {17}{40}- TwitterUrl: {18}{40}- FacebookUrl: {19}{40}- GoogleUrl: {20}{40}- Link: {21}{40}- WechatUrl: {22}{40}- FeaturedTeamMember: {23}{40}- ImageUrl: {24}{40}- VideoUrl: {25}{40}- BlogRss: {26}{40}- NewsRss: {27}{40}- JobRss: {28}{40}- TestimonialsRss: {29}{40}- Valid: {30}{40}- MetaTitle: {31}{40}- MetaDescription: {32}{40}- MetaKeywords: {33}{40}- LastModifiedBy: {34}{40}- LastModified: {35}{40}- Sequence: {36}{40}- LastName: {37}{40}- ConsultantsXml: {38}{40}- ConsultantImageUrl: {39}{40}{42}", 
				this.ConsultantId,
				this.SiteId,
				(this.LanguageId == null) ? string.Empty : this.LanguageId.ToString(),
				(this.Title == null) ? string.Empty : this.Title.ToString(),
				(this.FirstName == null) ? string.Empty : this.FirstName.ToString(),
				(this.Email == null) ? string.Empty : this.Email.ToString(),
				(this.Phone == null) ? string.Empty : this.Phone.ToString(),
				(this.Mobile == null) ? string.Empty : this.Mobile.ToString(),
				(this.PositionTitle == null) ? string.Empty : this.PositionTitle.ToString(),
				(this.OfficeLocation == null) ? string.Empty : this.OfficeLocation.ToString(),
				(this.Categories == null) ? string.Empty : this.Categories.ToString(),
				(this.Location == null) ? string.Empty : this.Location.ToString(),
				(this.FriendlyUrl == null) ? string.Empty : this.FriendlyUrl.ToString(),
				(this.ShortDescription == null) ? string.Empty : this.ShortDescription.ToString(),
				(this.Testimonial == null) ? string.Empty : this.Testimonial.ToString(),
				(this.FullDescription == null) ? string.Empty : this.FullDescription.ToString(),
				(this.ConsultantData == null) ? string.Empty : this.ConsultantData.ToString(),
				(this.LinkedInUrl == null) ? string.Empty : this.LinkedInUrl.ToString(),
				(this.TwitterUrl == null) ? string.Empty : this.TwitterUrl.ToString(),
				(this.FacebookUrl == null) ? string.Empty : this.FacebookUrl.ToString(),
				(this.GoogleUrl == null) ? string.Empty : this.GoogleUrl.ToString(),
				(this.Link == null) ? string.Empty : this.Link.ToString(),
				(this.WechatUrl == null) ? string.Empty : this.WechatUrl.ToString(),
				this.FeaturedTeamMember,
				(this.ImageUrl == null) ? string.Empty : this.ImageUrl.ToString(),
				(this.VideoUrl == null) ? string.Empty : this.VideoUrl.ToString(),
				(this.BlogRss == null) ? string.Empty : this.BlogRss.ToString(),
				(this.NewsRss == null) ? string.Empty : this.NewsRss.ToString(),
				(this.JobRss == null) ? string.Empty : this.JobRss.ToString(),
				(this.TestimonialsRss == null) ? string.Empty : this.TestimonialsRss.ToString(),
				this.Valid,
				(this.MetaTitle == null) ? string.Empty : this.MetaTitle.ToString(),
				(this.MetaDescription == null) ? string.Empty : this.MetaDescription.ToString(),
				(this.MetaKeywords == null) ? string.Empty : this.MetaKeywords.ToString(),
				(this.LastModifiedBy == null) ? string.Empty : this.LastModifiedBy.ToString(),
				(this.LastModified == null) ? string.Empty : this.LastModified.ToString(),
				this.Sequence,
				(this.LastName == null) ? string.Empty : this.LastName.ToString(),
				(this.ConsultantsXml == null) ? string.Empty : this.ConsultantsXml.ToString(),
				(this.ConsultantImageUrl == null) ? string.Empty : this.ConsultantImageUrl.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'Consultants' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class ConsultantsEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ConsultantID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "Consultants"</remarks>
		public System.Int32 ConsultantId;
			
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// SiteID : 
		/// </summary>
		public System.Int32		  SiteId = (int)0;
		
		/// <summary>
		/// LanguageID : 
		/// </summary>
		public System.Int32?		  LanguageId = null;
		
		/// <summary>
		/// Title : 
		/// </summary>
		public System.String		  Title = null;
		
		/// <summary>
		/// FirstName : 
		/// </summary>
		public System.String		  FirstName = null;
		
		/// <summary>
		/// Email : 
		/// </summary>
		public System.String		  Email = null;
		
		/// <summary>
		/// Phone : 
		/// </summary>
		public System.String		  Phone = null;
		
		/// <summary>
		/// Mobile : 
		/// </summary>
		public System.String		  Mobile = null;
		
		/// <summary>
		/// PositionTitle : 
		/// </summary>
		public System.String		  PositionTitle = null;
		
		/// <summary>
		/// OfficeLocation : 
		/// </summary>
		public System.String		  OfficeLocation = null;
		
		/// <summary>
		/// Categories : 
		/// </summary>
		public System.String		  Categories = null;
		
		/// <summary>
		/// Location : 
		/// </summary>
		public System.String		  Location = null;
		
		/// <summary>
		/// FriendlyURL : 
		/// </summary>
		public System.String		  FriendlyUrl = null;
		
		/// <summary>
		/// ShortDescription : 
		/// </summary>
		public System.String		  ShortDescription = null;
		
		/// <summary>
		/// Testimonial : 
		/// </summary>
		public System.String		  Testimonial = null;
		
		/// <summary>
		/// FullDescription : 
		/// </summary>
		public System.String		  FullDescription = null;
		
		/// <summary>
		/// ConsultantData : 
		/// </summary>
		public System.String		  ConsultantData = null;
		
		/// <summary>
		/// LinkedInURL : 
		/// </summary>
		public System.String		  LinkedInUrl = null;
		
		/// <summary>
		/// TwitterURL : 
		/// </summary>
		public System.String		  TwitterUrl = null;
		
		/// <summary>
		/// FacebookURL : 
		/// </summary>
		public System.String		  FacebookUrl = null;
		
		/// <summary>
		/// GoogleURL : 
		/// </summary>
		public System.String		  GoogleUrl = null;
		
		/// <summary>
		/// Link : 
		/// </summary>
		public System.String		  Link = null;
		
		/// <summary>
		/// WechatURL : 
		/// </summary>
		public System.String		  WechatUrl = null;
		
		/// <summary>
		/// FeaturedTeamMember : 
		/// </summary>
		public System.Int32		  FeaturedTeamMember = (int)0;
		
		/// <summary>
		/// ImageURL : 
		/// </summary>
		public System.Byte[]		  ImageUrl = null;
		
		/// <summary>
		/// VideoURL : 
		/// </summary>
		public System.String		  VideoUrl = null;
		
		/// <summary>
		/// BlogRSS : 
		/// </summary>
		public System.String		  BlogRss = null;
		
		/// <summary>
		/// NewsRSS : 
		/// </summary>
		public System.String		  NewsRss = null;
		
		/// <summary>
		/// JobRSS : 
		/// </summary>
		public System.String		  JobRss = null;
		
		/// <summary>
		/// TestimonialsRSS : 
		/// </summary>
		public System.String		  TestimonialsRss = null;
		
		/// <summary>
		/// Valid : 
		/// </summary>
		public System.Int32		  Valid = (int)0;
		
		/// <summary>
		/// MetaTitle : 
		/// </summary>
		public System.String		  MetaTitle = null;
		
		/// <summary>
		/// MetaDescription : 
		/// </summary>
		public System.String		  MetaDescription = null;
		
		/// <summary>
		/// MetaKeywords : 
		/// </summary>
		public System.String		  MetaKeywords = null;
		
		/// <summary>
		/// LastModifiedBy : 
		/// </summary>
		public System.Int32?		  LastModifiedBy = null;
		
		/// <summary>
		/// LastModified : 
		/// </summary>
		public System.DateTime?		  LastModified = null;
		
		/// <summary>
		/// Sequence : 
		/// </summary>
		public System.Int32		  Sequence = (int)0;
		
		/// <summary>
		/// LastName : 
		/// </summary>
		public System.String		  LastName = null;
		
		/// <summary>
		/// ConsultantsXML : 
		/// </summary>
		public System.String		  ConsultantsXml = null;
		
		/// <summary>
		/// ConsultantImageUrl : 
		/// </summary>
		public System.String		  ConsultantImageUrl = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private Sites _siteIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Sites"/>.
		/// </summary>
		/// <value>The source Sites for SiteId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual Sites SiteIdSource
      	{
            get { return this._siteIdSource; }
            set { this._siteIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			ConsultantsEntityData _tmp = new ConsultantsEntityData();
						
			_tmp.ConsultantId = this.ConsultantId;
			
			_tmp.SiteId = this.SiteId;
			_tmp.LanguageId = this.LanguageId;
			_tmp.Title = this.Title;
			_tmp.FirstName = this.FirstName;
			_tmp.Email = this.Email;
			_tmp.Phone = this.Phone;
			_tmp.Mobile = this.Mobile;
			_tmp.PositionTitle = this.PositionTitle;
			_tmp.OfficeLocation = this.OfficeLocation;
			_tmp.Categories = this.Categories;
			_tmp.Location = this.Location;
			_tmp.FriendlyUrl = this.FriendlyUrl;
			_tmp.ShortDescription = this.ShortDescription;
			_tmp.Testimonial = this.Testimonial;
			_tmp.FullDescription = this.FullDescription;
			_tmp.ConsultantData = this.ConsultantData;
			_tmp.LinkedInUrl = this.LinkedInUrl;
			_tmp.TwitterUrl = this.TwitterUrl;
			_tmp.FacebookUrl = this.FacebookUrl;
			_tmp.GoogleUrl = this.GoogleUrl;
			_tmp.Link = this.Link;
			_tmp.WechatUrl = this.WechatUrl;
			_tmp.FeaturedTeamMember = this.FeaturedTeamMember;
			_tmp.ImageUrl = this.ImageUrl;
			_tmp.VideoUrl = this.VideoUrl;
			_tmp.BlogRss = this.BlogRss;
			_tmp.NewsRss = this.NewsRss;
			_tmp.JobRss = this.JobRss;
			_tmp.TestimonialsRss = this.TestimonialsRss;
			_tmp.Valid = this.Valid;
			_tmp.MetaTitle = this.MetaTitle;
			_tmp.MetaDescription = this.MetaDescription;
			_tmp.MetaKeywords = this.MetaKeywords;
			_tmp.LastModifiedBy = this.LastModifiedBy;
			_tmp.LastModified = this.LastModified;
			_tmp.Sequence = this.Sequence;
			_tmp.LastName = this.LastName;
			_tmp.ConsultantsXml = this.ConsultantsXml;
			_tmp.ConsultantImageUrl = this.ConsultantImageUrl;
			
			#region Source Parent Composite Entities
			if (this.SiteIdSource != null)
				_tmp.SiteIdSource = MakeCopyOf(this.SiteIdSource) as Sites;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			ConsultantsEntityData _tmp = new ConsultantsEntityData();
						
			_tmp.ConsultantId = this.ConsultantId;
			
			_tmp.SiteId = this.SiteId;
			_tmp.LanguageId = this.LanguageId;
			_tmp.Title = this.Title;
			_tmp.FirstName = this.FirstName;
			_tmp.Email = this.Email;
			_tmp.Phone = this.Phone;
			_tmp.Mobile = this.Mobile;
			_tmp.PositionTitle = this.PositionTitle;
			_tmp.OfficeLocation = this.OfficeLocation;
			_tmp.Categories = this.Categories;
			_tmp.Location = this.Location;
			_tmp.FriendlyUrl = this.FriendlyUrl;
			_tmp.ShortDescription = this.ShortDescription;
			_tmp.Testimonial = this.Testimonial;
			_tmp.FullDescription = this.FullDescription;
			_tmp.ConsultantData = this.ConsultantData;
			_tmp.LinkedInUrl = this.LinkedInUrl;
			_tmp.TwitterUrl = this.TwitterUrl;
			_tmp.FacebookUrl = this.FacebookUrl;
			_tmp.GoogleUrl = this.GoogleUrl;
			_tmp.Link = this.Link;
			_tmp.WechatUrl = this.WechatUrl;
			_tmp.FeaturedTeamMember = this.FeaturedTeamMember;
			_tmp.ImageUrl = this.ImageUrl;
			_tmp.VideoUrl = this.VideoUrl;
			_tmp.BlogRss = this.BlogRss;
			_tmp.NewsRss = this.NewsRss;
			_tmp.JobRss = this.JobRss;
			_tmp.TestimonialsRss = this.TestimonialsRss;
			_tmp.Valid = this.Valid;
			_tmp.MetaTitle = this.MetaTitle;
			_tmp.MetaDescription = this.MetaDescription;
			_tmp.MetaKeywords = this.MetaKeywords;
			_tmp.LastModifiedBy = this.LastModifiedBy;
			_tmp.LastModified = this.LastModified;
			_tmp.Sequence = this.Sequence;
			_tmp.LastName = this.LastName;
			_tmp.ConsultantsXml = this.ConsultantsXml;
			_tmp.ConsultantImageUrl = this.ConsultantImageUrl;
			
			#region Source Parent Composite Entities
			if (this.SiteIdSource != null && existingCopies.Contains(this.SiteIdSource))
				_tmp.SiteIdSource = existingCopies[this.SiteIdSource] as Sites;
			else
				_tmp.SiteIdSource = MakeCopyOf(this.SiteIdSource, existingCopies) as Sites;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ConsultantsColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(ConsultantsColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ConsultantsColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(ConsultantsColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ConsultantsColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(ConsultantsColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				ConsultantsEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new ConsultantsEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ConsultantsColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(ConsultantsColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				ConsultantsEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new ConsultantsEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region ConsultantsEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="Consultants"/> object.
	/// </remarks>
	public class ConsultantsEventArgs : System.EventArgs
	{
		private ConsultantsColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the ConsultantsEventArgs class.
		///</summary>
		public ConsultantsEventArgs(ConsultantsColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the ConsultantsEventArgs class.
		///</summary>
		public ConsultantsEventArgs(ConsultantsColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The ConsultantsColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="ConsultantsColumn" />
		public ConsultantsColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all Consultants related events.
	///</summary>
	public delegate void ConsultantsEventHandler(object sender, ConsultantsEventArgs e);
	
	#region ConsultantsComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class ConsultantsComparer : System.Collections.Generic.IComparer<Consultants>
	{
		ConsultantsColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:ConsultantsComparer"/> class.
        /// </summary>
		public ConsultantsComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:ConsultantsComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public ConsultantsComparer(ConsultantsColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="Consultants"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="Consultants"/> to compare.</param>
        /// <param name="b">The second <c>Consultants</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(Consultants a, Consultants b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(Consultants entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(Consultants a, Consultants b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public ConsultantsColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region ConsultantsKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="Consultants"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class ConsultantsKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the ConsultantsKey class.
		/// </summary>
		public ConsultantsKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the ConsultantsKey class.
		/// </summary>
		public ConsultantsKey(ConsultantsBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.ConsultantId = entity.ConsultantId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the ConsultantsKey class.
		/// </summary>
		public ConsultantsKey(System.Int32 _consultantId)
		{
			#region Init Properties

			this.ConsultantId = _consultantId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private ConsultantsBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public ConsultantsBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the ConsultantId property
		private System.Int32 _consultantId;
		
		/// <summary>
		/// Gets or sets the ConsultantId property.
		/// </summary>
		public System.Int32 ConsultantId
		{
			get { return _consultantId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.ConsultantId = value;
				
				_consultantId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				ConsultantId = ( values["ConsultantId"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["ConsultantId"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("ConsultantId", ConsultantId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("ConsultantId: {0}{1}",
								ConsultantId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region ConsultantsColumn Enum
	
	/// <summary>
	/// Enumerate the Consultants columns.
	/// </summary>
	[Serializable]
	public enum ConsultantsColumn : int
	{
		/// <summary>
		/// ConsultantId : 
		/// </summary>
		[EnumTextValue("ConsultantID")]
		[ColumnEnum("ConsultantID", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		ConsultantId = 1,
		/// <summary>
		/// SiteId : 
		/// </summary>
		[EnumTextValue("SiteID")]
		[ColumnEnum("SiteID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		SiteId = 2,
		/// <summary>
		/// LanguageId : 
		/// </summary>
		[EnumTextValue("LanguageID")]
		[ColumnEnum("LanguageID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		LanguageId = 3,
		/// <summary>
		/// Title : 
		/// </summary>
		[EnumTextValue("Title")]
		[ColumnEnum("Title", typeof(System.String), System.Data.DbType.String, false, false, true, 128)]
		Title = 4,
		/// <summary>
		/// FirstName : 
		/// </summary>
		[EnumTextValue("FirstName")]
		[ColumnEnum("FirstName", typeof(System.String), System.Data.DbType.String, false, false, true, 512)]
		FirstName = 5,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Email = 6,
		/// <summary>
		/// Phone : 
		/// </summary>
		[EnumTextValue("Phone")]
		[ColumnEnum("Phone", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		Phone = 7,
		/// <summary>
		/// Mobile : 
		/// </summary>
		[EnumTextValue("Mobile")]
		[ColumnEnum("Mobile", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		Mobile = 8,
		/// <summary>
		/// PositionTitle : 
		/// </summary>
		[EnumTextValue("PositionTitle")]
		[ColumnEnum("PositionTitle", typeof(System.String), System.Data.DbType.String, false, false, true, 128)]
		PositionTitle = 9,
		/// <summary>
		/// OfficeLocation : 
		/// </summary>
		[EnumTextValue("OfficeLocation")]
		[ColumnEnum("OfficeLocation", typeof(System.String), System.Data.DbType.String, false, false, true, 1024)]
		OfficeLocation = 10,
		/// <summary>
		/// Categories : 
		/// </summary>
		[EnumTextValue("Categories")]
		[ColumnEnum("Categories", typeof(System.String), System.Data.DbType.String, false, false, true, 1024)]
		Categories = 11,
		/// <summary>
		/// Location : 
		/// </summary>
		[EnumTextValue("Location")]
		[ColumnEnum("Location", typeof(System.String), System.Data.DbType.String, false, false, true, 1024)]
		Location = 12,
		/// <summary>
		/// FriendlyUrl : 
		/// </summary>
		[EnumTextValue("FriendlyURL")]
		[ColumnEnum("FriendlyURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 128)]
		FriendlyUrl = 13,
		/// <summary>
		/// ShortDescription : 
		/// </summary>
		[EnumTextValue("ShortDescription")]
		[ColumnEnum("ShortDescription", typeof(System.String), System.Data.DbType.String, false, false, true)]
		ShortDescription = 14,
		/// <summary>
		/// Testimonial : 
		/// </summary>
		[EnumTextValue("Testimonial")]
		[ColumnEnum("Testimonial", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Testimonial = 15,
		/// <summary>
		/// FullDescription : 
		/// </summary>
		[EnumTextValue("FullDescription")]
		[ColumnEnum("FullDescription", typeof(System.String), System.Data.DbType.String, false, false, true)]
		FullDescription = 16,
		/// <summary>
		/// ConsultantData : 
		/// </summary>
		[EnumTextValue("ConsultantData")]
		[ColumnEnum("ConsultantData", typeof(System.String), System.Data.DbType.String, false, false, true)]
		ConsultantData = 17,
		/// <summary>
		/// LinkedInUrl : 
		/// </summary>
		[EnumTextValue("LinkedInURL")]
		[ColumnEnum("LinkedInURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		LinkedInUrl = 18,
		/// <summary>
		/// TwitterUrl : 
		/// </summary>
		[EnumTextValue("TwitterURL")]
		[ColumnEnum("TwitterURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		TwitterUrl = 19,
		/// <summary>
		/// FacebookUrl : 
		/// </summary>
		[EnumTextValue("FacebookURL")]
		[ColumnEnum("FacebookURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		FacebookUrl = 20,
		/// <summary>
		/// GoogleUrl : 
		/// </summary>
		[EnumTextValue("GoogleURL")]
		[ColumnEnum("GoogleURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		GoogleUrl = 21,
		/// <summary>
		/// Link : 
		/// </summary>
		[EnumTextValue("Link")]
		[ColumnEnum("Link", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		Link = 22,
		/// <summary>
		/// WechatUrl : 
		/// </summary>
		[EnumTextValue("WechatURL")]
		[ColumnEnum("WechatURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		WechatUrl = 23,
		/// <summary>
		/// FeaturedTeamMember : 
		/// </summary>
		[EnumTextValue("FeaturedTeamMember")]
		[ColumnEnum("FeaturedTeamMember", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		FeaturedTeamMember = 24,
		/// <summary>
		/// ImageUrl : 
		/// </summary>
		[EnumTextValue("ImageURL")]
		[ColumnEnum("ImageURL", typeof(System.Byte[]), System.Data.DbType.Binary, false, false, true)]
		ImageUrl = 25,
		/// <summary>
		/// VideoUrl : 
		/// </summary>
		[EnumTextValue("VideoURL")]
		[ColumnEnum("VideoURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		VideoUrl = 26,
		/// <summary>
		/// BlogRss : 
		/// </summary>
		[EnumTextValue("BlogRSS")]
		[ColumnEnum("BlogRSS", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		BlogRss = 27,
		/// <summary>
		/// NewsRss : 
		/// </summary>
		[EnumTextValue("NewsRSS")]
		[ColumnEnum("NewsRSS", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		NewsRss = 28,
		/// <summary>
		/// JobRss : 
		/// </summary>
		[EnumTextValue("JobRSS")]
		[ColumnEnum("JobRSS", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		JobRss = 29,
		/// <summary>
		/// TestimonialsRss : 
		/// </summary>
		[EnumTextValue("TestimonialsRSS")]
		[ColumnEnum("TestimonialsRSS", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		TestimonialsRss = 30,
		/// <summary>
		/// Valid : 
		/// </summary>
		[EnumTextValue("Valid")]
		[ColumnEnum("Valid", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		Valid = 31,
		/// <summary>
		/// MetaTitle : 
		/// </summary>
		[EnumTextValue("MetaTitle")]
		[ColumnEnum("MetaTitle", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		MetaTitle = 32,
		/// <summary>
		/// MetaDescription : 
		/// </summary>
		[EnumTextValue("MetaDescription")]
		[ColumnEnum("MetaDescription", typeof(System.String), System.Data.DbType.String, false, false, true, 1024)]
		MetaDescription = 33,
		/// <summary>
		/// MetaKeywords : 
		/// </summary>
		[EnumTextValue("MetaKeywords")]
		[ColumnEnum("MetaKeywords", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		MetaKeywords = 34,
		/// <summary>
		/// LastModifiedBy : 
		/// </summary>
		[EnumTextValue("LastModifiedBy")]
		[ColumnEnum("LastModifiedBy", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		LastModifiedBy = 35,
		/// <summary>
		/// LastModified : 
		/// </summary>
		[EnumTextValue("LastModified")]
		[ColumnEnum("LastModified", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastModified = 36,
		/// <summary>
		/// Sequence : 
		/// </summary>
		[EnumTextValue("Sequence")]
		[ColumnEnum("Sequence", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		Sequence = 37,
		/// <summary>
		/// LastName : 
		/// </summary>
		[EnumTextValue("LastName")]
		[ColumnEnum("LastName", typeof(System.String), System.Data.DbType.String, false, false, true, 512)]
		LastName = 38,
		/// <summary>
		/// ConsultantsXml : 
		/// </summary>
		[EnumTextValue("ConsultantsXML")]
		[ColumnEnum("ConsultantsXML", typeof(System.String), System.Data.DbType.String, false, false, true)]
		ConsultantsXml = 39,
		/// <summary>
		/// ConsultantImageUrl : 
		/// </summary>
		[EnumTextValue("ConsultantImageUrl")]
		[ColumnEnum("ConsultantImageUrl", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		ConsultantImageUrl = 40
	}//End enum

	#endregion ConsultantsColumn Enum

} // end namespace

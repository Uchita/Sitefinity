using System;
using System.ComponentModel;

namespace JXTPortal.Entities
{
	/// <summary>
	///		The data structure representation of the 'DynamicPages' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IDynamicPages 
	{
		/// <summary>			
		/// DynamicPageID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "DynamicPages"</remarks>
		System.Int32 DynamicPageId { get; set; }
				
		
		
		/// <summary>
		/// SiteID : 
		/// </summary>
		System.Int32  SiteId  { get; set; }
		
		/// <summary>
		/// LanguageID : 
		/// </summary>
		System.Int32  LanguageId  { get; set; }
		
		/// <summary>
		/// ParentDynamicPageID : 
		/// </summary>
		System.Int32  ParentDynamicPageId  { get; set; }
		
		/// <summary>
		/// PageName : 
		/// </summary>
		System.String  PageName  { get; set; }
		
		/// <summary>
		/// PageTitle : 
		/// </summary>
		System.String  PageTitle  { get; set; }
		
		/// <summary>
		/// PageContent : 
		/// </summary>
		System.String  PageContent  { get; set; }
		
		/// <summary>
		/// DynamicPageWebPartTemplateID : 
		/// </summary>
		System.Int32?  DynamicPageWebPartTemplateId  { get; set; }
		
		/// <summary>
		/// HyperLink : 
		/// </summary>
		System.String  HyperLink  { get; set; }
		
		/// <summary>
		/// Valid : 
		/// </summary>
		System.Boolean  Valid  { get; set; }
		
		/// <summary>
		/// OpenInNewWindow : 
		/// </summary>
		System.Boolean  OpenInNewWindow  { get; set; }
		
		/// <summary>
		/// Sequence : 
		/// </summary>
		System.Int32  Sequence  { get; set; }
		
		/// <summary>
		/// FullScreen : 
		/// </summary>
		System.Boolean  FullScreen  { get; set; }
		
		/// <summary>
		/// OnTopNav : 
		/// </summary>
		System.Boolean  OnTopNav  { get; set; }
		
		/// <summary>
		/// OnLeftNav : 
		/// </summary>
		System.Boolean  OnLeftNav  { get; set; }
		
		/// <summary>
		/// OnBottomNav : 
		/// </summary>
		System.Boolean  OnBottomNav  { get; set; }
		
		/// <summary>
		/// OnSiteMap : 
		/// </summary>
		System.Boolean  OnSiteMap  { get; set; }
		
		/// <summary>
		/// Searchable : 
		/// </summary>
		System.Boolean  Searchable  { get; set; }
		
		/// <summary>
		/// MetaKeywords : 
		/// </summary>
		System.String  MetaKeywords  { get; set; }
		
		/// <summary>
		/// MetaDescription : 
		/// </summary>
		System.String  MetaDescription  { get; set; }
		
		/// <summary>
		/// PageFriendlyName : 
		/// </summary>
		System.String  PageFriendlyName  { get; set; }
		
		/// <summary>
		/// LastModified : 
		/// </summary>
		System.DateTime  LastModified  { get; set; }
		
		/// <summary>
		/// LastModifiedBy : 
		/// </summary>
		System.Int32  LastModifiedBy  { get; set; }
		
		/// <summary>
		/// SearchField : 
		/// </summary>
		System.String  SearchField  { get; set; }
		
		/// <summary>
		/// SourceID : 
		/// </summary>
		System.Int32?  SourceId  { get; set; }
		
		/// <summary>
		/// Secured : 
		/// </summary>
		System.Boolean  Secured  { get; set; }
		
		/// <summary>
		/// CustomUrl : 
		/// </summary>
		System.String  CustomUrl  { get; set; }
		
		/// <summary>
		/// MetaTitle : 
		/// </summary>
		System.String  MetaTitle  { get; set; }
		
		/// <summary>
		/// GenerateBreadcrumb : 
		/// </summary>
		System.Boolean  GenerateBreadcrumb  { get; set; }
		
		/// <summary>
		/// PublishOn : 
		/// </summary>
		System.DateTime?  PublishOn  { get; set; }
		
		/// <summary>
		/// Visible : 
		/// </summary>
		System.Boolean  Visible  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _relatedDynamicPagesRelatedDynamicPageIdGetByDynamicPageId
		/// </summary>	
		TList<RelatedDynamicPages> RelatedDynamicPagesCollectionGetByDynamicPageId {  get;  set;}	

		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table dynamicPageIdDynamicPagesCollectionFromRelatedDynamicPages
		/// </summary>	
		TList<DynamicPages> DynamicPageIdDynamicPagesCollection_From_RelatedDynamicPages { get; set; }	

		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table relatedDynamicPageIdDynamicPagesCollectionFromRelatedDynamicPages
		/// </summary>	
		TList<DynamicPages> RelatedDynamicPageIdDynamicPagesCollection_From_RelatedDynamicPages { get; set; }	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _globalSettingsDefaultDynamicPageId
		/// </summary>	
		TList<GlobalSettings> GlobalSettingsCollection {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _dynamicpagesCustomWidgetDynamicPageId
		/// </summary>	
		TList<DynamicpagesCustomWidget> DynamicpagesCustomWidgetCollection {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _relatedDynamicPagesRelatedDynamicPageIdGetByRelatedDynamicPageId
		/// </summary>	
		TList<RelatedDynamicPages> RelatedDynamicPagesCollectionGetByRelatedDynamicPageId {  get;  set;}	

		#endregion Data Properties

	}
}



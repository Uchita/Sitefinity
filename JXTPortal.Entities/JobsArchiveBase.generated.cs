
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file JobsArchive.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using JXTPortal.Entities.Validation;
#endregion

namespace JXTPortal.Entities
{
	///<summary>
	/// An object representation of the 'JobsArchive' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class JobsArchiveBase : EntityBase, IJobsArchive, IEntityId<JobsArchiveKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private JobsArchiveEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private JobsArchiveEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private JobsArchiveEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<JobsArchive> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event JobsArchiveEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event JobsArchiveEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="JobsArchiveBase"/> instance.
		///</summary>
		public JobsArchiveBase()
		{
			this.entityData = new JobsArchiveEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="JobsArchiveBase"/> instance.
		///</summary>
		///<param name="_jobId"></param>
		///<param name="_siteId"></param>
		///<param name="_workTypeId"></param>
		///<param name="_jobName"></param>
		///<param name="_description"></param>
		///<param name="_fullDescription"></param>
		///<param name="_webServiceProcessed"></param>
		///<param name="_applicationEmailAddress"></param>
		///<param name="_refNo"></param>
		///<param name="_visible"></param>
		///<param name="_datePosted"></param>
		///<param name="_expiryDate"></param>
		///<param name="_expired"></param>
		///<param name="_jobItemPrice"></param>
		///<param name="_billed"></param>
		///<param name="_lastModified"></param>
		///<param name="_showSalaryDetails"></param>
		///<param name="_salaryText"></param>
		///<param name="_advertiserId"></param>
		///<param name="_lastModifiedByAdvertiserUserId"></param>
		///<param name="_lastModifiedByAdminUserId"></param>
		///<param name="_jobItemTypeId"></param>
		///<param name="_applicationMethod"></param>
		///<param name="_applicationUrl"></param>
		///<param name="_uploadMethod"></param>
		///<param name="_tags"></param>
		///<param name="_jobTemplateId"></param>
		///<param name="_searchFieldExtension"></param>
		///<param name="_advertiserJobTemplateLogoId"></param>
		///<param name="_companyName"></param>
		///<param name="_hashValue"></param>
		///<param name="_requireLogonForExternalApplications"></param>
		///<param name="_showLocationDetails"></param>
		///<param name="_publicTransport"></param>
		///<param name="_address"></param>
		///<param name="_contactDetails"></param>
		///<param name="_jobContactPhone"></param>
		///<param name="_jobContactName"></param>
		///<param name="_qualificationsRecognised"></param>
		///<param name="_residentOnly"></param>
		///<param name="_documentLink"></param>
		///<param name="_bulletPoint1"></param>
		///<param name="_bulletPoint2"></param>
		///<param name="_bulletPoint3"></param>
		///<param name="_hotJob"></param>
		///<param name="_jobFriendlyName"></param>
		///<param name="_searchField"></param>
		///<param name="_showSalaryRange"></param>
		///<param name="_salaryLowerBand"></param>
		///<param name="_salaryUpperBand"></param>
		///<param name="_currencyId"></param>
		///<param name="_salaryTypeId"></param>
		///<param name="_enteredByAdvertiserUserId"></param>
		///<param name="_jobLatitude"></param>
		///<param name="_jobLongitude"></param>
		///<param name="_addressStatus"></param>
		///<param name="_jobExternalId"></param>
		public JobsArchiveBase(System.Int32 _jobId, System.Int32 _siteId, System.Int32 _workTypeId, 
			System.String _jobName, System.String _description, System.String _fullDescription, System.Boolean _webServiceProcessed, 
			System.String _applicationEmailAddress, System.String _refNo, System.Boolean _visible, System.DateTime _datePosted, 
			System.DateTime _expiryDate, System.Int32? _expired, System.Decimal? _jobItemPrice, System.Boolean _billed, 
			System.DateTime _lastModified, System.Boolean _showSalaryDetails, System.String _salaryText, 
			System.Int32? _advertiserId, System.Int32? _lastModifiedByAdvertiserUserId, System.Int32? _lastModifiedByAdminUserId, 
			System.Int32? _jobItemTypeId, System.Int32? _applicationMethod, System.String _applicationUrl, 
			System.Int32? _uploadMethod, System.String _tags, System.Int32? _jobTemplateId, System.String _searchFieldExtension, 
			System.Int32? _advertiserJobTemplateLogoId, System.String _companyName, System.Byte[] _hashValue, 
			System.Boolean _requireLogonForExternalApplications, System.Boolean? _showLocationDetails, System.String _publicTransport, 
			System.String _address, System.String _contactDetails, System.String _jobContactPhone, System.String _jobContactName, 
			System.Boolean _qualificationsRecognised, System.Boolean _residentOnly, System.String _documentLink, 
			System.String _bulletPoint1, System.String _bulletPoint2, System.String _bulletPoint3, System.Boolean _hotJob, 
			System.String _jobFriendlyName, System.String _searchField, System.Boolean _showSalaryRange, 
			System.Decimal _salaryLowerBand, System.Decimal _salaryUpperBand, System.Int32 _currencyId, 
			System.Int32 _salaryTypeId, System.Int32? _enteredByAdvertiserUserId, System.Double? _jobLatitude, 
			System.Double? _jobLongitude, System.Int32? _addressStatus, System.String _jobExternalId)
		{
			this.entityData = new JobsArchiveEntityData();
			this.backupData = null;

			this.JobId = _jobId;
			this.SiteId = _siteId;
			this.WorkTypeId = _workTypeId;
			this.JobName = _jobName;
			this.Description = _description;
			this.FullDescription = _fullDescription;
			this.WebServiceProcessed = _webServiceProcessed;
			this.ApplicationEmailAddress = _applicationEmailAddress;
			this.RefNo = _refNo;
			this.Visible = _visible;
			this.DatePosted = _datePosted;
			this.ExpiryDate = _expiryDate;
			this.Expired = _expired;
			this.JobItemPrice = _jobItemPrice;
			this.Billed = _billed;
			this.LastModified = _lastModified;
			this.ShowSalaryDetails = _showSalaryDetails;
			this.SalaryText = _salaryText;
			this.AdvertiserId = _advertiserId;
			this.LastModifiedByAdvertiserUserId = _lastModifiedByAdvertiserUserId;
			this.LastModifiedByAdminUserId = _lastModifiedByAdminUserId;
			this.JobItemTypeId = _jobItemTypeId;
			this.ApplicationMethod = _applicationMethod;
			this.ApplicationUrl = _applicationUrl;
			this.UploadMethod = _uploadMethod;
			this.Tags = _tags;
			this.JobTemplateId = _jobTemplateId;
			this.SearchFieldExtension = _searchFieldExtension;
			this.AdvertiserJobTemplateLogoId = _advertiserJobTemplateLogoId;
			this.CompanyName = _companyName;
			this.HashValue = _hashValue;
			this.RequireLogonForExternalApplications = _requireLogonForExternalApplications;
			this.ShowLocationDetails = _showLocationDetails;
			this.PublicTransport = _publicTransport;
			this.Address = _address;
			this.ContactDetails = _contactDetails;
			this.JobContactPhone = _jobContactPhone;
			this.JobContactName = _jobContactName;
			this.QualificationsRecognised = _qualificationsRecognised;
			this.ResidentOnly = _residentOnly;
			this.DocumentLink = _documentLink;
			this.BulletPoint1 = _bulletPoint1;
			this.BulletPoint2 = _bulletPoint2;
			this.BulletPoint3 = _bulletPoint3;
			this.HotJob = _hotJob;
			this.JobFriendlyName = _jobFriendlyName;
			this.SearchField = _searchField;
			this.ShowSalaryRange = _showSalaryRange;
			this.SalaryLowerBand = _salaryLowerBand;
			this.SalaryUpperBand = _salaryUpperBand;
			this.CurrencyId = _currencyId;
			this.SalaryTypeId = _salaryTypeId;
			this.EnteredByAdvertiserUserId = _enteredByAdvertiserUserId;
			this.JobLatitude = _jobLatitude;
			this.JobLongitude = _jobLongitude;
			this.AddressStatus = _addressStatus;
			this.JobExternalId = _jobExternalId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="JobsArchive"/> instance.
		///</summary>
		///<param name="_jobId"></param>
		///<param name="_siteId"></param>
		///<param name="_workTypeId"></param>
		///<param name="_jobName"></param>
		///<param name="_description"></param>
		///<param name="_fullDescription"></param>
		///<param name="_webServiceProcessed"></param>
		///<param name="_applicationEmailAddress"></param>
		///<param name="_refNo"></param>
		///<param name="_visible"></param>
		///<param name="_datePosted"></param>
		///<param name="_expiryDate"></param>
		///<param name="_expired"></param>
		///<param name="_jobItemPrice"></param>
		///<param name="_billed"></param>
		///<param name="_lastModified"></param>
		///<param name="_showSalaryDetails"></param>
		///<param name="_salaryText"></param>
		///<param name="_advertiserId"></param>
		///<param name="_lastModifiedByAdvertiserUserId"></param>
		///<param name="_lastModifiedByAdminUserId"></param>
		///<param name="_jobItemTypeId"></param>
		///<param name="_applicationMethod"></param>
		///<param name="_applicationUrl"></param>
		///<param name="_uploadMethod"></param>
		///<param name="_tags"></param>
		///<param name="_jobTemplateId"></param>
		///<param name="_searchFieldExtension"></param>
		///<param name="_advertiserJobTemplateLogoId"></param>
		///<param name="_companyName"></param>
		///<param name="_hashValue"></param>
		///<param name="_requireLogonForExternalApplications"></param>
		///<param name="_showLocationDetails"></param>
		///<param name="_publicTransport"></param>
		///<param name="_address"></param>
		///<param name="_contactDetails"></param>
		///<param name="_jobContactPhone"></param>
		///<param name="_jobContactName"></param>
		///<param name="_qualificationsRecognised"></param>
		///<param name="_residentOnly"></param>
		///<param name="_documentLink"></param>
		///<param name="_bulletPoint1"></param>
		///<param name="_bulletPoint2"></param>
		///<param name="_bulletPoint3"></param>
		///<param name="_hotJob"></param>
		///<param name="_jobFriendlyName"></param>
		///<param name="_searchField"></param>
		///<param name="_showSalaryRange"></param>
		///<param name="_salaryLowerBand"></param>
		///<param name="_salaryUpperBand"></param>
		///<param name="_currencyId"></param>
		///<param name="_salaryTypeId"></param>
		///<param name="_enteredByAdvertiserUserId"></param>
		///<param name="_jobLatitude"></param>
		///<param name="_jobLongitude"></param>
		///<param name="_addressStatus"></param>
		///<param name="_jobExternalId"></param>
		public static JobsArchive CreateJobsArchive(System.Int32 _jobId, System.Int32 _siteId, System.Int32 _workTypeId, 
			System.String _jobName, System.String _description, System.String _fullDescription, System.Boolean _webServiceProcessed, 
			System.String _applicationEmailAddress, System.String _refNo, System.Boolean _visible, System.DateTime _datePosted, 
			System.DateTime _expiryDate, System.Int32? _expired, System.Decimal? _jobItemPrice, System.Boolean _billed, 
			System.DateTime _lastModified, System.Boolean _showSalaryDetails, System.String _salaryText, 
			System.Int32? _advertiserId, System.Int32? _lastModifiedByAdvertiserUserId, System.Int32? _lastModifiedByAdminUserId, 
			System.Int32? _jobItemTypeId, System.Int32? _applicationMethod, System.String _applicationUrl, 
			System.Int32? _uploadMethod, System.String _tags, System.Int32? _jobTemplateId, System.String _searchFieldExtension, 
			System.Int32? _advertiserJobTemplateLogoId, System.String _companyName, System.Byte[] _hashValue, 
			System.Boolean _requireLogonForExternalApplications, System.Boolean? _showLocationDetails, System.String _publicTransport, 
			System.String _address, System.String _contactDetails, System.String _jobContactPhone, System.String _jobContactName, 
			System.Boolean _qualificationsRecognised, System.Boolean _residentOnly, System.String _documentLink, 
			System.String _bulletPoint1, System.String _bulletPoint2, System.String _bulletPoint3, System.Boolean _hotJob, 
			System.String _jobFriendlyName, System.String _searchField, System.Boolean _showSalaryRange, 
			System.Decimal _salaryLowerBand, System.Decimal _salaryUpperBand, System.Int32 _currencyId, 
			System.Int32 _salaryTypeId, System.Int32? _enteredByAdvertiserUserId, System.Double? _jobLatitude, 
			System.Double? _jobLongitude, System.Int32? _addressStatus, System.String _jobExternalId)
		{
			JobsArchive newJobsArchive = new JobsArchive();
			newJobsArchive.JobId = _jobId;
			newJobsArchive.SiteId = _siteId;
			newJobsArchive.WorkTypeId = _workTypeId;
			newJobsArchive.JobName = _jobName;
			newJobsArchive.Description = _description;
			newJobsArchive.FullDescription = _fullDescription;
			newJobsArchive.WebServiceProcessed = _webServiceProcessed;
			newJobsArchive.ApplicationEmailAddress = _applicationEmailAddress;
			newJobsArchive.RefNo = _refNo;
			newJobsArchive.Visible = _visible;
			newJobsArchive.DatePosted = _datePosted;
			newJobsArchive.ExpiryDate = _expiryDate;
			newJobsArchive.Expired = _expired;
			newJobsArchive.JobItemPrice = _jobItemPrice;
			newJobsArchive.Billed = _billed;
			newJobsArchive.LastModified = _lastModified;
			newJobsArchive.ShowSalaryDetails = _showSalaryDetails;
			newJobsArchive.SalaryText = _salaryText;
			newJobsArchive.AdvertiserId = _advertiserId;
			newJobsArchive.LastModifiedByAdvertiserUserId = _lastModifiedByAdvertiserUserId;
			newJobsArchive.LastModifiedByAdminUserId = _lastModifiedByAdminUserId;
			newJobsArchive.JobItemTypeId = _jobItemTypeId;
			newJobsArchive.ApplicationMethod = _applicationMethod;
			newJobsArchive.ApplicationUrl = _applicationUrl;
			newJobsArchive.UploadMethod = _uploadMethod;
			newJobsArchive.Tags = _tags;
			newJobsArchive.JobTemplateId = _jobTemplateId;
			newJobsArchive.SearchFieldExtension = _searchFieldExtension;
			newJobsArchive.AdvertiserJobTemplateLogoId = _advertiserJobTemplateLogoId;
			newJobsArchive.CompanyName = _companyName;
			newJobsArchive.HashValue = _hashValue;
			newJobsArchive.RequireLogonForExternalApplications = _requireLogonForExternalApplications;
			newJobsArchive.ShowLocationDetails = _showLocationDetails;
			newJobsArchive.PublicTransport = _publicTransport;
			newJobsArchive.Address = _address;
			newJobsArchive.ContactDetails = _contactDetails;
			newJobsArchive.JobContactPhone = _jobContactPhone;
			newJobsArchive.JobContactName = _jobContactName;
			newJobsArchive.QualificationsRecognised = _qualificationsRecognised;
			newJobsArchive.ResidentOnly = _residentOnly;
			newJobsArchive.DocumentLink = _documentLink;
			newJobsArchive.BulletPoint1 = _bulletPoint1;
			newJobsArchive.BulletPoint2 = _bulletPoint2;
			newJobsArchive.BulletPoint3 = _bulletPoint3;
			newJobsArchive.HotJob = _hotJob;
			newJobsArchive.JobFriendlyName = _jobFriendlyName;
			newJobsArchive.SearchField = _searchField;
			newJobsArchive.ShowSalaryRange = _showSalaryRange;
			newJobsArchive.SalaryLowerBand = _salaryLowerBand;
			newJobsArchive.SalaryUpperBand = _salaryUpperBand;
			newJobsArchive.CurrencyId = _currencyId;
			newJobsArchive.SalaryTypeId = _salaryTypeId;
			newJobsArchive.EnteredByAdvertiserUserId = _enteredByAdvertiserUserId;
			newJobsArchive.JobLatitude = _jobLatitude;
			newJobsArchive.JobLongitude = _jobLongitude;
			newJobsArchive.AddressStatus = _addressStatus;
			newJobsArchive.JobExternalId = _jobExternalId;
			return newJobsArchive;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the JobId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Int32 JobId
		{
			get
			{
				return this.entityData.JobId; 
			}
			
			set
			{
				if (this.entityData.JobId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobId, this.entityData.JobId);
				this.entityData.JobId = value;
				this.EntityId.JobId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobId, this.entityData.JobId);
				OnPropertyChanged("JobId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the JobID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the JobID property.</remarks>
		/// <value>This type is int</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Int32 OriginalJobId
		{
			get { return this.entityData.OriginalJobId; }
			set { this.entityData.OriginalJobId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the SiteId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 SiteId
		{
			get
			{
				return this.entityData.SiteId; 
			}
			
			set
			{
				if (this.entityData.SiteId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.SiteId, this.entityData.SiteId);
				this.entityData.SiteId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.SiteId, this.entityData.SiteId);
				OnPropertyChanged("SiteId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WorkTypeId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 WorkTypeId
		{
			get
			{
				return this.entityData.WorkTypeId; 
			}
			
			set
			{
				if (this.entityData.WorkTypeId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.WorkTypeId, this.entityData.WorkTypeId);
				this.entityData.WorkTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.WorkTypeId, this.entityData.WorkTypeId);
				OnPropertyChanged("WorkTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 510)]
		public virtual System.String JobName
		{
			get
			{
				return this.entityData.JobName; 
			}
			
			set
			{
				if (this.entityData.JobName == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobName, this.entityData.JobName);
				this.entityData.JobName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobName, this.entityData.JobName);
				OnPropertyChanged("JobName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Description property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 2000)]
		public virtual System.String Description
		{
			get
			{
				return this.entityData.Description; 
			}
			
			set
			{
				if (this.entityData.Description == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.Description, this.entityData.Description);
				this.entityData.Description = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.Description, this.entityData.Description);
				OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FullDescription property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.String FullDescription
		{
			get
			{
				return this.entityData.FullDescription; 
			}
			
			set
			{
				if (this.entityData.FullDescription == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.FullDescription, this.entityData.FullDescription);
				this.entityData.FullDescription = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.FullDescription, this.entityData.FullDescription);
				OnPropertyChanged("FullDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebServiceProcessed property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean WebServiceProcessed
		{
			get
			{
				return this.entityData.WebServiceProcessed; 
			}
			
			set
			{
				if (this.entityData.WebServiceProcessed == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.WebServiceProcessed, this.entityData.WebServiceProcessed);
				this.entityData.WebServiceProcessed = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.WebServiceProcessed, this.entityData.WebServiceProcessed);
				OnPropertyChanged("WebServiceProcessed");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ApplicationEmailAddress property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 255)]
		public virtual System.String ApplicationEmailAddress
		{
			get
			{
				return this.entityData.ApplicationEmailAddress; 
			}
			
			set
			{
				if (this.entityData.ApplicationEmailAddress == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.ApplicationEmailAddress, this.entityData.ApplicationEmailAddress);
				this.entityData.ApplicationEmailAddress = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.ApplicationEmailAddress, this.entityData.ApplicationEmailAddress);
				OnPropertyChanged("ApplicationEmailAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RefNo property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String RefNo
		{
			get
			{
				return this.entityData.RefNo; 
			}
			
			set
			{
				if (this.entityData.RefNo == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.RefNo, this.entityData.RefNo);
				this.entityData.RefNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.RefNo, this.entityData.RefNo);
				OnPropertyChanged("RefNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Visible property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean Visible
		{
			get
			{
				return this.entityData.Visible; 
			}
			
			set
			{
				if (this.entityData.Visible == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.Visible, this.entityData.Visible);
				this.entityData.Visible = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.Visible, this.entityData.Visible);
				OnPropertyChanged("Visible");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DatePosted property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime DatePosted
		{
			get
			{
				return this.entityData.DatePosted; 
			}
			
			set
			{
				if (this.entityData.DatePosted == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.DatePosted, this.entityData.DatePosted);
				this.entityData.DatePosted = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.DatePosted, this.entityData.DatePosted);
				OnPropertyChanged("DatePosted");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ExpiryDate property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime ExpiryDate
		{
			get
			{
				return this.entityData.ExpiryDate; 
			}
			
			set
			{
				if (this.entityData.ExpiryDate == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.ExpiryDate, this.entityData.ExpiryDate);
				this.entityData.ExpiryDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.ExpiryDate, this.entityData.ExpiryDate);
				OnPropertyChanged("ExpiryDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Expired property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsExpiredNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Expired
		{
			get
			{
				return this.entityData.Expired; 
			}
			
			set
			{
				if (this.entityData.Expired == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.Expired, this.entityData.Expired);
				this.entityData.Expired = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.Expired, this.entityData.Expired);
				OnPropertyChanged("Expired");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobItemPrice property. 
		///		
		/// </summary>
		/// <value>This type is money.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0. It is up to the developer
		/// to check the value of IsJobItemPriceNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? JobItemPrice
		{
			get
			{
				return this.entityData.JobItemPrice; 
			}
			
			set
			{
				if (this.entityData.JobItemPrice == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobItemPrice, this.entityData.JobItemPrice);
				this.entityData.JobItemPrice = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobItemPrice, this.entityData.JobItemPrice);
				OnPropertyChanged("JobItemPrice");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Billed property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean Billed
		{
			get
			{
				return this.entityData.Billed; 
			}
			
			set
			{
				if (this.entityData.Billed == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.Billed, this.entityData.Billed);
				this.entityData.Billed = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.Billed, this.entityData.Billed);
				OnPropertyChanged("Billed");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModified property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime LastModified
		{
			get
			{
				return this.entityData.LastModified; 
			}
			
			set
			{
				if (this.entityData.LastModified == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.LastModified, this.entityData.LastModified);
				this.entityData.LastModified = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.LastModified, this.entityData.LastModified);
				OnPropertyChanged("LastModified");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ShowSalaryDetails property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean ShowSalaryDetails
		{
			get
			{
				return this.entityData.ShowSalaryDetails; 
			}
			
			set
			{
				if (this.entityData.ShowSalaryDetails == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.ShowSalaryDetails, this.entityData.ShowSalaryDetails);
				this.entityData.ShowSalaryDetails = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.ShowSalaryDetails, this.entityData.ShowSalaryDetails);
				OnPropertyChanged("ShowSalaryDetails");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SalaryText property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String SalaryText
		{
			get
			{
				return this.entityData.SalaryText; 
			}
			
			set
			{
				if (this.entityData.SalaryText == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.SalaryText, this.entityData.SalaryText);
				this.entityData.SalaryText = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.SalaryText, this.entityData.SalaryText);
				OnPropertyChanged("SalaryText");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdvertiserId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsAdvertiserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? AdvertiserId
		{
			get
			{
				return this.entityData.AdvertiserId; 
			}
			
			set
			{
				if (this.entityData.AdvertiserId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.AdvertiserId, this.entityData.AdvertiserId);
				this.entityData.AdvertiserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.AdvertiserId, this.entityData.AdvertiserId);
				OnPropertyChanged("AdvertiserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModifiedByAdvertiserUserId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsLastModifiedByAdvertiserUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? LastModifiedByAdvertiserUserId
		{
			get
			{
				return this.entityData.LastModifiedByAdvertiserUserId; 
			}
			
			set
			{
				if (this.entityData.LastModifiedByAdvertiserUserId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.LastModifiedByAdvertiserUserId, this.entityData.LastModifiedByAdvertiserUserId);
				this.entityData.LastModifiedByAdvertiserUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.LastModifiedByAdvertiserUserId, this.entityData.LastModifiedByAdvertiserUserId);
				OnPropertyChanged("LastModifiedByAdvertiserUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModifiedByAdminUserId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsLastModifiedByAdminUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? LastModifiedByAdminUserId
		{
			get
			{
				return this.entityData.LastModifiedByAdminUserId; 
			}
			
			set
			{
				if (this.entityData.LastModifiedByAdminUserId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.LastModifiedByAdminUserId, this.entityData.LastModifiedByAdminUserId);
				this.entityData.LastModifiedByAdminUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.LastModifiedByAdminUserId, this.entityData.LastModifiedByAdminUserId);
				OnPropertyChanged("LastModifiedByAdminUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobItemTypeId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsJobItemTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? JobItemTypeId
		{
			get
			{
				return this.entityData.JobItemTypeId; 
			}
			
			set
			{
				if (this.entityData.JobItemTypeId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobItemTypeId, this.entityData.JobItemTypeId);
				this.entityData.JobItemTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobItemTypeId, this.entityData.JobItemTypeId);
				OnPropertyChanged("JobItemTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ApplicationMethod property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsApplicationMethodNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? ApplicationMethod
		{
			get
			{
				return this.entityData.ApplicationMethod; 
			}
			
			set
			{
				if (this.entityData.ApplicationMethod == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.ApplicationMethod, this.entityData.ApplicationMethod);
				this.entityData.ApplicationMethod = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.ApplicationMethod, this.entityData.ApplicationMethod);
				OnPropertyChanged("ApplicationMethod");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ApplicationUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 8000)]
		public virtual System.String ApplicationUrl
		{
			get
			{
				return this.entityData.ApplicationUrl; 
			}
			
			set
			{
				if (this.entityData.ApplicationUrl == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.ApplicationUrl, this.entityData.ApplicationUrl);
				this.entityData.ApplicationUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.ApplicationUrl, this.entityData.ApplicationUrl);
				OnPropertyChanged("ApplicationUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UploadMethod property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsUploadMethodNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? UploadMethod
		{
			get
			{
				return this.entityData.UploadMethod; 
			}
			
			set
			{
				if (this.entityData.UploadMethod == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.UploadMethod, this.entityData.UploadMethod);
				this.entityData.UploadMethod = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.UploadMethod, this.entityData.UploadMethod);
				OnPropertyChanged("UploadMethod");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Tags property. 
		///		
		/// </summary>
		/// <value>This type is text.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Tags
		{
			get
			{
				return this.entityData.Tags; 
			}
			
			set
			{
				if (this.entityData.Tags == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.Tags, this.entityData.Tags);
				this.entityData.Tags = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.Tags, this.entityData.Tags);
				OnPropertyChanged("Tags");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobTemplateId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsJobTemplateIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? JobTemplateId
		{
			get
			{
				return this.entityData.JobTemplateId; 
			}
			
			set
			{
				if (this.entityData.JobTemplateId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobTemplateId, this.entityData.JobTemplateId);
				this.entityData.JobTemplateId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobTemplateId, this.entityData.JobTemplateId);
				OnPropertyChanged("JobTemplateId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SearchFieldExtension property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 8)]
		public virtual System.String SearchFieldExtension
		{
			get
			{
				return this.entityData.SearchFieldExtension; 
			}
			
			set
			{
				if (this.entityData.SearchFieldExtension == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.SearchFieldExtension, this.entityData.SearchFieldExtension);
				this.entityData.SearchFieldExtension = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.SearchFieldExtension, this.entityData.SearchFieldExtension);
				OnPropertyChanged("SearchFieldExtension");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdvertiserJobTemplateLogoId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsAdvertiserJobTemplateLogoIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? AdvertiserJobTemplateLogoId
		{
			get
			{
				return this.entityData.AdvertiserJobTemplateLogoId; 
			}
			
			set
			{
				if (this.entityData.AdvertiserJobTemplateLogoId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.AdvertiserJobTemplateLogoId, this.entityData.AdvertiserJobTemplateLogoId);
				this.entityData.AdvertiserJobTemplateLogoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.AdvertiserJobTemplateLogoId, this.entityData.AdvertiserJobTemplateLogoId);
				OnPropertyChanged("AdvertiserJobTemplateLogoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CompanyName property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String CompanyName
		{
			get
			{
				return this.entityData.CompanyName; 
			}
			
			set
			{
				if (this.entityData.CompanyName == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.CompanyName, this.entityData.CompanyName);
				this.entityData.CompanyName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.CompanyName, this.entityData.CompanyName);
				OnPropertyChanged("CompanyName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HashValue property. 
		///		
		/// </summary>
		/// <value>This type is varbinary.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte[] HashValue
		{
			get
			{
				return this.entityData.HashValue; 
			}
			
			set
			{
				if (this.entityData.HashValue == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.HashValue, this.entityData.HashValue);
				this.entityData.HashValue = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.HashValue, this.entityData.HashValue);
				OnPropertyChanged("HashValue");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RequireLogonForExternalApplications property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean RequireLogonForExternalApplications
		{
			get
			{
				return this.entityData.RequireLogonForExternalApplications; 
			}
			
			set
			{
				if (this.entityData.RequireLogonForExternalApplications == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.RequireLogonForExternalApplications, this.entityData.RequireLogonForExternalApplications);
				this.entityData.RequireLogonForExternalApplications = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.RequireLogonForExternalApplications, this.entityData.RequireLogonForExternalApplications);
				OnPropertyChanged("RequireLogonForExternalApplications");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ShowLocationDetails property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsShowLocationDetailsNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? ShowLocationDetails
		{
			get
			{
				return this.entityData.ShowLocationDetails; 
			}
			
			set
			{
				if (this.entityData.ShowLocationDetails == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.ShowLocationDetails, this.entityData.ShowLocationDetails);
				this.entityData.ShowLocationDetails = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.ShowLocationDetails, this.entityData.ShowLocationDetails);
				OnPropertyChanged("ShowLocationDetails");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PublicTransport property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String PublicTransport
		{
			get
			{
				return this.entityData.PublicTransport; 
			}
			
			set
			{
				if (this.entityData.PublicTransport == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.PublicTransport, this.entityData.PublicTransport);
				this.entityData.PublicTransport = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.PublicTransport, this.entityData.PublicTransport);
				OnPropertyChanged("PublicTransport");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Address property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Address
		{
			get
			{
				return this.entityData.Address; 
			}
			
			set
			{
				if (this.entityData.Address == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.Address, this.entityData.Address);
				this.entityData.Address = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.Address, this.entityData.Address);
				OnPropertyChanged("Address");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ContactDetails property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 510)]
		public virtual System.String ContactDetails
		{
			get
			{
				return this.entityData.ContactDetails; 
			}
			
			set
			{
				if (this.entityData.ContactDetails == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.ContactDetails, this.entityData.ContactDetails);
				this.entityData.ContactDetails = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.ContactDetails, this.entityData.ContactDetails);
				OnPropertyChanged("ContactDetails");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobContactPhone property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String JobContactPhone
		{
			get
			{
				return this.entityData.JobContactPhone; 
			}
			
			set
			{
				if (this.entityData.JobContactPhone == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobContactPhone, this.entityData.JobContactPhone);
				this.entityData.JobContactPhone = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobContactPhone, this.entityData.JobContactPhone);
				OnPropertyChanged("JobContactPhone");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobContactName property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String JobContactName
		{
			get
			{
				return this.entityData.JobContactName; 
			}
			
			set
			{
				if (this.entityData.JobContactName == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobContactName, this.entityData.JobContactName);
				this.entityData.JobContactName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobContactName, this.entityData.JobContactName);
				OnPropertyChanged("JobContactName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the QualificationsRecognised property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean QualificationsRecognised
		{
			get
			{
				return this.entityData.QualificationsRecognised; 
			}
			
			set
			{
				if (this.entityData.QualificationsRecognised == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.QualificationsRecognised, this.entityData.QualificationsRecognised);
				this.entityData.QualificationsRecognised = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.QualificationsRecognised, this.entityData.QualificationsRecognised);
				OnPropertyChanged("QualificationsRecognised");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ResidentOnly property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean ResidentOnly
		{
			get
			{
				return this.entityData.ResidentOnly; 
			}
			
			set
			{
				if (this.entityData.ResidentOnly == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.ResidentOnly, this.entityData.ResidentOnly);
				this.entityData.ResidentOnly = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.ResidentOnly, this.entityData.ResidentOnly);
				OnPropertyChanged("ResidentOnly");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DocumentLink property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String DocumentLink
		{
			get
			{
				return this.entityData.DocumentLink; 
			}
			
			set
			{
				if (this.entityData.DocumentLink == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.DocumentLink, this.entityData.DocumentLink);
				this.entityData.DocumentLink = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.DocumentLink, this.entityData.DocumentLink);
				OnPropertyChanged("DocumentLink");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BulletPoint1 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 160)]
		public virtual System.String BulletPoint1
		{
			get
			{
				return this.entityData.BulletPoint1; 
			}
			
			set
			{
				if (this.entityData.BulletPoint1 == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.BulletPoint1, this.entityData.BulletPoint1);
				this.entityData.BulletPoint1 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.BulletPoint1, this.entityData.BulletPoint1);
				OnPropertyChanged("BulletPoint1");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BulletPoint2 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 160)]
		public virtual System.String BulletPoint2
		{
			get
			{
				return this.entityData.BulletPoint2; 
			}
			
			set
			{
				if (this.entityData.BulletPoint2 == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.BulletPoint2, this.entityData.BulletPoint2);
				this.entityData.BulletPoint2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.BulletPoint2, this.entityData.BulletPoint2);
				OnPropertyChanged("BulletPoint2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BulletPoint3 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 160)]
		public virtual System.String BulletPoint3
		{
			get
			{
				return this.entityData.BulletPoint3; 
			}
			
			set
			{
				if (this.entityData.BulletPoint3 == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.BulletPoint3, this.entityData.BulletPoint3);
				this.entityData.BulletPoint3 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.BulletPoint3, this.entityData.BulletPoint3);
				OnPropertyChanged("BulletPoint3");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HotJob property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean HotJob
		{
			get
			{
				return this.entityData.HotJob; 
			}
			
			set
			{
				if (this.entityData.HotJob == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.HotJob, this.entityData.HotJob);
				this.entityData.HotJob = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.HotJob, this.entityData.HotJob);
				OnPropertyChanged("HotJob");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobFriendlyName property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String JobFriendlyName
		{
			get
			{
				return this.entityData.JobFriendlyName; 
			}
			
			set
			{
				if (this.entityData.JobFriendlyName == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobFriendlyName, this.entityData.JobFriendlyName);
				this.entityData.JobFriendlyName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobFriendlyName, this.entityData.JobFriendlyName);
				OnPropertyChanged("JobFriendlyName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SearchField property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String SearchField
		{
			get
			{
				return this.entityData.SearchField; 
			}
			
			set
			{
				if (this.entityData.SearchField == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.SearchField, this.entityData.SearchField);
				this.entityData.SearchField = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.SearchField, this.entityData.SearchField);
				OnPropertyChanged("SearchField");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ShowSalaryRange property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean ShowSalaryRange
		{
			get
			{
				return this.entityData.ShowSalaryRange; 
			}
			
			set
			{
				if (this.entityData.ShowSalaryRange == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.ShowSalaryRange, this.entityData.ShowSalaryRange);
				this.entityData.ShowSalaryRange = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.ShowSalaryRange, this.entityData.ShowSalaryRange);
				OnPropertyChanged("ShowSalaryRange");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SalaryLowerBand property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal SalaryLowerBand
		{
			get
			{
				return this.entityData.SalaryLowerBand; 
			}
			
			set
			{
				if (this.entityData.SalaryLowerBand == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.SalaryLowerBand, this.entityData.SalaryLowerBand);
				this.entityData.SalaryLowerBand = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.SalaryLowerBand, this.entityData.SalaryLowerBand);
				OnPropertyChanged("SalaryLowerBand");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SalaryUpperBand property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal SalaryUpperBand
		{
			get
			{
				return this.entityData.SalaryUpperBand; 
			}
			
			set
			{
				if (this.entityData.SalaryUpperBand == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.SalaryUpperBand, this.entityData.SalaryUpperBand);
				this.entityData.SalaryUpperBand = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.SalaryUpperBand, this.entityData.SalaryUpperBand);
				OnPropertyChanged("SalaryUpperBand");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CurrencyId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 CurrencyId
		{
			get
			{
				return this.entityData.CurrencyId; 
			}
			
			set
			{
				if (this.entityData.CurrencyId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.CurrencyId, this.entityData.CurrencyId);
				this.entityData.CurrencyId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.CurrencyId, this.entityData.CurrencyId);
				OnPropertyChanged("CurrencyId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SalaryTypeId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 SalaryTypeId
		{
			get
			{
				return this.entityData.SalaryTypeId; 
			}
			
			set
			{
				if (this.entityData.SalaryTypeId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.SalaryTypeId, this.entityData.SalaryTypeId);
				this.entityData.SalaryTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.SalaryTypeId, this.entityData.SalaryTypeId);
				OnPropertyChanged("SalaryTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EnteredByAdvertiserUserId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsEnteredByAdvertiserUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? EnteredByAdvertiserUserId
		{
			get
			{
				return this.entityData.EnteredByAdvertiserUserId; 
			}
			
			set
			{
				if (this.entityData.EnteredByAdvertiserUserId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.EnteredByAdvertiserUserId, this.entityData.EnteredByAdvertiserUserId);
				this.entityData.EnteredByAdvertiserUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.EnteredByAdvertiserUserId, this.entityData.EnteredByAdvertiserUserId);
				OnPropertyChanged("EnteredByAdvertiserUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobLatitude property. 
		///		
		/// </summary>
		/// <value>This type is float.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0f. It is up to the developer
		/// to check the value of IsJobLatitudeNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Double? JobLatitude
		{
			get
			{
				return this.entityData.JobLatitude; 
			}
			
			set
			{
				if (this.entityData.JobLatitude == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobLatitude, this.entityData.JobLatitude);
				this.entityData.JobLatitude = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobLatitude, this.entityData.JobLatitude);
				OnPropertyChanged("JobLatitude");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobLongitude property. 
		///		
		/// </summary>
		/// <value>This type is float.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0f. It is up to the developer
		/// to check the value of IsJobLongitudeNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Double? JobLongitude
		{
			get
			{
				return this.entityData.JobLongitude; 
			}
			
			set
			{
				if (this.entityData.JobLongitude == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobLongitude, this.entityData.JobLongitude);
				this.entityData.JobLongitude = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobLongitude, this.entityData.JobLongitude);
				OnPropertyChanged("JobLongitude");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AddressStatus property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsAddressStatusNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? AddressStatus
		{
			get
			{
				return this.entityData.AddressStatus; 
			}
			
			set
			{
				if (this.entityData.AddressStatus == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.AddressStatus, this.entityData.AddressStatus);
				this.entityData.AddressStatus = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.AddressStatus, this.entityData.AddressStatus);
				OnPropertyChanged("AddressStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobExternalId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String JobExternalId
		{
			get
			{
				return this.entityData.JobExternalId; 
			}
			
			set
			{
				if (this.entityData.JobExternalId == value)
					return;
					
				OnColumnChanging(JobsArchiveColumn.JobExternalId, this.entityData.JobExternalId);
				this.entityData.JobExternalId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(JobsArchiveColumn.JobExternalId, this.entityData.JobExternalId);
				OnPropertyChanged("JobExternalId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="Advertisers"/>.
		/// </summary>
		/// <value>The source Advertisers for AdvertiserId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Advertisers AdvertiserIdSource
      	{
            get { return entityData.AdvertiserIdSource; }
            set { entityData.AdvertiserIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Currencies"/>.
		/// </summary>
		/// <value>The source Currencies for CurrencyId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Currencies CurrencyIdSource
      	{
            get { return entityData.CurrencyIdSource; }
            set { entityData.CurrencyIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="JobTemplates"/>.
		/// </summary>
		/// <value>The source JobTemplates for JobTemplateId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual JobTemplates JobTemplateIdSource
      	{
            get { return entityData.JobTemplateIdSource; }
            set { entityData.JobTemplateIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdvertiserUsers"/>.
		/// </summary>
		/// <value>The source AdvertiserUsers for LastModifiedByAdvertiserUserId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdvertiserUsers LastModifiedByAdvertiserUserIdSource
      	{
            get { return entityData.LastModifiedByAdvertiserUserIdSource; }
            set { entityData.LastModifiedByAdvertiserUserIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdminUsers"/>.
		/// </summary>
		/// <value>The source AdminUsers for LastModifiedByAdminUserId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdminUsers LastModifiedByAdminUserIdSource
      	{
            get { return entityData.LastModifiedByAdminUserIdSource; }
            set { entityData.LastModifiedByAdminUserIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SalaryType"/>.
		/// </summary>
		/// <value>The source SalaryType for SalaryTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SalaryType SalaryTypeIdSource
      	{
            get { return entityData.SalaryTypeIdSource; }
            set { entityData.SalaryTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Sites"/>.
		/// </summary>
		/// <value>The source Sites for SiteId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Sites SiteIdSource
      	{
            get { return entityData.SiteIdSource; }
            set { entityData.SiteIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="WorkType"/>.
		/// </summary>
		/// <value>The source WorkType for WorkTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual WorkType WorkTypeIdSource
      	{
            get { return entityData.WorkTypeIdSource; }
            set { entityData.WorkTypeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of InvoiceItem objects
		///	which are related to this object through the relation FK__InvoiceIt__JobAr__3EB1EF9F
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<InvoiceItem> InvoiceItemCollection
		{
			get { return entityData.InvoiceItemCollection; }
			set { entityData.InvoiceItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobApplication objects
		///	which are related to this object through the relation FK__JobApplic__JobAr__612C0E5D
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobApplication> JobApplicationCollection
		{
			get { return entityData.JobApplicationCollection; }
			set { entityData.JobApplicationCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobsSaved objects
		///	which are related to this object through the relation FK__JobsSaved__JobAr__5F43C5EB
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobsSaved> JobsSavedCollection
		{
			get { return entityData.JobsSavedCollection; }
			set { entityData.JobsSavedCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobViews objects
		///	which are related to this object through the relation FK__JobViews__JobArc__6037EA24
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobViews> JobViewsCollection
		{
			get { return entityData.JobViewsCollection; }
			set { entityData.JobViewsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobRoles objects
		///	which are related to this object through the relation FK__JobRoles__JobArc__1471E42F
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobRoles> JobRolesCollection
		{
			get { return entityData.JobRolesCollection; }
			set { entityData.JobRolesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobArea objects
		///	which are related to this object through the relation FK__JobArea__JobArch__0FAD2F12
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobArea> JobAreaCollection
		{
			get { return entityData.JobAreaCollection; }
			set { entityData.JobAreaCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("JobName", "Job Name"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("JobName", "Job Name", 510));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("Description", "Description"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Description", "Description", 2000));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("FullDescription", "Full Description"));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("ApplicationEmailAddress", "Application Email Address"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ApplicationEmailAddress", "Application Email Address", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("RefNo", "Ref No", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SalaryText", "Salary Text", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ApplicationUrl", "Application Url", 8000));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("SearchFieldExtension", "Search Field Extension"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SearchFieldExtension", "Search Field Extension", 8));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CompanyName", "Company Name", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PublicTransport", "Public Transport", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Address", "Address", 255));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("ContactDetails", "Contact Details"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ContactDetails", "Contact Details", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("JobContactPhone", "Job Contact Phone", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("JobContactName", "Job Contact Name", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DocumentLink", "Document Link", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("BulletPoint1", "Bullet Point1", 160));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("BulletPoint2", "Bullet Point2", 160));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("BulletPoint3", "Bullet Point3", 160));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("JobFriendlyName", "Job Friendly Name", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("JobExternalId", "Job External Id", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "JobsArchive"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"JobID", "SiteID", "WorkTypeID", "JobName", "Description", "FullDescription", "WebServiceProcessed", "ApplicationEmailAddress", "RefNo", "Visible", "DatePosted", "ExpiryDate", "Expired", "JobItemPrice", "Billed", "LastModified", "ShowSalaryDetails", "SalaryText", "AdvertiserID", "LastModifiedByAdvertiserUserId", "LastModifiedByAdminUserId", "JobItemTypeID", "ApplicationMethod", "ApplicationURL", "UploadMethod", "Tags", "JobTemplateID", "SearchFieldExtension", "AdvertiserJobTemplateLogoID", "CompanyName", "HashValue", "RequireLogonForExternalApplications", "ShowLocationDetails", "PublicTransport", "Address", "ContactDetails", "JobContactPhone", "JobContactName", "QualificationsRecognised", "ResidentOnly", "DocumentLink", "BulletPoint1", "BulletPoint2", "BulletPoint3", "HotJob", "JobFriendlyName", "SearchField", "ShowSalaryRange", "SalaryLowerBand", "SalaryUpperBand", "CurrencyID", "SalaryTypeID", "EnteredByAdvertiserUserID", "JobLatitude", "JobLongitude", "AddressStatus", "JobExternalId"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as JobsArchiveEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (JobsArchive) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<JobsArchive>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as JobsArchive);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed JobsArchive Entity 
		///</summary>
		protected virtual JobsArchive Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			JobsArchive copy = new JobsArchive();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.JobId = this.JobId;
					copy.OriginalJobId = this.OriginalJobId;
				copy.SiteId = this.SiteId;
				copy.WorkTypeId = this.WorkTypeId;
				copy.JobName = this.JobName;
				copy.Description = this.Description;
				copy.FullDescription = this.FullDescription;
				copy.WebServiceProcessed = this.WebServiceProcessed;
				copy.ApplicationEmailAddress = this.ApplicationEmailAddress;
				copy.RefNo = this.RefNo;
				copy.Visible = this.Visible;
				copy.DatePosted = this.DatePosted;
				copy.ExpiryDate = this.ExpiryDate;
				copy.Expired = this.Expired;
				copy.JobItemPrice = this.JobItemPrice;
				copy.Billed = this.Billed;
				copy.LastModified = this.LastModified;
				copy.ShowSalaryDetails = this.ShowSalaryDetails;
				copy.SalaryText = this.SalaryText;
				copy.AdvertiserId = this.AdvertiserId;
				copy.LastModifiedByAdvertiserUserId = this.LastModifiedByAdvertiserUserId;
				copy.LastModifiedByAdminUserId = this.LastModifiedByAdminUserId;
				copy.JobItemTypeId = this.JobItemTypeId;
				copy.ApplicationMethod = this.ApplicationMethod;
				copy.ApplicationUrl = this.ApplicationUrl;
				copy.UploadMethod = this.UploadMethod;
				copy.Tags = this.Tags;
				copy.JobTemplateId = this.JobTemplateId;
				copy.SearchFieldExtension = this.SearchFieldExtension;
				copy.AdvertiserJobTemplateLogoId = this.AdvertiserJobTemplateLogoId;
				copy.CompanyName = this.CompanyName;
				copy.HashValue = this.HashValue;
				copy.RequireLogonForExternalApplications = this.RequireLogonForExternalApplications;
				copy.ShowLocationDetails = this.ShowLocationDetails;
				copy.PublicTransport = this.PublicTransport;
				copy.Address = this.Address;
				copy.ContactDetails = this.ContactDetails;
				copy.JobContactPhone = this.JobContactPhone;
				copy.JobContactName = this.JobContactName;
				copy.QualificationsRecognised = this.QualificationsRecognised;
				copy.ResidentOnly = this.ResidentOnly;
				copy.DocumentLink = this.DocumentLink;
				copy.BulletPoint1 = this.BulletPoint1;
				copy.BulletPoint2 = this.BulletPoint2;
				copy.BulletPoint3 = this.BulletPoint3;
				copy.HotJob = this.HotJob;
				copy.JobFriendlyName = this.JobFriendlyName;
				copy.SearchField = this.SearchField;
				copy.ShowSalaryRange = this.ShowSalaryRange;
				copy.SalaryLowerBand = this.SalaryLowerBand;
				copy.SalaryUpperBand = this.SalaryUpperBand;
				copy.CurrencyId = this.CurrencyId;
				copy.SalaryTypeId = this.SalaryTypeId;
				copy.EnteredByAdvertiserUserId = this.EnteredByAdvertiserUserId;
				copy.JobLatitude = this.JobLatitude;
				copy.JobLongitude = this.JobLongitude;
				copy.AddressStatus = this.AddressStatus;
				copy.JobExternalId = this.JobExternalId;
			
			if (this.AdvertiserIdSource != null && existingCopies.Contains(this.AdvertiserIdSource))
				copy.AdvertiserIdSource = existingCopies[this.AdvertiserIdSource] as Advertisers;
			else
				copy.AdvertiserIdSource = MakeCopyOf(this.AdvertiserIdSource, existingCopies) as Advertisers;
			if (this.CurrencyIdSource != null && existingCopies.Contains(this.CurrencyIdSource))
				copy.CurrencyIdSource = existingCopies[this.CurrencyIdSource] as Currencies;
			else
				copy.CurrencyIdSource = MakeCopyOf(this.CurrencyIdSource, existingCopies) as Currencies;
			if (this.JobTemplateIdSource != null && existingCopies.Contains(this.JobTemplateIdSource))
				copy.JobTemplateIdSource = existingCopies[this.JobTemplateIdSource] as JobTemplates;
			else
				copy.JobTemplateIdSource = MakeCopyOf(this.JobTemplateIdSource, existingCopies) as JobTemplates;
			if (this.LastModifiedByAdvertiserUserIdSource != null && existingCopies.Contains(this.LastModifiedByAdvertiserUserIdSource))
				copy.LastModifiedByAdvertiserUserIdSource = existingCopies[this.LastModifiedByAdvertiserUserIdSource] as AdvertiserUsers;
			else
				copy.LastModifiedByAdvertiserUserIdSource = MakeCopyOf(this.LastModifiedByAdvertiserUserIdSource, existingCopies) as AdvertiserUsers;
			if (this.LastModifiedByAdminUserIdSource != null && existingCopies.Contains(this.LastModifiedByAdminUserIdSource))
				copy.LastModifiedByAdminUserIdSource = existingCopies[this.LastModifiedByAdminUserIdSource] as AdminUsers;
			else
				copy.LastModifiedByAdminUserIdSource = MakeCopyOf(this.LastModifiedByAdminUserIdSource, existingCopies) as AdminUsers;
			if (this.SalaryTypeIdSource != null && existingCopies.Contains(this.SalaryTypeIdSource))
				copy.SalaryTypeIdSource = existingCopies[this.SalaryTypeIdSource] as SalaryType;
			else
				copy.SalaryTypeIdSource = MakeCopyOf(this.SalaryTypeIdSource, existingCopies) as SalaryType;
			if (this.SiteIdSource != null && existingCopies.Contains(this.SiteIdSource))
				copy.SiteIdSource = existingCopies[this.SiteIdSource] as Sites;
			else
				copy.SiteIdSource = MakeCopyOf(this.SiteIdSource, existingCopies) as Sites;
			if (this.WorkTypeIdSource != null && existingCopies.Contains(this.WorkTypeIdSource))
				copy.WorkTypeIdSource = existingCopies[this.WorkTypeIdSource] as WorkType;
			else
				copy.WorkTypeIdSource = MakeCopyOf(this.WorkTypeIdSource, existingCopies) as WorkType;
		
			//deep copy nested objects
			copy.InvoiceItemCollection = (TList<InvoiceItem>) MakeCopyOf(this.InvoiceItemCollection, existingCopies); 
			copy.JobApplicationCollection = (TList<JobApplication>) MakeCopyOf(this.JobApplicationCollection, existingCopies); 
			copy.JobsSavedCollection = (TList<JobsSaved>) MakeCopyOf(this.JobsSavedCollection, existingCopies); 
			copy.JobViewsCollection = (TList<JobViews>) MakeCopyOf(this.JobViewsCollection, existingCopies); 
			copy.JobRolesCollection = (TList<JobRoles>) MakeCopyOf(this.JobRolesCollection, existingCopies); 
			copy.JobAreaCollection = (TList<JobArea>) MakeCopyOf(this.JobAreaCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed JobsArchive Entity 
		///</summary>
		public virtual JobsArchive Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed JobsArchive Entity which is a deep copy of the current entity.
		///</summary>
		public virtual JobsArchive DeepCopy()
		{
			return EntityHelper.Clone<JobsArchive>(this as JobsArchive);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as JobsArchiveEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new JobsArchiveEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as JobsArchiveEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(JobsArchiveColumn column)
		{
			switch(column)
			{
					case JobsArchiveColumn.JobId:
					return entityData.JobId != _originalData.JobId;
					case JobsArchiveColumn.SiteId:
					return entityData.SiteId != _originalData.SiteId;
					case JobsArchiveColumn.WorkTypeId:
					return entityData.WorkTypeId != _originalData.WorkTypeId;
					case JobsArchiveColumn.JobName:
					return entityData.JobName != _originalData.JobName;
					case JobsArchiveColumn.Description:
					return entityData.Description != _originalData.Description;
					case JobsArchiveColumn.FullDescription:
					return entityData.FullDescription != _originalData.FullDescription;
					case JobsArchiveColumn.WebServiceProcessed:
					return entityData.WebServiceProcessed != _originalData.WebServiceProcessed;
					case JobsArchiveColumn.ApplicationEmailAddress:
					return entityData.ApplicationEmailAddress != _originalData.ApplicationEmailAddress;
					case JobsArchiveColumn.RefNo:
					return entityData.RefNo != _originalData.RefNo;
					case JobsArchiveColumn.Visible:
					return entityData.Visible != _originalData.Visible;
					case JobsArchiveColumn.DatePosted:
					return entityData.DatePosted != _originalData.DatePosted;
					case JobsArchiveColumn.ExpiryDate:
					return entityData.ExpiryDate != _originalData.ExpiryDate;
					case JobsArchiveColumn.Expired:
					return entityData.Expired != _originalData.Expired;
					case JobsArchiveColumn.JobItemPrice:
					return entityData.JobItemPrice != _originalData.JobItemPrice;
					case JobsArchiveColumn.Billed:
					return entityData.Billed != _originalData.Billed;
					case JobsArchiveColumn.LastModified:
					return entityData.LastModified != _originalData.LastModified;
					case JobsArchiveColumn.ShowSalaryDetails:
					return entityData.ShowSalaryDetails != _originalData.ShowSalaryDetails;
					case JobsArchiveColumn.SalaryText:
					return entityData.SalaryText != _originalData.SalaryText;
					case JobsArchiveColumn.AdvertiserId:
					return entityData.AdvertiserId != _originalData.AdvertiserId;
					case JobsArchiveColumn.LastModifiedByAdvertiserUserId:
					return entityData.LastModifiedByAdvertiserUserId != _originalData.LastModifiedByAdvertiserUserId;
					case JobsArchiveColumn.LastModifiedByAdminUserId:
					return entityData.LastModifiedByAdminUserId != _originalData.LastModifiedByAdminUserId;
					case JobsArchiveColumn.JobItemTypeId:
					return entityData.JobItemTypeId != _originalData.JobItemTypeId;
					case JobsArchiveColumn.ApplicationMethod:
					return entityData.ApplicationMethod != _originalData.ApplicationMethod;
					case JobsArchiveColumn.ApplicationUrl:
					return entityData.ApplicationUrl != _originalData.ApplicationUrl;
					case JobsArchiveColumn.UploadMethod:
					return entityData.UploadMethod != _originalData.UploadMethod;
					case JobsArchiveColumn.Tags:
					return entityData.Tags != _originalData.Tags;
					case JobsArchiveColumn.JobTemplateId:
					return entityData.JobTemplateId != _originalData.JobTemplateId;
					case JobsArchiveColumn.SearchFieldExtension:
					return entityData.SearchFieldExtension != _originalData.SearchFieldExtension;
					case JobsArchiveColumn.AdvertiserJobTemplateLogoId:
					return entityData.AdvertiserJobTemplateLogoId != _originalData.AdvertiserJobTemplateLogoId;
					case JobsArchiveColumn.CompanyName:
					return entityData.CompanyName != _originalData.CompanyName;
					case JobsArchiveColumn.HashValue:
					return entityData.HashValue != _originalData.HashValue;
					case JobsArchiveColumn.RequireLogonForExternalApplications:
					return entityData.RequireLogonForExternalApplications != _originalData.RequireLogonForExternalApplications;
					case JobsArchiveColumn.ShowLocationDetails:
					return entityData.ShowLocationDetails != _originalData.ShowLocationDetails;
					case JobsArchiveColumn.PublicTransport:
					return entityData.PublicTransport != _originalData.PublicTransport;
					case JobsArchiveColumn.Address:
					return entityData.Address != _originalData.Address;
					case JobsArchiveColumn.ContactDetails:
					return entityData.ContactDetails != _originalData.ContactDetails;
					case JobsArchiveColumn.JobContactPhone:
					return entityData.JobContactPhone != _originalData.JobContactPhone;
					case JobsArchiveColumn.JobContactName:
					return entityData.JobContactName != _originalData.JobContactName;
					case JobsArchiveColumn.QualificationsRecognised:
					return entityData.QualificationsRecognised != _originalData.QualificationsRecognised;
					case JobsArchiveColumn.ResidentOnly:
					return entityData.ResidentOnly != _originalData.ResidentOnly;
					case JobsArchiveColumn.DocumentLink:
					return entityData.DocumentLink != _originalData.DocumentLink;
					case JobsArchiveColumn.BulletPoint1:
					return entityData.BulletPoint1 != _originalData.BulletPoint1;
					case JobsArchiveColumn.BulletPoint2:
					return entityData.BulletPoint2 != _originalData.BulletPoint2;
					case JobsArchiveColumn.BulletPoint3:
					return entityData.BulletPoint3 != _originalData.BulletPoint3;
					case JobsArchiveColumn.HotJob:
					return entityData.HotJob != _originalData.HotJob;
					case JobsArchiveColumn.JobFriendlyName:
					return entityData.JobFriendlyName != _originalData.JobFriendlyName;
					case JobsArchiveColumn.SearchField:
					return entityData.SearchField != _originalData.SearchField;
					case JobsArchiveColumn.ShowSalaryRange:
					return entityData.ShowSalaryRange != _originalData.ShowSalaryRange;
					case JobsArchiveColumn.SalaryLowerBand:
					return entityData.SalaryLowerBand != _originalData.SalaryLowerBand;
					case JobsArchiveColumn.SalaryUpperBand:
					return entityData.SalaryUpperBand != _originalData.SalaryUpperBand;
					case JobsArchiveColumn.CurrencyId:
					return entityData.CurrencyId != _originalData.CurrencyId;
					case JobsArchiveColumn.SalaryTypeId:
					return entityData.SalaryTypeId != _originalData.SalaryTypeId;
					case JobsArchiveColumn.EnteredByAdvertiserUserId:
					return entityData.EnteredByAdvertiserUserId != _originalData.EnteredByAdvertiserUserId;
					case JobsArchiveColumn.JobLatitude:
					return entityData.JobLatitude != _originalData.JobLatitude;
					case JobsArchiveColumn.JobLongitude:
					return entityData.JobLongitude != _originalData.JobLongitude;
					case JobsArchiveColumn.AddressStatus:
					return entityData.AddressStatus != _originalData.AddressStatus;
					case JobsArchiveColumn.JobExternalId:
					return entityData.JobExternalId != _originalData.JobExternalId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< JobsArchiveColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.JobId != _originalData.JobId;
			result = result || entityData.SiteId != _originalData.SiteId;
			result = result || entityData.WorkTypeId != _originalData.WorkTypeId;
			result = result || entityData.JobName != _originalData.JobName;
			result = result || entityData.Description != _originalData.Description;
			result = result || entityData.FullDescription != _originalData.FullDescription;
			result = result || entityData.WebServiceProcessed != _originalData.WebServiceProcessed;
			result = result || entityData.ApplicationEmailAddress != _originalData.ApplicationEmailAddress;
			result = result || entityData.RefNo != _originalData.RefNo;
			result = result || entityData.Visible != _originalData.Visible;
			result = result || entityData.DatePosted != _originalData.DatePosted;
			result = result || entityData.ExpiryDate != _originalData.ExpiryDate;
			result = result || entityData.Expired != _originalData.Expired;
			result = result || entityData.JobItemPrice != _originalData.JobItemPrice;
			result = result || entityData.Billed != _originalData.Billed;
			result = result || entityData.LastModified != _originalData.LastModified;
			result = result || entityData.ShowSalaryDetails != _originalData.ShowSalaryDetails;
			result = result || entityData.SalaryText != _originalData.SalaryText;
			result = result || entityData.AdvertiserId != _originalData.AdvertiserId;
			result = result || entityData.LastModifiedByAdvertiserUserId != _originalData.LastModifiedByAdvertiserUserId;
			result = result || entityData.LastModifiedByAdminUserId != _originalData.LastModifiedByAdminUserId;
			result = result || entityData.JobItemTypeId != _originalData.JobItemTypeId;
			result = result || entityData.ApplicationMethod != _originalData.ApplicationMethod;
			result = result || entityData.ApplicationUrl != _originalData.ApplicationUrl;
			result = result || entityData.UploadMethod != _originalData.UploadMethod;
			result = result || entityData.Tags != _originalData.Tags;
			result = result || entityData.JobTemplateId != _originalData.JobTemplateId;
			result = result || entityData.SearchFieldExtension != _originalData.SearchFieldExtension;
			result = result || entityData.AdvertiserJobTemplateLogoId != _originalData.AdvertiserJobTemplateLogoId;
			result = result || entityData.CompanyName != _originalData.CompanyName;
			result = result || entityData.HashValue != _originalData.HashValue;
			result = result || entityData.RequireLogonForExternalApplications != _originalData.RequireLogonForExternalApplications;
			result = result || entityData.ShowLocationDetails != _originalData.ShowLocationDetails;
			result = result || entityData.PublicTransport != _originalData.PublicTransport;
			result = result || entityData.Address != _originalData.Address;
			result = result || entityData.ContactDetails != _originalData.ContactDetails;
			result = result || entityData.JobContactPhone != _originalData.JobContactPhone;
			result = result || entityData.JobContactName != _originalData.JobContactName;
			result = result || entityData.QualificationsRecognised != _originalData.QualificationsRecognised;
			result = result || entityData.ResidentOnly != _originalData.ResidentOnly;
			result = result || entityData.DocumentLink != _originalData.DocumentLink;
			result = result || entityData.BulletPoint1 != _originalData.BulletPoint1;
			result = result || entityData.BulletPoint2 != _originalData.BulletPoint2;
			result = result || entityData.BulletPoint3 != _originalData.BulletPoint3;
			result = result || entityData.HotJob != _originalData.HotJob;
			result = result || entityData.JobFriendlyName != _originalData.JobFriendlyName;
			result = result || entityData.SearchField != _originalData.SearchField;
			result = result || entityData.ShowSalaryRange != _originalData.ShowSalaryRange;
			result = result || entityData.SalaryLowerBand != _originalData.SalaryLowerBand;
			result = result || entityData.SalaryUpperBand != _originalData.SalaryUpperBand;
			result = result || entityData.CurrencyId != _originalData.CurrencyId;
			result = result || entityData.SalaryTypeId != _originalData.SalaryTypeId;
			result = result || entityData.EnteredByAdvertiserUserId != _originalData.EnteredByAdvertiserUserId;
			result = result || entityData.JobLatitude != _originalData.JobLatitude;
			result = result || entityData.JobLongitude != _originalData.JobLongitude;
			result = result || entityData.AddressStatus != _originalData.AddressStatus;
			result = result || entityData.JobExternalId != _originalData.JobExternalId;
			return result;
		}	
		
		///<summary>
		///  Returns a JobsArchive Entity with the original data.
		///</summary>
		public JobsArchive GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateJobsArchive(
				_originalData.JobId,
				_originalData.SiteId,
				_originalData.WorkTypeId,
				_originalData.JobName,
				_originalData.Description,
				_originalData.FullDescription,
				_originalData.WebServiceProcessed,
				_originalData.ApplicationEmailAddress,
				_originalData.RefNo,
				_originalData.Visible,
				_originalData.DatePosted,
				_originalData.ExpiryDate,
				_originalData.Expired,
				_originalData.JobItemPrice,
				_originalData.Billed,
				_originalData.LastModified,
				_originalData.ShowSalaryDetails,
				_originalData.SalaryText,
				_originalData.AdvertiserId,
				_originalData.LastModifiedByAdvertiserUserId,
				_originalData.LastModifiedByAdminUserId,
				_originalData.JobItemTypeId,
				_originalData.ApplicationMethod,
				_originalData.ApplicationUrl,
				_originalData.UploadMethod,
				_originalData.Tags,
				_originalData.JobTemplateId,
				_originalData.SearchFieldExtension,
				_originalData.AdvertiserJobTemplateLogoId,
				_originalData.CompanyName,
				_originalData.HashValue,
				_originalData.RequireLogonForExternalApplications,
				_originalData.ShowLocationDetails,
				_originalData.PublicTransport,
				_originalData.Address,
				_originalData.ContactDetails,
				_originalData.JobContactPhone,
				_originalData.JobContactName,
				_originalData.QualificationsRecognised,
				_originalData.ResidentOnly,
				_originalData.DocumentLink,
				_originalData.BulletPoint1,
				_originalData.BulletPoint2,
				_originalData.BulletPoint3,
				_originalData.HotJob,
				_originalData.JobFriendlyName,
				_originalData.SearchField,
				_originalData.ShowSalaryRange,
				_originalData.SalaryLowerBand,
				_originalData.SalaryUpperBand,
				_originalData.CurrencyId,
				_originalData.SalaryTypeId,
				_originalData.EnteredByAdvertiserUserId,
				_originalData.JobLatitude,
				_originalData.JobLongitude,
				_originalData.AddressStatus,
				_originalData.JobExternalId
				);
				
			return (JobsArchive)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="JobsArchiveBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is JobsArchiveBase)
				return ValueEquals(this, (JobsArchiveBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="JobsArchiveBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.JobId.GetHashCode() ^ 
					this.SiteId.GetHashCode() ^ 
					this.WorkTypeId.GetHashCode() ^ 
					this.JobName.GetHashCode() ^ 
					this.Description.GetHashCode() ^ 
					this.FullDescription.GetHashCode() ^ 
					this.WebServiceProcessed.GetHashCode() ^ 
					this.ApplicationEmailAddress.GetHashCode() ^ 
					((this.RefNo == null) ? string.Empty : this.RefNo.ToString()).GetHashCode() ^ 
					this.Visible.GetHashCode() ^ 
					this.DatePosted.GetHashCode() ^ 
					this.ExpiryDate.GetHashCode() ^ 
					((this.Expired == null) ? string.Empty : this.Expired.ToString()).GetHashCode() ^ 
					((this.JobItemPrice == null) ? string.Empty : this.JobItemPrice.ToString()).GetHashCode() ^ 
					this.Billed.GetHashCode() ^ 
					this.LastModified.GetHashCode() ^ 
					this.ShowSalaryDetails.GetHashCode() ^ 
					((this.SalaryText == null) ? string.Empty : this.SalaryText.ToString()).GetHashCode() ^ 
					((this.AdvertiserId == null) ? string.Empty : this.AdvertiserId.ToString()).GetHashCode() ^ 
					((this.LastModifiedByAdvertiserUserId == null) ? string.Empty : this.LastModifiedByAdvertiserUserId.ToString()).GetHashCode() ^ 
					((this.LastModifiedByAdminUserId == null) ? string.Empty : this.LastModifiedByAdminUserId.ToString()).GetHashCode() ^ 
					((this.JobItemTypeId == null) ? string.Empty : this.JobItemTypeId.ToString()).GetHashCode() ^ 
					((this.ApplicationMethod == null) ? string.Empty : this.ApplicationMethod.ToString()).GetHashCode() ^ 
					((this.ApplicationUrl == null) ? string.Empty : this.ApplicationUrl.ToString()).GetHashCode() ^ 
					((this.UploadMethod == null) ? string.Empty : this.UploadMethod.ToString()).GetHashCode() ^ 
					((this.Tags == null) ? string.Empty : this.Tags.ToString()).GetHashCode() ^ 
					((this.JobTemplateId == null) ? string.Empty : this.JobTemplateId.ToString()).GetHashCode() ^ 
					this.SearchFieldExtension.GetHashCode() ^ 
					((this.AdvertiserJobTemplateLogoId == null) ? string.Empty : this.AdvertiserJobTemplateLogoId.ToString()).GetHashCode() ^ 
					((this.CompanyName == null) ? string.Empty : this.CompanyName.ToString()).GetHashCode() ^ 
					((this.HashValue == null) ? string.Empty : this.HashValue.ToString()).GetHashCode() ^ 
					this.RequireLogonForExternalApplications.GetHashCode() ^ 
					((this.ShowLocationDetails == null) ? string.Empty : this.ShowLocationDetails.ToString()).GetHashCode() ^ 
					((this.PublicTransport == null) ? string.Empty : this.PublicTransport.ToString()).GetHashCode() ^ 
					((this.Address == null) ? string.Empty : this.Address.ToString()).GetHashCode() ^ 
					this.ContactDetails.GetHashCode() ^ 
					((this.JobContactPhone == null) ? string.Empty : this.JobContactPhone.ToString()).GetHashCode() ^ 
					((this.JobContactName == null) ? string.Empty : this.JobContactName.ToString()).GetHashCode() ^ 
					this.QualificationsRecognised.GetHashCode() ^ 
					this.ResidentOnly.GetHashCode() ^ 
					((this.DocumentLink == null) ? string.Empty : this.DocumentLink.ToString()).GetHashCode() ^ 
					((this.BulletPoint1 == null) ? string.Empty : this.BulletPoint1.ToString()).GetHashCode() ^ 
					((this.BulletPoint2 == null) ? string.Empty : this.BulletPoint2.ToString()).GetHashCode() ^ 
					((this.BulletPoint3 == null) ? string.Empty : this.BulletPoint3.ToString()).GetHashCode() ^ 
					this.HotJob.GetHashCode() ^ 
					((this.JobFriendlyName == null) ? string.Empty : this.JobFriendlyName.ToString()).GetHashCode() ^ 
					((this.SearchField == null) ? string.Empty : this.SearchField.ToString()).GetHashCode() ^ 
					this.ShowSalaryRange.GetHashCode() ^ 
					this.SalaryLowerBand.GetHashCode() ^ 
					this.SalaryUpperBand.GetHashCode() ^ 
					this.CurrencyId.GetHashCode() ^ 
					this.SalaryTypeId.GetHashCode() ^ 
					((this.EnteredByAdvertiserUserId == null) ? string.Empty : this.EnteredByAdvertiserUserId.ToString()).GetHashCode() ^ 
					((this.JobLatitude == null) ? string.Empty : this.JobLatitude.ToString()).GetHashCode() ^ 
					((this.JobLongitude == null) ? string.Empty : this.JobLongitude.ToString()).GetHashCode() ^ 
					((this.AddressStatus == null) ? string.Empty : this.AddressStatus.ToString()).GetHashCode() ^ 
					((this.JobExternalId == null) ? string.Empty : this.JobExternalId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="JobsArchiveBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(JobsArchiveBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="JobsArchiveBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="JobsArchiveBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="JobsArchiveBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(JobsArchiveBase Object1, JobsArchiveBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.JobId != Object2.JobId)
				equal = false;
			if (Object1.SiteId != Object2.SiteId)
				equal = false;
			if (Object1.WorkTypeId != Object2.WorkTypeId)
				equal = false;
			if (Object1.JobName != Object2.JobName)
				equal = false;
			if (Object1.Description != Object2.Description)
				equal = false;
			if (Object1.FullDescription != Object2.FullDescription)
				equal = false;
			if (Object1.WebServiceProcessed != Object2.WebServiceProcessed)
				equal = false;
			if (Object1.ApplicationEmailAddress != Object2.ApplicationEmailAddress)
				equal = false;
			if ( Object1.RefNo != null && Object2.RefNo != null )
			{
				if (Object1.RefNo != Object2.RefNo)
					equal = false;
			}
			else if (Object1.RefNo == null ^ Object2.RefNo == null )
			{
				equal = false;
			}
			if (Object1.Visible != Object2.Visible)
				equal = false;
			if (Object1.DatePosted != Object2.DatePosted)
				equal = false;
			if (Object1.ExpiryDate != Object2.ExpiryDate)
				equal = false;
			if ( Object1.Expired != null && Object2.Expired != null )
			{
				if (Object1.Expired != Object2.Expired)
					equal = false;
			}
			else if (Object1.Expired == null ^ Object2.Expired == null )
			{
				equal = false;
			}
			if ( Object1.JobItemPrice != null && Object2.JobItemPrice != null )
			{
				if (Object1.JobItemPrice != Object2.JobItemPrice)
					equal = false;
			}
			else if (Object1.JobItemPrice == null ^ Object2.JobItemPrice == null )
			{
				equal = false;
			}
			if (Object1.Billed != Object2.Billed)
				equal = false;
			if (Object1.LastModified != Object2.LastModified)
				equal = false;
			if (Object1.ShowSalaryDetails != Object2.ShowSalaryDetails)
				equal = false;
			if ( Object1.SalaryText != null && Object2.SalaryText != null )
			{
				if (Object1.SalaryText != Object2.SalaryText)
					equal = false;
			}
			else if (Object1.SalaryText == null ^ Object2.SalaryText == null )
			{
				equal = false;
			}
			if ( Object1.AdvertiserId != null && Object2.AdvertiserId != null )
			{
				if (Object1.AdvertiserId != Object2.AdvertiserId)
					equal = false;
			}
			else if (Object1.AdvertiserId == null ^ Object2.AdvertiserId == null )
			{
				equal = false;
			}
			if ( Object1.LastModifiedByAdvertiserUserId != null && Object2.LastModifiedByAdvertiserUserId != null )
			{
				if (Object1.LastModifiedByAdvertiserUserId != Object2.LastModifiedByAdvertiserUserId)
					equal = false;
			}
			else if (Object1.LastModifiedByAdvertiserUserId == null ^ Object2.LastModifiedByAdvertiserUserId == null )
			{
				equal = false;
			}
			if ( Object1.LastModifiedByAdminUserId != null && Object2.LastModifiedByAdminUserId != null )
			{
				if (Object1.LastModifiedByAdminUserId != Object2.LastModifiedByAdminUserId)
					equal = false;
			}
			else if (Object1.LastModifiedByAdminUserId == null ^ Object2.LastModifiedByAdminUserId == null )
			{
				equal = false;
			}
			if ( Object1.JobItemTypeId != null && Object2.JobItemTypeId != null )
			{
				if (Object1.JobItemTypeId != Object2.JobItemTypeId)
					equal = false;
			}
			else if (Object1.JobItemTypeId == null ^ Object2.JobItemTypeId == null )
			{
				equal = false;
			}
			if ( Object1.ApplicationMethod != null && Object2.ApplicationMethod != null )
			{
				if (Object1.ApplicationMethod != Object2.ApplicationMethod)
					equal = false;
			}
			else if (Object1.ApplicationMethod == null ^ Object2.ApplicationMethod == null )
			{
				equal = false;
			}
			if ( Object1.ApplicationUrl != null && Object2.ApplicationUrl != null )
			{
				if (Object1.ApplicationUrl != Object2.ApplicationUrl)
					equal = false;
			}
			else if (Object1.ApplicationUrl == null ^ Object2.ApplicationUrl == null )
			{
				equal = false;
			}
			if ( Object1.UploadMethod != null && Object2.UploadMethod != null )
			{
				if (Object1.UploadMethod != Object2.UploadMethod)
					equal = false;
			}
			else if (Object1.UploadMethod == null ^ Object2.UploadMethod == null )
			{
				equal = false;
			}
			if ( Object1.Tags != null && Object2.Tags != null )
			{
				if (Object1.Tags != Object2.Tags)
					equal = false;
			}
			else if (Object1.Tags == null ^ Object2.Tags == null )
			{
				equal = false;
			}
			if ( Object1.JobTemplateId != null && Object2.JobTemplateId != null )
			{
				if (Object1.JobTemplateId != Object2.JobTemplateId)
					equal = false;
			}
			else if (Object1.JobTemplateId == null ^ Object2.JobTemplateId == null )
			{
				equal = false;
			}
			if (Object1.SearchFieldExtension != Object2.SearchFieldExtension)
				equal = false;
			if ( Object1.AdvertiserJobTemplateLogoId != null && Object2.AdvertiserJobTemplateLogoId != null )
			{
				if (Object1.AdvertiserJobTemplateLogoId != Object2.AdvertiserJobTemplateLogoId)
					equal = false;
			}
			else if (Object1.AdvertiserJobTemplateLogoId == null ^ Object2.AdvertiserJobTemplateLogoId == null )
			{
				equal = false;
			}
			if ( Object1.CompanyName != null && Object2.CompanyName != null )
			{
				if (Object1.CompanyName != Object2.CompanyName)
					equal = false;
			}
			else if (Object1.CompanyName == null ^ Object2.CompanyName == null )
			{
				equal = false;
			}
			if ( Object1.HashValue != null && Object2.HashValue != null )
			{
				if (Object1.HashValue != Object2.HashValue)
					equal = false;
			}
			else if (Object1.HashValue == null ^ Object2.HashValue == null )
			{
				equal = false;
			}
			if (Object1.RequireLogonForExternalApplications != Object2.RequireLogonForExternalApplications)
				equal = false;
			if ( Object1.ShowLocationDetails != null && Object2.ShowLocationDetails != null )
			{
				if (Object1.ShowLocationDetails != Object2.ShowLocationDetails)
					equal = false;
			}
			else if (Object1.ShowLocationDetails == null ^ Object2.ShowLocationDetails == null )
			{
				equal = false;
			}
			if ( Object1.PublicTransport != null && Object2.PublicTransport != null )
			{
				if (Object1.PublicTransport != Object2.PublicTransport)
					equal = false;
			}
			else if (Object1.PublicTransport == null ^ Object2.PublicTransport == null )
			{
				equal = false;
			}
			if ( Object1.Address != null && Object2.Address != null )
			{
				if (Object1.Address != Object2.Address)
					equal = false;
			}
			else if (Object1.Address == null ^ Object2.Address == null )
			{
				equal = false;
			}
			if (Object1.ContactDetails != Object2.ContactDetails)
				equal = false;
			if ( Object1.JobContactPhone != null && Object2.JobContactPhone != null )
			{
				if (Object1.JobContactPhone != Object2.JobContactPhone)
					equal = false;
			}
			else if (Object1.JobContactPhone == null ^ Object2.JobContactPhone == null )
			{
				equal = false;
			}
			if ( Object1.JobContactName != null && Object2.JobContactName != null )
			{
				if (Object1.JobContactName != Object2.JobContactName)
					equal = false;
			}
			else if (Object1.JobContactName == null ^ Object2.JobContactName == null )
			{
				equal = false;
			}
			if (Object1.QualificationsRecognised != Object2.QualificationsRecognised)
				equal = false;
			if (Object1.ResidentOnly != Object2.ResidentOnly)
				equal = false;
			if ( Object1.DocumentLink != null && Object2.DocumentLink != null )
			{
				if (Object1.DocumentLink != Object2.DocumentLink)
					equal = false;
			}
			else if (Object1.DocumentLink == null ^ Object2.DocumentLink == null )
			{
				equal = false;
			}
			if ( Object1.BulletPoint1 != null && Object2.BulletPoint1 != null )
			{
				if (Object1.BulletPoint1 != Object2.BulletPoint1)
					equal = false;
			}
			else if (Object1.BulletPoint1 == null ^ Object2.BulletPoint1 == null )
			{
				equal = false;
			}
			if ( Object1.BulletPoint2 != null && Object2.BulletPoint2 != null )
			{
				if (Object1.BulletPoint2 != Object2.BulletPoint2)
					equal = false;
			}
			else if (Object1.BulletPoint2 == null ^ Object2.BulletPoint2 == null )
			{
				equal = false;
			}
			if ( Object1.BulletPoint3 != null && Object2.BulletPoint3 != null )
			{
				if (Object1.BulletPoint3 != Object2.BulletPoint3)
					equal = false;
			}
			else if (Object1.BulletPoint3 == null ^ Object2.BulletPoint3 == null )
			{
				equal = false;
			}
			if (Object1.HotJob != Object2.HotJob)
				equal = false;
			if ( Object1.JobFriendlyName != null && Object2.JobFriendlyName != null )
			{
				if (Object1.JobFriendlyName != Object2.JobFriendlyName)
					equal = false;
			}
			else if (Object1.JobFriendlyName == null ^ Object2.JobFriendlyName == null )
			{
				equal = false;
			}
			if ( Object1.SearchField != null && Object2.SearchField != null )
			{
				if (Object1.SearchField != Object2.SearchField)
					equal = false;
			}
			else if (Object1.SearchField == null ^ Object2.SearchField == null )
			{
				equal = false;
			}
			if (Object1.ShowSalaryRange != Object2.ShowSalaryRange)
				equal = false;
			if (Object1.SalaryLowerBand != Object2.SalaryLowerBand)
				equal = false;
			if (Object1.SalaryUpperBand != Object2.SalaryUpperBand)
				equal = false;
			if (Object1.CurrencyId != Object2.CurrencyId)
				equal = false;
			if (Object1.SalaryTypeId != Object2.SalaryTypeId)
				equal = false;
			if ( Object1.EnteredByAdvertiserUserId != null && Object2.EnteredByAdvertiserUserId != null )
			{
				if (Object1.EnteredByAdvertiserUserId != Object2.EnteredByAdvertiserUserId)
					equal = false;
			}
			else if (Object1.EnteredByAdvertiserUserId == null ^ Object2.EnteredByAdvertiserUserId == null )
			{
				equal = false;
			}
			if ( Object1.JobLatitude != null && Object2.JobLatitude != null )
			{
				if (Object1.JobLatitude != Object2.JobLatitude)
					equal = false;
			}
			else if (Object1.JobLatitude == null ^ Object2.JobLatitude == null )
			{
				equal = false;
			}
			if ( Object1.JobLongitude != null && Object2.JobLongitude != null )
			{
				if (Object1.JobLongitude != Object2.JobLongitude)
					equal = false;
			}
			else if (Object1.JobLongitude == null ^ Object2.JobLongitude == null )
			{
				equal = false;
			}
			if ( Object1.AddressStatus != null && Object2.AddressStatus != null )
			{
				if (Object1.AddressStatus != Object2.AddressStatus)
					equal = false;
			}
			else if (Object1.AddressStatus == null ^ Object2.AddressStatus == null )
			{
				equal = false;
			}
			if ( Object1.JobExternalId != null && Object2.JobExternalId != null )
			{
				if (Object1.JobExternalId != Object2.JobExternalId)
					equal = false;
			}
			else if (Object1.JobExternalId == null ^ Object2.JobExternalId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((JobsArchiveBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static JobsArchiveComparer GetComparer()
        {
            return new JobsArchiveComparer();
        }
        */

        // Comparer delegates back to JobsArchive
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(JobsArchive rhs, JobsArchiveColumn which)
        {
            switch (which)
            {
            	
            	
            	case JobsArchiveColumn.JobId:
            		return this.JobId.CompareTo(rhs.JobId);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.SiteId:
            		return this.SiteId.CompareTo(rhs.SiteId);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.WorkTypeId:
            		return this.WorkTypeId.CompareTo(rhs.WorkTypeId);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobName:
            		return this.JobName.CompareTo(rhs.JobName);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.Description:
            		return this.Description.CompareTo(rhs.Description);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.FullDescription:
            		return this.FullDescription.CompareTo(rhs.FullDescription);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.WebServiceProcessed:
            		return this.WebServiceProcessed.CompareTo(rhs.WebServiceProcessed);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.ApplicationEmailAddress:
            		return this.ApplicationEmailAddress.CompareTo(rhs.ApplicationEmailAddress);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.RefNo:
            		return this.RefNo.CompareTo(rhs.RefNo);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.Visible:
            		return this.Visible.CompareTo(rhs.Visible);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.DatePosted:
            		return this.DatePosted.CompareTo(rhs.DatePosted);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.ExpiryDate:
            		return this.ExpiryDate.CompareTo(rhs.ExpiryDate);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.Expired:
            		return this.Expired.Value.CompareTo(rhs.Expired.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobItemPrice:
            		return this.JobItemPrice.Value.CompareTo(rhs.JobItemPrice.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.Billed:
            		return this.Billed.CompareTo(rhs.Billed);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.LastModified:
            		return this.LastModified.CompareTo(rhs.LastModified);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.ShowSalaryDetails:
            		return this.ShowSalaryDetails.CompareTo(rhs.ShowSalaryDetails);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.SalaryText:
            		return this.SalaryText.CompareTo(rhs.SalaryText);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.AdvertiserId:
            		return this.AdvertiserId.Value.CompareTo(rhs.AdvertiserId.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.LastModifiedByAdvertiserUserId:
            		return this.LastModifiedByAdvertiserUserId.Value.CompareTo(rhs.LastModifiedByAdvertiserUserId.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.LastModifiedByAdminUserId:
            		return this.LastModifiedByAdminUserId.Value.CompareTo(rhs.LastModifiedByAdminUserId.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobItemTypeId:
            		return this.JobItemTypeId.Value.CompareTo(rhs.JobItemTypeId.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.ApplicationMethod:
            		return this.ApplicationMethod.Value.CompareTo(rhs.ApplicationMethod.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.ApplicationUrl:
            		return this.ApplicationUrl.CompareTo(rhs.ApplicationUrl);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.UploadMethod:
            		return this.UploadMethod.Value.CompareTo(rhs.UploadMethod.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.Tags:
            		return this.Tags.CompareTo(rhs.Tags);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobTemplateId:
            		return this.JobTemplateId.Value.CompareTo(rhs.JobTemplateId.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.SearchFieldExtension:
            		return this.SearchFieldExtension.CompareTo(rhs.SearchFieldExtension);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.AdvertiserJobTemplateLogoId:
            		return this.AdvertiserJobTemplateLogoId.Value.CompareTo(rhs.AdvertiserJobTemplateLogoId.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.CompanyName:
            		return this.CompanyName.CompareTo(rhs.CompanyName);
            		
            		                 
            	
            		                 
            	
            	
            	case JobsArchiveColumn.RequireLogonForExternalApplications:
            		return this.RequireLogonForExternalApplications.CompareTo(rhs.RequireLogonForExternalApplications);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.ShowLocationDetails:
            		return this.ShowLocationDetails.Value.CompareTo(rhs.ShowLocationDetails.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.PublicTransport:
            		return this.PublicTransport.CompareTo(rhs.PublicTransport);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.Address:
            		return this.Address.CompareTo(rhs.Address);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.ContactDetails:
            		return this.ContactDetails.CompareTo(rhs.ContactDetails);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobContactPhone:
            		return this.JobContactPhone.CompareTo(rhs.JobContactPhone);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobContactName:
            		return this.JobContactName.CompareTo(rhs.JobContactName);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.QualificationsRecognised:
            		return this.QualificationsRecognised.CompareTo(rhs.QualificationsRecognised);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.ResidentOnly:
            		return this.ResidentOnly.CompareTo(rhs.ResidentOnly);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.DocumentLink:
            		return this.DocumentLink.CompareTo(rhs.DocumentLink);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.BulletPoint1:
            		return this.BulletPoint1.CompareTo(rhs.BulletPoint1);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.BulletPoint2:
            		return this.BulletPoint2.CompareTo(rhs.BulletPoint2);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.BulletPoint3:
            		return this.BulletPoint3.CompareTo(rhs.BulletPoint3);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.HotJob:
            		return this.HotJob.CompareTo(rhs.HotJob);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobFriendlyName:
            		return this.JobFriendlyName.CompareTo(rhs.JobFriendlyName);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.SearchField:
            		return this.SearchField.CompareTo(rhs.SearchField);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.ShowSalaryRange:
            		return this.ShowSalaryRange.CompareTo(rhs.ShowSalaryRange);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.SalaryLowerBand:
            		return this.SalaryLowerBand.CompareTo(rhs.SalaryLowerBand);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.SalaryUpperBand:
            		return this.SalaryUpperBand.CompareTo(rhs.SalaryUpperBand);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.CurrencyId:
            		return this.CurrencyId.CompareTo(rhs.CurrencyId);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.SalaryTypeId:
            		return this.SalaryTypeId.CompareTo(rhs.SalaryTypeId);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.EnteredByAdvertiserUserId:
            		return this.EnteredByAdvertiserUserId.Value.CompareTo(rhs.EnteredByAdvertiserUserId.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobLatitude:
            		return this.JobLatitude.Value.CompareTo(rhs.JobLatitude.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobLongitude:
            		return this.JobLongitude.Value.CompareTo(rhs.JobLongitude.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.AddressStatus:
            		return this.AddressStatus.Value.CompareTo(rhs.AddressStatus.Value);
            		
            		                 
            	
            	
            	case JobsArchiveColumn.JobExternalId:
            		return this.JobExternalId.CompareTo(rhs.JobExternalId);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<JobsArchiveKey> Members
		
		// member variable for the EntityId property
		private JobsArchiveKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual JobsArchiveKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new JobsArchiveKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("JobsArchive")
					.Append("|").Append( this.JobId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{58}{57}- JobId: {0}{57}- SiteId: {1}{57}- WorkTypeId: {2}{57}- JobName: {3}{57}- Description: {4}{57}- FullDescription: {5}{57}- WebServiceProcessed: {6}{57}- ApplicationEmailAddress: {7}{57}- RefNo: {8}{57}- Visible: {9}{57}- DatePosted: {10}{57}- ExpiryDate: {11}{57}- Expired: {12}{57}- JobItemPrice: {13}{57}- Billed: {14}{57}- LastModified: {15}{57}- ShowSalaryDetails: {16}{57}- SalaryText: {17}{57}- AdvertiserId: {18}{57}- LastModifiedByAdvertiserUserId: {19}{57}- LastModifiedByAdminUserId: {20}{57}- JobItemTypeId: {21}{57}- ApplicationMethod: {22}{57}- ApplicationUrl: {23}{57}- UploadMethod: {24}{57}- Tags: {25}{57}- JobTemplateId: {26}{57}- SearchFieldExtension: {27}{57}- AdvertiserJobTemplateLogoId: {28}{57}- CompanyName: {29}{57}- HashValue: {30}{57}- RequireLogonForExternalApplications: {31}{57}- ShowLocationDetails: {32}{57}- PublicTransport: {33}{57}- Address: {34}{57}- ContactDetails: {35}{57}- JobContactPhone: {36}{57}- JobContactName: {37}{57}- QualificationsRecognised: {38}{57}- ResidentOnly: {39}{57}- DocumentLink: {40}{57}- BulletPoint1: {41}{57}- BulletPoint2: {42}{57}- BulletPoint3: {43}{57}- HotJob: {44}{57}- JobFriendlyName: {45}{57}- SearchField: {46}{57}- ShowSalaryRange: {47}{57}- SalaryLowerBand: {48}{57}- SalaryUpperBand: {49}{57}- CurrencyId: {50}{57}- SalaryTypeId: {51}{57}- EnteredByAdvertiserUserId: {52}{57}- JobLatitude: {53}{57}- JobLongitude: {54}{57}- AddressStatus: {55}{57}- JobExternalId: {56}{57}{59}", 
				this.JobId,
				this.SiteId,
				this.WorkTypeId,
				this.JobName,
				this.Description,
				this.FullDescription,
				this.WebServiceProcessed,
				this.ApplicationEmailAddress,
				(this.RefNo == null) ? string.Empty : this.RefNo.ToString(),
				this.Visible,
				this.DatePosted,
				this.ExpiryDate,
				(this.Expired == null) ? string.Empty : this.Expired.ToString(),
				(this.JobItemPrice == null) ? string.Empty : this.JobItemPrice.ToString(),
				this.Billed,
				this.LastModified,
				this.ShowSalaryDetails,
				(this.SalaryText == null) ? string.Empty : this.SalaryText.ToString(),
				(this.AdvertiserId == null) ? string.Empty : this.AdvertiserId.ToString(),
				(this.LastModifiedByAdvertiserUserId == null) ? string.Empty : this.LastModifiedByAdvertiserUserId.ToString(),
				(this.LastModifiedByAdminUserId == null) ? string.Empty : this.LastModifiedByAdminUserId.ToString(),
				(this.JobItemTypeId == null) ? string.Empty : this.JobItemTypeId.ToString(),
				(this.ApplicationMethod == null) ? string.Empty : this.ApplicationMethod.ToString(),
				(this.ApplicationUrl == null) ? string.Empty : this.ApplicationUrl.ToString(),
				(this.UploadMethod == null) ? string.Empty : this.UploadMethod.ToString(),
				(this.Tags == null) ? string.Empty : this.Tags.ToString(),
				(this.JobTemplateId == null) ? string.Empty : this.JobTemplateId.ToString(),
				this.SearchFieldExtension,
				(this.AdvertiserJobTemplateLogoId == null) ? string.Empty : this.AdvertiserJobTemplateLogoId.ToString(),
				(this.CompanyName == null) ? string.Empty : this.CompanyName.ToString(),
				(this.HashValue == null) ? string.Empty : this.HashValue.ToString(),
				this.RequireLogonForExternalApplications,
				(this.ShowLocationDetails == null) ? string.Empty : this.ShowLocationDetails.ToString(),
				(this.PublicTransport == null) ? string.Empty : this.PublicTransport.ToString(),
				(this.Address == null) ? string.Empty : this.Address.ToString(),
				this.ContactDetails,
				(this.JobContactPhone == null) ? string.Empty : this.JobContactPhone.ToString(),
				(this.JobContactName == null) ? string.Empty : this.JobContactName.ToString(),
				this.QualificationsRecognised,
				this.ResidentOnly,
				(this.DocumentLink == null) ? string.Empty : this.DocumentLink.ToString(),
				(this.BulletPoint1 == null) ? string.Empty : this.BulletPoint1.ToString(),
				(this.BulletPoint2 == null) ? string.Empty : this.BulletPoint2.ToString(),
				(this.BulletPoint3 == null) ? string.Empty : this.BulletPoint3.ToString(),
				this.HotJob,
				(this.JobFriendlyName == null) ? string.Empty : this.JobFriendlyName.ToString(),
				(this.SearchField == null) ? string.Empty : this.SearchField.ToString(),
				this.ShowSalaryRange,
				this.SalaryLowerBand,
				this.SalaryUpperBand,
				this.CurrencyId,
				this.SalaryTypeId,
				(this.EnteredByAdvertiserUserId == null) ? string.Empty : this.EnteredByAdvertiserUserId.ToString(),
				(this.JobLatitude == null) ? string.Empty : this.JobLatitude.ToString(),
				(this.JobLongitude == null) ? string.Empty : this.JobLongitude.ToString(),
				(this.AddressStatus == null) ? string.Empty : this.AddressStatus.ToString(),
				(this.JobExternalId == null) ? string.Empty : this.JobExternalId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'JobsArchive' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class JobsArchiveEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// JobID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "JobsArchive"</remarks>
		public System.Int32 JobId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Int32 OriginalJobId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// SiteID : 
		/// </summary>
		public System.Int32		  SiteId = (int)0;
		
		/// <summary>
		/// WorkTypeID : 
		/// </summary>
		public System.Int32		  WorkTypeId = (int)0;
		
		/// <summary>
		/// JobName : 
		/// </summary>
		public System.String		  JobName = string.Empty;
		
		/// <summary>
		/// Description : 
		/// </summary>
		public System.String		  Description = string.Empty;
		
		/// <summary>
		/// FullDescription : 
		/// </summary>
		public System.String		  FullDescription = string.Empty;
		
		/// <summary>
		/// WebServiceProcessed : 
		/// </summary>
		public System.Boolean		  WebServiceProcessed = false;
		
		/// <summary>
		/// ApplicationEmailAddress : 
		/// </summary>
		public System.String		  ApplicationEmailAddress = string.Empty;
		
		/// <summary>
		/// RefNo : 
		/// </summary>
		public System.String		  RefNo = null;
		
		/// <summary>
		/// Visible : 
		/// </summary>
		public System.Boolean		  Visible = false;
		
		/// <summary>
		/// DatePosted : 
		/// </summary>
		public System.DateTime		  DatePosted = DateTime.MinValue;
		
		/// <summary>
		/// ExpiryDate : 
		/// </summary>
		public System.DateTime		  ExpiryDate = DateTime.MinValue;
		
		/// <summary>
		/// Expired : 
		/// </summary>
		public System.Int32?		  Expired = null;
		
		/// <summary>
		/// JobItemPrice : 
		/// </summary>
		public System.Decimal?		  JobItemPrice = null;
		
		/// <summary>
		/// Billed : 
		/// </summary>
		public System.Boolean		  Billed = false;
		
		/// <summary>
		/// LastModified : 
		/// </summary>
		public System.DateTime		  LastModified = DateTime.MinValue;
		
		/// <summary>
		/// ShowSalaryDetails : 
		/// </summary>
		public System.Boolean		  ShowSalaryDetails = false;
		
		/// <summary>
		/// SalaryText : 
		/// </summary>
		public System.String		  SalaryText = null;
		
		/// <summary>
		/// AdvertiserID : 
		/// </summary>
		public System.Int32?		  AdvertiserId = null;
		
		/// <summary>
		/// LastModifiedByAdvertiserUserId : 
		/// </summary>
		public System.Int32?		  LastModifiedByAdvertiserUserId = null;
		
		/// <summary>
		/// LastModifiedByAdminUserId : 
		/// </summary>
		public System.Int32?		  LastModifiedByAdminUserId = null;
		
		/// <summary>
		/// JobItemTypeID : 
		/// </summary>
		public System.Int32?		  JobItemTypeId = null;
		
		/// <summary>
		/// ApplicationMethod : 
		/// </summary>
		public System.Int32?		  ApplicationMethod = null;
		
		/// <summary>
		/// ApplicationURL : 
		/// </summary>
		public System.String		  ApplicationUrl = null;
		
		/// <summary>
		/// UploadMethod : 
		/// </summary>
		public System.Int32?		  UploadMethod = null;
		
		/// <summary>
		/// Tags : 
		/// </summary>
		public System.String		  Tags = null;
		
		/// <summary>
		/// JobTemplateID : 
		/// </summary>
		public System.Int32?		  JobTemplateId = null;
		
		/// <summary>
		/// SearchFieldExtension : 
		/// </summary>
		public System.String		  SearchFieldExtension = string.Empty;
		
		/// <summary>
		/// AdvertiserJobTemplateLogoID : 
		/// </summary>
		public System.Int32?		  AdvertiserJobTemplateLogoId = null;
		
		/// <summary>
		/// CompanyName : 
		/// </summary>
		public System.String		  CompanyName = null;
		
		/// <summary>
		/// HashValue : 
		/// </summary>
		public System.Byte[]		  HashValue = null;
		
		/// <summary>
		/// RequireLogonForExternalApplications : 
		/// </summary>
		public System.Boolean		  RequireLogonForExternalApplications = false;
		
		/// <summary>
		/// ShowLocationDetails : 
		/// </summary>
		public System.Boolean?		  ShowLocationDetails = null;
		
		/// <summary>
		/// PublicTransport : 
		/// </summary>
		public System.String		  PublicTransport = null;
		
		/// <summary>
		/// Address : 
		/// </summary>
		public System.String		  Address = null;
		
		/// <summary>
		/// ContactDetails : 
		/// </summary>
		public System.String		  ContactDetails = string.Empty;
		
		/// <summary>
		/// JobContactPhone : 
		/// </summary>
		public System.String		  JobContactPhone = null;
		
		/// <summary>
		/// JobContactName : 
		/// </summary>
		public System.String		  JobContactName = null;
		
		/// <summary>
		/// QualificationsRecognised : 
		/// </summary>
		public System.Boolean		  QualificationsRecognised = false;
		
		/// <summary>
		/// ResidentOnly : 
		/// </summary>
		public System.Boolean		  ResidentOnly = false;
		
		/// <summary>
		/// DocumentLink : 
		/// </summary>
		public System.String		  DocumentLink = null;
		
		/// <summary>
		/// BulletPoint1 : 
		/// </summary>
		public System.String		  BulletPoint1 = null;
		
		/// <summary>
		/// BulletPoint2 : 
		/// </summary>
		public System.String		  BulletPoint2 = null;
		
		/// <summary>
		/// BulletPoint3 : 
		/// </summary>
		public System.String		  BulletPoint3 = null;
		
		/// <summary>
		/// HotJob : 
		/// </summary>
		public System.Boolean		  HotJob = false;
		
		/// <summary>
		/// JobFriendlyName : 
		/// </summary>
		public System.String		  JobFriendlyName = null;
		
		/// <summary>
		/// SearchField : 
		/// </summary>
		public System.String		  SearchField = null;
		
		/// <summary>
		/// ShowSalaryRange : 
		/// </summary>
		public System.Boolean		  ShowSalaryRange = false;
		
		/// <summary>
		/// SalaryLowerBand : 
		/// </summary>
		public System.Decimal		  SalaryLowerBand = 0.0m;
		
		/// <summary>
		/// SalaryUpperBand : 
		/// </summary>
		public System.Decimal		  SalaryUpperBand = 0.0m;
		
		/// <summary>
		/// CurrencyID : 
		/// </summary>
		public System.Int32		  CurrencyId = (int)0;
		
		/// <summary>
		/// SalaryTypeID : 
		/// </summary>
		public System.Int32		  SalaryTypeId = (int)0;
		
		/// <summary>
		/// EnteredByAdvertiserUserID : 
		/// </summary>
		public System.Int32?		  EnteredByAdvertiserUserId = null;
		
		/// <summary>
		/// JobLatitude : 
		/// </summary>
		public System.Double?		  JobLatitude = null;
		
		/// <summary>
		/// JobLongitude : 
		/// </summary>
		public System.Double?		  JobLongitude = null;
		
		/// <summary>
		/// AddressStatus : 
		/// </summary>
		public System.Int32?		  AddressStatus = null;
		
		/// <summary>
		/// JobExternalId : 
		/// </summary>
		public System.String		  JobExternalId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private Advertisers _advertiserIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Advertisers"/>.
		/// </summary>
		/// <value>The source Advertisers for AdvertiserId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual Advertisers AdvertiserIdSource
      	{
            get { return this._advertiserIdSource; }
            set { this._advertiserIdSource = value; }
      	}
		private Currencies _currencyIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Currencies"/>.
		/// </summary>
		/// <value>The source Currencies for CurrencyId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual Currencies CurrencyIdSource
      	{
            get { return this._currencyIdSource; }
            set { this._currencyIdSource = value; }
      	}
		private JobTemplates _jobTemplateIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="JobTemplates"/>.
		/// </summary>
		/// <value>The source JobTemplates for JobTemplateId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual JobTemplates JobTemplateIdSource
      	{
            get { return this._jobTemplateIdSource; }
            set { this._jobTemplateIdSource = value; }
      	}
		private AdvertiserUsers _lastModifiedByAdvertiserUserIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdvertiserUsers"/>.
		/// </summary>
		/// <value>The source AdvertiserUsers for LastModifiedByAdvertiserUserId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdvertiserUsers LastModifiedByAdvertiserUserIdSource
      	{
            get { return this._lastModifiedByAdvertiserUserIdSource; }
            set { this._lastModifiedByAdvertiserUserIdSource = value; }
      	}
		private AdminUsers _lastModifiedByAdminUserIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdminUsers"/>.
		/// </summary>
		/// <value>The source AdminUsers for LastModifiedByAdminUserId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdminUsers LastModifiedByAdminUserIdSource
      	{
            get { return this._lastModifiedByAdminUserIdSource; }
            set { this._lastModifiedByAdminUserIdSource = value; }
      	}
		private SalaryType _salaryTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SalaryType"/>.
		/// </summary>
		/// <value>The source SalaryType for SalaryTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SalaryType SalaryTypeIdSource
      	{
            get { return this._salaryTypeIdSource; }
            set { this._salaryTypeIdSource = value; }
      	}
		private Sites _siteIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Sites"/>.
		/// </summary>
		/// <value>The source Sites for SiteId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual Sites SiteIdSource
      	{
            get { return this._siteIdSource; }
            set { this._siteIdSource = value; }
      	}
		private WorkType _workTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="WorkType"/>.
		/// </summary>
		/// <value>The source WorkType for WorkTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual WorkType WorkTypeIdSource
      	{
            get { return this._workTypeIdSource; }
            set { this._workTypeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region InvoiceItemCollection
		
		private TList<InvoiceItem> _invoiceItemJobArchiveId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _invoiceItemJobArchiveId
		/// </summary>
		
		public TList<InvoiceItem> InvoiceItemCollection
		{
			get
			{
				if (_invoiceItemJobArchiveId == null)
				{
				_invoiceItemJobArchiveId = new TList<InvoiceItem>();
				}
	
				return _invoiceItemJobArchiveId;
			}
			set { _invoiceItemJobArchiveId = value; }
		}
		
		#endregion

		#region JobApplicationCollection
		
		private TList<JobApplication> _jobApplicationJobArchiveId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobApplicationJobArchiveId
		/// </summary>
		
		public TList<JobApplication> JobApplicationCollection
		{
			get
			{
				if (_jobApplicationJobArchiveId == null)
				{
				_jobApplicationJobArchiveId = new TList<JobApplication>();
				}
	
				return _jobApplicationJobArchiveId;
			}
			set { _jobApplicationJobArchiveId = value; }
		}
		
		#endregion

		#region JobsSavedCollection
		
		private TList<JobsSaved> _jobsSavedJobArchiveId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobsSavedJobArchiveId
		/// </summary>
		
		public TList<JobsSaved> JobsSavedCollection
		{
			get
			{
				if (_jobsSavedJobArchiveId == null)
				{
				_jobsSavedJobArchiveId = new TList<JobsSaved>();
				}
	
				return _jobsSavedJobArchiveId;
			}
			set { _jobsSavedJobArchiveId = value; }
		}
		
		#endregion

		#region JobViewsCollection
		
		private TList<JobViews> _jobViewsJobArchiveId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobViewsJobArchiveId
		/// </summary>
		
		public TList<JobViews> JobViewsCollection
		{
			get
			{
				if (_jobViewsJobArchiveId == null)
				{
				_jobViewsJobArchiveId = new TList<JobViews>();
				}
	
				return _jobViewsJobArchiveId;
			}
			set { _jobViewsJobArchiveId = value; }
		}
		
		#endregion

		#region JobRolesCollection
		
		private TList<JobRoles> _jobRolesJobArchiveId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobRolesJobArchiveId
		/// </summary>
		
		public TList<JobRoles> JobRolesCollection
		{
			get
			{
				if (_jobRolesJobArchiveId == null)
				{
				_jobRolesJobArchiveId = new TList<JobRoles>();
				}
	
				return _jobRolesJobArchiveId;
			}
			set { _jobRolesJobArchiveId = value; }
		}
		
		#endregion

		#region JobAreaCollection
		
		private TList<JobArea> _jobAreaJobArchiveId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobAreaJobArchiveId
		/// </summary>
		
		public TList<JobArea> JobAreaCollection
		{
			get
			{
				if (_jobAreaJobArchiveId == null)
				{
				_jobAreaJobArchiveId = new TList<JobArea>();
				}
	
				return _jobAreaJobArchiveId;
			}
			set { _jobAreaJobArchiveId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			JobsArchiveEntityData _tmp = new JobsArchiveEntityData();
						
			_tmp.JobId = this.JobId;
			_tmp.OriginalJobId = this.OriginalJobId;
			
			_tmp.SiteId = this.SiteId;
			_tmp.WorkTypeId = this.WorkTypeId;
			_tmp.JobName = this.JobName;
			_tmp.Description = this.Description;
			_tmp.FullDescription = this.FullDescription;
			_tmp.WebServiceProcessed = this.WebServiceProcessed;
			_tmp.ApplicationEmailAddress = this.ApplicationEmailAddress;
			_tmp.RefNo = this.RefNo;
			_tmp.Visible = this.Visible;
			_tmp.DatePosted = this.DatePosted;
			_tmp.ExpiryDate = this.ExpiryDate;
			_tmp.Expired = this.Expired;
			_tmp.JobItemPrice = this.JobItemPrice;
			_tmp.Billed = this.Billed;
			_tmp.LastModified = this.LastModified;
			_tmp.ShowSalaryDetails = this.ShowSalaryDetails;
			_tmp.SalaryText = this.SalaryText;
			_tmp.AdvertiserId = this.AdvertiserId;
			_tmp.LastModifiedByAdvertiserUserId = this.LastModifiedByAdvertiserUserId;
			_tmp.LastModifiedByAdminUserId = this.LastModifiedByAdminUserId;
			_tmp.JobItemTypeId = this.JobItemTypeId;
			_tmp.ApplicationMethod = this.ApplicationMethod;
			_tmp.ApplicationUrl = this.ApplicationUrl;
			_tmp.UploadMethod = this.UploadMethod;
			_tmp.Tags = this.Tags;
			_tmp.JobTemplateId = this.JobTemplateId;
			_tmp.SearchFieldExtension = this.SearchFieldExtension;
			_tmp.AdvertiserJobTemplateLogoId = this.AdvertiserJobTemplateLogoId;
			_tmp.CompanyName = this.CompanyName;
			_tmp.HashValue = this.HashValue;
			_tmp.RequireLogonForExternalApplications = this.RequireLogonForExternalApplications;
			_tmp.ShowLocationDetails = this.ShowLocationDetails;
			_tmp.PublicTransport = this.PublicTransport;
			_tmp.Address = this.Address;
			_tmp.ContactDetails = this.ContactDetails;
			_tmp.JobContactPhone = this.JobContactPhone;
			_tmp.JobContactName = this.JobContactName;
			_tmp.QualificationsRecognised = this.QualificationsRecognised;
			_tmp.ResidentOnly = this.ResidentOnly;
			_tmp.DocumentLink = this.DocumentLink;
			_tmp.BulletPoint1 = this.BulletPoint1;
			_tmp.BulletPoint2 = this.BulletPoint2;
			_tmp.BulletPoint3 = this.BulletPoint3;
			_tmp.HotJob = this.HotJob;
			_tmp.JobFriendlyName = this.JobFriendlyName;
			_tmp.SearchField = this.SearchField;
			_tmp.ShowSalaryRange = this.ShowSalaryRange;
			_tmp.SalaryLowerBand = this.SalaryLowerBand;
			_tmp.SalaryUpperBand = this.SalaryUpperBand;
			_tmp.CurrencyId = this.CurrencyId;
			_tmp.SalaryTypeId = this.SalaryTypeId;
			_tmp.EnteredByAdvertiserUserId = this.EnteredByAdvertiserUserId;
			_tmp.JobLatitude = this.JobLatitude;
			_tmp.JobLongitude = this.JobLongitude;
			_tmp.AddressStatus = this.AddressStatus;
			_tmp.JobExternalId = this.JobExternalId;
			
			#region Source Parent Composite Entities
			if (this.AdvertiserIdSource != null)
				_tmp.AdvertiserIdSource = MakeCopyOf(this.AdvertiserIdSource) as Advertisers;
			if (this.CurrencyIdSource != null)
				_tmp.CurrencyIdSource = MakeCopyOf(this.CurrencyIdSource) as Currencies;
			if (this.JobTemplateIdSource != null)
				_tmp.JobTemplateIdSource = MakeCopyOf(this.JobTemplateIdSource) as JobTemplates;
			if (this.LastModifiedByAdvertiserUserIdSource != null)
				_tmp.LastModifiedByAdvertiserUserIdSource = MakeCopyOf(this.LastModifiedByAdvertiserUserIdSource) as AdvertiserUsers;
			if (this.LastModifiedByAdminUserIdSource != null)
				_tmp.LastModifiedByAdminUserIdSource = MakeCopyOf(this.LastModifiedByAdminUserIdSource) as AdminUsers;
			if (this.SalaryTypeIdSource != null)
				_tmp.SalaryTypeIdSource = MakeCopyOf(this.SalaryTypeIdSource) as SalaryType;
			if (this.SiteIdSource != null)
				_tmp.SiteIdSource = MakeCopyOf(this.SiteIdSource) as Sites;
			if (this.WorkTypeIdSource != null)
				_tmp.WorkTypeIdSource = MakeCopyOf(this.WorkTypeIdSource) as WorkType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._invoiceItemJobArchiveId != null)
				_tmp.InvoiceItemCollection = (TList<InvoiceItem>) MakeCopyOf(this.InvoiceItemCollection); 
			if (this._jobApplicationJobArchiveId != null)
				_tmp.JobApplicationCollection = (TList<JobApplication>) MakeCopyOf(this.JobApplicationCollection); 
			if (this._jobsSavedJobArchiveId != null)
				_tmp.JobsSavedCollection = (TList<JobsSaved>) MakeCopyOf(this.JobsSavedCollection); 
			if (this._jobViewsJobArchiveId != null)
				_tmp.JobViewsCollection = (TList<JobViews>) MakeCopyOf(this.JobViewsCollection); 
			if (this._jobRolesJobArchiveId != null)
				_tmp.JobRolesCollection = (TList<JobRoles>) MakeCopyOf(this.JobRolesCollection); 
			if (this._jobAreaJobArchiveId != null)
				_tmp.JobAreaCollection = (TList<JobArea>) MakeCopyOf(this.JobAreaCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			JobsArchiveEntityData _tmp = new JobsArchiveEntityData();
						
			_tmp.JobId = this.JobId;
			_tmp.OriginalJobId = this.OriginalJobId;
			
			_tmp.SiteId = this.SiteId;
			_tmp.WorkTypeId = this.WorkTypeId;
			_tmp.JobName = this.JobName;
			_tmp.Description = this.Description;
			_tmp.FullDescription = this.FullDescription;
			_tmp.WebServiceProcessed = this.WebServiceProcessed;
			_tmp.ApplicationEmailAddress = this.ApplicationEmailAddress;
			_tmp.RefNo = this.RefNo;
			_tmp.Visible = this.Visible;
			_tmp.DatePosted = this.DatePosted;
			_tmp.ExpiryDate = this.ExpiryDate;
			_tmp.Expired = this.Expired;
			_tmp.JobItemPrice = this.JobItemPrice;
			_tmp.Billed = this.Billed;
			_tmp.LastModified = this.LastModified;
			_tmp.ShowSalaryDetails = this.ShowSalaryDetails;
			_tmp.SalaryText = this.SalaryText;
			_tmp.AdvertiserId = this.AdvertiserId;
			_tmp.LastModifiedByAdvertiserUserId = this.LastModifiedByAdvertiserUserId;
			_tmp.LastModifiedByAdminUserId = this.LastModifiedByAdminUserId;
			_tmp.JobItemTypeId = this.JobItemTypeId;
			_tmp.ApplicationMethod = this.ApplicationMethod;
			_tmp.ApplicationUrl = this.ApplicationUrl;
			_tmp.UploadMethod = this.UploadMethod;
			_tmp.Tags = this.Tags;
			_tmp.JobTemplateId = this.JobTemplateId;
			_tmp.SearchFieldExtension = this.SearchFieldExtension;
			_tmp.AdvertiserJobTemplateLogoId = this.AdvertiserJobTemplateLogoId;
			_tmp.CompanyName = this.CompanyName;
			_tmp.HashValue = this.HashValue;
			_tmp.RequireLogonForExternalApplications = this.RequireLogonForExternalApplications;
			_tmp.ShowLocationDetails = this.ShowLocationDetails;
			_tmp.PublicTransport = this.PublicTransport;
			_tmp.Address = this.Address;
			_tmp.ContactDetails = this.ContactDetails;
			_tmp.JobContactPhone = this.JobContactPhone;
			_tmp.JobContactName = this.JobContactName;
			_tmp.QualificationsRecognised = this.QualificationsRecognised;
			_tmp.ResidentOnly = this.ResidentOnly;
			_tmp.DocumentLink = this.DocumentLink;
			_tmp.BulletPoint1 = this.BulletPoint1;
			_tmp.BulletPoint2 = this.BulletPoint2;
			_tmp.BulletPoint3 = this.BulletPoint3;
			_tmp.HotJob = this.HotJob;
			_tmp.JobFriendlyName = this.JobFriendlyName;
			_tmp.SearchField = this.SearchField;
			_tmp.ShowSalaryRange = this.ShowSalaryRange;
			_tmp.SalaryLowerBand = this.SalaryLowerBand;
			_tmp.SalaryUpperBand = this.SalaryUpperBand;
			_tmp.CurrencyId = this.CurrencyId;
			_tmp.SalaryTypeId = this.SalaryTypeId;
			_tmp.EnteredByAdvertiserUserId = this.EnteredByAdvertiserUserId;
			_tmp.JobLatitude = this.JobLatitude;
			_tmp.JobLongitude = this.JobLongitude;
			_tmp.AddressStatus = this.AddressStatus;
			_tmp.JobExternalId = this.JobExternalId;
			
			#region Source Parent Composite Entities
			if (this.AdvertiserIdSource != null && existingCopies.Contains(this.AdvertiserIdSource))
				_tmp.AdvertiserIdSource = existingCopies[this.AdvertiserIdSource] as Advertisers;
			else
				_tmp.AdvertiserIdSource = MakeCopyOf(this.AdvertiserIdSource, existingCopies) as Advertisers;
			if (this.CurrencyIdSource != null && existingCopies.Contains(this.CurrencyIdSource))
				_tmp.CurrencyIdSource = existingCopies[this.CurrencyIdSource] as Currencies;
			else
				_tmp.CurrencyIdSource = MakeCopyOf(this.CurrencyIdSource, existingCopies) as Currencies;
			if (this.JobTemplateIdSource != null && existingCopies.Contains(this.JobTemplateIdSource))
				_tmp.JobTemplateIdSource = existingCopies[this.JobTemplateIdSource] as JobTemplates;
			else
				_tmp.JobTemplateIdSource = MakeCopyOf(this.JobTemplateIdSource, existingCopies) as JobTemplates;
			if (this.LastModifiedByAdvertiserUserIdSource != null && existingCopies.Contains(this.LastModifiedByAdvertiserUserIdSource))
				_tmp.LastModifiedByAdvertiserUserIdSource = existingCopies[this.LastModifiedByAdvertiserUserIdSource] as AdvertiserUsers;
			else
				_tmp.LastModifiedByAdvertiserUserIdSource = MakeCopyOf(this.LastModifiedByAdvertiserUserIdSource, existingCopies) as AdvertiserUsers;
			if (this.LastModifiedByAdminUserIdSource != null && existingCopies.Contains(this.LastModifiedByAdminUserIdSource))
				_tmp.LastModifiedByAdminUserIdSource = existingCopies[this.LastModifiedByAdminUserIdSource] as AdminUsers;
			else
				_tmp.LastModifiedByAdminUserIdSource = MakeCopyOf(this.LastModifiedByAdminUserIdSource, existingCopies) as AdminUsers;
			if (this.SalaryTypeIdSource != null && existingCopies.Contains(this.SalaryTypeIdSource))
				_tmp.SalaryTypeIdSource = existingCopies[this.SalaryTypeIdSource] as SalaryType;
			else
				_tmp.SalaryTypeIdSource = MakeCopyOf(this.SalaryTypeIdSource, existingCopies) as SalaryType;
			if (this.SiteIdSource != null && existingCopies.Contains(this.SiteIdSource))
				_tmp.SiteIdSource = existingCopies[this.SiteIdSource] as Sites;
			else
				_tmp.SiteIdSource = MakeCopyOf(this.SiteIdSource, existingCopies) as Sites;
			if (this.WorkTypeIdSource != null && existingCopies.Contains(this.WorkTypeIdSource))
				_tmp.WorkTypeIdSource = existingCopies[this.WorkTypeIdSource] as WorkType;
			else
				_tmp.WorkTypeIdSource = MakeCopyOf(this.WorkTypeIdSource, existingCopies) as WorkType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.InvoiceItemCollection = (TList<InvoiceItem>) MakeCopyOf(this.InvoiceItemCollection, existingCopies); 
			_tmp.JobApplicationCollection = (TList<JobApplication>) MakeCopyOf(this.JobApplicationCollection, existingCopies); 
			_tmp.JobsSavedCollection = (TList<JobsSaved>) MakeCopyOf(this.JobsSavedCollection, existingCopies); 
			_tmp.JobViewsCollection = (TList<JobViews>) MakeCopyOf(this.JobViewsCollection, existingCopies); 
			_tmp.JobRolesCollection = (TList<JobRoles>) MakeCopyOf(this.JobRolesCollection, existingCopies); 
			_tmp.JobAreaCollection = (TList<JobArea>) MakeCopyOf(this.JobAreaCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="JobsArchiveColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(JobsArchiveColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="JobsArchiveColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(JobsArchiveColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="JobsArchiveColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(JobsArchiveColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				JobsArchiveEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new JobsArchiveEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="JobsArchiveColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(JobsArchiveColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				JobsArchiveEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new JobsArchiveEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region JobsArchiveEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="JobsArchive"/> object.
	/// </remarks>
	public class JobsArchiveEventArgs : System.EventArgs
	{
		private JobsArchiveColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the JobsArchiveEventArgs class.
		///</summary>
		public JobsArchiveEventArgs(JobsArchiveColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the JobsArchiveEventArgs class.
		///</summary>
		public JobsArchiveEventArgs(JobsArchiveColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The JobsArchiveColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="JobsArchiveColumn" />
		public JobsArchiveColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all JobsArchive related events.
	///</summary>
	public delegate void JobsArchiveEventHandler(object sender, JobsArchiveEventArgs e);
	
	#region JobsArchiveComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class JobsArchiveComparer : System.Collections.Generic.IComparer<JobsArchive>
	{
		JobsArchiveColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:JobsArchiveComparer"/> class.
        /// </summary>
		public JobsArchiveComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:JobsArchiveComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public JobsArchiveComparer(JobsArchiveColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="JobsArchive"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="JobsArchive"/> to compare.</param>
        /// <param name="b">The second <c>JobsArchive</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(JobsArchive a, JobsArchive b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(JobsArchive entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(JobsArchive a, JobsArchive b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public JobsArchiveColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region JobsArchiveKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="JobsArchive"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class JobsArchiveKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the JobsArchiveKey class.
		/// </summary>
		public JobsArchiveKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the JobsArchiveKey class.
		/// </summary>
		public JobsArchiveKey(JobsArchiveBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.JobId = entity.JobId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the JobsArchiveKey class.
		/// </summary>
		public JobsArchiveKey(System.Int32 _jobId)
		{
			#region Init Properties

			this.JobId = _jobId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private JobsArchiveBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public JobsArchiveBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the JobId property
		private System.Int32 _jobId;
		
		/// <summary>
		/// Gets or sets the JobId property.
		/// </summary>
		public System.Int32 JobId
		{
			get { return _jobId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.JobId = value;
				
				_jobId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				JobId = ( values["JobId"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["JobId"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("JobId", JobId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("JobId: {0}{1}",
								JobId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region JobsArchiveColumn Enum
	
	/// <summary>
	/// Enumerate the JobsArchive columns.
	/// </summary>
	[Serializable]
	public enum JobsArchiveColumn : int
	{
		/// <summary>
		/// JobId : 
		/// </summary>
		[EnumTextValue("JobID")]
		[ColumnEnum("JobID", typeof(System.Int32), System.Data.DbType.Int32, true, false, false)]
		JobId = 1,
		/// <summary>
		/// SiteId : 
		/// </summary>
		[EnumTextValue("SiteID")]
		[ColumnEnum("SiteID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		SiteId = 2,
		/// <summary>
		/// WorkTypeId : 
		/// </summary>
		[EnumTextValue("WorkTypeID")]
		[ColumnEnum("WorkTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		WorkTypeId = 3,
		/// <summary>
		/// JobName : 
		/// </summary>
		[EnumTextValue("JobName")]
		[ColumnEnum("JobName", typeof(System.String), System.Data.DbType.String, false, false, false, 510)]
		JobName = 4,
		/// <summary>
		/// Description : 
		/// </summary>
		[EnumTextValue("Description")]
		[ColumnEnum("Description", typeof(System.String), System.Data.DbType.String, false, false, false, 2000)]
		Description = 5,
		/// <summary>
		/// FullDescription : 
		/// </summary>
		[EnumTextValue("FullDescription")]
		[ColumnEnum("FullDescription", typeof(System.String), System.Data.DbType.String, false, false, false)]
		FullDescription = 6,
		/// <summary>
		/// WebServiceProcessed : 
		/// </summary>
		[EnumTextValue("WebServiceProcessed")]
		[ColumnEnum("WebServiceProcessed", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		WebServiceProcessed = 7,
		/// <summary>
		/// ApplicationEmailAddress : 
		/// </summary>
		[EnumTextValue("ApplicationEmailAddress")]
		[ColumnEnum("ApplicationEmailAddress", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 255)]
		ApplicationEmailAddress = 8,
		/// <summary>
		/// RefNo : 
		/// </summary>
		[EnumTextValue("RefNo")]
		[ColumnEnum("RefNo", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		RefNo = 9,
		/// <summary>
		/// Visible : 
		/// </summary>
		[EnumTextValue("Visible")]
		[ColumnEnum("Visible", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		Visible = 10,
		/// <summary>
		/// DatePosted : 
		/// </summary>
		[EnumTextValue("DatePosted")]
		[ColumnEnum("DatePosted", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		DatePosted = 11,
		/// <summary>
		/// ExpiryDate : 
		/// </summary>
		[EnumTextValue("ExpiryDate")]
		[ColumnEnum("ExpiryDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		ExpiryDate = 12,
		/// <summary>
		/// Expired : 
		/// </summary>
		[EnumTextValue("Expired")]
		[ColumnEnum("Expired", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Expired = 13,
		/// <summary>
		/// JobItemPrice : 
		/// </summary>
		[EnumTextValue("JobItemPrice")]
		[ColumnEnum("JobItemPrice", typeof(System.Decimal), System.Data.DbType.Currency, false, false, true)]
		JobItemPrice = 14,
		/// <summary>
		/// Billed : 
		/// </summary>
		[EnumTextValue("Billed")]
		[ColumnEnum("Billed", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		Billed = 15,
		/// <summary>
		/// LastModified : 
		/// </summary>
		[EnumTextValue("LastModified")]
		[ColumnEnum("LastModified", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		LastModified = 16,
		/// <summary>
		/// ShowSalaryDetails : 
		/// </summary>
		[EnumTextValue("ShowSalaryDetails")]
		[ColumnEnum("ShowSalaryDetails", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		ShowSalaryDetails = 17,
		/// <summary>
		/// SalaryText : 
		/// </summary>
		[EnumTextValue("SalaryText")]
		[ColumnEnum("SalaryText", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		SalaryText = 18,
		/// <summary>
		/// AdvertiserId : 
		/// </summary>
		[EnumTextValue("AdvertiserID")]
		[ColumnEnum("AdvertiserID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		AdvertiserId = 19,
		/// <summary>
		/// LastModifiedByAdvertiserUserId : 
		/// </summary>
		[EnumTextValue("LastModifiedByAdvertiserUserId")]
		[ColumnEnum("LastModifiedByAdvertiserUserId", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		LastModifiedByAdvertiserUserId = 20,
		/// <summary>
		/// LastModifiedByAdminUserId : 
		/// </summary>
		[EnumTextValue("LastModifiedByAdminUserId")]
		[ColumnEnum("LastModifiedByAdminUserId", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		LastModifiedByAdminUserId = 21,
		/// <summary>
		/// JobItemTypeId : 
		/// </summary>
		[EnumTextValue("JobItemTypeID")]
		[ColumnEnum("JobItemTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		JobItemTypeId = 22,
		/// <summary>
		/// ApplicationMethod : 
		/// </summary>
		[EnumTextValue("ApplicationMethod")]
		[ColumnEnum("ApplicationMethod", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ApplicationMethod = 23,
		/// <summary>
		/// ApplicationUrl : 
		/// </summary>
		[EnumTextValue("ApplicationURL")]
		[ColumnEnum("ApplicationURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 8000)]
		ApplicationUrl = 24,
		/// <summary>
		/// UploadMethod : 
		/// </summary>
		[EnumTextValue("UploadMethod")]
		[ColumnEnum("UploadMethod", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		UploadMethod = 25,
		/// <summary>
		/// Tags : 
		/// </summary>
		[EnumTextValue("Tags")]
		[ColumnEnum("Tags", typeof(System.String), System.Data.DbType.AnsiString, false, false, true)]
		Tags = 26,
		/// <summary>
		/// JobTemplateId : 
		/// </summary>
		[EnumTextValue("JobTemplateID")]
		[ColumnEnum("JobTemplateID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		JobTemplateId = 27,
		/// <summary>
		/// SearchFieldExtension : 
		/// </summary>
		[EnumTextValue("SearchFieldExtension")]
		[ColumnEnum("SearchFieldExtension", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 8)]
		SearchFieldExtension = 28,
		/// <summary>
		/// AdvertiserJobTemplateLogoId : 
		/// </summary>
		[EnumTextValue("AdvertiserJobTemplateLogoID")]
		[ColumnEnum("AdvertiserJobTemplateLogoID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		AdvertiserJobTemplateLogoId = 29,
		/// <summary>
		/// CompanyName : 
		/// </summary>
		[EnumTextValue("CompanyName")]
		[ColumnEnum("CompanyName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		CompanyName = 30,
		/// <summary>
		/// HashValue : 
		/// </summary>
		[EnumTextValue("HashValue")]
		[ColumnEnum("HashValue", typeof(System.Byte[]), System.Data.DbType.Binary, false, false, true)]
		HashValue = 31,
		/// <summary>
		/// RequireLogonForExternalApplications : 
		/// </summary>
		[EnumTextValue("RequireLogonForExternalApplications")]
		[ColumnEnum("RequireLogonForExternalApplications", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		RequireLogonForExternalApplications = 32,
		/// <summary>
		/// ShowLocationDetails : 
		/// </summary>
		[EnumTextValue("ShowLocationDetails")]
		[ColumnEnum("ShowLocationDetails", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		ShowLocationDetails = 33,
		/// <summary>
		/// PublicTransport : 
		/// </summary>
		[EnumTextValue("PublicTransport")]
		[ColumnEnum("PublicTransport", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		PublicTransport = 34,
		/// <summary>
		/// Address : 
		/// </summary>
		[EnumTextValue("Address")]
		[ColumnEnum("Address", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Address = 35,
		/// <summary>
		/// ContactDetails : 
		/// </summary>
		[EnumTextValue("ContactDetails")]
		[ColumnEnum("ContactDetails", typeof(System.String), System.Data.DbType.String, false, false, false, 510)]
		ContactDetails = 36,
		/// <summary>
		/// JobContactPhone : 
		/// </summary>
		[EnumTextValue("JobContactPhone")]
		[ColumnEnum("JobContactPhone", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		JobContactPhone = 37,
		/// <summary>
		/// JobContactName : 
		/// </summary>
		[EnumTextValue("JobContactName")]
		[ColumnEnum("JobContactName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		JobContactName = 38,
		/// <summary>
		/// QualificationsRecognised : 
		/// </summary>
		[EnumTextValue("QualificationsRecognised")]
		[ColumnEnum("QualificationsRecognised", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		QualificationsRecognised = 39,
		/// <summary>
		/// ResidentOnly : 
		/// </summary>
		[EnumTextValue("ResidentOnly")]
		[ColumnEnum("ResidentOnly", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		ResidentOnly = 40,
		/// <summary>
		/// DocumentLink : 
		/// </summary>
		[EnumTextValue("DocumentLink")]
		[ColumnEnum("DocumentLink", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		DocumentLink = 41,
		/// <summary>
		/// BulletPoint1 : 
		/// </summary>
		[EnumTextValue("BulletPoint1")]
		[ColumnEnum("BulletPoint1", typeof(System.String), System.Data.DbType.String, false, false, true, 160)]
		BulletPoint1 = 42,
		/// <summary>
		/// BulletPoint2 : 
		/// </summary>
		[EnumTextValue("BulletPoint2")]
		[ColumnEnum("BulletPoint2", typeof(System.String), System.Data.DbType.String, false, false, true, 160)]
		BulletPoint2 = 43,
		/// <summary>
		/// BulletPoint3 : 
		/// </summary>
		[EnumTextValue("BulletPoint3")]
		[ColumnEnum("BulletPoint3", typeof(System.String), System.Data.DbType.String, false, false, true, 160)]
		BulletPoint3 = 44,
		/// <summary>
		/// HotJob : 
		/// </summary>
		[EnumTextValue("HotJob")]
		[ColumnEnum("HotJob", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		HotJob = 45,
		/// <summary>
		/// JobFriendlyName : 
		/// </summary>
		[EnumTextValue("JobFriendlyName")]
		[ColumnEnum("JobFriendlyName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 512)]
		JobFriendlyName = 46,
		/// <summary>
		/// SearchField : 
		/// </summary>
		[EnumTextValue("SearchField")]
		[ColumnEnum("SearchField", typeof(System.String), System.Data.DbType.String, false, false, true)]
		SearchField = 47,
		/// <summary>
		/// ShowSalaryRange : 
		/// </summary>
		[EnumTextValue("ShowSalaryRange")]
		[ColumnEnum("ShowSalaryRange", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		ShowSalaryRange = 48,
		/// <summary>
		/// SalaryLowerBand : 
		/// </summary>
		[EnumTextValue("SalaryLowerBand")]
		[ColumnEnum("SalaryLowerBand", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		SalaryLowerBand = 49,
		/// <summary>
		/// SalaryUpperBand : 
		/// </summary>
		[EnumTextValue("SalaryUpperBand")]
		[ColumnEnum("SalaryUpperBand", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		SalaryUpperBand = 50,
		/// <summary>
		/// CurrencyId : 
		/// </summary>
		[EnumTextValue("CurrencyID")]
		[ColumnEnum("CurrencyID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		CurrencyId = 51,
		/// <summary>
		/// SalaryTypeId : 
		/// </summary>
		[EnumTextValue("SalaryTypeID")]
		[ColumnEnum("SalaryTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		SalaryTypeId = 52,
		/// <summary>
		/// EnteredByAdvertiserUserId : 
		/// </summary>
		[EnumTextValue("EnteredByAdvertiserUserID")]
		[ColumnEnum("EnteredByAdvertiserUserID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		EnteredByAdvertiserUserId = 53,
		/// <summary>
		/// JobLatitude : 
		/// </summary>
		[EnumTextValue("JobLatitude")]
		[ColumnEnum("JobLatitude", typeof(System.Double), System.Data.DbType.Double, false, false, true)]
		JobLatitude = 54,
		/// <summary>
		/// JobLongitude : 
		/// </summary>
		[EnumTextValue("JobLongitude")]
		[ColumnEnum("JobLongitude", typeof(System.Double), System.Data.DbType.Double, false, false, true)]
		JobLongitude = 55,
		/// <summary>
		/// AddressStatus : 
		/// </summary>
		[EnumTextValue("AddressStatus")]
		[ColumnEnum("AddressStatus", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		AddressStatus = 56,
		/// <summary>
		/// JobExternalId : 
		/// </summary>
		[EnumTextValue("JobExternalId")]
		[ColumnEnum("JobExternalId", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		JobExternalId = 57
	}//End enum

	#endregion JobsArchiveColumn Enum

} // end namespace


/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Members.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using JXTPortal.Entities.Validation;
#endregion

namespace JXTPortal.Entities
{
	///<summary>
	/// An object representation of the 'Members' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class MembersBase : EntityBase, IMembers, IEntityId<MembersKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private MembersEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private MembersEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private MembersEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<Members> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event MembersEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event MembersEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="MembersBase"/> instance.
		///</summary>
		public MembersBase()
		{
			this.entityData = new MembersEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="MembersBase"/> instance.
		///</summary>
		///<param name="_siteId"></param>
		///<param name="_username"></param>
		///<param name="_password"></param>
		///<param name="_title"></param>
		///<param name="_firstName"></param>
		///<param name="_surname"></param>
		///<param name="_emailAddress"></param>
		///<param name="_company"></param>
		///<param name="_position"></param>
		///<param name="_homePhone"></param>
		///<param name="_workPhone"></param>
		///<param name="_mobilePhone"></param>
		///<param name="_fax"></param>
		///<param name="_address1"></param>
		///<param name="_address2"></param>
		///<param name="_locationId"></param>
		///<param name="_areaId"></param>
		///<param name="_countryId"></param>
		///<param name="_preferredCategoryId"></param>
		///<param name="_preferredSubCategoryId"></param>
		///<param name="_preferredSalaryId"></param>
		///<param name="_subscribed"></param>
		///<param name="_monthlyUpdate"></param>
		///<param name="_referringMemberId"></param>
		///<param name="_lastModifiedDate"></param>
		///<param name="_valid"></param>
		///<param name="_emailFormat"></param>
		///<param name="_lastLogon"></param>
		///<param name="_dateOfBirth"></param>
		///<param name="_gender"></param>
		///<param name="_tags"></param>
		///<param name="_validated"></param>
		///<param name="_validateGuid"></param>
		///<param name="_memberUrlExtension"></param>
		///<param name="_websiteUrl"></param>
		///<param name="_availabilityId"></param>
		///<param name="_availabilityFromDate"></param>
		///<param name="_mySpaceHeading"></param>
		///<param name="_mySpaceContent"></param>
		///<param name="_urlReferrer"></param>
		///<param name="_requiredPasswordChange"></param>
		///<param name="_preferredJobTitle"></param>
		///<param name="_preferredAvailability"></param>
		///<param name="_preferredAvailabilityType"></param>
		///<param name="_preferredSalaryFrom"></param>
		///<param name="_preferredSalaryTo"></param>
		///<param name="_currentSalaryFrom"></param>
		///<param name="_currentSalaryTo"></param>
		///<param name="_lookingFor"></param>
		///<param name="_experience"></param>
		///<param name="_skills"></param>
		///<param name="_reasons"></param>
		///<param name="_comments"></param>
		///<param name="_profileType"></param>
		///<param name="_educationId"></param>
		///<param name="_searchField"></param>
		///<param name="_registeredDate"></param>
		///<param name="_states"></param>
		///<param name="_suburb"></param>
		///<param name="_postCode"></param>
		///<param name="_profilePicture"></param>
		///<param name="_shortBio"></param>
		///<param name="_workTypeId"></param>
		///<param name="_memberships"></param>
		///<param name="_memberStatusId"></param>
		///<param name="_linkedInAccessToken"></param>
		///<param name="_externalMemberId"></param>
		///<param name="_passportNo"></param>
		///<param name="_mailingAddress1"></param>
		///<param name="_mailingAddress2"></param>
		///<param name="_mailingStates"></param>
		///<param name="_mailingSuburb"></param>
		///<param name="_mailingPostCode"></param>
		///<param name="_mailingCountryId"></param>
		///<param name="_countryName"></param>
		///<param name="_mailingCountryName"></param>
		///<param name="_loginAttempts"></param>
		///<param name="_lastAttemptDate"></param>
		///<param name="_status"></param>
		///<param name="_lastTermsAndConditionsDate"></param>
		///<param name="_defaultLanguageId"></param>
		///<param name="_referringSiteId"></param>
		///<param name="_multiLingualFirstName"></param>
		///<param name="_multiLingualSurame"></param>
		///<param name="_secondaryEmail"></param>
		///<param name="_candidateData"></param>
		///<param name="_eligibleToWorkIn"></param>
		///<param name="_referenceUponRequest"></param>
		///<param name="_preferredLine"></param>
		///<param name="_videoUrl"></param>
		///<param name="_profileDataXml"></param>
		///<param name="_lastProfileSubmittedDate"></param>
		public MembersBase(System.Int32 _siteId, System.String _username, System.String _password, 
			System.String _title, System.String _firstName, System.String _surname, System.String _emailAddress, 
			System.String _company, System.String _position, System.String _homePhone, System.String _workPhone, 
			System.String _mobilePhone, System.String _fax, System.String _address1, System.String _address2, 
			System.String _locationId, System.String _areaId, System.Int32 _countryId, System.String _preferredCategoryId, 
			System.String _preferredSubCategoryId, System.Int32? _preferredSalaryId, System.Boolean _subscribed, 
			System.Boolean _monthlyUpdate, System.Int32? _referringMemberId, System.DateTime? _lastModifiedDate, 
			System.Boolean _valid, System.Int32 _emailFormat, System.DateTime? _lastLogon, System.DateTime? _dateOfBirth, 
			System.String _gender, System.String _tags, System.Boolean _validated, System.Guid? _validateGuid, 
			System.String _memberUrlExtension, System.String _websiteUrl, System.Int32? _availabilityId, System.DateTime? _availabilityFromDate, 
			System.String _mySpaceHeading, System.String _mySpaceContent, System.String _urlReferrer, System.Boolean? _requiredPasswordChange, 
			System.String _preferredJobTitle, System.String _preferredAvailability, System.Int32? _preferredAvailabilityType, 
			System.String _preferredSalaryFrom, System.String _preferredSalaryTo, System.String _currentSalaryFrom, 
			System.String _currentSalaryTo, System.String _lookingFor, System.String _experience, System.String _skills, 
			System.String _reasons, System.String _comments, System.String _profileType, System.Int32? _educationId, 
			System.String _searchField, System.DateTime _registeredDate, System.String _states, System.String _suburb, 
			System.String _postCode, System.String _profilePicture, System.String _shortBio, System.String _workTypeId, 
			System.String _memberships, System.Int32? _memberStatusId, System.String _linkedInAccessToken, System.String _externalMemberId, 
			System.String _passportNo, System.String _mailingAddress1, System.String _mailingAddress2, System.String _mailingStates, 
			System.String _mailingSuburb, System.String _mailingPostCode, System.Int32? _mailingCountryId, System.String _countryName, 
			System.String _mailingCountryName, System.Int32 _loginAttempts, System.DateTime? _lastAttemptDate, System.Int32? _status, 
			System.DateTime? _lastTermsAndConditionsDate, System.Int32? _defaultLanguageId, System.Int32? _referringSiteId, 
			System.String _multiLingualFirstName, System.String _multiLingualSurame, System.String _secondaryEmail, 
			System.String _candidateData, System.String _eligibleToWorkIn, System.Boolean? _referenceUponRequest, 
			System.Int32 _preferredLine, System.String _videoUrl, System.String _profileDataXml, System.DateTime? _lastProfileSubmittedDate)
		{
			this.entityData = new MembersEntityData();
			this.backupData = null;

			this.SiteId = _siteId;
			this.Username = _username;
			this.Password = _password;
			this.Title = _title;
			this.FirstName = _firstName;
			this.Surname = _surname;
			this.EmailAddress = _emailAddress;
			this.Company = _company;
			this.Position = _position;
			this.HomePhone = _homePhone;
			this.WorkPhone = _workPhone;
			this.MobilePhone = _mobilePhone;
			this.Fax = _fax;
			this.Address1 = _address1;
			this.Address2 = _address2;
			this.LocationId = _locationId;
			this.AreaId = _areaId;
			this.CountryId = _countryId;
			this.PreferredCategoryId = _preferredCategoryId;
			this.PreferredSubCategoryId = _preferredSubCategoryId;
			this.PreferredSalaryId = _preferredSalaryId;
			this.Subscribed = _subscribed;
			this.MonthlyUpdate = _monthlyUpdate;
			this.ReferringMemberId = _referringMemberId;
			this.LastModifiedDate = _lastModifiedDate;
			this.Valid = _valid;
			this.EmailFormat = _emailFormat;
			this.LastLogon = _lastLogon;
			this.DateOfBirth = _dateOfBirth;
			this.Gender = _gender;
			this.Tags = _tags;
			this.Validated = _validated;
			this.ValidateGuid = _validateGuid;
			this.MemberUrlExtension = _memberUrlExtension;
			this.WebsiteUrl = _websiteUrl;
			this.AvailabilityId = _availabilityId;
			this.AvailabilityFromDate = _availabilityFromDate;
			this.MySpaceHeading = _mySpaceHeading;
			this.MySpaceContent = _mySpaceContent;
			this.UrlReferrer = _urlReferrer;
			this.RequiredPasswordChange = _requiredPasswordChange;
			this.PreferredJobTitle = _preferredJobTitle;
			this.PreferredAvailability = _preferredAvailability;
			this.PreferredAvailabilityType = _preferredAvailabilityType;
			this.PreferredSalaryFrom = _preferredSalaryFrom;
			this.PreferredSalaryTo = _preferredSalaryTo;
			this.CurrentSalaryFrom = _currentSalaryFrom;
			this.CurrentSalaryTo = _currentSalaryTo;
			this.LookingFor = _lookingFor;
			this.Experience = _experience;
			this.Skills = _skills;
			this.Reasons = _reasons;
			this.Comments = _comments;
			this.ProfileType = _profileType;
			this.EducationId = _educationId;
			this.SearchField = _searchField;
			this.RegisteredDate = _registeredDate;
			this.States = _states;
			this.Suburb = _suburb;
			this.PostCode = _postCode;
			this.ProfilePicture = _profilePicture;
			this.ShortBio = _shortBio;
			this.WorkTypeId = _workTypeId;
			this.Memberships = _memberships;
			this.MemberStatusId = _memberStatusId;
			this.LinkedInAccessToken = _linkedInAccessToken;
			this.ExternalMemberId = _externalMemberId;
			this.PassportNo = _passportNo;
			this.MailingAddress1 = _mailingAddress1;
			this.MailingAddress2 = _mailingAddress2;
			this.MailingStates = _mailingStates;
			this.MailingSuburb = _mailingSuburb;
			this.MailingPostCode = _mailingPostCode;
			this.MailingCountryId = _mailingCountryId;
			this.CountryName = _countryName;
			this.MailingCountryName = _mailingCountryName;
			this.LoginAttempts = _loginAttempts;
			this.LastAttemptDate = _lastAttemptDate;
			this.Status = _status;
			this.LastTermsAndConditionsDate = _lastTermsAndConditionsDate;
			this.DefaultLanguageId = _defaultLanguageId;
			this.ReferringSiteId = _referringSiteId;
			this.MultiLingualFirstName = _multiLingualFirstName;
			this.MultiLingualSurame = _multiLingualSurame;
			this.SecondaryEmail = _secondaryEmail;
			this.CandidateData = _candidateData;
			this.EligibleToWorkIn = _eligibleToWorkIn;
			this.ReferenceUponRequest = _referenceUponRequest;
			this.PreferredLine = _preferredLine;
			this.VideoUrl = _videoUrl;
			this.ProfileDataXml = _profileDataXml;
			this.LastProfileSubmittedDate = _lastProfileSubmittedDate;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Members"/> instance.
		///</summary>
		///<param name="_siteId"></param>
		///<param name="_username"></param>
		///<param name="_password"></param>
		///<param name="_title"></param>
		///<param name="_firstName"></param>
		///<param name="_surname"></param>
		///<param name="_emailAddress"></param>
		///<param name="_company"></param>
		///<param name="_position"></param>
		///<param name="_homePhone"></param>
		///<param name="_workPhone"></param>
		///<param name="_mobilePhone"></param>
		///<param name="_fax"></param>
		///<param name="_address1"></param>
		///<param name="_address2"></param>
		///<param name="_locationId"></param>
		///<param name="_areaId"></param>
		///<param name="_countryId"></param>
		///<param name="_preferredCategoryId"></param>
		///<param name="_preferredSubCategoryId"></param>
		///<param name="_preferredSalaryId"></param>
		///<param name="_subscribed"></param>
		///<param name="_monthlyUpdate"></param>
		///<param name="_referringMemberId"></param>
		///<param name="_lastModifiedDate"></param>
		///<param name="_valid"></param>
		///<param name="_emailFormat"></param>
		///<param name="_lastLogon"></param>
		///<param name="_dateOfBirth"></param>
		///<param name="_gender"></param>
		///<param name="_tags"></param>
		///<param name="_validated"></param>
		///<param name="_validateGuid"></param>
		///<param name="_memberUrlExtension"></param>
		///<param name="_websiteUrl"></param>
		///<param name="_availabilityId"></param>
		///<param name="_availabilityFromDate"></param>
		///<param name="_mySpaceHeading"></param>
		///<param name="_mySpaceContent"></param>
		///<param name="_urlReferrer"></param>
		///<param name="_requiredPasswordChange"></param>
		///<param name="_preferredJobTitle"></param>
		///<param name="_preferredAvailability"></param>
		///<param name="_preferredAvailabilityType"></param>
		///<param name="_preferredSalaryFrom"></param>
		///<param name="_preferredSalaryTo"></param>
		///<param name="_currentSalaryFrom"></param>
		///<param name="_currentSalaryTo"></param>
		///<param name="_lookingFor"></param>
		///<param name="_experience"></param>
		///<param name="_skills"></param>
		///<param name="_reasons"></param>
		///<param name="_comments"></param>
		///<param name="_profileType"></param>
		///<param name="_educationId"></param>
		///<param name="_searchField"></param>
		///<param name="_registeredDate"></param>
		///<param name="_states"></param>
		///<param name="_suburb"></param>
		///<param name="_postCode"></param>
		///<param name="_profilePicture"></param>
		///<param name="_shortBio"></param>
		///<param name="_workTypeId"></param>
		///<param name="_memberships"></param>
		///<param name="_memberStatusId"></param>
		///<param name="_linkedInAccessToken"></param>
		///<param name="_externalMemberId"></param>
		///<param name="_passportNo"></param>
		///<param name="_mailingAddress1"></param>
		///<param name="_mailingAddress2"></param>
		///<param name="_mailingStates"></param>
		///<param name="_mailingSuburb"></param>
		///<param name="_mailingPostCode"></param>
		///<param name="_mailingCountryId"></param>
		///<param name="_countryName"></param>
		///<param name="_mailingCountryName"></param>
		///<param name="_loginAttempts"></param>
		///<param name="_lastAttemptDate"></param>
		///<param name="_status"></param>
		///<param name="_lastTermsAndConditionsDate"></param>
		///<param name="_defaultLanguageId"></param>
		///<param name="_referringSiteId"></param>
		///<param name="_multiLingualFirstName"></param>
		///<param name="_multiLingualSurame"></param>
		///<param name="_secondaryEmail"></param>
		///<param name="_candidateData"></param>
		///<param name="_eligibleToWorkIn"></param>
		///<param name="_referenceUponRequest"></param>
		///<param name="_preferredLine"></param>
		///<param name="_videoUrl"></param>
		///<param name="_profileDataXml"></param>
		///<param name="_lastProfileSubmittedDate"></param>
		public static Members CreateMembers(System.Int32 _siteId, System.String _username, System.String _password, 
			System.String _title, System.String _firstName, System.String _surname, System.String _emailAddress, 
			System.String _company, System.String _position, System.String _homePhone, System.String _workPhone, 
			System.String _mobilePhone, System.String _fax, System.String _address1, System.String _address2, 
			System.String _locationId, System.String _areaId, System.Int32 _countryId, System.String _preferredCategoryId, 
			System.String _preferredSubCategoryId, System.Int32? _preferredSalaryId, System.Boolean _subscribed, 
			System.Boolean _monthlyUpdate, System.Int32? _referringMemberId, System.DateTime? _lastModifiedDate, 
			System.Boolean _valid, System.Int32 _emailFormat, System.DateTime? _lastLogon, System.DateTime? _dateOfBirth, 
			System.String _gender, System.String _tags, System.Boolean _validated, System.Guid? _validateGuid, 
			System.String _memberUrlExtension, System.String _websiteUrl, System.Int32? _availabilityId, System.DateTime? _availabilityFromDate, 
			System.String _mySpaceHeading, System.String _mySpaceContent, System.String _urlReferrer, System.Boolean? _requiredPasswordChange, 
			System.String _preferredJobTitle, System.String _preferredAvailability, System.Int32? _preferredAvailabilityType, 
			System.String _preferredSalaryFrom, System.String _preferredSalaryTo, System.String _currentSalaryFrom, 
			System.String _currentSalaryTo, System.String _lookingFor, System.String _experience, System.String _skills, 
			System.String _reasons, System.String _comments, System.String _profileType, System.Int32? _educationId, 
			System.String _searchField, System.DateTime _registeredDate, System.String _states, System.String _suburb, 
			System.String _postCode, System.String _profilePicture, System.String _shortBio, System.String _workTypeId, 
			System.String _memberships, System.Int32? _memberStatusId, System.String _linkedInAccessToken, System.String _externalMemberId, 
			System.String _passportNo, System.String _mailingAddress1, System.String _mailingAddress2, System.String _mailingStates, 
			System.String _mailingSuburb, System.String _mailingPostCode, System.Int32? _mailingCountryId, System.String _countryName, 
			System.String _mailingCountryName, System.Int32 _loginAttempts, System.DateTime? _lastAttemptDate, System.Int32? _status, 
			System.DateTime? _lastTermsAndConditionsDate, System.Int32? _defaultLanguageId, System.Int32? _referringSiteId, 
			System.String _multiLingualFirstName, System.String _multiLingualSurame, System.String _secondaryEmail, 
			System.String _candidateData, System.String _eligibleToWorkIn, System.Boolean? _referenceUponRequest, 
			System.Int32 _preferredLine, System.String _videoUrl, System.String _profileDataXml, System.DateTime? _lastProfileSubmittedDate)
		{
			Members newMembers = new Members();
			newMembers.SiteId = _siteId;
			newMembers.Username = _username;
			newMembers.Password = _password;
			newMembers.Title = _title;
			newMembers.FirstName = _firstName;
			newMembers.Surname = _surname;
			newMembers.EmailAddress = _emailAddress;
			newMembers.Company = _company;
			newMembers.Position = _position;
			newMembers.HomePhone = _homePhone;
			newMembers.WorkPhone = _workPhone;
			newMembers.MobilePhone = _mobilePhone;
			newMembers.Fax = _fax;
			newMembers.Address1 = _address1;
			newMembers.Address2 = _address2;
			newMembers.LocationId = _locationId;
			newMembers.AreaId = _areaId;
			newMembers.CountryId = _countryId;
			newMembers.PreferredCategoryId = _preferredCategoryId;
			newMembers.PreferredSubCategoryId = _preferredSubCategoryId;
			newMembers.PreferredSalaryId = _preferredSalaryId;
			newMembers.Subscribed = _subscribed;
			newMembers.MonthlyUpdate = _monthlyUpdate;
			newMembers.ReferringMemberId = _referringMemberId;
			newMembers.LastModifiedDate = _lastModifiedDate;
			newMembers.Valid = _valid;
			newMembers.EmailFormat = _emailFormat;
			newMembers.LastLogon = _lastLogon;
			newMembers.DateOfBirth = _dateOfBirth;
			newMembers.Gender = _gender;
			newMembers.Tags = _tags;
			newMembers.Validated = _validated;
			newMembers.ValidateGuid = _validateGuid;
			newMembers.MemberUrlExtension = _memberUrlExtension;
			newMembers.WebsiteUrl = _websiteUrl;
			newMembers.AvailabilityId = _availabilityId;
			newMembers.AvailabilityFromDate = _availabilityFromDate;
			newMembers.MySpaceHeading = _mySpaceHeading;
			newMembers.MySpaceContent = _mySpaceContent;
			newMembers.UrlReferrer = _urlReferrer;
			newMembers.RequiredPasswordChange = _requiredPasswordChange;
			newMembers.PreferredJobTitle = _preferredJobTitle;
			newMembers.PreferredAvailability = _preferredAvailability;
			newMembers.PreferredAvailabilityType = _preferredAvailabilityType;
			newMembers.PreferredSalaryFrom = _preferredSalaryFrom;
			newMembers.PreferredSalaryTo = _preferredSalaryTo;
			newMembers.CurrentSalaryFrom = _currentSalaryFrom;
			newMembers.CurrentSalaryTo = _currentSalaryTo;
			newMembers.LookingFor = _lookingFor;
			newMembers.Experience = _experience;
			newMembers.Skills = _skills;
			newMembers.Reasons = _reasons;
			newMembers.Comments = _comments;
			newMembers.ProfileType = _profileType;
			newMembers.EducationId = _educationId;
			newMembers.SearchField = _searchField;
			newMembers.RegisteredDate = _registeredDate;
			newMembers.States = _states;
			newMembers.Suburb = _suburb;
			newMembers.PostCode = _postCode;
			newMembers.ProfilePicture = _profilePicture;
			newMembers.ShortBio = _shortBio;
			newMembers.WorkTypeId = _workTypeId;
			newMembers.Memberships = _memberships;
			newMembers.MemberStatusId = _memberStatusId;
			newMembers.LinkedInAccessToken = _linkedInAccessToken;
			newMembers.ExternalMemberId = _externalMemberId;
			newMembers.PassportNo = _passportNo;
			newMembers.MailingAddress1 = _mailingAddress1;
			newMembers.MailingAddress2 = _mailingAddress2;
			newMembers.MailingStates = _mailingStates;
			newMembers.MailingSuburb = _mailingSuburb;
			newMembers.MailingPostCode = _mailingPostCode;
			newMembers.MailingCountryId = _mailingCountryId;
			newMembers.CountryName = _countryName;
			newMembers.MailingCountryName = _mailingCountryName;
			newMembers.LoginAttempts = _loginAttempts;
			newMembers.LastAttemptDate = _lastAttemptDate;
			newMembers.Status = _status;
			newMembers.LastTermsAndConditionsDate = _lastTermsAndConditionsDate;
			newMembers.DefaultLanguageId = _defaultLanguageId;
			newMembers.ReferringSiteId = _referringSiteId;
			newMembers.MultiLingualFirstName = _multiLingualFirstName;
			newMembers.MultiLingualSurame = _multiLingualSurame;
			newMembers.SecondaryEmail = _secondaryEmail;
			newMembers.CandidateData = _candidateData;
			newMembers.EligibleToWorkIn = _eligibleToWorkIn;
			newMembers.ReferenceUponRequest = _referenceUponRequest;
			newMembers.PreferredLine = _preferredLine;
			newMembers.VideoUrl = _videoUrl;
			newMembers.ProfileDataXml = _profileDataXml;
			newMembers.LastProfileSubmittedDate = _lastProfileSubmittedDate;
			return newMembers;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the MemberId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 MemberId
		{
			get
			{
				return this.entityData.MemberId; 
			}
			
			set
			{
				if (this.entityData.MemberId == value)
					return;
					
				OnColumnChanging(MembersColumn.MemberId, this.entityData.MemberId);
				this.entityData.MemberId = value;
				this.EntityId.MemberId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MemberId, this.entityData.MemberId);
				OnPropertyChanged("MemberId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SiteId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 SiteId
		{
			get
			{
				return this.entityData.SiteId; 
			}
			
			set
			{
				if (this.entityData.SiteId == value)
					return;
					
				OnColumnChanging(MembersColumn.SiteId, this.entityData.SiteId);
				this.entityData.SiteId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.SiteId, this.entityData.SiteId);
				OnPropertyChanged("SiteId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Username property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String Username
		{
			get
			{
				return this.entityData.Username; 
			}
			
			set
			{
				if (this.entityData.Username == value)
					return;
					
				OnColumnChanging(MembersColumn.Username, this.entityData.Username);
				this.entityData.Username = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Username, this.entityData.Username);
				OnPropertyChanged("Username");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Password property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 255)]
		public virtual System.String Password
		{
			get
			{
				return this.entityData.Password; 
			}
			
			set
			{
				if (this.entityData.Password == value)
					return;
					
				OnColumnChanging(MembersColumn.Password, this.entityData.Password);
				this.entityData.Password = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Password, this.entityData.Password);
				OnPropertyChanged("Password");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Title property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String Title
		{
			get
			{
				return this.entityData.Title; 
			}
			
			set
			{
				if (this.entityData.Title == value)
					return;
					
				OnColumnChanging(MembersColumn.Title, this.entityData.Title);
				this.entityData.Title = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Title, this.entityData.Title);
				OnPropertyChanged("Title");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FirstName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String FirstName
		{
			get
			{
				return this.entityData.FirstName; 
			}
			
			set
			{
				if (this.entityData.FirstName == value)
					return;
					
				OnColumnChanging(MembersColumn.FirstName, this.entityData.FirstName);
				this.entityData.FirstName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.FirstName, this.entityData.FirstName);
				OnPropertyChanged("FirstName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Surname property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String Surname
		{
			get
			{
				return this.entityData.Surname; 
			}
			
			set
			{
				if (this.entityData.Surname == value)
					return;
					
				OnColumnChanging(MembersColumn.Surname, this.entityData.Surname);
				this.entityData.Surname = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Surname, this.entityData.Surname);
				OnPropertyChanged("Surname");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EmailAddress property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String EmailAddress
		{
			get
			{
				return this.entityData.EmailAddress; 
			}
			
			set
			{
				if (this.entityData.EmailAddress == value)
					return;
					
				OnColumnChanging(MembersColumn.EmailAddress, this.entityData.EmailAddress);
				this.entityData.EmailAddress = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.EmailAddress, this.entityData.EmailAddress);
				OnPropertyChanged("EmailAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Company property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Company
		{
			get
			{
				return this.entityData.Company; 
			}
			
			set
			{
				if (this.entityData.Company == value)
					return;
					
				OnColumnChanging(MembersColumn.Company, this.entityData.Company);
				this.entityData.Company = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Company, this.entityData.Company);
				OnPropertyChanged("Company");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Position property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Position
		{
			get
			{
				return this.entityData.Position; 
			}
			
			set
			{
				if (this.entityData.Position == value)
					return;
					
				OnColumnChanging(MembersColumn.Position, this.entityData.Position);
				this.entityData.Position = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Position, this.entityData.Position);
				OnPropertyChanged("Position");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HomePhone property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 40)]
		public virtual System.String HomePhone
		{
			get
			{
				return this.entityData.HomePhone; 
			}
			
			set
			{
				if (this.entityData.HomePhone == value)
					return;
					
				OnColumnChanging(MembersColumn.HomePhone, this.entityData.HomePhone);
				this.entityData.HomePhone = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.HomePhone, this.entityData.HomePhone);
				OnPropertyChanged("HomePhone");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WorkPhone property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 40)]
		public virtual System.String WorkPhone
		{
			get
			{
				return this.entityData.WorkPhone; 
			}
			
			set
			{
				if (this.entityData.WorkPhone == value)
					return;
					
				OnColumnChanging(MembersColumn.WorkPhone, this.entityData.WorkPhone);
				this.entityData.WorkPhone = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.WorkPhone, this.entityData.WorkPhone);
				OnPropertyChanged("WorkPhone");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MobilePhone property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 40)]
		public virtual System.String MobilePhone
		{
			get
			{
				return this.entityData.MobilePhone; 
			}
			
			set
			{
				if (this.entityData.MobilePhone == value)
					return;
					
				OnColumnChanging(MembersColumn.MobilePhone, this.entityData.MobilePhone);
				this.entityData.MobilePhone = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MobilePhone, this.entityData.MobilePhone);
				OnPropertyChanged("MobilePhone");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Fax property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 40)]
		public virtual System.String Fax
		{
			get
			{
				return this.entityData.Fax; 
			}
			
			set
			{
				if (this.entityData.Fax == value)
					return;
					
				OnColumnChanging(MembersColumn.Fax, this.entityData.Fax);
				this.entityData.Fax = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Fax, this.entityData.Fax);
				OnPropertyChanged("Fax");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Address1 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String Address1
		{
			get
			{
				return this.entityData.Address1; 
			}
			
			set
			{
				if (this.entityData.Address1 == value)
					return;
					
				OnColumnChanging(MembersColumn.Address1, this.entityData.Address1);
				this.entityData.Address1 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Address1, this.entityData.Address1);
				OnPropertyChanged("Address1");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Address2 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String Address2
		{
			get
			{
				return this.entityData.Address2; 
			}
			
			set
			{
				if (this.entityData.Address2 == value)
					return;
					
				OnColumnChanging(MembersColumn.Address2, this.entityData.Address2);
				this.entityData.Address2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Address2, this.entityData.Address2);
				OnPropertyChanged("Address2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LocationId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LocationId
		{
			get
			{
				return this.entityData.LocationId; 
			}
			
			set
			{
				if (this.entityData.LocationId == value)
					return;
					
				OnColumnChanging(MembersColumn.LocationId, this.entityData.LocationId);
				this.entityData.LocationId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.LocationId, this.entityData.LocationId);
				OnPropertyChanged("LocationId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AreaId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String AreaId
		{
			get
			{
				return this.entityData.AreaId; 
			}
			
			set
			{
				if (this.entityData.AreaId == value)
					return;
					
				OnColumnChanging(MembersColumn.AreaId, this.entityData.AreaId);
				this.entityData.AreaId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.AreaId, this.entityData.AreaId);
				OnPropertyChanged("AreaId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CountryId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 CountryId
		{
			get
			{
				return this.entityData.CountryId; 
			}
			
			set
			{
				if (this.entityData.CountryId == value)
					return;
					
				OnColumnChanging(MembersColumn.CountryId, this.entityData.CountryId);
				this.entityData.CountryId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.CountryId, this.entityData.CountryId);
				OnPropertyChanged("CountryId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredCategoryId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String PreferredCategoryId
		{
			get
			{
				return this.entityData.PreferredCategoryId; 
			}
			
			set
			{
				if (this.entityData.PreferredCategoryId == value)
					return;
					
				OnColumnChanging(MembersColumn.PreferredCategoryId, this.entityData.PreferredCategoryId);
				this.entityData.PreferredCategoryId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PreferredCategoryId, this.entityData.PreferredCategoryId);
				OnPropertyChanged("PreferredCategoryId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredSubCategoryId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String PreferredSubCategoryId
		{
			get
			{
				return this.entityData.PreferredSubCategoryId; 
			}
			
			set
			{
				if (this.entityData.PreferredSubCategoryId == value)
					return;
					
				OnColumnChanging(MembersColumn.PreferredSubCategoryId, this.entityData.PreferredSubCategoryId);
				this.entityData.PreferredSubCategoryId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PreferredSubCategoryId, this.entityData.PreferredSubCategoryId);
				OnPropertyChanged("PreferredSubCategoryId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredSalaryId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsPreferredSalaryIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? PreferredSalaryId
		{
			get
			{
				return this.entityData.PreferredSalaryId; 
			}
			
			set
			{
				if (this.entityData.PreferredSalaryId == value)
					return;
					
				OnColumnChanging(MembersColumn.PreferredSalaryId, this.entityData.PreferredSalaryId);
				this.entityData.PreferredSalaryId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PreferredSalaryId, this.entityData.PreferredSalaryId);
				OnPropertyChanged("PreferredSalaryId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Subscribed property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean Subscribed
		{
			get
			{
				return this.entityData.Subscribed; 
			}
			
			set
			{
				if (this.entityData.Subscribed == value)
					return;
					
				OnColumnChanging(MembersColumn.Subscribed, this.entityData.Subscribed);
				this.entityData.Subscribed = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Subscribed, this.entityData.Subscribed);
				OnPropertyChanged("Subscribed");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MonthlyUpdate property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean MonthlyUpdate
		{
			get
			{
				return this.entityData.MonthlyUpdate; 
			}
			
			set
			{
				if (this.entityData.MonthlyUpdate == value)
					return;
					
				OnColumnChanging(MembersColumn.MonthlyUpdate, this.entityData.MonthlyUpdate);
				this.entityData.MonthlyUpdate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MonthlyUpdate, this.entityData.MonthlyUpdate);
				OnPropertyChanged("MonthlyUpdate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReferringMemberId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsReferringMemberIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? ReferringMemberId
		{
			get
			{
				return this.entityData.ReferringMemberId; 
			}
			
			set
			{
				if (this.entityData.ReferringMemberId == value)
					return;
					
				OnColumnChanging(MembersColumn.ReferringMemberId, this.entityData.ReferringMemberId);
				this.entityData.ReferringMemberId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.ReferringMemberId, this.entityData.ReferringMemberId);
				OnPropertyChanged("ReferringMemberId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastModifiedDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastModifiedDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastModifiedDate
		{
			get
			{
				return this.entityData.LastModifiedDate; 
			}
			
			set
			{
				if (this.entityData.LastModifiedDate == value)
					return;
					
				OnColumnChanging(MembersColumn.LastModifiedDate, this.entityData.LastModifiedDate);
				this.entityData.LastModifiedDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.LastModifiedDate, this.entityData.LastModifiedDate);
				OnPropertyChanged("LastModifiedDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Valid property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean Valid
		{
			get
			{
				return this.entityData.Valid; 
			}
			
			set
			{
				if (this.entityData.Valid == value)
					return;
					
				OnColumnChanging(MembersColumn.Valid, this.entityData.Valid);
				this.entityData.Valid = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Valid, this.entityData.Valid);
				OnPropertyChanged("Valid");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EmailFormat property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 EmailFormat
		{
			get
			{
				return this.entityData.EmailFormat; 
			}
			
			set
			{
				if (this.entityData.EmailFormat == value)
					return;
					
				OnColumnChanging(MembersColumn.EmailFormat, this.entityData.EmailFormat);
				this.entityData.EmailFormat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.EmailFormat, this.entityData.EmailFormat);
				OnPropertyChanged("EmailFormat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastLogon property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastLogonNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastLogon
		{
			get
			{
				return this.entityData.LastLogon; 
			}
			
			set
			{
				if (this.entityData.LastLogon == value)
					return;
					
				OnColumnChanging(MembersColumn.LastLogon, this.entityData.LastLogon);
				this.entityData.LastLogon = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.LastLogon, this.entityData.LastLogon);
				OnPropertyChanged("LastLogon");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DateOfBirth property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsDateOfBirthNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? DateOfBirth
		{
			get
			{
				return this.entityData.DateOfBirth; 
			}
			
			set
			{
				if (this.entityData.DateOfBirth == value)
					return;
					
				OnColumnChanging(MembersColumn.DateOfBirth, this.entityData.DateOfBirth);
				this.entityData.DateOfBirth = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.DateOfBirth, this.entityData.DateOfBirth);
				OnPropertyChanged("DateOfBirth");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Gender property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1)]
		public virtual System.String Gender
		{
			get
			{
				return this.entityData.Gender; 
			}
			
			set
			{
				if (this.entityData.Gender == value)
					return;
					
				OnColumnChanging(MembersColumn.Gender, this.entityData.Gender);
				this.entityData.Gender = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Gender, this.entityData.Gender);
				OnPropertyChanged("Gender");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Tags property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String Tags
		{
			get
			{
				return this.entityData.Tags; 
			}
			
			set
			{
				if (this.entityData.Tags == value)
					return;
					
				OnColumnChanging(MembersColumn.Tags, this.entityData.Tags);
				this.entityData.Tags = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Tags, this.entityData.Tags);
				OnPropertyChanged("Tags");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Validated property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean Validated
		{
			get
			{
				return this.entityData.Validated; 
			}
			
			set
			{
				if (this.entityData.Validated == value)
					return;
					
				OnColumnChanging(MembersColumn.Validated, this.entityData.Validated);
				this.entityData.Validated = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Validated, this.entityData.Validated);
				OnPropertyChanged("Validated");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ValidateGuid property. 
		///		
		/// </summary>
		/// <value>This type is uniqueidentifier.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return Guid.Empty. It is up to the developer
		/// to check the value of IsValidateGuidNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Guid? ValidateGuid
		{
			get
			{
				return this.entityData.ValidateGuid; 
			}
			
			set
			{
				if (this.entityData.ValidateGuid == value)
					return;
					
				OnColumnChanging(MembersColumn.ValidateGuid, this.entityData.ValidateGuid);
				this.entityData.ValidateGuid = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.ValidateGuid, this.entityData.ValidateGuid);
				OnPropertyChanged("ValidateGuid");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberUrlExtension property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String MemberUrlExtension
		{
			get
			{
				return this.entityData.MemberUrlExtension; 
			}
			
			set
			{
				if (this.entityData.MemberUrlExtension == value)
					return;
					
				OnColumnChanging(MembersColumn.MemberUrlExtension, this.entityData.MemberUrlExtension);
				this.entityData.MemberUrlExtension = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MemberUrlExtension, this.entityData.MemberUrlExtension);
				OnPropertyChanged("MemberUrlExtension");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebsiteUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String WebsiteUrl
		{
			get
			{
				return this.entityData.WebsiteUrl; 
			}
			
			set
			{
				if (this.entityData.WebsiteUrl == value)
					return;
					
				OnColumnChanging(MembersColumn.WebsiteUrl, this.entityData.WebsiteUrl);
				this.entityData.WebsiteUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.WebsiteUrl, this.entityData.WebsiteUrl);
				OnPropertyChanged("WebsiteUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AvailabilityId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsAvailabilityIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? AvailabilityId
		{
			get
			{
				return this.entityData.AvailabilityId; 
			}
			
			set
			{
				if (this.entityData.AvailabilityId == value)
					return;
					
				OnColumnChanging(MembersColumn.AvailabilityId, this.entityData.AvailabilityId);
				this.entityData.AvailabilityId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.AvailabilityId, this.entityData.AvailabilityId);
				OnPropertyChanged("AvailabilityId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AvailabilityFromDate property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsAvailabilityFromDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? AvailabilityFromDate
		{
			get
			{
				return this.entityData.AvailabilityFromDate; 
			}
			
			set
			{
				if (this.entityData.AvailabilityFromDate == value)
					return;
					
				OnColumnChanging(MembersColumn.AvailabilityFromDate, this.entityData.AvailabilityFromDate);
				this.entityData.AvailabilityFromDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.AvailabilityFromDate, this.entityData.AvailabilityFromDate);
				OnPropertyChanged("AvailabilityFromDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MySpaceHeading property. 
		///		
		/// </summary>
		/// <value>This type is ntext.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String MySpaceHeading
		{
			get
			{
				return this.entityData.MySpaceHeading; 
			}
			
			set
			{
				if (this.entityData.MySpaceHeading == value)
					return;
					
				OnColumnChanging(MembersColumn.MySpaceHeading, this.entityData.MySpaceHeading);
				this.entityData.MySpaceHeading = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MySpaceHeading, this.entityData.MySpaceHeading);
				OnPropertyChanged("MySpaceHeading");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MySpaceContent property. 
		///		
		/// </summary>
		/// <value>This type is ntext.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String MySpaceContent
		{
			get
			{
				return this.entityData.MySpaceContent; 
			}
			
			set
			{
				if (this.entityData.MySpaceContent == value)
					return;
					
				OnColumnChanging(MembersColumn.MySpaceContent, this.entityData.MySpaceContent);
				this.entityData.MySpaceContent = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MySpaceContent, this.entityData.MySpaceContent);
				OnPropertyChanged("MySpaceContent");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UrlReferrer property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String UrlReferrer
		{
			get
			{
				return this.entityData.UrlReferrer; 
			}
			
			set
			{
				if (this.entityData.UrlReferrer == value)
					return;
					
				OnColumnChanging(MembersColumn.UrlReferrer, this.entityData.UrlReferrer);
				this.entityData.UrlReferrer = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.UrlReferrer, this.entityData.UrlReferrer);
				OnPropertyChanged("UrlReferrer");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RequiredPasswordChange property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsRequiredPasswordChangeNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? RequiredPasswordChange
		{
			get
			{
				return this.entityData.RequiredPasswordChange; 
			}
			
			set
			{
				if (this.entityData.RequiredPasswordChange == value)
					return;
					
				OnColumnChanging(MembersColumn.RequiredPasswordChange, this.entityData.RequiredPasswordChange);
				this.entityData.RequiredPasswordChange = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.RequiredPasswordChange, this.entityData.RequiredPasswordChange);
				OnPropertyChanged("RequiredPasswordChange");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredJobTitle property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String PreferredJobTitle
		{
			get
			{
				return this.entityData.PreferredJobTitle; 
			}
			
			set
			{
				if (this.entityData.PreferredJobTitle == value)
					return;
					
				OnColumnChanging(MembersColumn.PreferredJobTitle, this.entityData.PreferredJobTitle);
				this.entityData.PreferredJobTitle = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PreferredJobTitle, this.entityData.PreferredJobTitle);
				OnPropertyChanged("PreferredJobTitle");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredAvailability property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String PreferredAvailability
		{
			get
			{
				return this.entityData.PreferredAvailability; 
			}
			
			set
			{
				if (this.entityData.PreferredAvailability == value)
					return;
					
				OnColumnChanging(MembersColumn.PreferredAvailability, this.entityData.PreferredAvailability);
				this.entityData.PreferredAvailability = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PreferredAvailability, this.entityData.PreferredAvailability);
				OnPropertyChanged("PreferredAvailability");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredAvailabilityType property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsPreferredAvailabilityTypeNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? PreferredAvailabilityType
		{
			get
			{
				return this.entityData.PreferredAvailabilityType; 
			}
			
			set
			{
				if (this.entityData.PreferredAvailabilityType == value)
					return;
					
				OnColumnChanging(MembersColumn.PreferredAvailabilityType, this.entityData.PreferredAvailabilityType);
				this.entityData.PreferredAvailabilityType = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PreferredAvailabilityType, this.entityData.PreferredAvailabilityType);
				OnPropertyChanged("PreferredAvailabilityType");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredSalaryFrom property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String PreferredSalaryFrom
		{
			get
			{
				return this.entityData.PreferredSalaryFrom; 
			}
			
			set
			{
				if (this.entityData.PreferredSalaryFrom == value)
					return;
					
				OnColumnChanging(MembersColumn.PreferredSalaryFrom, this.entityData.PreferredSalaryFrom);
				this.entityData.PreferredSalaryFrom = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PreferredSalaryFrom, this.entityData.PreferredSalaryFrom);
				OnPropertyChanged("PreferredSalaryFrom");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredSalaryTo property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String PreferredSalaryTo
		{
			get
			{
				return this.entityData.PreferredSalaryTo; 
			}
			
			set
			{
				if (this.entityData.PreferredSalaryTo == value)
					return;
					
				OnColumnChanging(MembersColumn.PreferredSalaryTo, this.entityData.PreferredSalaryTo);
				this.entityData.PreferredSalaryTo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PreferredSalaryTo, this.entityData.PreferredSalaryTo);
				OnPropertyChanged("PreferredSalaryTo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CurrentSalaryFrom property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String CurrentSalaryFrom
		{
			get
			{
				return this.entityData.CurrentSalaryFrom; 
			}
			
			set
			{
				if (this.entityData.CurrentSalaryFrom == value)
					return;
					
				OnColumnChanging(MembersColumn.CurrentSalaryFrom, this.entityData.CurrentSalaryFrom);
				this.entityData.CurrentSalaryFrom = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.CurrentSalaryFrom, this.entityData.CurrentSalaryFrom);
				OnPropertyChanged("CurrentSalaryFrom");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CurrentSalaryTo property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String CurrentSalaryTo
		{
			get
			{
				return this.entityData.CurrentSalaryTo; 
			}
			
			set
			{
				if (this.entityData.CurrentSalaryTo == value)
					return;
					
				OnColumnChanging(MembersColumn.CurrentSalaryTo, this.entityData.CurrentSalaryTo);
				this.entityData.CurrentSalaryTo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.CurrentSalaryTo, this.entityData.CurrentSalaryTo);
				OnPropertyChanged("CurrentSalaryTo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LookingFor property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String LookingFor
		{
			get
			{
				return this.entityData.LookingFor; 
			}
			
			set
			{
				if (this.entityData.LookingFor == value)
					return;
					
				OnColumnChanging(MembersColumn.LookingFor, this.entityData.LookingFor);
				this.entityData.LookingFor = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.LookingFor, this.entityData.LookingFor);
				OnPropertyChanged("LookingFor");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Experience property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Experience
		{
			get
			{
				return this.entityData.Experience; 
			}
			
			set
			{
				if (this.entityData.Experience == value)
					return;
					
				OnColumnChanging(MembersColumn.Experience, this.entityData.Experience);
				this.entityData.Experience = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Experience, this.entityData.Experience);
				OnPropertyChanged("Experience");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Skills property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Skills
		{
			get
			{
				return this.entityData.Skills; 
			}
			
			set
			{
				if (this.entityData.Skills == value)
					return;
					
				OnColumnChanging(MembersColumn.Skills, this.entityData.Skills);
				this.entityData.Skills = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Skills, this.entityData.Skills);
				OnPropertyChanged("Skills");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Reasons property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Reasons
		{
			get
			{
				return this.entityData.Reasons; 
			}
			
			set
			{
				if (this.entityData.Reasons == value)
					return;
					
				OnColumnChanging(MembersColumn.Reasons, this.entityData.Reasons);
				this.entityData.Reasons = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Reasons, this.entityData.Reasons);
				OnPropertyChanged("Reasons");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Comments property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Comments
		{
			get
			{
				return this.entityData.Comments; 
			}
			
			set
			{
				if (this.entityData.Comments == value)
					return;
					
				OnColumnChanging(MembersColumn.Comments, this.entityData.Comments);
				this.entityData.Comments = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Comments, this.entityData.Comments);
				OnPropertyChanged("Comments");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ProfileType property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String ProfileType
		{
			get
			{
				return this.entityData.ProfileType; 
			}
			
			set
			{
				if (this.entityData.ProfileType == value)
					return;
					
				OnColumnChanging(MembersColumn.ProfileType, this.entityData.ProfileType);
				this.entityData.ProfileType = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.ProfileType, this.entityData.ProfileType);
				OnPropertyChanged("ProfileType");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EducationId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsEducationIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? EducationId
		{
			get
			{
				return this.entityData.EducationId; 
			}
			
			set
			{
				if (this.entityData.EducationId == value)
					return;
					
				OnColumnChanging(MembersColumn.EducationId, this.entityData.EducationId);
				this.entityData.EducationId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.EducationId, this.entityData.EducationId);
				OnPropertyChanged("EducationId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SearchField property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String SearchField
		{
			get
			{
				return this.entityData.SearchField; 
			}
			
			set
			{
				if (this.entityData.SearchField == value)
					return;
					
				OnColumnChanging(MembersColumn.SearchField, this.entityData.SearchField);
				this.entityData.SearchField = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.SearchField, this.entityData.SearchField);
				OnPropertyChanged("SearchField");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RegisteredDate property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime RegisteredDate
		{
			get
			{
				return this.entityData.RegisteredDate; 
			}
			
			set
			{
				if (this.entityData.RegisteredDate == value)
					return;
					
				OnColumnChanging(MembersColumn.RegisteredDate, this.entityData.RegisteredDate);
				this.entityData.RegisteredDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.RegisteredDate, this.entityData.RegisteredDate);
				OnPropertyChanged("RegisteredDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the States property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String States
		{
			get
			{
				return this.entityData.States; 
			}
			
			set
			{
				if (this.entityData.States == value)
					return;
					
				OnColumnChanging(MembersColumn.States, this.entityData.States);
				this.entityData.States = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.States, this.entityData.States);
				OnPropertyChanged("States");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Suburb property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String Suburb
		{
			get
			{
				return this.entityData.Suburb; 
			}
			
			set
			{
				if (this.entityData.Suburb == value)
					return;
					
				OnColumnChanging(MembersColumn.Suburb, this.entityData.Suburb);
				this.entityData.Suburb = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Suburb, this.entityData.Suburb);
				OnPropertyChanged("Suburb");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PostCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String PostCode
		{
			get
			{
				return this.entityData.PostCode; 
			}
			
			set
			{
				if (this.entityData.PostCode == value)
					return;
					
				OnColumnChanging(MembersColumn.PostCode, this.entityData.PostCode);
				this.entityData.PostCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PostCode, this.entityData.PostCode);
				OnPropertyChanged("PostCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ProfilePicture property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String ProfilePicture
		{
			get
			{
				return this.entityData.ProfilePicture; 
			}
			
			set
			{
				if (this.entityData.ProfilePicture == value)
					return;
					
				OnColumnChanging(MembersColumn.ProfilePicture, this.entityData.ProfilePicture);
				this.entityData.ProfilePicture = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.ProfilePicture, this.entityData.ProfilePicture);
				OnPropertyChanged("ProfilePicture");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ShortBio property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String ShortBio
		{
			get
			{
				return this.entityData.ShortBio; 
			}
			
			set
			{
				if (this.entityData.ShortBio == value)
					return;
					
				OnColumnChanging(MembersColumn.ShortBio, this.entityData.ShortBio);
				this.entityData.ShortBio = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.ShortBio, this.entityData.ShortBio);
				OnPropertyChanged("ShortBio");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WorkTypeId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String WorkTypeId
		{
			get
			{
				return this.entityData.WorkTypeId; 
			}
			
			set
			{
				if (this.entityData.WorkTypeId == value)
					return;
					
				OnColumnChanging(MembersColumn.WorkTypeId, this.entityData.WorkTypeId);
				this.entityData.WorkTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.WorkTypeId, this.entityData.WorkTypeId);
				OnPropertyChanged("WorkTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Memberships property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 512)]
		public virtual System.String Memberships
		{
			get
			{
				return this.entityData.Memberships; 
			}
			
			set
			{
				if (this.entityData.Memberships == value)
					return;
					
				OnColumnChanging(MembersColumn.Memberships, this.entityData.Memberships);
				this.entityData.Memberships = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Memberships, this.entityData.Memberships);
				OnPropertyChanged("Memberships");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberStatusId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMemberStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MemberStatusId
		{
			get
			{
				return this.entityData.MemberStatusId; 
			}
			
			set
			{
				if (this.entityData.MemberStatusId == value)
					return;
					
				OnColumnChanging(MembersColumn.MemberStatusId, this.entityData.MemberStatusId);
				this.entityData.MemberStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MemberStatusId, this.entityData.MemberStatusId);
				OnPropertyChanged("MemberStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LinkedInAccessToken property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LinkedInAccessToken
		{
			get
			{
				return this.entityData.LinkedInAccessToken; 
			}
			
			set
			{
				if (this.entityData.LinkedInAccessToken == value)
					return;
					
				OnColumnChanging(MembersColumn.LinkedInAccessToken, this.entityData.LinkedInAccessToken);
				this.entityData.LinkedInAccessToken = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.LinkedInAccessToken, this.entityData.LinkedInAccessToken);
				OnPropertyChanged("LinkedInAccessToken");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ExternalMemberId property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ExternalMemberId
		{
			get
			{
				return this.entityData.ExternalMemberId; 
			}
			
			set
			{
				if (this.entityData.ExternalMemberId == value)
					return;
					
				OnColumnChanging(MembersColumn.ExternalMemberId, this.entityData.ExternalMemberId);
				this.entityData.ExternalMemberId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.ExternalMemberId, this.entityData.ExternalMemberId);
				OnPropertyChanged("ExternalMemberId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PassportNo property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String PassportNo
		{
			get
			{
				return this.entityData.PassportNo; 
			}
			
			set
			{
				if (this.entityData.PassportNo == value)
					return;
					
				OnColumnChanging(MembersColumn.PassportNo, this.entityData.PassportNo);
				this.entityData.PassportNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PassportNo, this.entityData.PassportNo);
				OnPropertyChanged("PassportNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MailingAddress1 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String MailingAddress1
		{
			get
			{
				return this.entityData.MailingAddress1; 
			}
			
			set
			{
				if (this.entityData.MailingAddress1 == value)
					return;
					
				OnColumnChanging(MembersColumn.MailingAddress1, this.entityData.MailingAddress1);
				this.entityData.MailingAddress1 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MailingAddress1, this.entityData.MailingAddress1);
				OnPropertyChanged("MailingAddress1");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MailingAddress2 property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String MailingAddress2
		{
			get
			{
				return this.entityData.MailingAddress2; 
			}
			
			set
			{
				if (this.entityData.MailingAddress2 == value)
					return;
					
				OnColumnChanging(MembersColumn.MailingAddress2, this.entityData.MailingAddress2);
				this.entityData.MailingAddress2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MailingAddress2, this.entityData.MailingAddress2);
				OnPropertyChanged("MailingAddress2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MailingStates property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1020)]
		public virtual System.String MailingStates
		{
			get
			{
				return this.entityData.MailingStates; 
			}
			
			set
			{
				if (this.entityData.MailingStates == value)
					return;
					
				OnColumnChanging(MembersColumn.MailingStates, this.entityData.MailingStates);
				this.entityData.MailingStates = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MailingStates, this.entityData.MailingStates);
				OnPropertyChanged("MailingStates");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MailingSuburb property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1020)]
		public virtual System.String MailingSuburb
		{
			get
			{
				return this.entityData.MailingSuburb; 
			}
			
			set
			{
				if (this.entityData.MailingSuburb == value)
					return;
					
				OnColumnChanging(MembersColumn.MailingSuburb, this.entityData.MailingSuburb);
				this.entityData.MailingSuburb = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MailingSuburb, this.entityData.MailingSuburb);
				OnPropertyChanged("MailingSuburb");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MailingPostCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1020)]
		public virtual System.String MailingPostCode
		{
			get
			{
				return this.entityData.MailingPostCode; 
			}
			
			set
			{
				if (this.entityData.MailingPostCode == value)
					return;
					
				OnColumnChanging(MembersColumn.MailingPostCode, this.entityData.MailingPostCode);
				this.entityData.MailingPostCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MailingPostCode, this.entityData.MailingPostCode);
				OnPropertyChanged("MailingPostCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MailingCountryId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMailingCountryIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MailingCountryId
		{
			get
			{
				return this.entityData.MailingCountryId; 
			}
			
			set
			{
				if (this.entityData.MailingCountryId == value)
					return;
					
				OnColumnChanging(MembersColumn.MailingCountryId, this.entityData.MailingCountryId);
				this.entityData.MailingCountryId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MailingCountryId, this.entityData.MailingCountryId);
				OnPropertyChanged("MailingCountryId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CountryName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String CountryName
		{
			get
			{
				return this.entityData.CountryName; 
			}
			
			set
			{
				if (this.entityData.CountryName == value)
					return;
					
				OnColumnChanging(MembersColumn.CountryName, this.entityData.CountryName);
				this.entityData.CountryName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.CountryName, this.entityData.CountryName);
				OnPropertyChanged("CountryName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MailingCountryName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String MailingCountryName
		{
			get
			{
				return this.entityData.MailingCountryName; 
			}
			
			set
			{
				if (this.entityData.MailingCountryName == value)
					return;
					
				OnColumnChanging(MembersColumn.MailingCountryName, this.entityData.MailingCountryName);
				this.entityData.MailingCountryName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MailingCountryName, this.entityData.MailingCountryName);
				OnPropertyChanged("MailingCountryName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoginAttempts property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 LoginAttempts
		{
			get
			{
				return this.entityData.LoginAttempts; 
			}
			
			set
			{
				if (this.entityData.LoginAttempts == value)
					return;
					
				OnColumnChanging(MembersColumn.LoginAttempts, this.entityData.LoginAttempts);
				this.entityData.LoginAttempts = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.LoginAttempts, this.entityData.LoginAttempts);
				OnPropertyChanged("LoginAttempts");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastAttemptDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastAttemptDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastAttemptDate
		{
			get
			{
				return this.entityData.LastAttemptDate; 
			}
			
			set
			{
				if (this.entityData.LastAttemptDate == value)
					return;
					
				OnColumnChanging(MembersColumn.LastAttemptDate, this.entityData.LastAttemptDate);
				this.entityData.LastAttemptDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.LastAttemptDate, this.entityData.LastAttemptDate);
				OnPropertyChanged("LastAttemptDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Status property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsStatusNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Status
		{
			get
			{
				return this.entityData.Status; 
			}
			
			set
			{
				if (this.entityData.Status == value)
					return;
					
				OnColumnChanging(MembersColumn.Status, this.entityData.Status);
				this.entityData.Status = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.Status, this.entityData.Status);
				OnPropertyChanged("Status");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastTermsAndConditionsDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastTermsAndConditionsDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastTermsAndConditionsDate
		{
			get
			{
				return this.entityData.LastTermsAndConditionsDate; 
			}
			
			set
			{
				if (this.entityData.LastTermsAndConditionsDate == value)
					return;
					
				OnColumnChanging(MembersColumn.LastTermsAndConditionsDate, this.entityData.LastTermsAndConditionsDate);
				this.entityData.LastTermsAndConditionsDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.LastTermsAndConditionsDate, this.entityData.LastTermsAndConditionsDate);
				OnPropertyChanged("LastTermsAndConditionsDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DefaultLanguageId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsDefaultLanguageIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? DefaultLanguageId
		{
			get
			{
				return this.entityData.DefaultLanguageId; 
			}
			
			set
			{
				if (this.entityData.DefaultLanguageId == value)
					return;
					
				OnColumnChanging(MembersColumn.DefaultLanguageId, this.entityData.DefaultLanguageId);
				this.entityData.DefaultLanguageId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.DefaultLanguageId, this.entityData.DefaultLanguageId);
				OnPropertyChanged("DefaultLanguageId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReferringSiteId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsReferringSiteIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? ReferringSiteId
		{
			get
			{
				return this.entityData.ReferringSiteId; 
			}
			
			set
			{
				if (this.entityData.ReferringSiteId == value)
					return;
					
				OnColumnChanging(MembersColumn.ReferringSiteId, this.entityData.ReferringSiteId);
				this.entityData.ReferringSiteId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.ReferringSiteId, this.entityData.ReferringSiteId);
				OnPropertyChanged("ReferringSiteId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MultiLingualFirstName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String MultiLingualFirstName
		{
			get
			{
				return this.entityData.MultiLingualFirstName; 
			}
			
			set
			{
				if (this.entityData.MultiLingualFirstName == value)
					return;
					
				OnColumnChanging(MembersColumn.MultiLingualFirstName, this.entityData.MultiLingualFirstName);
				this.entityData.MultiLingualFirstName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MultiLingualFirstName, this.entityData.MultiLingualFirstName);
				OnPropertyChanged("MultiLingualFirstName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MultiLingualSurame property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 510)]
		public virtual System.String MultiLingualSurame
		{
			get
			{
				return this.entityData.MultiLingualSurame; 
			}
			
			set
			{
				if (this.entityData.MultiLingualSurame == value)
					return;
					
				OnColumnChanging(MembersColumn.MultiLingualSurame, this.entityData.MultiLingualSurame);
				this.entityData.MultiLingualSurame = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.MultiLingualSurame, this.entityData.MultiLingualSurame);
				OnPropertyChanged("MultiLingualSurame");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SecondaryEmail property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String SecondaryEmail
		{
			get
			{
				return this.entityData.SecondaryEmail; 
			}
			
			set
			{
				if (this.entityData.SecondaryEmail == value)
					return;
					
				OnColumnChanging(MembersColumn.SecondaryEmail, this.entityData.SecondaryEmail);
				this.entityData.SecondaryEmail = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.SecondaryEmail, this.entityData.SecondaryEmail);
				OnPropertyChanged("SecondaryEmail");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CandidateData property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String CandidateData
		{
			get
			{
				return this.entityData.CandidateData; 
			}
			
			set
			{
				if (this.entityData.CandidateData == value)
					return;
					
				OnColumnChanging(MembersColumn.CandidateData, this.entityData.CandidateData);
				this.entityData.CandidateData = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.CandidateData, this.entityData.CandidateData);
				OnPropertyChanged("CandidateData");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EligibleToWorkIn property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String EligibleToWorkIn
		{
			get
			{
				return this.entityData.EligibleToWorkIn; 
			}
			
			set
			{
				if (this.entityData.EligibleToWorkIn == value)
					return;
					
				OnColumnChanging(MembersColumn.EligibleToWorkIn, this.entityData.EligibleToWorkIn);
				this.entityData.EligibleToWorkIn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.EligibleToWorkIn, this.entityData.EligibleToWorkIn);
				OnPropertyChanged("EligibleToWorkIn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReferenceUponRequest property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsReferenceUponRequestNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? ReferenceUponRequest
		{
			get
			{
				return this.entityData.ReferenceUponRequest; 
			}
			
			set
			{
				if (this.entityData.ReferenceUponRequest == value)
					return;
					
				OnColumnChanging(MembersColumn.ReferenceUponRequest, this.entityData.ReferenceUponRequest);
				this.entityData.ReferenceUponRequest = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.ReferenceUponRequest, this.entityData.ReferenceUponRequest);
				OnPropertyChanged("ReferenceUponRequest");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PreferredLine property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 PreferredLine
		{
			get
			{
				return this.entityData.PreferredLine; 
			}
			
			set
			{
				if (this.entityData.PreferredLine == value)
					return;
					
				OnColumnChanging(MembersColumn.PreferredLine, this.entityData.PreferredLine);
				this.entityData.PreferredLine = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.PreferredLine, this.entityData.PreferredLine);
				OnPropertyChanged("PreferredLine");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VideoUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String VideoUrl
		{
			get
			{
				return this.entityData.VideoUrl; 
			}
			
			set
			{
				if (this.entityData.VideoUrl == value)
					return;
					
				OnColumnChanging(MembersColumn.VideoUrl, this.entityData.VideoUrl);
				this.entityData.VideoUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.VideoUrl, this.entityData.VideoUrl);
				OnPropertyChanged("VideoUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ProfileDataXml property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String ProfileDataXml
		{
			get
			{
				return this.entityData.ProfileDataXml; 
			}
			
			set
			{
				if (this.entityData.ProfileDataXml == value)
					return;
					
				OnColumnChanging(MembersColumn.ProfileDataXml, this.entityData.ProfileDataXml);
				this.entityData.ProfileDataXml = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.ProfileDataXml, this.entityData.ProfileDataXml);
				OnPropertyChanged("ProfileDataXml");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastProfileSubmittedDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastProfileSubmittedDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastProfileSubmittedDate
		{
			get
			{
				return this.entityData.LastProfileSubmittedDate; 
			}
			
			set
			{
				if (this.entityData.LastProfileSubmittedDate == value)
					return;
					
				OnColumnChanging(MembersColumn.LastProfileSubmittedDate, this.entityData.LastProfileSubmittedDate);
				this.entityData.LastProfileSubmittedDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(MembersColumn.LastProfileSubmittedDate, this.entityData.LastProfileSubmittedDate);
				OnPropertyChanged("LastProfileSubmittedDate");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="Countries"/>.
		/// </summary>
		/// <value>The source Countries for CountryId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Countries CountryIdSource
      	{
            get { return entityData.CountryIdSource; }
            set { entityData.CountryIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Educations"/>.
		/// </summary>
		/// <value>The source Educations for EducationId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Educations EducationIdSource
      	{
            get { return entityData.EducationIdSource; }
            set { entityData.EducationIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EmailFormats"/>.
		/// </summary>
		/// <value>The source EmailFormats for EmailFormat.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EmailFormats EmailFormatSource
      	{
            get { return entityData.EmailFormatSource; }
            set { entityData.EmailFormatSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Sites"/>.
		/// </summary>
		/// <value>The source Sites for SiteId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Sites SiteIdSource
      	{
            get { return entityData.SiteIdSource; }
            set { entityData.SiteIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of JobsSaved objects
		///	which are related to this object through the relation FK__JobsSaved__Membe__64054DAC
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobsSaved> JobsSavedCollection
		{
			get { return entityData.JobsSavedCollection; }
			set { entityData.JobsSavedCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MemberLanguages objects
		///	which are related to this object through the relation FK__MemberLan__Membe__071B8E18
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MemberLanguages> MemberLanguagesCollection
		{
			get { return entityData.MemberLanguagesCollection; }
			set { entityData.MemberLanguagesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MemberQualification objects
		///	which are related to this object through the relation fk_MemberQualificationMember
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MemberQualification> MemberQualificationCollection
		{
			get { return entityData.MemberQualificationCollection; }
			set { entityData.MemberQualificationCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobApplication objects
		///	which are related to this object through the relation FK__JobApplic__Membe__06F8B8D7
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobApplication> JobApplicationCollection
		{
			get { return entityData.JobApplicationCollection; }
			set { entityData.JobApplicationCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MemberReferences objects
		///	which are related to this object through the relation FK__MemberRef__Membe__7408B9A4
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MemberReferences> MemberReferencesCollection
		{
			get { return entityData.MemberReferencesCollection; }
			set { entityData.MemberReferencesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MemberCertificateMemberships objects
		///	which are related to this object through the relation FK__MemberCer__Membe__0256D8FB
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MemberCertificateMemberships> MemberCertificateMembershipsCollection
		{
			get { return entityData.MemberCertificateMembershipsCollection; }
			set { entityData.MemberCertificateMembershipsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MemberPositions objects
		///	which are related to this object through the relation fk_MemberPositionsMember
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MemberPositions> MemberPositionsCollection
		{
			get { return entityData.MemberPositionsCollection; }
			set { entityData.MemberPositionsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MemberLicenses objects
		///	which are related to this object through the relation FK__MemberLic__Membe__7D9223DE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MemberLicenses> MemberLicensesCollection
		{
			get { return entityData.MemberLicensesCollection; }
			set { entityData.MemberLicensesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MemberFiles objects
		///	which are related to this object through the relation FK__MemberFil__Membe__76969D2E
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MemberFiles> MemberFilesCollection
		{
			get { return entityData.MemberFilesCollection; }
			set { entityData.MemberFilesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobApplicationNotes objects
		///	which are related to this object through the relation FK__JobApplic__Membe__68CA02C9
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobApplicationNotes> JobApplicationNotesCollection
		{
			get { return entityData.JobApplicationNotesCollection; }
			set { entityData.JobApplicationNotesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of JobAlerts objects
		///	which are related to this object through the relation FK__JobAlerts__Membe__1D07F587
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<JobAlerts> JobAlertsCollection
		{
			get { return entityData.JobAlertsCollection; }
			set { entityData.JobAlertsCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Username", "Username", 510));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("Password", "Password"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Password", "Password", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Title", "Title", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FirstName", "First Name", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Surname", "Surname", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("EmailAddress", "Email Address", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Company", "Company", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Position", "Position", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HomePhone", "Home Phone", 40));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("WorkPhone", "Work Phone", 40));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MobilePhone", "Mobile Phone", 40));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Fax", "Fax", 40));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Address1", "Address1", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Address2", "Address2", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LocationId", "Location Id", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("AreaId", "Area Id", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PreferredCategoryId", "Preferred Category Id", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PreferredSubCategoryId", "Preferred Sub Category Id", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Gender", "Gender", 1));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Tags", "Tags", 1000));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MemberUrlExtension", "Member Url Extension", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("WebsiteUrl", "Website Url", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UrlReferrer", "Url Referrer", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PreferredJobTitle", "Preferred Job Title", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PreferredAvailability", "Preferred Availability", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PreferredSalaryFrom", "Preferred Salary From", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PreferredSalaryTo", "Preferred Salary To", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CurrentSalaryFrom", "Current Salary From", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CurrentSalaryTo", "Current Salary To", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LookingFor", "Looking For", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ProfileType", "Profile Type", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("States", "States", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Suburb", "Suburb", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PostCode", "Post Code", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ProfilePicture", "Profile Picture", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("WorkTypeId", "Work Type Id", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Memberships", "Memberships", 512));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LinkedInAccessToken", "Linked In Access Token", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ExternalMemberId", "External Member Id", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PassportNo", "Passport No", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MailingAddress1", "Mailing Address1", 1000));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MailingAddress2", "Mailing Address2", 1000));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MailingStates", "Mailing States", 1020));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MailingSuburb", "Mailing Suburb", 1020));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MailingPostCode", "Mailing Post Code", 1020));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CountryName", "Country Name", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MailingCountryName", "Mailing Country Name", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MultiLingualFirstName", "Multi Lingual First Name", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MultiLingualSurame", "Multi Lingual Surame", 510));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SecondaryEmail", "Secondary Email", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("EligibleToWorkIn", "Eligible To Work In", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("VideoUrl", "Video Url", 500));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "Members"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"MemberID", "SiteID", "Username", "Password", "Title", "FirstName", "Surname", "EmailAddress", "Company", "Position", "HomePhone", "WorkPhone", "MobilePhone", "Fax", "Address1", "Address2", "LocationID", "AreaID", "CountryID", "PreferredCategoryID", "PreferredSubCategoryID", "PreferredSalaryID", "Subscribed", "MonthlyUpdate", "ReferringMemberID", "LastModifiedDate", "Valid", "EmailFormat", "LastLogon", "DateOfBirth", "Gender", "Tags", "Validated", "ValidateGUID", "MemberURLExtension", "WebsiteURL", "AvailabilityID", "AvailabilityFromDate", "MySpaceHeading", "MySpaceContent", "URLReferrer", "RequiredPasswordChange", "PreferredJobTitle", "PreferredAvailability", "PreferredAvailabilityType", "PreferredSalaryFrom", "PreferredSalaryTo", "CurrentSalaryFrom", "CurrentSalaryTo", "LookingFor", "Experience", "Skills", "Reasons", "Comments", "ProfileType", "EducationID", "SearchField", "RegisteredDate", "States", "Suburb", "PostCode", "ProfilePicture", "ShortBio", "WorkTypeID", "Memberships", "MemberStatusID", "LinkedInAccessToken", "ExternalMemberID", "PassportNo", "MailingAddress1", "MailingAddress2", "MailingStates", "MailingSuburb", "MailingPostCode", "MailingCountryID", "CountryName", "MailingCountryName", "LoginAttempts", "LastAttemptDate", "Status", "LastTermsAndConditionsDate", "DefaultLanguageId", "ReferringSiteID", "MultiLingualFirstName", "MultiLingualSurame", "SecondaryEmail", "CandidateData", "EligibleToWorkIn", "ReferenceUponRequest", "PreferredLine", "VideoURL", "ProfileDataXML", "LastProfileSubmittedDate"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as MembersEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (Members) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<Members>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as Members);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Members Entity 
		///</summary>
		protected virtual Members Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			Members copy = new Members();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.MemberId = this.MemberId;
				copy.SiteId = this.SiteId;
				copy.Username = this.Username;
				copy.Password = this.Password;
				copy.Title = this.Title;
				copy.FirstName = this.FirstName;
				copy.Surname = this.Surname;
				copy.EmailAddress = this.EmailAddress;
				copy.Company = this.Company;
				copy.Position = this.Position;
				copy.HomePhone = this.HomePhone;
				copy.WorkPhone = this.WorkPhone;
				copy.MobilePhone = this.MobilePhone;
				copy.Fax = this.Fax;
				copy.Address1 = this.Address1;
				copy.Address2 = this.Address2;
				copy.LocationId = this.LocationId;
				copy.AreaId = this.AreaId;
				copy.CountryId = this.CountryId;
				copy.PreferredCategoryId = this.PreferredCategoryId;
				copy.PreferredSubCategoryId = this.PreferredSubCategoryId;
				copy.PreferredSalaryId = this.PreferredSalaryId;
				copy.Subscribed = this.Subscribed;
				copy.MonthlyUpdate = this.MonthlyUpdate;
				copy.ReferringMemberId = this.ReferringMemberId;
				copy.LastModifiedDate = this.LastModifiedDate;
				copy.Valid = this.Valid;
				copy.EmailFormat = this.EmailFormat;
				copy.LastLogon = this.LastLogon;
				copy.DateOfBirth = this.DateOfBirth;
				copy.Gender = this.Gender;
				copy.Tags = this.Tags;
				copy.Validated = this.Validated;
				copy.ValidateGuid = this.ValidateGuid;
				copy.MemberUrlExtension = this.MemberUrlExtension;
				copy.WebsiteUrl = this.WebsiteUrl;
				copy.AvailabilityId = this.AvailabilityId;
				copy.AvailabilityFromDate = this.AvailabilityFromDate;
				copy.MySpaceHeading = this.MySpaceHeading;
				copy.MySpaceContent = this.MySpaceContent;
				copy.UrlReferrer = this.UrlReferrer;
				copy.RequiredPasswordChange = this.RequiredPasswordChange;
				copy.PreferredJobTitle = this.PreferredJobTitle;
				copy.PreferredAvailability = this.PreferredAvailability;
				copy.PreferredAvailabilityType = this.PreferredAvailabilityType;
				copy.PreferredSalaryFrom = this.PreferredSalaryFrom;
				copy.PreferredSalaryTo = this.PreferredSalaryTo;
				copy.CurrentSalaryFrom = this.CurrentSalaryFrom;
				copy.CurrentSalaryTo = this.CurrentSalaryTo;
				copy.LookingFor = this.LookingFor;
				copy.Experience = this.Experience;
				copy.Skills = this.Skills;
				copy.Reasons = this.Reasons;
				copy.Comments = this.Comments;
				copy.ProfileType = this.ProfileType;
				copy.EducationId = this.EducationId;
				copy.SearchField = this.SearchField;
				copy.RegisteredDate = this.RegisteredDate;
				copy.States = this.States;
				copy.Suburb = this.Suburb;
				copy.PostCode = this.PostCode;
				copy.ProfilePicture = this.ProfilePicture;
				copy.ShortBio = this.ShortBio;
				copy.WorkTypeId = this.WorkTypeId;
				copy.Memberships = this.Memberships;
				copy.MemberStatusId = this.MemberStatusId;
				copy.LinkedInAccessToken = this.LinkedInAccessToken;
				copy.ExternalMemberId = this.ExternalMemberId;
				copy.PassportNo = this.PassportNo;
				copy.MailingAddress1 = this.MailingAddress1;
				copy.MailingAddress2 = this.MailingAddress2;
				copy.MailingStates = this.MailingStates;
				copy.MailingSuburb = this.MailingSuburb;
				copy.MailingPostCode = this.MailingPostCode;
				copy.MailingCountryId = this.MailingCountryId;
				copy.CountryName = this.CountryName;
				copy.MailingCountryName = this.MailingCountryName;
				copy.LoginAttempts = this.LoginAttempts;
				copy.LastAttemptDate = this.LastAttemptDate;
				copy.Status = this.Status;
				copy.LastTermsAndConditionsDate = this.LastTermsAndConditionsDate;
				copy.DefaultLanguageId = this.DefaultLanguageId;
				copy.ReferringSiteId = this.ReferringSiteId;
				copy.MultiLingualFirstName = this.MultiLingualFirstName;
				copy.MultiLingualSurame = this.MultiLingualSurame;
				copy.SecondaryEmail = this.SecondaryEmail;
				copy.CandidateData = this.CandidateData;
				copy.EligibleToWorkIn = this.EligibleToWorkIn;
				copy.ReferenceUponRequest = this.ReferenceUponRequest;
				copy.PreferredLine = this.PreferredLine;
				copy.VideoUrl = this.VideoUrl;
				copy.ProfileDataXml = this.ProfileDataXml;
				copy.LastProfileSubmittedDate = this.LastProfileSubmittedDate;
			
			if (this.CountryIdSource != null && existingCopies.Contains(this.CountryIdSource))
				copy.CountryIdSource = existingCopies[this.CountryIdSource] as Countries;
			else
				copy.CountryIdSource = MakeCopyOf(this.CountryIdSource, existingCopies) as Countries;
			if (this.EducationIdSource != null && existingCopies.Contains(this.EducationIdSource))
				copy.EducationIdSource = existingCopies[this.EducationIdSource] as Educations;
			else
				copy.EducationIdSource = MakeCopyOf(this.EducationIdSource, existingCopies) as Educations;
			if (this.EmailFormatSource != null && existingCopies.Contains(this.EmailFormatSource))
				copy.EmailFormatSource = existingCopies[this.EmailFormatSource] as EmailFormats;
			else
				copy.EmailFormatSource = MakeCopyOf(this.EmailFormatSource, existingCopies) as EmailFormats;
			if (this.SiteIdSource != null && existingCopies.Contains(this.SiteIdSource))
				copy.SiteIdSource = existingCopies[this.SiteIdSource] as Sites;
			else
				copy.SiteIdSource = MakeCopyOf(this.SiteIdSource, existingCopies) as Sites;
		
			//deep copy nested objects
			copy.JobsSavedCollection = (TList<JobsSaved>) MakeCopyOf(this.JobsSavedCollection, existingCopies); 
			copy.MemberLanguagesCollection = (TList<MemberLanguages>) MakeCopyOf(this.MemberLanguagesCollection, existingCopies); 
			copy.MemberQualificationCollection = (TList<MemberQualification>) MakeCopyOf(this.MemberQualificationCollection, existingCopies); 
			copy.JobApplicationCollection = (TList<JobApplication>) MakeCopyOf(this.JobApplicationCollection, existingCopies); 
			copy.MemberReferencesCollection = (TList<MemberReferences>) MakeCopyOf(this.MemberReferencesCollection, existingCopies); 
			copy.MemberCertificateMembershipsCollection = (TList<MemberCertificateMemberships>) MakeCopyOf(this.MemberCertificateMembershipsCollection, existingCopies); 
			copy.MemberPositionsCollection = (TList<MemberPositions>) MakeCopyOf(this.MemberPositionsCollection, existingCopies); 
			copy.MemberLicensesCollection = (TList<MemberLicenses>) MakeCopyOf(this.MemberLicensesCollection, existingCopies); 
			copy.MemberFilesCollection = (TList<MemberFiles>) MakeCopyOf(this.MemberFilesCollection, existingCopies); 
			copy.JobApplicationNotesCollection = (TList<JobApplicationNotes>) MakeCopyOf(this.JobApplicationNotesCollection, existingCopies); 
			copy.JobAlertsCollection = (TList<JobAlerts>) MakeCopyOf(this.JobAlertsCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed Members Entity 
		///</summary>
		public virtual Members Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed Members Entity which is a deep copy of the current entity.
		///</summary>
		public virtual Members DeepCopy()
		{
			return EntityHelper.Clone<Members>(this as Members);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as MembersEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new MembersEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as MembersEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(MembersColumn column)
		{
			switch(column)
			{
					case MembersColumn.MemberId:
					return entityData.MemberId != _originalData.MemberId;
					case MembersColumn.SiteId:
					return entityData.SiteId != _originalData.SiteId;
					case MembersColumn.Username:
					return entityData.Username != _originalData.Username;
					case MembersColumn.Password:
					return entityData.Password != _originalData.Password;
					case MembersColumn.Title:
					return entityData.Title != _originalData.Title;
					case MembersColumn.FirstName:
					return entityData.FirstName != _originalData.FirstName;
					case MembersColumn.Surname:
					return entityData.Surname != _originalData.Surname;
					case MembersColumn.EmailAddress:
					return entityData.EmailAddress != _originalData.EmailAddress;
					case MembersColumn.Company:
					return entityData.Company != _originalData.Company;
					case MembersColumn.Position:
					return entityData.Position != _originalData.Position;
					case MembersColumn.HomePhone:
					return entityData.HomePhone != _originalData.HomePhone;
					case MembersColumn.WorkPhone:
					return entityData.WorkPhone != _originalData.WorkPhone;
					case MembersColumn.MobilePhone:
					return entityData.MobilePhone != _originalData.MobilePhone;
					case MembersColumn.Fax:
					return entityData.Fax != _originalData.Fax;
					case MembersColumn.Address1:
					return entityData.Address1 != _originalData.Address1;
					case MembersColumn.Address2:
					return entityData.Address2 != _originalData.Address2;
					case MembersColumn.LocationId:
					return entityData.LocationId != _originalData.LocationId;
					case MembersColumn.AreaId:
					return entityData.AreaId != _originalData.AreaId;
					case MembersColumn.CountryId:
					return entityData.CountryId != _originalData.CountryId;
					case MembersColumn.PreferredCategoryId:
					return entityData.PreferredCategoryId != _originalData.PreferredCategoryId;
					case MembersColumn.PreferredSubCategoryId:
					return entityData.PreferredSubCategoryId != _originalData.PreferredSubCategoryId;
					case MembersColumn.PreferredSalaryId:
					return entityData.PreferredSalaryId != _originalData.PreferredSalaryId;
					case MembersColumn.Subscribed:
					return entityData.Subscribed != _originalData.Subscribed;
					case MembersColumn.MonthlyUpdate:
					return entityData.MonthlyUpdate != _originalData.MonthlyUpdate;
					case MembersColumn.ReferringMemberId:
					return entityData.ReferringMemberId != _originalData.ReferringMemberId;
					case MembersColumn.LastModifiedDate:
					return entityData.LastModifiedDate != _originalData.LastModifiedDate;
					case MembersColumn.Valid:
					return entityData.Valid != _originalData.Valid;
					case MembersColumn.EmailFormat:
					return entityData.EmailFormat != _originalData.EmailFormat;
					case MembersColumn.LastLogon:
					return entityData.LastLogon != _originalData.LastLogon;
					case MembersColumn.DateOfBirth:
					return entityData.DateOfBirth != _originalData.DateOfBirth;
					case MembersColumn.Gender:
					return entityData.Gender != _originalData.Gender;
					case MembersColumn.Tags:
					return entityData.Tags != _originalData.Tags;
					case MembersColumn.Validated:
					return entityData.Validated != _originalData.Validated;
					case MembersColumn.ValidateGuid:
					return entityData.ValidateGuid != _originalData.ValidateGuid;
					case MembersColumn.MemberUrlExtension:
					return entityData.MemberUrlExtension != _originalData.MemberUrlExtension;
					case MembersColumn.WebsiteUrl:
					return entityData.WebsiteUrl != _originalData.WebsiteUrl;
					case MembersColumn.AvailabilityId:
					return entityData.AvailabilityId != _originalData.AvailabilityId;
					case MembersColumn.AvailabilityFromDate:
					return entityData.AvailabilityFromDate != _originalData.AvailabilityFromDate;
					case MembersColumn.MySpaceHeading:
					return entityData.MySpaceHeading != _originalData.MySpaceHeading;
					case MembersColumn.MySpaceContent:
					return entityData.MySpaceContent != _originalData.MySpaceContent;
					case MembersColumn.UrlReferrer:
					return entityData.UrlReferrer != _originalData.UrlReferrer;
					case MembersColumn.RequiredPasswordChange:
					return entityData.RequiredPasswordChange != _originalData.RequiredPasswordChange;
					case MembersColumn.PreferredJobTitle:
					return entityData.PreferredJobTitle != _originalData.PreferredJobTitle;
					case MembersColumn.PreferredAvailability:
					return entityData.PreferredAvailability != _originalData.PreferredAvailability;
					case MembersColumn.PreferredAvailabilityType:
					return entityData.PreferredAvailabilityType != _originalData.PreferredAvailabilityType;
					case MembersColumn.PreferredSalaryFrom:
					return entityData.PreferredSalaryFrom != _originalData.PreferredSalaryFrom;
					case MembersColumn.PreferredSalaryTo:
					return entityData.PreferredSalaryTo != _originalData.PreferredSalaryTo;
					case MembersColumn.CurrentSalaryFrom:
					return entityData.CurrentSalaryFrom != _originalData.CurrentSalaryFrom;
					case MembersColumn.CurrentSalaryTo:
					return entityData.CurrentSalaryTo != _originalData.CurrentSalaryTo;
					case MembersColumn.LookingFor:
					return entityData.LookingFor != _originalData.LookingFor;
					case MembersColumn.Experience:
					return entityData.Experience != _originalData.Experience;
					case MembersColumn.Skills:
					return entityData.Skills != _originalData.Skills;
					case MembersColumn.Reasons:
					return entityData.Reasons != _originalData.Reasons;
					case MembersColumn.Comments:
					return entityData.Comments != _originalData.Comments;
					case MembersColumn.ProfileType:
					return entityData.ProfileType != _originalData.ProfileType;
					case MembersColumn.EducationId:
					return entityData.EducationId != _originalData.EducationId;
					case MembersColumn.SearchField:
					return entityData.SearchField != _originalData.SearchField;
					case MembersColumn.RegisteredDate:
					return entityData.RegisteredDate != _originalData.RegisteredDate;
					case MembersColumn.States:
					return entityData.States != _originalData.States;
					case MembersColumn.Suburb:
					return entityData.Suburb != _originalData.Suburb;
					case MembersColumn.PostCode:
					return entityData.PostCode != _originalData.PostCode;
					case MembersColumn.ProfilePicture:
					return entityData.ProfilePicture != _originalData.ProfilePicture;
					case MembersColumn.ShortBio:
					return entityData.ShortBio != _originalData.ShortBio;
					case MembersColumn.WorkTypeId:
					return entityData.WorkTypeId != _originalData.WorkTypeId;
					case MembersColumn.Memberships:
					return entityData.Memberships != _originalData.Memberships;
					case MembersColumn.MemberStatusId:
					return entityData.MemberStatusId != _originalData.MemberStatusId;
					case MembersColumn.LinkedInAccessToken:
					return entityData.LinkedInAccessToken != _originalData.LinkedInAccessToken;
					case MembersColumn.ExternalMemberId:
					return entityData.ExternalMemberId != _originalData.ExternalMemberId;
					case MembersColumn.PassportNo:
					return entityData.PassportNo != _originalData.PassportNo;
					case MembersColumn.MailingAddress1:
					return entityData.MailingAddress1 != _originalData.MailingAddress1;
					case MembersColumn.MailingAddress2:
					return entityData.MailingAddress2 != _originalData.MailingAddress2;
					case MembersColumn.MailingStates:
					return entityData.MailingStates != _originalData.MailingStates;
					case MembersColumn.MailingSuburb:
					return entityData.MailingSuburb != _originalData.MailingSuburb;
					case MembersColumn.MailingPostCode:
					return entityData.MailingPostCode != _originalData.MailingPostCode;
					case MembersColumn.MailingCountryId:
					return entityData.MailingCountryId != _originalData.MailingCountryId;
					case MembersColumn.CountryName:
					return entityData.CountryName != _originalData.CountryName;
					case MembersColumn.MailingCountryName:
					return entityData.MailingCountryName != _originalData.MailingCountryName;
					case MembersColumn.LoginAttempts:
					return entityData.LoginAttempts != _originalData.LoginAttempts;
					case MembersColumn.LastAttemptDate:
					return entityData.LastAttemptDate != _originalData.LastAttemptDate;
					case MembersColumn.Status:
					return entityData.Status != _originalData.Status;
					case MembersColumn.LastTermsAndConditionsDate:
					return entityData.LastTermsAndConditionsDate != _originalData.LastTermsAndConditionsDate;
					case MembersColumn.DefaultLanguageId:
					return entityData.DefaultLanguageId != _originalData.DefaultLanguageId;
					case MembersColumn.ReferringSiteId:
					return entityData.ReferringSiteId != _originalData.ReferringSiteId;
					case MembersColumn.MultiLingualFirstName:
					return entityData.MultiLingualFirstName != _originalData.MultiLingualFirstName;
					case MembersColumn.MultiLingualSurame:
					return entityData.MultiLingualSurame != _originalData.MultiLingualSurame;
					case MembersColumn.SecondaryEmail:
					return entityData.SecondaryEmail != _originalData.SecondaryEmail;
					case MembersColumn.CandidateData:
					return entityData.CandidateData != _originalData.CandidateData;
					case MembersColumn.EligibleToWorkIn:
					return entityData.EligibleToWorkIn != _originalData.EligibleToWorkIn;
					case MembersColumn.ReferenceUponRequest:
					return entityData.ReferenceUponRequest != _originalData.ReferenceUponRequest;
					case MembersColumn.PreferredLine:
					return entityData.PreferredLine != _originalData.PreferredLine;
					case MembersColumn.VideoUrl:
					return entityData.VideoUrl != _originalData.VideoUrl;
					case MembersColumn.ProfileDataXml:
					return entityData.ProfileDataXml != _originalData.ProfileDataXml;
					case MembersColumn.LastProfileSubmittedDate:
					return entityData.LastProfileSubmittedDate != _originalData.LastProfileSubmittedDate;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< MembersColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.MemberId != _originalData.MemberId;
			result = result || entityData.SiteId != _originalData.SiteId;
			result = result || entityData.Username != _originalData.Username;
			result = result || entityData.Password != _originalData.Password;
			result = result || entityData.Title != _originalData.Title;
			result = result || entityData.FirstName != _originalData.FirstName;
			result = result || entityData.Surname != _originalData.Surname;
			result = result || entityData.EmailAddress != _originalData.EmailAddress;
			result = result || entityData.Company != _originalData.Company;
			result = result || entityData.Position != _originalData.Position;
			result = result || entityData.HomePhone != _originalData.HomePhone;
			result = result || entityData.WorkPhone != _originalData.WorkPhone;
			result = result || entityData.MobilePhone != _originalData.MobilePhone;
			result = result || entityData.Fax != _originalData.Fax;
			result = result || entityData.Address1 != _originalData.Address1;
			result = result || entityData.Address2 != _originalData.Address2;
			result = result || entityData.LocationId != _originalData.LocationId;
			result = result || entityData.AreaId != _originalData.AreaId;
			result = result || entityData.CountryId != _originalData.CountryId;
			result = result || entityData.PreferredCategoryId != _originalData.PreferredCategoryId;
			result = result || entityData.PreferredSubCategoryId != _originalData.PreferredSubCategoryId;
			result = result || entityData.PreferredSalaryId != _originalData.PreferredSalaryId;
			result = result || entityData.Subscribed != _originalData.Subscribed;
			result = result || entityData.MonthlyUpdate != _originalData.MonthlyUpdate;
			result = result || entityData.ReferringMemberId != _originalData.ReferringMemberId;
			result = result || entityData.LastModifiedDate != _originalData.LastModifiedDate;
			result = result || entityData.Valid != _originalData.Valid;
			result = result || entityData.EmailFormat != _originalData.EmailFormat;
			result = result || entityData.LastLogon != _originalData.LastLogon;
			result = result || entityData.DateOfBirth != _originalData.DateOfBirth;
			result = result || entityData.Gender != _originalData.Gender;
			result = result || entityData.Tags != _originalData.Tags;
			result = result || entityData.Validated != _originalData.Validated;
			result = result || entityData.ValidateGuid != _originalData.ValidateGuid;
			result = result || entityData.MemberUrlExtension != _originalData.MemberUrlExtension;
			result = result || entityData.WebsiteUrl != _originalData.WebsiteUrl;
			result = result || entityData.AvailabilityId != _originalData.AvailabilityId;
			result = result || entityData.AvailabilityFromDate != _originalData.AvailabilityFromDate;
			result = result || entityData.MySpaceHeading != _originalData.MySpaceHeading;
			result = result || entityData.MySpaceContent != _originalData.MySpaceContent;
			result = result || entityData.UrlReferrer != _originalData.UrlReferrer;
			result = result || entityData.RequiredPasswordChange != _originalData.RequiredPasswordChange;
			result = result || entityData.PreferredJobTitle != _originalData.PreferredJobTitle;
			result = result || entityData.PreferredAvailability != _originalData.PreferredAvailability;
			result = result || entityData.PreferredAvailabilityType != _originalData.PreferredAvailabilityType;
			result = result || entityData.PreferredSalaryFrom != _originalData.PreferredSalaryFrom;
			result = result || entityData.PreferredSalaryTo != _originalData.PreferredSalaryTo;
			result = result || entityData.CurrentSalaryFrom != _originalData.CurrentSalaryFrom;
			result = result || entityData.CurrentSalaryTo != _originalData.CurrentSalaryTo;
			result = result || entityData.LookingFor != _originalData.LookingFor;
			result = result || entityData.Experience != _originalData.Experience;
			result = result || entityData.Skills != _originalData.Skills;
			result = result || entityData.Reasons != _originalData.Reasons;
			result = result || entityData.Comments != _originalData.Comments;
			result = result || entityData.ProfileType != _originalData.ProfileType;
			result = result || entityData.EducationId != _originalData.EducationId;
			result = result || entityData.SearchField != _originalData.SearchField;
			result = result || entityData.RegisteredDate != _originalData.RegisteredDate;
			result = result || entityData.States != _originalData.States;
			result = result || entityData.Suburb != _originalData.Suburb;
			result = result || entityData.PostCode != _originalData.PostCode;
			result = result || entityData.ProfilePicture != _originalData.ProfilePicture;
			result = result || entityData.ShortBio != _originalData.ShortBio;
			result = result || entityData.WorkTypeId != _originalData.WorkTypeId;
			result = result || entityData.Memberships != _originalData.Memberships;
			result = result || entityData.MemberStatusId != _originalData.MemberStatusId;
			result = result || entityData.LinkedInAccessToken != _originalData.LinkedInAccessToken;
			result = result || entityData.ExternalMemberId != _originalData.ExternalMemberId;
			result = result || entityData.PassportNo != _originalData.PassportNo;
			result = result || entityData.MailingAddress1 != _originalData.MailingAddress1;
			result = result || entityData.MailingAddress2 != _originalData.MailingAddress2;
			result = result || entityData.MailingStates != _originalData.MailingStates;
			result = result || entityData.MailingSuburb != _originalData.MailingSuburb;
			result = result || entityData.MailingPostCode != _originalData.MailingPostCode;
			result = result || entityData.MailingCountryId != _originalData.MailingCountryId;
			result = result || entityData.CountryName != _originalData.CountryName;
			result = result || entityData.MailingCountryName != _originalData.MailingCountryName;
			result = result || entityData.LoginAttempts != _originalData.LoginAttempts;
			result = result || entityData.LastAttemptDate != _originalData.LastAttemptDate;
			result = result || entityData.Status != _originalData.Status;
			result = result || entityData.LastTermsAndConditionsDate != _originalData.LastTermsAndConditionsDate;
			result = result || entityData.DefaultLanguageId != _originalData.DefaultLanguageId;
			result = result || entityData.ReferringSiteId != _originalData.ReferringSiteId;
			result = result || entityData.MultiLingualFirstName != _originalData.MultiLingualFirstName;
			result = result || entityData.MultiLingualSurame != _originalData.MultiLingualSurame;
			result = result || entityData.SecondaryEmail != _originalData.SecondaryEmail;
			result = result || entityData.CandidateData != _originalData.CandidateData;
			result = result || entityData.EligibleToWorkIn != _originalData.EligibleToWorkIn;
			result = result || entityData.ReferenceUponRequest != _originalData.ReferenceUponRequest;
			result = result || entityData.PreferredLine != _originalData.PreferredLine;
			result = result || entityData.VideoUrl != _originalData.VideoUrl;
			result = result || entityData.ProfileDataXml != _originalData.ProfileDataXml;
			result = result || entityData.LastProfileSubmittedDate != _originalData.LastProfileSubmittedDate;
			return result;
		}	
		
		///<summary>
		///  Returns a Members Entity with the original data.
		///</summary>
		public Members GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateMembers(
				_originalData.SiteId,
				_originalData.Username,
				_originalData.Password,
				_originalData.Title,
				_originalData.FirstName,
				_originalData.Surname,
				_originalData.EmailAddress,
				_originalData.Company,
				_originalData.Position,
				_originalData.HomePhone,
				_originalData.WorkPhone,
				_originalData.MobilePhone,
				_originalData.Fax,
				_originalData.Address1,
				_originalData.Address2,
				_originalData.LocationId,
				_originalData.AreaId,
				_originalData.CountryId,
				_originalData.PreferredCategoryId,
				_originalData.PreferredSubCategoryId,
				_originalData.PreferredSalaryId,
				_originalData.Subscribed,
				_originalData.MonthlyUpdate,
				_originalData.ReferringMemberId,
				_originalData.LastModifiedDate,
				_originalData.Valid,
				_originalData.EmailFormat,
				_originalData.LastLogon,
				_originalData.DateOfBirth,
				_originalData.Gender,
				_originalData.Tags,
				_originalData.Validated,
				_originalData.ValidateGuid,
				_originalData.MemberUrlExtension,
				_originalData.WebsiteUrl,
				_originalData.AvailabilityId,
				_originalData.AvailabilityFromDate,
				_originalData.MySpaceHeading,
				_originalData.MySpaceContent,
				_originalData.UrlReferrer,
				_originalData.RequiredPasswordChange,
				_originalData.PreferredJobTitle,
				_originalData.PreferredAvailability,
				_originalData.PreferredAvailabilityType,
				_originalData.PreferredSalaryFrom,
				_originalData.PreferredSalaryTo,
				_originalData.CurrentSalaryFrom,
				_originalData.CurrentSalaryTo,
				_originalData.LookingFor,
				_originalData.Experience,
				_originalData.Skills,
				_originalData.Reasons,
				_originalData.Comments,
				_originalData.ProfileType,
				_originalData.EducationId,
				_originalData.SearchField,
				_originalData.RegisteredDate,
				_originalData.States,
				_originalData.Suburb,
				_originalData.PostCode,
				_originalData.ProfilePicture,
				_originalData.ShortBio,
				_originalData.WorkTypeId,
				_originalData.Memberships,
				_originalData.MemberStatusId,
				_originalData.LinkedInAccessToken,
				_originalData.ExternalMemberId,
				_originalData.PassportNo,
				_originalData.MailingAddress1,
				_originalData.MailingAddress2,
				_originalData.MailingStates,
				_originalData.MailingSuburb,
				_originalData.MailingPostCode,
				_originalData.MailingCountryId,
				_originalData.CountryName,
				_originalData.MailingCountryName,
				_originalData.LoginAttempts,
				_originalData.LastAttemptDate,
				_originalData.Status,
				_originalData.LastTermsAndConditionsDate,
				_originalData.DefaultLanguageId,
				_originalData.ReferringSiteId,
				_originalData.MultiLingualFirstName,
				_originalData.MultiLingualSurame,
				_originalData.SecondaryEmail,
				_originalData.CandidateData,
				_originalData.EligibleToWorkIn,
				_originalData.ReferenceUponRequest,
				_originalData.PreferredLine,
				_originalData.VideoUrl,
				_originalData.ProfileDataXml,
				_originalData.LastProfileSubmittedDate
				);
				
			return (Members)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="MembersBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is MembersBase)
				return ValueEquals(this, (MembersBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="MembersBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.MemberId.GetHashCode() ^ 
					this.SiteId.GetHashCode() ^ 
					((this.Username == null) ? string.Empty : this.Username.ToString()).GetHashCode() ^ 
					this.Password.GetHashCode() ^ 
					((this.Title == null) ? string.Empty : this.Title.ToString()).GetHashCode() ^ 
					((this.FirstName == null) ? string.Empty : this.FirstName.ToString()).GetHashCode() ^ 
					((this.Surname == null) ? string.Empty : this.Surname.ToString()).GetHashCode() ^ 
					((this.EmailAddress == null) ? string.Empty : this.EmailAddress.ToString()).GetHashCode() ^ 
					((this.Company == null) ? string.Empty : this.Company.ToString()).GetHashCode() ^ 
					((this.Position == null) ? string.Empty : this.Position.ToString()).GetHashCode() ^ 
					((this.HomePhone == null) ? string.Empty : this.HomePhone.ToString()).GetHashCode() ^ 
					((this.WorkPhone == null) ? string.Empty : this.WorkPhone.ToString()).GetHashCode() ^ 
					((this.MobilePhone == null) ? string.Empty : this.MobilePhone.ToString()).GetHashCode() ^ 
					((this.Fax == null) ? string.Empty : this.Fax.ToString()).GetHashCode() ^ 
					((this.Address1 == null) ? string.Empty : this.Address1.ToString()).GetHashCode() ^ 
					((this.Address2 == null) ? string.Empty : this.Address2.ToString()).GetHashCode() ^ 
					((this.LocationId == null) ? string.Empty : this.LocationId.ToString()).GetHashCode() ^ 
					((this.AreaId == null) ? string.Empty : this.AreaId.ToString()).GetHashCode() ^ 
					this.CountryId.GetHashCode() ^ 
					((this.PreferredCategoryId == null) ? string.Empty : this.PreferredCategoryId.ToString()).GetHashCode() ^ 
					((this.PreferredSubCategoryId == null) ? string.Empty : this.PreferredSubCategoryId.ToString()).GetHashCode() ^ 
					((this.PreferredSalaryId == null) ? string.Empty : this.PreferredSalaryId.ToString()).GetHashCode() ^ 
					this.Subscribed.GetHashCode() ^ 
					this.MonthlyUpdate.GetHashCode() ^ 
					((this.ReferringMemberId == null) ? string.Empty : this.ReferringMemberId.ToString()).GetHashCode() ^ 
					((this.LastModifiedDate == null) ? string.Empty : this.LastModifiedDate.ToString()).GetHashCode() ^ 
					this.Valid.GetHashCode() ^ 
					this.EmailFormat.GetHashCode() ^ 
					((this.LastLogon == null) ? string.Empty : this.LastLogon.ToString()).GetHashCode() ^ 
					((this.DateOfBirth == null) ? string.Empty : this.DateOfBirth.ToString()).GetHashCode() ^ 
					((this.Gender == null) ? string.Empty : this.Gender.ToString()).GetHashCode() ^ 
					((this.Tags == null) ? string.Empty : this.Tags.ToString()).GetHashCode() ^ 
					this.Validated.GetHashCode() ^ 
					((this.ValidateGuid == null) ? string.Empty : this.ValidateGuid.ToString()).GetHashCode() ^ 
					((this.MemberUrlExtension == null) ? string.Empty : this.MemberUrlExtension.ToString()).GetHashCode() ^ 
					((this.WebsiteUrl == null) ? string.Empty : this.WebsiteUrl.ToString()).GetHashCode() ^ 
					((this.AvailabilityId == null) ? string.Empty : this.AvailabilityId.ToString()).GetHashCode() ^ 
					((this.AvailabilityFromDate == null) ? string.Empty : this.AvailabilityFromDate.ToString()).GetHashCode() ^ 
					((this.MySpaceHeading == null) ? string.Empty : this.MySpaceHeading.ToString()).GetHashCode() ^ 
					((this.MySpaceContent == null) ? string.Empty : this.MySpaceContent.ToString()).GetHashCode() ^ 
					((this.UrlReferrer == null) ? string.Empty : this.UrlReferrer.ToString()).GetHashCode() ^ 
					((this.RequiredPasswordChange == null) ? string.Empty : this.RequiredPasswordChange.ToString()).GetHashCode() ^ 
					((this.PreferredJobTitle == null) ? string.Empty : this.PreferredJobTitle.ToString()).GetHashCode() ^ 
					((this.PreferredAvailability == null) ? string.Empty : this.PreferredAvailability.ToString()).GetHashCode() ^ 
					((this.PreferredAvailabilityType == null) ? string.Empty : this.PreferredAvailabilityType.ToString()).GetHashCode() ^ 
					((this.PreferredSalaryFrom == null) ? string.Empty : this.PreferredSalaryFrom.ToString()).GetHashCode() ^ 
					((this.PreferredSalaryTo == null) ? string.Empty : this.PreferredSalaryTo.ToString()).GetHashCode() ^ 
					((this.CurrentSalaryFrom == null) ? string.Empty : this.CurrentSalaryFrom.ToString()).GetHashCode() ^ 
					((this.CurrentSalaryTo == null) ? string.Empty : this.CurrentSalaryTo.ToString()).GetHashCode() ^ 
					((this.LookingFor == null) ? string.Empty : this.LookingFor.ToString()).GetHashCode() ^ 
					((this.Experience == null) ? string.Empty : this.Experience.ToString()).GetHashCode() ^ 
					((this.Skills == null) ? string.Empty : this.Skills.ToString()).GetHashCode() ^ 
					((this.Reasons == null) ? string.Empty : this.Reasons.ToString()).GetHashCode() ^ 
					((this.Comments == null) ? string.Empty : this.Comments.ToString()).GetHashCode() ^ 
					((this.ProfileType == null) ? string.Empty : this.ProfileType.ToString()).GetHashCode() ^ 
					((this.EducationId == null) ? string.Empty : this.EducationId.ToString()).GetHashCode() ^ 
					((this.SearchField == null) ? string.Empty : this.SearchField.ToString()).GetHashCode() ^ 
					this.RegisteredDate.GetHashCode() ^ 
					((this.States == null) ? string.Empty : this.States.ToString()).GetHashCode() ^ 
					((this.Suburb == null) ? string.Empty : this.Suburb.ToString()).GetHashCode() ^ 
					((this.PostCode == null) ? string.Empty : this.PostCode.ToString()).GetHashCode() ^ 
					((this.ProfilePicture == null) ? string.Empty : this.ProfilePicture.ToString()).GetHashCode() ^ 
					((this.ShortBio == null) ? string.Empty : this.ShortBio.ToString()).GetHashCode() ^ 
					((this.WorkTypeId == null) ? string.Empty : this.WorkTypeId.ToString()).GetHashCode() ^ 
					((this.Memberships == null) ? string.Empty : this.Memberships.ToString()).GetHashCode() ^ 
					((this.MemberStatusId == null) ? string.Empty : this.MemberStatusId.ToString()).GetHashCode() ^ 
					((this.LinkedInAccessToken == null) ? string.Empty : this.LinkedInAccessToken.ToString()).GetHashCode() ^ 
					((this.ExternalMemberId == null) ? string.Empty : this.ExternalMemberId.ToString()).GetHashCode() ^ 
					((this.PassportNo == null) ? string.Empty : this.PassportNo.ToString()).GetHashCode() ^ 
					((this.MailingAddress1 == null) ? string.Empty : this.MailingAddress1.ToString()).GetHashCode() ^ 
					((this.MailingAddress2 == null) ? string.Empty : this.MailingAddress2.ToString()).GetHashCode() ^ 
					((this.MailingStates == null) ? string.Empty : this.MailingStates.ToString()).GetHashCode() ^ 
					((this.MailingSuburb == null) ? string.Empty : this.MailingSuburb.ToString()).GetHashCode() ^ 
					((this.MailingPostCode == null) ? string.Empty : this.MailingPostCode.ToString()).GetHashCode() ^ 
					((this.MailingCountryId == null) ? string.Empty : this.MailingCountryId.ToString()).GetHashCode() ^ 
					((this.CountryName == null) ? string.Empty : this.CountryName.ToString()).GetHashCode() ^ 
					((this.MailingCountryName == null) ? string.Empty : this.MailingCountryName.ToString()).GetHashCode() ^ 
					this.LoginAttempts.GetHashCode() ^ 
					((this.LastAttemptDate == null) ? string.Empty : this.LastAttemptDate.ToString()).GetHashCode() ^ 
					((this.Status == null) ? string.Empty : this.Status.ToString()).GetHashCode() ^ 
					((this.LastTermsAndConditionsDate == null) ? string.Empty : this.LastTermsAndConditionsDate.ToString()).GetHashCode() ^ 
					((this.DefaultLanguageId == null) ? string.Empty : this.DefaultLanguageId.ToString()).GetHashCode() ^ 
					((this.ReferringSiteId == null) ? string.Empty : this.ReferringSiteId.ToString()).GetHashCode() ^ 
					((this.MultiLingualFirstName == null) ? string.Empty : this.MultiLingualFirstName.ToString()).GetHashCode() ^ 
					((this.MultiLingualSurame == null) ? string.Empty : this.MultiLingualSurame.ToString()).GetHashCode() ^ 
					((this.SecondaryEmail == null) ? string.Empty : this.SecondaryEmail.ToString()).GetHashCode() ^ 
					((this.CandidateData == null) ? string.Empty : this.CandidateData.ToString()).GetHashCode() ^ 
					((this.EligibleToWorkIn == null) ? string.Empty : this.EligibleToWorkIn.ToString()).GetHashCode() ^ 
					((this.ReferenceUponRequest == null) ? string.Empty : this.ReferenceUponRequest.ToString()).GetHashCode() ^ 
					this.PreferredLine.GetHashCode() ^ 
					((this.VideoUrl == null) ? string.Empty : this.VideoUrl.ToString()).GetHashCode() ^ 
					((this.ProfileDataXml == null) ? string.Empty : this.ProfileDataXml.ToString()).GetHashCode() ^ 
					((this.LastProfileSubmittedDate == null) ? string.Empty : this.LastProfileSubmittedDate.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="MembersBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(MembersBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="MembersBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="MembersBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="MembersBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(MembersBase Object1, MembersBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.MemberId != Object2.MemberId)
				equal = false;
			if (Object1.SiteId != Object2.SiteId)
				equal = false;
			if ( Object1.Username != null && Object2.Username != null )
			{
				if (Object1.Username != Object2.Username)
					equal = false;
			}
			else if (Object1.Username == null ^ Object2.Username == null )
			{
				equal = false;
			}
			if (Object1.Password != Object2.Password)
				equal = false;
			if ( Object1.Title != null && Object2.Title != null )
			{
				if (Object1.Title != Object2.Title)
					equal = false;
			}
			else if (Object1.Title == null ^ Object2.Title == null )
			{
				equal = false;
			}
			if ( Object1.FirstName != null && Object2.FirstName != null )
			{
				if (Object1.FirstName != Object2.FirstName)
					equal = false;
			}
			else if (Object1.FirstName == null ^ Object2.FirstName == null )
			{
				equal = false;
			}
			if ( Object1.Surname != null && Object2.Surname != null )
			{
				if (Object1.Surname != Object2.Surname)
					equal = false;
			}
			else if (Object1.Surname == null ^ Object2.Surname == null )
			{
				equal = false;
			}
			if ( Object1.EmailAddress != null && Object2.EmailAddress != null )
			{
				if (Object1.EmailAddress != Object2.EmailAddress)
					equal = false;
			}
			else if (Object1.EmailAddress == null ^ Object2.EmailAddress == null )
			{
				equal = false;
			}
			if ( Object1.Company != null && Object2.Company != null )
			{
				if (Object1.Company != Object2.Company)
					equal = false;
			}
			else if (Object1.Company == null ^ Object2.Company == null )
			{
				equal = false;
			}
			if ( Object1.Position != null && Object2.Position != null )
			{
				if (Object1.Position != Object2.Position)
					equal = false;
			}
			else if (Object1.Position == null ^ Object2.Position == null )
			{
				equal = false;
			}
			if ( Object1.HomePhone != null && Object2.HomePhone != null )
			{
				if (Object1.HomePhone != Object2.HomePhone)
					equal = false;
			}
			else if (Object1.HomePhone == null ^ Object2.HomePhone == null )
			{
				equal = false;
			}
			if ( Object1.WorkPhone != null && Object2.WorkPhone != null )
			{
				if (Object1.WorkPhone != Object2.WorkPhone)
					equal = false;
			}
			else if (Object1.WorkPhone == null ^ Object2.WorkPhone == null )
			{
				equal = false;
			}
			if ( Object1.MobilePhone != null && Object2.MobilePhone != null )
			{
				if (Object1.MobilePhone != Object2.MobilePhone)
					equal = false;
			}
			else if (Object1.MobilePhone == null ^ Object2.MobilePhone == null )
			{
				equal = false;
			}
			if ( Object1.Fax != null && Object2.Fax != null )
			{
				if (Object1.Fax != Object2.Fax)
					equal = false;
			}
			else if (Object1.Fax == null ^ Object2.Fax == null )
			{
				equal = false;
			}
			if ( Object1.Address1 != null && Object2.Address1 != null )
			{
				if (Object1.Address1 != Object2.Address1)
					equal = false;
			}
			else if (Object1.Address1 == null ^ Object2.Address1 == null )
			{
				equal = false;
			}
			if ( Object1.Address2 != null && Object2.Address2 != null )
			{
				if (Object1.Address2 != Object2.Address2)
					equal = false;
			}
			else if (Object1.Address2 == null ^ Object2.Address2 == null )
			{
				equal = false;
			}
			if ( Object1.LocationId != null && Object2.LocationId != null )
			{
				if (Object1.LocationId != Object2.LocationId)
					equal = false;
			}
			else if (Object1.LocationId == null ^ Object2.LocationId == null )
			{
				equal = false;
			}
			if ( Object1.AreaId != null && Object2.AreaId != null )
			{
				if (Object1.AreaId != Object2.AreaId)
					equal = false;
			}
			else if (Object1.AreaId == null ^ Object2.AreaId == null )
			{
				equal = false;
			}
			if (Object1.CountryId != Object2.CountryId)
				equal = false;
			if ( Object1.PreferredCategoryId != null && Object2.PreferredCategoryId != null )
			{
				if (Object1.PreferredCategoryId != Object2.PreferredCategoryId)
					equal = false;
			}
			else if (Object1.PreferredCategoryId == null ^ Object2.PreferredCategoryId == null )
			{
				equal = false;
			}
			if ( Object1.PreferredSubCategoryId != null && Object2.PreferredSubCategoryId != null )
			{
				if (Object1.PreferredSubCategoryId != Object2.PreferredSubCategoryId)
					equal = false;
			}
			else if (Object1.PreferredSubCategoryId == null ^ Object2.PreferredSubCategoryId == null )
			{
				equal = false;
			}
			if ( Object1.PreferredSalaryId != null && Object2.PreferredSalaryId != null )
			{
				if (Object1.PreferredSalaryId != Object2.PreferredSalaryId)
					equal = false;
			}
			else if (Object1.PreferredSalaryId == null ^ Object2.PreferredSalaryId == null )
			{
				equal = false;
			}
			if (Object1.Subscribed != Object2.Subscribed)
				equal = false;
			if (Object1.MonthlyUpdate != Object2.MonthlyUpdate)
				equal = false;
			if ( Object1.ReferringMemberId != null && Object2.ReferringMemberId != null )
			{
				if (Object1.ReferringMemberId != Object2.ReferringMemberId)
					equal = false;
			}
			else if (Object1.ReferringMemberId == null ^ Object2.ReferringMemberId == null )
			{
				equal = false;
			}
			if ( Object1.LastModifiedDate != null && Object2.LastModifiedDate != null )
			{
				if (Object1.LastModifiedDate != Object2.LastModifiedDate)
					equal = false;
			}
			else if (Object1.LastModifiedDate == null ^ Object2.LastModifiedDate == null )
			{
				equal = false;
			}
			if (Object1.Valid != Object2.Valid)
				equal = false;
			if (Object1.EmailFormat != Object2.EmailFormat)
				equal = false;
			if ( Object1.LastLogon != null && Object2.LastLogon != null )
			{
				if (Object1.LastLogon != Object2.LastLogon)
					equal = false;
			}
			else if (Object1.LastLogon == null ^ Object2.LastLogon == null )
			{
				equal = false;
			}
			if ( Object1.DateOfBirth != null && Object2.DateOfBirth != null )
			{
				if (Object1.DateOfBirth != Object2.DateOfBirth)
					equal = false;
			}
			else if (Object1.DateOfBirth == null ^ Object2.DateOfBirth == null )
			{
				equal = false;
			}
			if ( Object1.Gender != null && Object2.Gender != null )
			{
				if (Object1.Gender != Object2.Gender)
					equal = false;
			}
			else if (Object1.Gender == null ^ Object2.Gender == null )
			{
				equal = false;
			}
			if ( Object1.Tags != null && Object2.Tags != null )
			{
				if (Object1.Tags != Object2.Tags)
					equal = false;
			}
			else if (Object1.Tags == null ^ Object2.Tags == null )
			{
				equal = false;
			}
			if (Object1.Validated != Object2.Validated)
				equal = false;
			if ( Object1.ValidateGuid != null && Object2.ValidateGuid != null )
			{
				if (Object1.ValidateGuid != Object2.ValidateGuid)
					equal = false;
			}
			else if (Object1.ValidateGuid == null ^ Object2.ValidateGuid == null )
			{
				equal = false;
			}
			if ( Object1.MemberUrlExtension != null && Object2.MemberUrlExtension != null )
			{
				if (Object1.MemberUrlExtension != Object2.MemberUrlExtension)
					equal = false;
			}
			else if (Object1.MemberUrlExtension == null ^ Object2.MemberUrlExtension == null )
			{
				equal = false;
			}
			if ( Object1.WebsiteUrl != null && Object2.WebsiteUrl != null )
			{
				if (Object1.WebsiteUrl != Object2.WebsiteUrl)
					equal = false;
			}
			else if (Object1.WebsiteUrl == null ^ Object2.WebsiteUrl == null )
			{
				equal = false;
			}
			if ( Object1.AvailabilityId != null && Object2.AvailabilityId != null )
			{
				if (Object1.AvailabilityId != Object2.AvailabilityId)
					equal = false;
			}
			else if (Object1.AvailabilityId == null ^ Object2.AvailabilityId == null )
			{
				equal = false;
			}
			if ( Object1.AvailabilityFromDate != null && Object2.AvailabilityFromDate != null )
			{
				if (Object1.AvailabilityFromDate != Object2.AvailabilityFromDate)
					equal = false;
			}
			else if (Object1.AvailabilityFromDate == null ^ Object2.AvailabilityFromDate == null )
			{
				equal = false;
			}
			if ( Object1.MySpaceHeading != null && Object2.MySpaceHeading != null )
			{
				if (Object1.MySpaceHeading != Object2.MySpaceHeading)
					equal = false;
			}
			else if (Object1.MySpaceHeading == null ^ Object2.MySpaceHeading == null )
			{
				equal = false;
			}
			if ( Object1.MySpaceContent != null && Object2.MySpaceContent != null )
			{
				if (Object1.MySpaceContent != Object2.MySpaceContent)
					equal = false;
			}
			else if (Object1.MySpaceContent == null ^ Object2.MySpaceContent == null )
			{
				equal = false;
			}
			if ( Object1.UrlReferrer != null && Object2.UrlReferrer != null )
			{
				if (Object1.UrlReferrer != Object2.UrlReferrer)
					equal = false;
			}
			else if (Object1.UrlReferrer == null ^ Object2.UrlReferrer == null )
			{
				equal = false;
			}
			if ( Object1.RequiredPasswordChange != null && Object2.RequiredPasswordChange != null )
			{
				if (Object1.RequiredPasswordChange != Object2.RequiredPasswordChange)
					equal = false;
			}
			else if (Object1.RequiredPasswordChange == null ^ Object2.RequiredPasswordChange == null )
			{
				equal = false;
			}
			if ( Object1.PreferredJobTitle != null && Object2.PreferredJobTitle != null )
			{
				if (Object1.PreferredJobTitle != Object2.PreferredJobTitle)
					equal = false;
			}
			else if (Object1.PreferredJobTitle == null ^ Object2.PreferredJobTitle == null )
			{
				equal = false;
			}
			if ( Object1.PreferredAvailability != null && Object2.PreferredAvailability != null )
			{
				if (Object1.PreferredAvailability != Object2.PreferredAvailability)
					equal = false;
			}
			else if (Object1.PreferredAvailability == null ^ Object2.PreferredAvailability == null )
			{
				equal = false;
			}
			if ( Object1.PreferredAvailabilityType != null && Object2.PreferredAvailabilityType != null )
			{
				if (Object1.PreferredAvailabilityType != Object2.PreferredAvailabilityType)
					equal = false;
			}
			else if (Object1.PreferredAvailabilityType == null ^ Object2.PreferredAvailabilityType == null )
			{
				equal = false;
			}
			if ( Object1.PreferredSalaryFrom != null && Object2.PreferredSalaryFrom != null )
			{
				if (Object1.PreferredSalaryFrom != Object2.PreferredSalaryFrom)
					equal = false;
			}
			else if (Object1.PreferredSalaryFrom == null ^ Object2.PreferredSalaryFrom == null )
			{
				equal = false;
			}
			if ( Object1.PreferredSalaryTo != null && Object2.PreferredSalaryTo != null )
			{
				if (Object1.PreferredSalaryTo != Object2.PreferredSalaryTo)
					equal = false;
			}
			else if (Object1.PreferredSalaryTo == null ^ Object2.PreferredSalaryTo == null )
			{
				equal = false;
			}
			if ( Object1.CurrentSalaryFrom != null && Object2.CurrentSalaryFrom != null )
			{
				if (Object1.CurrentSalaryFrom != Object2.CurrentSalaryFrom)
					equal = false;
			}
			else if (Object1.CurrentSalaryFrom == null ^ Object2.CurrentSalaryFrom == null )
			{
				equal = false;
			}
			if ( Object1.CurrentSalaryTo != null && Object2.CurrentSalaryTo != null )
			{
				if (Object1.CurrentSalaryTo != Object2.CurrentSalaryTo)
					equal = false;
			}
			else if (Object1.CurrentSalaryTo == null ^ Object2.CurrentSalaryTo == null )
			{
				equal = false;
			}
			if ( Object1.LookingFor != null && Object2.LookingFor != null )
			{
				if (Object1.LookingFor != Object2.LookingFor)
					equal = false;
			}
			else if (Object1.LookingFor == null ^ Object2.LookingFor == null )
			{
				equal = false;
			}
			if ( Object1.Experience != null && Object2.Experience != null )
			{
				if (Object1.Experience != Object2.Experience)
					equal = false;
			}
			else if (Object1.Experience == null ^ Object2.Experience == null )
			{
				equal = false;
			}
			if ( Object1.Skills != null && Object2.Skills != null )
			{
				if (Object1.Skills != Object2.Skills)
					equal = false;
			}
			else if (Object1.Skills == null ^ Object2.Skills == null )
			{
				equal = false;
			}
			if ( Object1.Reasons != null && Object2.Reasons != null )
			{
				if (Object1.Reasons != Object2.Reasons)
					equal = false;
			}
			else if (Object1.Reasons == null ^ Object2.Reasons == null )
			{
				equal = false;
			}
			if ( Object1.Comments != null && Object2.Comments != null )
			{
				if (Object1.Comments != Object2.Comments)
					equal = false;
			}
			else if (Object1.Comments == null ^ Object2.Comments == null )
			{
				equal = false;
			}
			if ( Object1.ProfileType != null && Object2.ProfileType != null )
			{
				if (Object1.ProfileType != Object2.ProfileType)
					equal = false;
			}
			else if (Object1.ProfileType == null ^ Object2.ProfileType == null )
			{
				equal = false;
			}
			if ( Object1.EducationId != null && Object2.EducationId != null )
			{
				if (Object1.EducationId != Object2.EducationId)
					equal = false;
			}
			else if (Object1.EducationId == null ^ Object2.EducationId == null )
			{
				equal = false;
			}
			if ( Object1.SearchField != null && Object2.SearchField != null )
			{
				if (Object1.SearchField != Object2.SearchField)
					equal = false;
			}
			else if (Object1.SearchField == null ^ Object2.SearchField == null )
			{
				equal = false;
			}
			if (Object1.RegisteredDate != Object2.RegisteredDate)
				equal = false;
			if ( Object1.States != null && Object2.States != null )
			{
				if (Object1.States != Object2.States)
					equal = false;
			}
			else if (Object1.States == null ^ Object2.States == null )
			{
				equal = false;
			}
			if ( Object1.Suburb != null && Object2.Suburb != null )
			{
				if (Object1.Suburb != Object2.Suburb)
					equal = false;
			}
			else if (Object1.Suburb == null ^ Object2.Suburb == null )
			{
				equal = false;
			}
			if ( Object1.PostCode != null && Object2.PostCode != null )
			{
				if (Object1.PostCode != Object2.PostCode)
					equal = false;
			}
			else if (Object1.PostCode == null ^ Object2.PostCode == null )
			{
				equal = false;
			}
			if ( Object1.ProfilePicture != null && Object2.ProfilePicture != null )
			{
				if (Object1.ProfilePicture != Object2.ProfilePicture)
					equal = false;
			}
			else if (Object1.ProfilePicture == null ^ Object2.ProfilePicture == null )
			{
				equal = false;
			}
			if ( Object1.ShortBio != null && Object2.ShortBio != null )
			{
				if (Object1.ShortBio != Object2.ShortBio)
					equal = false;
			}
			else if (Object1.ShortBio == null ^ Object2.ShortBio == null )
			{
				equal = false;
			}
			if ( Object1.WorkTypeId != null && Object2.WorkTypeId != null )
			{
				if (Object1.WorkTypeId != Object2.WorkTypeId)
					equal = false;
			}
			else if (Object1.WorkTypeId == null ^ Object2.WorkTypeId == null )
			{
				equal = false;
			}
			if ( Object1.Memberships != null && Object2.Memberships != null )
			{
				if (Object1.Memberships != Object2.Memberships)
					equal = false;
			}
			else if (Object1.Memberships == null ^ Object2.Memberships == null )
			{
				equal = false;
			}
			if ( Object1.MemberStatusId != null && Object2.MemberStatusId != null )
			{
				if (Object1.MemberStatusId != Object2.MemberStatusId)
					equal = false;
			}
			else if (Object1.MemberStatusId == null ^ Object2.MemberStatusId == null )
			{
				equal = false;
			}
			if ( Object1.LinkedInAccessToken != null && Object2.LinkedInAccessToken != null )
			{
				if (Object1.LinkedInAccessToken != Object2.LinkedInAccessToken)
					equal = false;
			}
			else if (Object1.LinkedInAccessToken == null ^ Object2.LinkedInAccessToken == null )
			{
				equal = false;
			}
			if ( Object1.ExternalMemberId != null && Object2.ExternalMemberId != null )
			{
				if (Object1.ExternalMemberId != Object2.ExternalMemberId)
					equal = false;
			}
			else if (Object1.ExternalMemberId == null ^ Object2.ExternalMemberId == null )
			{
				equal = false;
			}
			if ( Object1.PassportNo != null && Object2.PassportNo != null )
			{
				if (Object1.PassportNo != Object2.PassportNo)
					equal = false;
			}
			else if (Object1.PassportNo == null ^ Object2.PassportNo == null )
			{
				equal = false;
			}
			if ( Object1.MailingAddress1 != null && Object2.MailingAddress1 != null )
			{
				if (Object1.MailingAddress1 != Object2.MailingAddress1)
					equal = false;
			}
			else if (Object1.MailingAddress1 == null ^ Object2.MailingAddress1 == null )
			{
				equal = false;
			}
			if ( Object1.MailingAddress2 != null && Object2.MailingAddress2 != null )
			{
				if (Object1.MailingAddress2 != Object2.MailingAddress2)
					equal = false;
			}
			else if (Object1.MailingAddress2 == null ^ Object2.MailingAddress2 == null )
			{
				equal = false;
			}
			if ( Object1.MailingStates != null && Object2.MailingStates != null )
			{
				if (Object1.MailingStates != Object2.MailingStates)
					equal = false;
			}
			else if (Object1.MailingStates == null ^ Object2.MailingStates == null )
			{
				equal = false;
			}
			if ( Object1.MailingSuburb != null && Object2.MailingSuburb != null )
			{
				if (Object1.MailingSuburb != Object2.MailingSuburb)
					equal = false;
			}
			else if (Object1.MailingSuburb == null ^ Object2.MailingSuburb == null )
			{
				equal = false;
			}
			if ( Object1.MailingPostCode != null && Object2.MailingPostCode != null )
			{
				if (Object1.MailingPostCode != Object2.MailingPostCode)
					equal = false;
			}
			else if (Object1.MailingPostCode == null ^ Object2.MailingPostCode == null )
			{
				equal = false;
			}
			if ( Object1.MailingCountryId != null && Object2.MailingCountryId != null )
			{
				if (Object1.MailingCountryId != Object2.MailingCountryId)
					equal = false;
			}
			else if (Object1.MailingCountryId == null ^ Object2.MailingCountryId == null )
			{
				equal = false;
			}
			if ( Object1.CountryName != null && Object2.CountryName != null )
			{
				if (Object1.CountryName != Object2.CountryName)
					equal = false;
			}
			else if (Object1.CountryName == null ^ Object2.CountryName == null )
			{
				equal = false;
			}
			if ( Object1.MailingCountryName != null && Object2.MailingCountryName != null )
			{
				if (Object1.MailingCountryName != Object2.MailingCountryName)
					equal = false;
			}
			else if (Object1.MailingCountryName == null ^ Object2.MailingCountryName == null )
			{
				equal = false;
			}
			if (Object1.LoginAttempts != Object2.LoginAttempts)
				equal = false;
			if ( Object1.LastAttemptDate != null && Object2.LastAttemptDate != null )
			{
				if (Object1.LastAttemptDate != Object2.LastAttemptDate)
					equal = false;
			}
			else if (Object1.LastAttemptDate == null ^ Object2.LastAttemptDate == null )
			{
				equal = false;
			}
			if ( Object1.Status != null && Object2.Status != null )
			{
				if (Object1.Status != Object2.Status)
					equal = false;
			}
			else if (Object1.Status == null ^ Object2.Status == null )
			{
				equal = false;
			}
			if ( Object1.LastTermsAndConditionsDate != null && Object2.LastTermsAndConditionsDate != null )
			{
				if (Object1.LastTermsAndConditionsDate != Object2.LastTermsAndConditionsDate)
					equal = false;
			}
			else if (Object1.LastTermsAndConditionsDate == null ^ Object2.LastTermsAndConditionsDate == null )
			{
				equal = false;
			}
			if ( Object1.DefaultLanguageId != null && Object2.DefaultLanguageId != null )
			{
				if (Object1.DefaultLanguageId != Object2.DefaultLanguageId)
					equal = false;
			}
			else if (Object1.DefaultLanguageId == null ^ Object2.DefaultLanguageId == null )
			{
				equal = false;
			}
			if ( Object1.ReferringSiteId != null && Object2.ReferringSiteId != null )
			{
				if (Object1.ReferringSiteId != Object2.ReferringSiteId)
					equal = false;
			}
			else if (Object1.ReferringSiteId == null ^ Object2.ReferringSiteId == null )
			{
				equal = false;
			}
			if ( Object1.MultiLingualFirstName != null && Object2.MultiLingualFirstName != null )
			{
				if (Object1.MultiLingualFirstName != Object2.MultiLingualFirstName)
					equal = false;
			}
			else if (Object1.MultiLingualFirstName == null ^ Object2.MultiLingualFirstName == null )
			{
				equal = false;
			}
			if ( Object1.MultiLingualSurame != null && Object2.MultiLingualSurame != null )
			{
				if (Object1.MultiLingualSurame != Object2.MultiLingualSurame)
					equal = false;
			}
			else if (Object1.MultiLingualSurame == null ^ Object2.MultiLingualSurame == null )
			{
				equal = false;
			}
			if ( Object1.SecondaryEmail != null && Object2.SecondaryEmail != null )
			{
				if (Object1.SecondaryEmail != Object2.SecondaryEmail)
					equal = false;
			}
			else if (Object1.SecondaryEmail == null ^ Object2.SecondaryEmail == null )
			{
				equal = false;
			}
			if ( Object1.CandidateData != null && Object2.CandidateData != null )
			{
				if (Object1.CandidateData != Object2.CandidateData)
					equal = false;
			}
			else if (Object1.CandidateData == null ^ Object2.CandidateData == null )
			{
				equal = false;
			}
			if ( Object1.EligibleToWorkIn != null && Object2.EligibleToWorkIn != null )
			{
				if (Object1.EligibleToWorkIn != Object2.EligibleToWorkIn)
					equal = false;
			}
			else if (Object1.EligibleToWorkIn == null ^ Object2.EligibleToWorkIn == null )
			{
				equal = false;
			}
			if ( Object1.ReferenceUponRequest != null && Object2.ReferenceUponRequest != null )
			{
				if (Object1.ReferenceUponRequest != Object2.ReferenceUponRequest)
					equal = false;
			}
			else if (Object1.ReferenceUponRequest == null ^ Object2.ReferenceUponRequest == null )
			{
				equal = false;
			}
			if (Object1.PreferredLine != Object2.PreferredLine)
				equal = false;
			if ( Object1.VideoUrl != null && Object2.VideoUrl != null )
			{
				if (Object1.VideoUrl != Object2.VideoUrl)
					equal = false;
			}
			else if (Object1.VideoUrl == null ^ Object2.VideoUrl == null )
			{
				equal = false;
			}
			if ( Object1.ProfileDataXml != null && Object2.ProfileDataXml != null )
			{
				if (Object1.ProfileDataXml != Object2.ProfileDataXml)
					equal = false;
			}
			else if (Object1.ProfileDataXml == null ^ Object2.ProfileDataXml == null )
			{
				equal = false;
			}
			if ( Object1.LastProfileSubmittedDate != null && Object2.LastProfileSubmittedDate != null )
			{
				if (Object1.LastProfileSubmittedDate != Object2.LastProfileSubmittedDate)
					equal = false;
			}
			else if (Object1.LastProfileSubmittedDate == null ^ Object2.LastProfileSubmittedDate == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((MembersBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static MembersComparer GetComparer()
        {
            return new MembersComparer();
        }
        */

        // Comparer delegates back to Members
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(Members rhs, MembersColumn which)
        {
            switch (which)
            {
            	
            	
            	case MembersColumn.MemberId:
            		return this.MemberId.CompareTo(rhs.MemberId);
            		
            		                 
            	
            	
            	case MembersColumn.SiteId:
            		return this.SiteId.CompareTo(rhs.SiteId);
            		
            		                 
            	
            	
            	case MembersColumn.Username:
            		return this.Username.CompareTo(rhs.Username);
            		
            		                 
            	
            	
            	case MembersColumn.Password:
            		return this.Password.CompareTo(rhs.Password);
            		
            		                 
            	
            	
            	case MembersColumn.Title:
            		return this.Title.CompareTo(rhs.Title);
            		
            		                 
            	
            	
            	case MembersColumn.FirstName:
            		return this.FirstName.CompareTo(rhs.FirstName);
            		
            		                 
            	
            	
            	case MembersColumn.Surname:
            		return this.Surname.CompareTo(rhs.Surname);
            		
            		                 
            	
            	
            	case MembersColumn.EmailAddress:
            		return this.EmailAddress.CompareTo(rhs.EmailAddress);
            		
            		                 
            	
            	
            	case MembersColumn.Company:
            		return this.Company.CompareTo(rhs.Company);
            		
            		                 
            	
            	
            	case MembersColumn.Position:
            		return this.Position.CompareTo(rhs.Position);
            		
            		                 
            	
            	
            	case MembersColumn.HomePhone:
            		return this.HomePhone.CompareTo(rhs.HomePhone);
            		
            		                 
            	
            	
            	case MembersColumn.WorkPhone:
            		return this.WorkPhone.CompareTo(rhs.WorkPhone);
            		
            		                 
            	
            	
            	case MembersColumn.MobilePhone:
            		return this.MobilePhone.CompareTo(rhs.MobilePhone);
            		
            		                 
            	
            	
            	case MembersColumn.Fax:
            		return this.Fax.CompareTo(rhs.Fax);
            		
            		                 
            	
            	
            	case MembersColumn.Address1:
            		return this.Address1.CompareTo(rhs.Address1);
            		
            		                 
            	
            	
            	case MembersColumn.Address2:
            		return this.Address2.CompareTo(rhs.Address2);
            		
            		                 
            	
            	
            	case MembersColumn.LocationId:
            		return this.LocationId.CompareTo(rhs.LocationId);
            		
            		                 
            	
            	
            	case MembersColumn.AreaId:
            		return this.AreaId.CompareTo(rhs.AreaId);
            		
            		                 
            	
            	
            	case MembersColumn.CountryId:
            		return this.CountryId.CompareTo(rhs.CountryId);
            		
            		                 
            	
            	
            	case MembersColumn.PreferredCategoryId:
            		return this.PreferredCategoryId.CompareTo(rhs.PreferredCategoryId);
            		
            		                 
            	
            	
            	case MembersColumn.PreferredSubCategoryId:
            		return this.PreferredSubCategoryId.CompareTo(rhs.PreferredSubCategoryId);
            		
            		                 
            	
            	
            	case MembersColumn.PreferredSalaryId:
            		return this.PreferredSalaryId.Value.CompareTo(rhs.PreferredSalaryId.Value);
            		
            		                 
            	
            	
            	case MembersColumn.Subscribed:
            		return this.Subscribed.CompareTo(rhs.Subscribed);
            		
            		                 
            	
            	
            	case MembersColumn.MonthlyUpdate:
            		return this.MonthlyUpdate.CompareTo(rhs.MonthlyUpdate);
            		
            		                 
            	
            	
            	case MembersColumn.ReferringMemberId:
            		return this.ReferringMemberId.Value.CompareTo(rhs.ReferringMemberId.Value);
            		
            		                 
            	
            	
            	case MembersColumn.LastModifiedDate:
            		return this.LastModifiedDate.Value.CompareTo(rhs.LastModifiedDate.Value);
            		
            		                 
            	
            	
            	case MembersColumn.Valid:
            		return this.Valid.CompareTo(rhs.Valid);
            		
            		                 
            	
            	
            	case MembersColumn.EmailFormat:
            		return this.EmailFormat.CompareTo(rhs.EmailFormat);
            		
            		                 
            	
            	
            	case MembersColumn.LastLogon:
            		return this.LastLogon.Value.CompareTo(rhs.LastLogon.Value);
            		
            		                 
            	
            	
            	case MembersColumn.DateOfBirth:
            		return this.DateOfBirth.Value.CompareTo(rhs.DateOfBirth.Value);
            		
            		                 
            	
            	
            	case MembersColumn.Gender:
            		return this.Gender.CompareTo(rhs.Gender);
            		
            		                 
            	
            	
            	case MembersColumn.Tags:
            		return this.Tags.CompareTo(rhs.Tags);
            		
            		                 
            	
            	
            	case MembersColumn.Validated:
            		return this.Validated.CompareTo(rhs.Validated);
            		
            		                 
            	
            	
            	case MembersColumn.ValidateGuid:
            		return this.ValidateGuid.Value.CompareTo(rhs.ValidateGuid.Value);
            		
            		                 
            	
            	
            	case MembersColumn.MemberUrlExtension:
            		return this.MemberUrlExtension.CompareTo(rhs.MemberUrlExtension);
            		
            		                 
            	
            	
            	case MembersColumn.WebsiteUrl:
            		return this.WebsiteUrl.CompareTo(rhs.WebsiteUrl);
            		
            		                 
            	
            	
            	case MembersColumn.AvailabilityId:
            		return this.AvailabilityId.Value.CompareTo(rhs.AvailabilityId.Value);
            		
            		                 
            	
            	
            	case MembersColumn.AvailabilityFromDate:
            		return this.AvailabilityFromDate.Value.CompareTo(rhs.AvailabilityFromDate.Value);
            		
            		                 
            	
            	
            	case MembersColumn.MySpaceHeading:
            		return this.MySpaceHeading.CompareTo(rhs.MySpaceHeading);
            		
            		                 
            	
            	
            	case MembersColumn.MySpaceContent:
            		return this.MySpaceContent.CompareTo(rhs.MySpaceContent);
            		
            		                 
            	
            	
            	case MembersColumn.UrlReferrer:
            		return this.UrlReferrer.CompareTo(rhs.UrlReferrer);
            		
            		                 
            	
            	
            	case MembersColumn.RequiredPasswordChange:
            		return this.RequiredPasswordChange.Value.CompareTo(rhs.RequiredPasswordChange.Value);
            		
            		                 
            	
            	
            	case MembersColumn.PreferredJobTitle:
            		return this.PreferredJobTitle.CompareTo(rhs.PreferredJobTitle);
            		
            		                 
            	
            	
            	case MembersColumn.PreferredAvailability:
            		return this.PreferredAvailability.CompareTo(rhs.PreferredAvailability);
            		
            		                 
            	
            	
            	case MembersColumn.PreferredAvailabilityType:
            		return this.PreferredAvailabilityType.Value.CompareTo(rhs.PreferredAvailabilityType.Value);
            		
            		                 
            	
            	
            	case MembersColumn.PreferredSalaryFrom:
            		return this.PreferredSalaryFrom.CompareTo(rhs.PreferredSalaryFrom);
            		
            		                 
            	
            	
            	case MembersColumn.PreferredSalaryTo:
            		return this.PreferredSalaryTo.CompareTo(rhs.PreferredSalaryTo);
            		
            		                 
            	
            	
            	case MembersColumn.CurrentSalaryFrom:
            		return this.CurrentSalaryFrom.CompareTo(rhs.CurrentSalaryFrom);
            		
            		                 
            	
            	
            	case MembersColumn.CurrentSalaryTo:
            		return this.CurrentSalaryTo.CompareTo(rhs.CurrentSalaryTo);
            		
            		                 
            	
            	
            	case MembersColumn.LookingFor:
            		return this.LookingFor.CompareTo(rhs.LookingFor);
            		
            		                 
            	
            	
            	case MembersColumn.Experience:
            		return this.Experience.CompareTo(rhs.Experience);
            		
            		                 
            	
            	
            	case MembersColumn.Skills:
            		return this.Skills.CompareTo(rhs.Skills);
            		
            		                 
            	
            	
            	case MembersColumn.Reasons:
            		return this.Reasons.CompareTo(rhs.Reasons);
            		
            		                 
            	
            	
            	case MembersColumn.Comments:
            		return this.Comments.CompareTo(rhs.Comments);
            		
            		                 
            	
            	
            	case MembersColumn.ProfileType:
            		return this.ProfileType.CompareTo(rhs.ProfileType);
            		
            		                 
            	
            	
            	case MembersColumn.EducationId:
            		return this.EducationId.Value.CompareTo(rhs.EducationId.Value);
            		
            		                 
            	
            	
            	case MembersColumn.SearchField:
            		return this.SearchField.CompareTo(rhs.SearchField);
            		
            		                 
            	
            	
            	case MembersColumn.RegisteredDate:
            		return this.RegisteredDate.CompareTo(rhs.RegisteredDate);
            		
            		                 
            	
            	
            	case MembersColumn.States:
            		return this.States.CompareTo(rhs.States);
            		
            		                 
            	
            	
            	case MembersColumn.Suburb:
            		return this.Suburb.CompareTo(rhs.Suburb);
            		
            		                 
            	
            	
            	case MembersColumn.PostCode:
            		return this.PostCode.CompareTo(rhs.PostCode);
            		
            		                 
            	
            	
            	case MembersColumn.ProfilePicture:
            		return this.ProfilePicture.CompareTo(rhs.ProfilePicture);
            		
            		                 
            	
            	
            	case MembersColumn.ShortBio:
            		return this.ShortBio.CompareTo(rhs.ShortBio);
            		
            		                 
            	
            	
            	case MembersColumn.WorkTypeId:
            		return this.WorkTypeId.CompareTo(rhs.WorkTypeId);
            		
            		                 
            	
            	
            	case MembersColumn.Memberships:
            		return this.Memberships.CompareTo(rhs.Memberships);
            		
            		                 
            	
            	
            	case MembersColumn.MemberStatusId:
            		return this.MemberStatusId.Value.CompareTo(rhs.MemberStatusId.Value);
            		
            		                 
            	
            	
            	case MembersColumn.LinkedInAccessToken:
            		return this.LinkedInAccessToken.CompareTo(rhs.LinkedInAccessToken);
            		
            		                 
            	
            	
            	case MembersColumn.ExternalMemberId:
            		return this.ExternalMemberId.CompareTo(rhs.ExternalMemberId);
            		
            		                 
            	
            	
            	case MembersColumn.PassportNo:
            		return this.PassportNo.CompareTo(rhs.PassportNo);
            		
            		                 
            	
            	
            	case MembersColumn.MailingAddress1:
            		return this.MailingAddress1.CompareTo(rhs.MailingAddress1);
            		
            		                 
            	
            	
            	case MembersColumn.MailingAddress2:
            		return this.MailingAddress2.CompareTo(rhs.MailingAddress2);
            		
            		                 
            	
            	
            	case MembersColumn.MailingStates:
            		return this.MailingStates.CompareTo(rhs.MailingStates);
            		
            		                 
            	
            	
            	case MembersColumn.MailingSuburb:
            		return this.MailingSuburb.CompareTo(rhs.MailingSuburb);
            		
            		                 
            	
            	
            	case MembersColumn.MailingPostCode:
            		return this.MailingPostCode.CompareTo(rhs.MailingPostCode);
            		
            		                 
            	
            	
            	case MembersColumn.MailingCountryId:
            		return this.MailingCountryId.Value.CompareTo(rhs.MailingCountryId.Value);
            		
            		                 
            	
            	
            	case MembersColumn.CountryName:
            		return this.CountryName.CompareTo(rhs.CountryName);
            		
            		                 
            	
            	
            	case MembersColumn.MailingCountryName:
            		return this.MailingCountryName.CompareTo(rhs.MailingCountryName);
            		
            		                 
            	
            	
            	case MembersColumn.LoginAttempts:
            		return this.LoginAttempts.CompareTo(rhs.LoginAttempts);
            		
            		                 
            	
            	
            	case MembersColumn.LastAttemptDate:
            		return this.LastAttemptDate.Value.CompareTo(rhs.LastAttemptDate.Value);
            		
            		                 
            	
            	
            	case MembersColumn.Status:
            		return this.Status.Value.CompareTo(rhs.Status.Value);
            		
            		                 
            	
            	
            	case MembersColumn.LastTermsAndConditionsDate:
            		return this.LastTermsAndConditionsDate.Value.CompareTo(rhs.LastTermsAndConditionsDate.Value);
            		
            		                 
            	
            	
            	case MembersColumn.DefaultLanguageId:
            		return this.DefaultLanguageId.Value.CompareTo(rhs.DefaultLanguageId.Value);
            		
            		                 
            	
            	
            	case MembersColumn.ReferringSiteId:
            		return this.ReferringSiteId.Value.CompareTo(rhs.ReferringSiteId.Value);
            		
            		                 
            	
            	
            	case MembersColumn.MultiLingualFirstName:
            		return this.MultiLingualFirstName.CompareTo(rhs.MultiLingualFirstName);
            		
            		                 
            	
            	
            	case MembersColumn.MultiLingualSurame:
            		return this.MultiLingualSurame.CompareTo(rhs.MultiLingualSurame);
            		
            		                 
            	
            	
            	case MembersColumn.SecondaryEmail:
            		return this.SecondaryEmail.CompareTo(rhs.SecondaryEmail);
            		
            		                 
            	
            	
            	case MembersColumn.CandidateData:
            		return this.CandidateData.CompareTo(rhs.CandidateData);
            		
            		                 
            	
            	
            	case MembersColumn.EligibleToWorkIn:
            		return this.EligibleToWorkIn.CompareTo(rhs.EligibleToWorkIn);
            		
            		                 
            	
            	
            	case MembersColumn.ReferenceUponRequest:
            		return this.ReferenceUponRequest.Value.CompareTo(rhs.ReferenceUponRequest.Value);
            		
            		                 
            	
            	
            	case MembersColumn.PreferredLine:
            		return this.PreferredLine.CompareTo(rhs.PreferredLine);
            		
            		                 
            	
            	
            	case MembersColumn.VideoUrl:
            		return this.VideoUrl.CompareTo(rhs.VideoUrl);
            		
            		                 
            	
            	
            	case MembersColumn.ProfileDataXml:
            		return this.ProfileDataXml.CompareTo(rhs.ProfileDataXml);
            		
            		                 
            	
            	
            	case MembersColumn.LastProfileSubmittedDate:
            		return this.LastProfileSubmittedDate.Value.CompareTo(rhs.LastProfileSubmittedDate.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<MembersKey> Members
		
		// member variable for the EntityId property
		private MembersKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual MembersKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new MembersKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("Members")
					.Append("|").Append( this.MemberId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{94}{93}- MemberId: {0}{93}- SiteId: {1}{93}- Username: {2}{93}- Password: {3}{93}- Title: {4}{93}- FirstName: {5}{93}- Surname: {6}{93}- EmailAddress: {7}{93}- Company: {8}{93}- Position: {9}{93}- HomePhone: {10}{93}- WorkPhone: {11}{93}- MobilePhone: {12}{93}- Fax: {13}{93}- Address1: {14}{93}- Address2: {15}{93}- LocationId: {16}{93}- AreaId: {17}{93}- CountryId: {18}{93}- PreferredCategoryId: {19}{93}- PreferredSubCategoryId: {20}{93}- PreferredSalaryId: {21}{93}- Subscribed: {22}{93}- MonthlyUpdate: {23}{93}- ReferringMemberId: {24}{93}- LastModifiedDate: {25}{93}- Valid: {26}{93}- EmailFormat: {27}{93}- LastLogon: {28}{93}- DateOfBirth: {29}{93}- Gender: {30}{93}- Tags: {31}{93}- Validated: {32}{93}- ValidateGuid: {33}{93}- MemberUrlExtension: {34}{93}- WebsiteUrl: {35}{93}- AvailabilityId: {36}{93}- AvailabilityFromDate: {37}{93}- MySpaceHeading: {38}{93}- MySpaceContent: {39}{93}- UrlReferrer: {40}{93}- RequiredPasswordChange: {41}{93}- PreferredJobTitle: {42}{93}- PreferredAvailability: {43}{93}- PreferredAvailabilityType: {44}{93}- PreferredSalaryFrom: {45}{93}- PreferredSalaryTo: {46}{93}- CurrentSalaryFrom: {47}{93}- CurrentSalaryTo: {48}{93}- LookingFor: {49}{93}- Experience: {50}{93}- Skills: {51}{93}- Reasons: {52}{93}- Comments: {53}{93}- ProfileType: {54}{93}- EducationId: {55}{93}- SearchField: {56}{93}- RegisteredDate: {57}{93}- States: {58}{93}- Suburb: {59}{93}- PostCode: {60}{93}- ProfilePicture: {61}{93}- ShortBio: {62}{93}- WorkTypeId: {63}{93}- Memberships: {64}{93}- MemberStatusId: {65}{93}- LinkedInAccessToken: {66}{93}- ExternalMemberId: {67}{93}- PassportNo: {68}{93}- MailingAddress1: {69}{93}- MailingAddress2: {70}{93}- MailingStates: {71}{93}- MailingSuburb: {72}{93}- MailingPostCode: {73}{93}- MailingCountryId: {74}{93}- CountryName: {75}{93}- MailingCountryName: {76}{93}- LoginAttempts: {77}{93}- LastAttemptDate: {78}{93}- Status: {79}{93}- LastTermsAndConditionsDate: {80}{93}- DefaultLanguageId: {81}{93}- ReferringSiteId: {82}{93}- MultiLingualFirstName: {83}{93}- MultiLingualSurame: {84}{93}- SecondaryEmail: {85}{93}- CandidateData: {86}{93}- EligibleToWorkIn: {87}{93}- ReferenceUponRequest: {88}{93}- PreferredLine: {89}{93}- VideoUrl: {90}{93}- ProfileDataXml: {91}{93}- LastProfileSubmittedDate: {92}{93}{95}", 
				this.MemberId,
				this.SiteId,
				(this.Username == null) ? string.Empty : this.Username.ToString(),
				this.Password,
				(this.Title == null) ? string.Empty : this.Title.ToString(),
				(this.FirstName == null) ? string.Empty : this.FirstName.ToString(),
				(this.Surname == null) ? string.Empty : this.Surname.ToString(),
				(this.EmailAddress == null) ? string.Empty : this.EmailAddress.ToString(),
				(this.Company == null) ? string.Empty : this.Company.ToString(),
				(this.Position == null) ? string.Empty : this.Position.ToString(),
				(this.HomePhone == null) ? string.Empty : this.HomePhone.ToString(),
				(this.WorkPhone == null) ? string.Empty : this.WorkPhone.ToString(),
				(this.MobilePhone == null) ? string.Empty : this.MobilePhone.ToString(),
				(this.Fax == null) ? string.Empty : this.Fax.ToString(),
				(this.Address1 == null) ? string.Empty : this.Address1.ToString(),
				(this.Address2 == null) ? string.Empty : this.Address2.ToString(),
				(this.LocationId == null) ? string.Empty : this.LocationId.ToString(),
				(this.AreaId == null) ? string.Empty : this.AreaId.ToString(),
				this.CountryId,
				(this.PreferredCategoryId == null) ? string.Empty : this.PreferredCategoryId.ToString(),
				(this.PreferredSubCategoryId == null) ? string.Empty : this.PreferredSubCategoryId.ToString(),
				(this.PreferredSalaryId == null) ? string.Empty : this.PreferredSalaryId.ToString(),
				this.Subscribed,
				this.MonthlyUpdate,
				(this.ReferringMemberId == null) ? string.Empty : this.ReferringMemberId.ToString(),
				(this.LastModifiedDate == null) ? string.Empty : this.LastModifiedDate.ToString(),
				this.Valid,
				this.EmailFormat,
				(this.LastLogon == null) ? string.Empty : this.LastLogon.ToString(),
				(this.DateOfBirth == null) ? string.Empty : this.DateOfBirth.ToString(),
				(this.Gender == null) ? string.Empty : this.Gender.ToString(),
				(this.Tags == null) ? string.Empty : this.Tags.ToString(),
				this.Validated,
				(this.ValidateGuid == null) ? string.Empty : this.ValidateGuid.ToString(),
				(this.MemberUrlExtension == null) ? string.Empty : this.MemberUrlExtension.ToString(),
				(this.WebsiteUrl == null) ? string.Empty : this.WebsiteUrl.ToString(),
				(this.AvailabilityId == null) ? string.Empty : this.AvailabilityId.ToString(),
				(this.AvailabilityFromDate == null) ? string.Empty : this.AvailabilityFromDate.ToString(),
				(this.MySpaceHeading == null) ? string.Empty : this.MySpaceHeading.ToString(),
				(this.MySpaceContent == null) ? string.Empty : this.MySpaceContent.ToString(),
				(this.UrlReferrer == null) ? string.Empty : this.UrlReferrer.ToString(),
				(this.RequiredPasswordChange == null) ? string.Empty : this.RequiredPasswordChange.ToString(),
				(this.PreferredJobTitle == null) ? string.Empty : this.PreferredJobTitle.ToString(),
				(this.PreferredAvailability == null) ? string.Empty : this.PreferredAvailability.ToString(),
				(this.PreferredAvailabilityType == null) ? string.Empty : this.PreferredAvailabilityType.ToString(),
				(this.PreferredSalaryFrom == null) ? string.Empty : this.PreferredSalaryFrom.ToString(),
				(this.PreferredSalaryTo == null) ? string.Empty : this.PreferredSalaryTo.ToString(),
				(this.CurrentSalaryFrom == null) ? string.Empty : this.CurrentSalaryFrom.ToString(),
				(this.CurrentSalaryTo == null) ? string.Empty : this.CurrentSalaryTo.ToString(),
				(this.LookingFor == null) ? string.Empty : this.LookingFor.ToString(),
				(this.Experience == null) ? string.Empty : this.Experience.ToString(),
				(this.Skills == null) ? string.Empty : this.Skills.ToString(),
				(this.Reasons == null) ? string.Empty : this.Reasons.ToString(),
				(this.Comments == null) ? string.Empty : this.Comments.ToString(),
				(this.ProfileType == null) ? string.Empty : this.ProfileType.ToString(),
				(this.EducationId == null) ? string.Empty : this.EducationId.ToString(),
				(this.SearchField == null) ? string.Empty : this.SearchField.ToString(),
				this.RegisteredDate,
				(this.States == null) ? string.Empty : this.States.ToString(),
				(this.Suburb == null) ? string.Empty : this.Suburb.ToString(),
				(this.PostCode == null) ? string.Empty : this.PostCode.ToString(),
				(this.ProfilePicture == null) ? string.Empty : this.ProfilePicture.ToString(),
				(this.ShortBio == null) ? string.Empty : this.ShortBio.ToString(),
				(this.WorkTypeId == null) ? string.Empty : this.WorkTypeId.ToString(),
				(this.Memberships == null) ? string.Empty : this.Memberships.ToString(),
				(this.MemberStatusId == null) ? string.Empty : this.MemberStatusId.ToString(),
				(this.LinkedInAccessToken == null) ? string.Empty : this.LinkedInAccessToken.ToString(),
				(this.ExternalMemberId == null) ? string.Empty : this.ExternalMemberId.ToString(),
				(this.PassportNo == null) ? string.Empty : this.PassportNo.ToString(),
				(this.MailingAddress1 == null) ? string.Empty : this.MailingAddress1.ToString(),
				(this.MailingAddress2 == null) ? string.Empty : this.MailingAddress2.ToString(),
				(this.MailingStates == null) ? string.Empty : this.MailingStates.ToString(),
				(this.MailingSuburb == null) ? string.Empty : this.MailingSuburb.ToString(),
				(this.MailingPostCode == null) ? string.Empty : this.MailingPostCode.ToString(),
				(this.MailingCountryId == null) ? string.Empty : this.MailingCountryId.ToString(),
				(this.CountryName == null) ? string.Empty : this.CountryName.ToString(),
				(this.MailingCountryName == null) ? string.Empty : this.MailingCountryName.ToString(),
				this.LoginAttempts,
				(this.LastAttemptDate == null) ? string.Empty : this.LastAttemptDate.ToString(),
				(this.Status == null) ? string.Empty : this.Status.ToString(),
				(this.LastTermsAndConditionsDate == null) ? string.Empty : this.LastTermsAndConditionsDate.ToString(),
				(this.DefaultLanguageId == null) ? string.Empty : this.DefaultLanguageId.ToString(),
				(this.ReferringSiteId == null) ? string.Empty : this.ReferringSiteId.ToString(),
				(this.MultiLingualFirstName == null) ? string.Empty : this.MultiLingualFirstName.ToString(),
				(this.MultiLingualSurame == null) ? string.Empty : this.MultiLingualSurame.ToString(),
				(this.SecondaryEmail == null) ? string.Empty : this.SecondaryEmail.ToString(),
				(this.CandidateData == null) ? string.Empty : this.CandidateData.ToString(),
				(this.EligibleToWorkIn == null) ? string.Empty : this.EligibleToWorkIn.ToString(),
				(this.ReferenceUponRequest == null) ? string.Empty : this.ReferenceUponRequest.ToString(),
				this.PreferredLine,
				(this.VideoUrl == null) ? string.Empty : this.VideoUrl.ToString(),
				(this.ProfileDataXml == null) ? string.Empty : this.ProfileDataXml.ToString(),
				(this.LastProfileSubmittedDate == null) ? string.Empty : this.LastProfileSubmittedDate.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'Members' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class MembersEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// MemberID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "Members"</remarks>
		public System.Int32 MemberId;
			
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// SiteID : 
		/// </summary>
		public System.Int32		  SiteId = (int)0;
		
		/// <summary>
		/// Username : 
		/// </summary>
		public System.String		  Username = null;
		
		/// <summary>
		/// Password : 
		/// </summary>
		public System.String		  Password = string.Empty;
		
		/// <summary>
		/// Title : 
		/// </summary>
		public System.String		  Title = null;
		
		/// <summary>
		/// FirstName : 
		/// </summary>
		public System.String		  FirstName = null;
		
		/// <summary>
		/// Surname : 
		/// </summary>
		public System.String		  Surname = null;
		
		/// <summary>
		/// EmailAddress : 
		/// </summary>
		public System.String		  EmailAddress = null;
		
		/// <summary>
		/// Company : 
		/// </summary>
		public System.String		  Company = null;
		
		/// <summary>
		/// Position : 
		/// </summary>
		public System.String		  Position = null;
		
		/// <summary>
		/// HomePhone : 
		/// </summary>
		public System.String		  HomePhone = null;
		
		/// <summary>
		/// WorkPhone : 
		/// </summary>
		public System.String		  WorkPhone = null;
		
		/// <summary>
		/// MobilePhone : 
		/// </summary>
		public System.String		  MobilePhone = null;
		
		/// <summary>
		/// Fax : 
		/// </summary>
		public System.String		  Fax = null;
		
		/// <summary>
		/// Address1 : 
		/// </summary>
		public System.String		  Address1 = null;
		
		/// <summary>
		/// Address2 : 
		/// </summary>
		public System.String		  Address2 = null;
		
		/// <summary>
		/// LocationID : 
		/// </summary>
		public System.String		  LocationId = null;
		
		/// <summary>
		/// AreaID : 
		/// </summary>
		public System.String		  AreaId = null;
		
		/// <summary>
		/// CountryID : 
		/// </summary>
		public System.Int32		  CountryId = (int)0;
		
		/// <summary>
		/// PreferredCategoryID : 
		/// </summary>
		public System.String		  PreferredCategoryId = null;
		
		/// <summary>
		/// PreferredSubCategoryID : 
		/// </summary>
		public System.String		  PreferredSubCategoryId = null;
		
		/// <summary>
		/// PreferredSalaryID : 
		/// </summary>
		public System.Int32?		  PreferredSalaryId = null;
		
		/// <summary>
		/// Subscribed : 
		/// </summary>
		public System.Boolean		  Subscribed = false;
		
		/// <summary>
		/// MonthlyUpdate : 
		/// </summary>
		public System.Boolean		  MonthlyUpdate = false;
		
		/// <summary>
		/// ReferringMemberID : 
		/// </summary>
		public System.Int32?		  ReferringMemberId = null;
		
		/// <summary>
		/// LastModifiedDate : 
		/// </summary>
		public System.DateTime?		  LastModifiedDate = null;
		
		/// <summary>
		/// Valid : 
		/// </summary>
		public System.Boolean		  Valid = false;
		
		/// <summary>
		/// EmailFormat : 
		/// </summary>
		public System.Int32		  EmailFormat = (int)0;
		
		/// <summary>
		/// LastLogon : 
		/// </summary>
		public System.DateTime?		  LastLogon = null;
		
		/// <summary>
		/// DateOfBirth : 
		/// </summary>
		public System.DateTime?		  DateOfBirth = null;
		
		/// <summary>
		/// Gender : 
		/// </summary>
		public System.String		  Gender = null;
		
		/// <summary>
		/// Tags : 
		/// </summary>
		public System.String		  Tags = null;
		
		/// <summary>
		/// Validated : 
		/// </summary>
		public System.Boolean		  Validated = false;
		
		/// <summary>
		/// ValidateGUID : 
		/// </summary>
		public System.Guid?		  ValidateGuid = null;
		
		/// <summary>
		/// MemberURLExtension : 
		/// </summary>
		public System.String		  MemberUrlExtension = null;
		
		/// <summary>
		/// WebsiteURL : 
		/// </summary>
		public System.String		  WebsiteUrl = null;
		
		/// <summary>
		/// AvailabilityID : 
		/// </summary>
		public System.Int32?		  AvailabilityId = null;
		
		/// <summary>
		/// AvailabilityFromDate : 
		/// </summary>
		public System.DateTime?		  AvailabilityFromDate = null;
		
		/// <summary>
		/// MySpaceHeading : 
		/// </summary>
		public System.String		  MySpaceHeading = null;
		
		/// <summary>
		/// MySpaceContent : 
		/// </summary>
		public System.String		  MySpaceContent = null;
		
		/// <summary>
		/// URLReferrer : 
		/// </summary>
		public System.String		  UrlReferrer = null;
		
		/// <summary>
		/// RequiredPasswordChange : 
		/// </summary>
		public System.Boolean?		  RequiredPasswordChange = null;
		
		/// <summary>
		/// PreferredJobTitle : 
		/// </summary>
		public System.String		  PreferredJobTitle = null;
		
		/// <summary>
		/// PreferredAvailability : 
		/// </summary>
		public System.String		  PreferredAvailability = null;
		
		/// <summary>
		/// PreferredAvailabilityType : 
		/// </summary>
		public System.Int32?		  PreferredAvailabilityType = null;
		
		/// <summary>
		/// PreferredSalaryFrom : 
		/// </summary>
		public System.String		  PreferredSalaryFrom = null;
		
		/// <summary>
		/// PreferredSalaryTo : 
		/// </summary>
		public System.String		  PreferredSalaryTo = null;
		
		/// <summary>
		/// CurrentSalaryFrom : 
		/// </summary>
		public System.String		  CurrentSalaryFrom = null;
		
		/// <summary>
		/// CurrentSalaryTo : 
		/// </summary>
		public System.String		  CurrentSalaryTo = null;
		
		/// <summary>
		/// LookingFor : 
		/// </summary>
		public System.String		  LookingFor = null;
		
		/// <summary>
		/// Experience : 
		/// </summary>
		public System.String		  Experience = null;
		
		/// <summary>
		/// Skills : 
		/// </summary>
		public System.String		  Skills = null;
		
		/// <summary>
		/// Reasons : 
		/// </summary>
		public System.String		  Reasons = null;
		
		/// <summary>
		/// Comments : 
		/// </summary>
		public System.String		  Comments = null;
		
		/// <summary>
		/// ProfileType : 
		/// </summary>
		public System.String		  ProfileType = null;
		
		/// <summary>
		/// EducationID : 
		/// </summary>
		public System.Int32?		  EducationId = null;
		
		/// <summary>
		/// SearchField : 
		/// </summary>
		public System.String		  SearchField = null;
		
		/// <summary>
		/// RegisteredDate : 
		/// </summary>
		public System.DateTime		  RegisteredDate = DateTime.MinValue;
		
		/// <summary>
		/// States : 
		/// </summary>
		public System.String		  States = null;
		
		/// <summary>
		/// Suburb : 
		/// </summary>
		public System.String		  Suburb = null;
		
		/// <summary>
		/// PostCode : 
		/// </summary>
		public System.String		  PostCode = null;
		
		/// <summary>
		/// ProfilePicture : 
		/// </summary>
		public System.String		  ProfilePicture = null;
		
		/// <summary>
		/// ShortBio : 
		/// </summary>
		public System.String		  ShortBio = null;
		
		/// <summary>
		/// WorkTypeID : 
		/// </summary>
		public System.String		  WorkTypeId = null;
		
		/// <summary>
		/// Memberships : 
		/// </summary>
		public System.String		  Memberships = null;
		
		/// <summary>
		/// MemberStatusID : 
		/// </summary>
		public System.Int32?		  MemberStatusId = null;
		
		/// <summary>
		/// LinkedInAccessToken : 
		/// </summary>
		public System.String		  LinkedInAccessToken = null;
		
		/// <summary>
		/// ExternalMemberID : 
		/// </summary>
		public System.String		  ExternalMemberId = null;
		
		/// <summary>
		/// PassportNo : 
		/// </summary>
		public System.String		  PassportNo = null;
		
		/// <summary>
		/// MailingAddress1 : 
		/// </summary>
		public System.String		  MailingAddress1 = null;
		
		/// <summary>
		/// MailingAddress2 : 
		/// </summary>
		public System.String		  MailingAddress2 = null;
		
		/// <summary>
		/// MailingStates : 
		/// </summary>
		public System.String		  MailingStates = null;
		
		/// <summary>
		/// MailingSuburb : 
		/// </summary>
		public System.String		  MailingSuburb = null;
		
		/// <summary>
		/// MailingPostCode : 
		/// </summary>
		public System.String		  MailingPostCode = null;
		
		/// <summary>
		/// MailingCountryID : 
		/// </summary>
		public System.Int32?		  MailingCountryId = null;
		
		/// <summary>
		/// CountryName : 
		/// </summary>
		public System.String		  CountryName = null;
		
		/// <summary>
		/// MailingCountryName : 
		/// </summary>
		public System.String		  MailingCountryName = null;
		
		/// <summary>
		/// LoginAttempts : 
		/// </summary>
		public System.Int32		  LoginAttempts = (int)0;
		
		/// <summary>
		/// LastAttemptDate : 
		/// </summary>
		public System.DateTime?		  LastAttemptDate = null;
		
		/// <summary>
		/// Status : 
		/// </summary>
		public System.Int32?		  Status = null;
		
		/// <summary>
		/// LastTermsAndConditionsDate : 
		/// </summary>
		public System.DateTime?		  LastTermsAndConditionsDate = null;
		
		/// <summary>
		/// DefaultLanguageId : 
		/// </summary>
		public System.Int32?		  DefaultLanguageId = null;
		
		/// <summary>
		/// ReferringSiteID : 
		/// </summary>
		public System.Int32?		  ReferringSiteId = null;
		
		/// <summary>
		/// MultiLingualFirstName : 
		/// </summary>
		public System.String		  MultiLingualFirstName = null;
		
		/// <summary>
		/// MultiLingualSurame : 
		/// </summary>
		public System.String		  MultiLingualSurame = null;
		
		/// <summary>
		/// SecondaryEmail : 
		/// </summary>
		public System.String		  SecondaryEmail = null;
		
		/// <summary>
		/// CandidateData : 
		/// </summary>
		public System.String		  CandidateData = null;
		
		/// <summary>
		/// EligibleToWorkIn : 
		/// </summary>
		public System.String		  EligibleToWorkIn = null;
		
		/// <summary>
		/// ReferenceUponRequest : 
		/// </summary>
		public System.Boolean?		  ReferenceUponRequest = null;
		
		/// <summary>
		/// PreferredLine : 
		/// </summary>
		public System.Int32		  PreferredLine = (int)0;
		
		/// <summary>
		/// VideoURL : 
		/// </summary>
		public System.String		  VideoUrl = null;
		
		/// <summary>
		/// ProfileDataXML : 
		/// </summary>
		public System.String		  ProfileDataXml = null;
		
		/// <summary>
		/// LastProfileSubmittedDate : 
		/// </summary>
		public System.DateTime?		  LastProfileSubmittedDate = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private Countries _countryIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Countries"/>.
		/// </summary>
		/// <value>The source Countries for CountryId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual Countries CountryIdSource
      	{
            get { return this._countryIdSource; }
            set { this._countryIdSource = value; }
      	}
		private Educations _educationIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Educations"/>.
		/// </summary>
		/// <value>The source Educations for EducationId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual Educations EducationIdSource
      	{
            get { return this._educationIdSource; }
            set { this._educationIdSource = value; }
      	}
		private EmailFormats _emailFormatSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EmailFormats"/>.
		/// </summary>
		/// <value>The source EmailFormats for EmailFormat.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EmailFormats EmailFormatSource
      	{
            get { return this._emailFormatSource; }
            set { this._emailFormatSource = value; }
      	}
		private Sites _siteIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Sites"/>.
		/// </summary>
		/// <value>The source Sites for SiteId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual Sites SiteIdSource
      	{
            get { return this._siteIdSource; }
            set { this._siteIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region JobsSavedCollection
		
		private TList<JobsSaved> _jobsSavedMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobsSavedMemberId
		/// </summary>
		
		public TList<JobsSaved> JobsSavedCollection
		{
			get
			{
				if (_jobsSavedMemberId == null)
				{
				_jobsSavedMemberId = new TList<JobsSaved>();
				}
	
				return _jobsSavedMemberId;
			}
			set { _jobsSavedMemberId = value; }
		}
		
		#endregion

		#region MemberLanguagesCollection
		
		private TList<MemberLanguages> _memberLanguagesMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _memberLanguagesMemberId
		/// </summary>
		
		public TList<MemberLanguages> MemberLanguagesCollection
		{
			get
			{
				if (_memberLanguagesMemberId == null)
				{
				_memberLanguagesMemberId = new TList<MemberLanguages>();
				}
	
				return _memberLanguagesMemberId;
			}
			set { _memberLanguagesMemberId = value; }
		}
		
		#endregion

		#region MemberQualificationCollection
		
		private TList<MemberQualification> _memberQualificationMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _memberQualificationMemberId
		/// </summary>
		
		public TList<MemberQualification> MemberQualificationCollection
		{
			get
			{
				if (_memberQualificationMemberId == null)
				{
				_memberQualificationMemberId = new TList<MemberQualification>();
				}
	
				return _memberQualificationMemberId;
			}
			set { _memberQualificationMemberId = value; }
		}
		
		#endregion

		#region JobApplicationCollection
		
		private TList<JobApplication> _jobApplicationMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobApplicationMemberId
		/// </summary>
		
		public TList<JobApplication> JobApplicationCollection
		{
			get
			{
				if (_jobApplicationMemberId == null)
				{
				_jobApplicationMemberId = new TList<JobApplication>();
				}
	
				return _jobApplicationMemberId;
			}
			set { _jobApplicationMemberId = value; }
		}
		
		#endregion

		#region MemberReferencesCollection
		
		private TList<MemberReferences> _memberReferencesMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _memberReferencesMemberId
		/// </summary>
		
		public TList<MemberReferences> MemberReferencesCollection
		{
			get
			{
				if (_memberReferencesMemberId == null)
				{
				_memberReferencesMemberId = new TList<MemberReferences>();
				}
	
				return _memberReferencesMemberId;
			}
			set { _memberReferencesMemberId = value; }
		}
		
		#endregion

		#region MemberCertificateMembershipsCollection
		
		private TList<MemberCertificateMemberships> _memberCertificateMembershipsMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _memberCertificateMembershipsMemberId
		/// </summary>
		
		public TList<MemberCertificateMemberships> MemberCertificateMembershipsCollection
		{
			get
			{
				if (_memberCertificateMembershipsMemberId == null)
				{
				_memberCertificateMembershipsMemberId = new TList<MemberCertificateMemberships>();
				}
	
				return _memberCertificateMembershipsMemberId;
			}
			set { _memberCertificateMembershipsMemberId = value; }
		}
		
		#endregion

		#region MemberPositionsCollection
		
		private TList<MemberPositions> _memberPositionsMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _memberPositionsMemberId
		/// </summary>
		
		public TList<MemberPositions> MemberPositionsCollection
		{
			get
			{
				if (_memberPositionsMemberId == null)
				{
				_memberPositionsMemberId = new TList<MemberPositions>();
				}
	
				return _memberPositionsMemberId;
			}
			set { _memberPositionsMemberId = value; }
		}
		
		#endregion

		#region MemberLicensesCollection
		
		private TList<MemberLicenses> _memberLicensesMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _memberLicensesMemberId
		/// </summary>
		
		public TList<MemberLicenses> MemberLicensesCollection
		{
			get
			{
				if (_memberLicensesMemberId == null)
				{
				_memberLicensesMemberId = new TList<MemberLicenses>();
				}
	
				return _memberLicensesMemberId;
			}
			set { _memberLicensesMemberId = value; }
		}
		
		#endregion

		#region MemberFilesCollection
		
		private TList<MemberFiles> _memberFilesMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _memberFilesMemberId
		/// </summary>
		
		public TList<MemberFiles> MemberFilesCollection
		{
			get
			{
				if (_memberFilesMemberId == null)
				{
				_memberFilesMemberId = new TList<MemberFiles>();
				}
	
				return _memberFilesMemberId;
			}
			set { _memberFilesMemberId = value; }
		}
		
		#endregion

		#region JobApplicationNotesCollection
		
		private TList<JobApplicationNotes> _jobApplicationNotesMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobApplicationNotesMemberId
		/// </summary>
		
		public TList<JobApplicationNotes> JobApplicationNotesCollection
		{
			get
			{
				if (_jobApplicationNotesMemberId == null)
				{
				_jobApplicationNotesMemberId = new TList<JobApplicationNotes>();
				}
	
				return _jobApplicationNotesMemberId;
			}
			set { _jobApplicationNotesMemberId = value; }
		}
		
		#endregion

		#region JobAlertsCollection
		
		private TList<JobAlerts> _jobAlertsMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _jobAlertsMemberId
		/// </summary>
		
		public TList<JobAlerts> JobAlertsCollection
		{
			get
			{
				if (_jobAlertsMemberId == null)
				{
				_jobAlertsMemberId = new TList<JobAlerts>();
				}
	
				return _jobAlertsMemberId;
			}
			set { _jobAlertsMemberId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			MembersEntityData _tmp = new MembersEntityData();
						
			_tmp.MemberId = this.MemberId;
			
			_tmp.SiteId = this.SiteId;
			_tmp.Username = this.Username;
			_tmp.Password = this.Password;
			_tmp.Title = this.Title;
			_tmp.FirstName = this.FirstName;
			_tmp.Surname = this.Surname;
			_tmp.EmailAddress = this.EmailAddress;
			_tmp.Company = this.Company;
			_tmp.Position = this.Position;
			_tmp.HomePhone = this.HomePhone;
			_tmp.WorkPhone = this.WorkPhone;
			_tmp.MobilePhone = this.MobilePhone;
			_tmp.Fax = this.Fax;
			_tmp.Address1 = this.Address1;
			_tmp.Address2 = this.Address2;
			_tmp.LocationId = this.LocationId;
			_tmp.AreaId = this.AreaId;
			_tmp.CountryId = this.CountryId;
			_tmp.PreferredCategoryId = this.PreferredCategoryId;
			_tmp.PreferredSubCategoryId = this.PreferredSubCategoryId;
			_tmp.PreferredSalaryId = this.PreferredSalaryId;
			_tmp.Subscribed = this.Subscribed;
			_tmp.MonthlyUpdate = this.MonthlyUpdate;
			_tmp.ReferringMemberId = this.ReferringMemberId;
			_tmp.LastModifiedDate = this.LastModifiedDate;
			_tmp.Valid = this.Valid;
			_tmp.EmailFormat = this.EmailFormat;
			_tmp.LastLogon = this.LastLogon;
			_tmp.DateOfBirth = this.DateOfBirth;
			_tmp.Gender = this.Gender;
			_tmp.Tags = this.Tags;
			_tmp.Validated = this.Validated;
			_tmp.ValidateGuid = this.ValidateGuid;
			_tmp.MemberUrlExtension = this.MemberUrlExtension;
			_tmp.WebsiteUrl = this.WebsiteUrl;
			_tmp.AvailabilityId = this.AvailabilityId;
			_tmp.AvailabilityFromDate = this.AvailabilityFromDate;
			_tmp.MySpaceHeading = this.MySpaceHeading;
			_tmp.MySpaceContent = this.MySpaceContent;
			_tmp.UrlReferrer = this.UrlReferrer;
			_tmp.RequiredPasswordChange = this.RequiredPasswordChange;
			_tmp.PreferredJobTitle = this.PreferredJobTitle;
			_tmp.PreferredAvailability = this.PreferredAvailability;
			_tmp.PreferredAvailabilityType = this.PreferredAvailabilityType;
			_tmp.PreferredSalaryFrom = this.PreferredSalaryFrom;
			_tmp.PreferredSalaryTo = this.PreferredSalaryTo;
			_tmp.CurrentSalaryFrom = this.CurrentSalaryFrom;
			_tmp.CurrentSalaryTo = this.CurrentSalaryTo;
			_tmp.LookingFor = this.LookingFor;
			_tmp.Experience = this.Experience;
			_tmp.Skills = this.Skills;
			_tmp.Reasons = this.Reasons;
			_tmp.Comments = this.Comments;
			_tmp.ProfileType = this.ProfileType;
			_tmp.EducationId = this.EducationId;
			_tmp.SearchField = this.SearchField;
			_tmp.RegisteredDate = this.RegisteredDate;
			_tmp.States = this.States;
			_tmp.Suburb = this.Suburb;
			_tmp.PostCode = this.PostCode;
			_tmp.ProfilePicture = this.ProfilePicture;
			_tmp.ShortBio = this.ShortBio;
			_tmp.WorkTypeId = this.WorkTypeId;
			_tmp.Memberships = this.Memberships;
			_tmp.MemberStatusId = this.MemberStatusId;
			_tmp.LinkedInAccessToken = this.LinkedInAccessToken;
			_tmp.ExternalMemberId = this.ExternalMemberId;
			_tmp.PassportNo = this.PassportNo;
			_tmp.MailingAddress1 = this.MailingAddress1;
			_tmp.MailingAddress2 = this.MailingAddress2;
			_tmp.MailingStates = this.MailingStates;
			_tmp.MailingSuburb = this.MailingSuburb;
			_tmp.MailingPostCode = this.MailingPostCode;
			_tmp.MailingCountryId = this.MailingCountryId;
			_tmp.CountryName = this.CountryName;
			_tmp.MailingCountryName = this.MailingCountryName;
			_tmp.LoginAttempts = this.LoginAttempts;
			_tmp.LastAttemptDate = this.LastAttemptDate;
			_tmp.Status = this.Status;
			_tmp.LastTermsAndConditionsDate = this.LastTermsAndConditionsDate;
			_tmp.DefaultLanguageId = this.DefaultLanguageId;
			_tmp.ReferringSiteId = this.ReferringSiteId;
			_tmp.MultiLingualFirstName = this.MultiLingualFirstName;
			_tmp.MultiLingualSurame = this.MultiLingualSurame;
			_tmp.SecondaryEmail = this.SecondaryEmail;
			_tmp.CandidateData = this.CandidateData;
			_tmp.EligibleToWorkIn = this.EligibleToWorkIn;
			_tmp.ReferenceUponRequest = this.ReferenceUponRequest;
			_tmp.PreferredLine = this.PreferredLine;
			_tmp.VideoUrl = this.VideoUrl;
			_tmp.ProfileDataXml = this.ProfileDataXml;
			_tmp.LastProfileSubmittedDate = this.LastProfileSubmittedDate;
			
			#region Source Parent Composite Entities
			if (this.CountryIdSource != null)
				_tmp.CountryIdSource = MakeCopyOf(this.CountryIdSource) as Countries;
			if (this.EducationIdSource != null)
				_tmp.EducationIdSource = MakeCopyOf(this.EducationIdSource) as Educations;
			if (this.EmailFormatSource != null)
				_tmp.EmailFormatSource = MakeCopyOf(this.EmailFormatSource) as EmailFormats;
			if (this.SiteIdSource != null)
				_tmp.SiteIdSource = MakeCopyOf(this.SiteIdSource) as Sites;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._jobsSavedMemberId != null)
				_tmp.JobsSavedCollection = (TList<JobsSaved>) MakeCopyOf(this.JobsSavedCollection); 
			if (this._memberLanguagesMemberId != null)
				_tmp.MemberLanguagesCollection = (TList<MemberLanguages>) MakeCopyOf(this.MemberLanguagesCollection); 
			if (this._memberQualificationMemberId != null)
				_tmp.MemberQualificationCollection = (TList<MemberQualification>) MakeCopyOf(this.MemberQualificationCollection); 
			if (this._jobApplicationMemberId != null)
				_tmp.JobApplicationCollection = (TList<JobApplication>) MakeCopyOf(this.JobApplicationCollection); 
			if (this._memberReferencesMemberId != null)
				_tmp.MemberReferencesCollection = (TList<MemberReferences>) MakeCopyOf(this.MemberReferencesCollection); 
			if (this._memberCertificateMembershipsMemberId != null)
				_tmp.MemberCertificateMembershipsCollection = (TList<MemberCertificateMemberships>) MakeCopyOf(this.MemberCertificateMembershipsCollection); 
			if (this._memberPositionsMemberId != null)
				_tmp.MemberPositionsCollection = (TList<MemberPositions>) MakeCopyOf(this.MemberPositionsCollection); 
			if (this._memberLicensesMemberId != null)
				_tmp.MemberLicensesCollection = (TList<MemberLicenses>) MakeCopyOf(this.MemberLicensesCollection); 
			if (this._memberFilesMemberId != null)
				_tmp.MemberFilesCollection = (TList<MemberFiles>) MakeCopyOf(this.MemberFilesCollection); 
			if (this._jobApplicationNotesMemberId != null)
				_tmp.JobApplicationNotesCollection = (TList<JobApplicationNotes>) MakeCopyOf(this.JobApplicationNotesCollection); 
			if (this._jobAlertsMemberId != null)
				_tmp.JobAlertsCollection = (TList<JobAlerts>) MakeCopyOf(this.JobAlertsCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			MembersEntityData _tmp = new MembersEntityData();
						
			_tmp.MemberId = this.MemberId;
			
			_tmp.SiteId = this.SiteId;
			_tmp.Username = this.Username;
			_tmp.Password = this.Password;
			_tmp.Title = this.Title;
			_tmp.FirstName = this.FirstName;
			_tmp.Surname = this.Surname;
			_tmp.EmailAddress = this.EmailAddress;
			_tmp.Company = this.Company;
			_tmp.Position = this.Position;
			_tmp.HomePhone = this.HomePhone;
			_tmp.WorkPhone = this.WorkPhone;
			_tmp.MobilePhone = this.MobilePhone;
			_tmp.Fax = this.Fax;
			_tmp.Address1 = this.Address1;
			_tmp.Address2 = this.Address2;
			_tmp.LocationId = this.LocationId;
			_tmp.AreaId = this.AreaId;
			_tmp.CountryId = this.CountryId;
			_tmp.PreferredCategoryId = this.PreferredCategoryId;
			_tmp.PreferredSubCategoryId = this.PreferredSubCategoryId;
			_tmp.PreferredSalaryId = this.PreferredSalaryId;
			_tmp.Subscribed = this.Subscribed;
			_tmp.MonthlyUpdate = this.MonthlyUpdate;
			_tmp.ReferringMemberId = this.ReferringMemberId;
			_tmp.LastModifiedDate = this.LastModifiedDate;
			_tmp.Valid = this.Valid;
			_tmp.EmailFormat = this.EmailFormat;
			_tmp.LastLogon = this.LastLogon;
			_tmp.DateOfBirth = this.DateOfBirth;
			_tmp.Gender = this.Gender;
			_tmp.Tags = this.Tags;
			_tmp.Validated = this.Validated;
			_tmp.ValidateGuid = this.ValidateGuid;
			_tmp.MemberUrlExtension = this.MemberUrlExtension;
			_tmp.WebsiteUrl = this.WebsiteUrl;
			_tmp.AvailabilityId = this.AvailabilityId;
			_tmp.AvailabilityFromDate = this.AvailabilityFromDate;
			_tmp.MySpaceHeading = this.MySpaceHeading;
			_tmp.MySpaceContent = this.MySpaceContent;
			_tmp.UrlReferrer = this.UrlReferrer;
			_tmp.RequiredPasswordChange = this.RequiredPasswordChange;
			_tmp.PreferredJobTitle = this.PreferredJobTitle;
			_tmp.PreferredAvailability = this.PreferredAvailability;
			_tmp.PreferredAvailabilityType = this.PreferredAvailabilityType;
			_tmp.PreferredSalaryFrom = this.PreferredSalaryFrom;
			_tmp.PreferredSalaryTo = this.PreferredSalaryTo;
			_tmp.CurrentSalaryFrom = this.CurrentSalaryFrom;
			_tmp.CurrentSalaryTo = this.CurrentSalaryTo;
			_tmp.LookingFor = this.LookingFor;
			_tmp.Experience = this.Experience;
			_tmp.Skills = this.Skills;
			_tmp.Reasons = this.Reasons;
			_tmp.Comments = this.Comments;
			_tmp.ProfileType = this.ProfileType;
			_tmp.EducationId = this.EducationId;
			_tmp.SearchField = this.SearchField;
			_tmp.RegisteredDate = this.RegisteredDate;
			_tmp.States = this.States;
			_tmp.Suburb = this.Suburb;
			_tmp.PostCode = this.PostCode;
			_tmp.ProfilePicture = this.ProfilePicture;
			_tmp.ShortBio = this.ShortBio;
			_tmp.WorkTypeId = this.WorkTypeId;
			_tmp.Memberships = this.Memberships;
			_tmp.MemberStatusId = this.MemberStatusId;
			_tmp.LinkedInAccessToken = this.LinkedInAccessToken;
			_tmp.ExternalMemberId = this.ExternalMemberId;
			_tmp.PassportNo = this.PassportNo;
			_tmp.MailingAddress1 = this.MailingAddress1;
			_tmp.MailingAddress2 = this.MailingAddress2;
			_tmp.MailingStates = this.MailingStates;
			_tmp.MailingSuburb = this.MailingSuburb;
			_tmp.MailingPostCode = this.MailingPostCode;
			_tmp.MailingCountryId = this.MailingCountryId;
			_tmp.CountryName = this.CountryName;
			_tmp.MailingCountryName = this.MailingCountryName;
			_tmp.LoginAttempts = this.LoginAttempts;
			_tmp.LastAttemptDate = this.LastAttemptDate;
			_tmp.Status = this.Status;
			_tmp.LastTermsAndConditionsDate = this.LastTermsAndConditionsDate;
			_tmp.DefaultLanguageId = this.DefaultLanguageId;
			_tmp.ReferringSiteId = this.ReferringSiteId;
			_tmp.MultiLingualFirstName = this.MultiLingualFirstName;
			_tmp.MultiLingualSurame = this.MultiLingualSurame;
			_tmp.SecondaryEmail = this.SecondaryEmail;
			_tmp.CandidateData = this.CandidateData;
			_tmp.EligibleToWorkIn = this.EligibleToWorkIn;
			_tmp.ReferenceUponRequest = this.ReferenceUponRequest;
			_tmp.PreferredLine = this.PreferredLine;
			_tmp.VideoUrl = this.VideoUrl;
			_tmp.ProfileDataXml = this.ProfileDataXml;
			_tmp.LastProfileSubmittedDate = this.LastProfileSubmittedDate;
			
			#region Source Parent Composite Entities
			if (this.CountryIdSource != null && existingCopies.Contains(this.CountryIdSource))
				_tmp.CountryIdSource = existingCopies[this.CountryIdSource] as Countries;
			else
				_tmp.CountryIdSource = MakeCopyOf(this.CountryIdSource, existingCopies) as Countries;
			if (this.EducationIdSource != null && existingCopies.Contains(this.EducationIdSource))
				_tmp.EducationIdSource = existingCopies[this.EducationIdSource] as Educations;
			else
				_tmp.EducationIdSource = MakeCopyOf(this.EducationIdSource, existingCopies) as Educations;
			if (this.EmailFormatSource != null && existingCopies.Contains(this.EmailFormatSource))
				_tmp.EmailFormatSource = existingCopies[this.EmailFormatSource] as EmailFormats;
			else
				_tmp.EmailFormatSource = MakeCopyOf(this.EmailFormatSource, existingCopies) as EmailFormats;
			if (this.SiteIdSource != null && existingCopies.Contains(this.SiteIdSource))
				_tmp.SiteIdSource = existingCopies[this.SiteIdSource] as Sites;
			else
				_tmp.SiteIdSource = MakeCopyOf(this.SiteIdSource, existingCopies) as Sites;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.JobsSavedCollection = (TList<JobsSaved>) MakeCopyOf(this.JobsSavedCollection, existingCopies); 
			_tmp.MemberLanguagesCollection = (TList<MemberLanguages>) MakeCopyOf(this.MemberLanguagesCollection, existingCopies); 
			_tmp.MemberQualificationCollection = (TList<MemberQualification>) MakeCopyOf(this.MemberQualificationCollection, existingCopies); 
			_tmp.JobApplicationCollection = (TList<JobApplication>) MakeCopyOf(this.JobApplicationCollection, existingCopies); 
			_tmp.MemberReferencesCollection = (TList<MemberReferences>) MakeCopyOf(this.MemberReferencesCollection, existingCopies); 
			_tmp.MemberCertificateMembershipsCollection = (TList<MemberCertificateMemberships>) MakeCopyOf(this.MemberCertificateMembershipsCollection, existingCopies); 
			_tmp.MemberPositionsCollection = (TList<MemberPositions>) MakeCopyOf(this.MemberPositionsCollection, existingCopies); 
			_tmp.MemberLicensesCollection = (TList<MemberLicenses>) MakeCopyOf(this.MemberLicensesCollection, existingCopies); 
			_tmp.MemberFilesCollection = (TList<MemberFiles>) MakeCopyOf(this.MemberFilesCollection, existingCopies); 
			_tmp.JobApplicationNotesCollection = (TList<JobApplicationNotes>) MakeCopyOf(this.JobApplicationNotesCollection, existingCopies); 
			_tmp.JobAlertsCollection = (TList<JobAlerts>) MakeCopyOf(this.JobAlertsCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="MembersColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(MembersColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="MembersColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(MembersColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="MembersColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(MembersColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				MembersEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new MembersEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="MembersColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(MembersColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				MembersEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new MembersEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region MembersEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="Members"/> object.
	/// </remarks>
	public class MembersEventArgs : System.EventArgs
	{
		private MembersColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the MembersEventArgs class.
		///</summary>
		public MembersEventArgs(MembersColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the MembersEventArgs class.
		///</summary>
		public MembersEventArgs(MembersColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The MembersColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="MembersColumn" />
		public MembersColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all Members related events.
	///</summary>
	public delegate void MembersEventHandler(object sender, MembersEventArgs e);
	
	#region MembersComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class MembersComparer : System.Collections.Generic.IComparer<Members>
	{
		MembersColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:MembersComparer"/> class.
        /// </summary>
		public MembersComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:MembersComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public MembersComparer(MembersColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="Members"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="Members"/> to compare.</param>
        /// <param name="b">The second <c>Members</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(Members a, Members b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(Members entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(Members a, Members b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public MembersColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region MembersKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="Members"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class MembersKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the MembersKey class.
		/// </summary>
		public MembersKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the MembersKey class.
		/// </summary>
		public MembersKey(MembersBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.MemberId = entity.MemberId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the MembersKey class.
		/// </summary>
		public MembersKey(System.Int32 _memberId)
		{
			#region Init Properties

			this.MemberId = _memberId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private MembersBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public MembersBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the MemberId property
		private System.Int32 _memberId;
		
		/// <summary>
		/// Gets or sets the MemberId property.
		/// </summary>
		public System.Int32 MemberId
		{
			get { return _memberId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.MemberId = value;
				
				_memberId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				MemberId = ( values["MemberId"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["MemberId"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("MemberId", MemberId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("MemberId: {0}{1}",
								MemberId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region MembersColumn Enum
	
	/// <summary>
	/// Enumerate the Members columns.
	/// </summary>
	[Serializable]
	public enum MembersColumn : int
	{
		/// <summary>
		/// MemberId : 
		/// </summary>
		[EnumTextValue("MemberID")]
		[ColumnEnum("MemberID", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		MemberId = 1,
		/// <summary>
		/// SiteId : 
		/// </summary>
		[EnumTextValue("SiteID")]
		[ColumnEnum("SiteID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		SiteId = 2,
		/// <summary>
		/// Username : 
		/// </summary>
		[EnumTextValue("Username")]
		[ColumnEnum("Username", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		Username = 3,
		/// <summary>
		/// Password : 
		/// </summary>
		[EnumTextValue("Password")]
		[ColumnEnum("Password", typeof(System.String), System.Data.DbType.String, false, false, false, 255)]
		Password = 4,
		/// <summary>
		/// Title : 
		/// </summary>
		[EnumTextValue("Title")]
		[ColumnEnum("Title", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		Title = 5,
		/// <summary>
		/// FirstName : 
		/// </summary>
		[EnumTextValue("FirstName")]
		[ColumnEnum("FirstName", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		FirstName = 6,
		/// <summary>
		/// Surname : 
		/// </summary>
		[EnumTextValue("Surname")]
		[ColumnEnum("Surname", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		Surname = 7,
		/// <summary>
		/// EmailAddress : 
		/// </summary>
		[EnumTextValue("EmailAddress")]
		[ColumnEnum("EmailAddress", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		EmailAddress = 8,
		/// <summary>
		/// Company : 
		/// </summary>
		[EnumTextValue("Company")]
		[ColumnEnum("Company", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Company = 9,
		/// <summary>
		/// Position : 
		/// </summary>
		[EnumTextValue("Position")]
		[ColumnEnum("Position", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Position = 10,
		/// <summary>
		/// HomePhone : 
		/// </summary>
		[EnumTextValue("HomePhone")]
		[ColumnEnum("HomePhone", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 40)]
		HomePhone = 11,
		/// <summary>
		/// WorkPhone : 
		/// </summary>
		[EnumTextValue("WorkPhone")]
		[ColumnEnum("WorkPhone", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 40)]
		WorkPhone = 12,
		/// <summary>
		/// MobilePhone : 
		/// </summary>
		[EnumTextValue("MobilePhone")]
		[ColumnEnum("MobilePhone", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 40)]
		MobilePhone = 13,
		/// <summary>
		/// Fax : 
		/// </summary>
		[EnumTextValue("Fax")]
		[ColumnEnum("Fax", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 40)]
		Fax = 14,
		/// <summary>
		/// Address1 : 
		/// </summary>
		[EnumTextValue("Address1")]
		[ColumnEnum("Address1", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		Address1 = 15,
		/// <summary>
		/// Address2 : 
		/// </summary>
		[EnumTextValue("Address2")]
		[ColumnEnum("Address2", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		Address2 = 16,
		/// <summary>
		/// LocationId : 
		/// </summary>
		[EnumTextValue("LocationID")]
		[ColumnEnum("LocationID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		LocationId = 17,
		/// <summary>
		/// AreaId : 
		/// </summary>
		[EnumTextValue("AreaID")]
		[ColumnEnum("AreaID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		AreaId = 18,
		/// <summary>
		/// CountryId : 
		/// </summary>
		[EnumTextValue("CountryID")]
		[ColumnEnum("CountryID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		CountryId = 19,
		/// <summary>
		/// PreferredCategoryId : 
		/// </summary>
		[EnumTextValue("PreferredCategoryID")]
		[ColumnEnum("PreferredCategoryID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		PreferredCategoryId = 20,
		/// <summary>
		/// PreferredSubCategoryId : 
		/// </summary>
		[EnumTextValue("PreferredSubCategoryID")]
		[ColumnEnum("PreferredSubCategoryID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		PreferredSubCategoryId = 21,
		/// <summary>
		/// PreferredSalaryId : 
		/// </summary>
		[EnumTextValue("PreferredSalaryID")]
		[ColumnEnum("PreferredSalaryID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		PreferredSalaryId = 22,
		/// <summary>
		/// Subscribed : 
		/// </summary>
		[EnumTextValue("Subscribed")]
		[ColumnEnum("Subscribed", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		Subscribed = 23,
		/// <summary>
		/// MonthlyUpdate : 
		/// </summary>
		[EnumTextValue("MonthlyUpdate")]
		[ColumnEnum("MonthlyUpdate", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		MonthlyUpdate = 24,
		/// <summary>
		/// ReferringMemberId : 
		/// </summary>
		[EnumTextValue("ReferringMemberID")]
		[ColumnEnum("ReferringMemberID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ReferringMemberId = 25,
		/// <summary>
		/// LastModifiedDate : 
		/// </summary>
		[EnumTextValue("LastModifiedDate")]
		[ColumnEnum("LastModifiedDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastModifiedDate = 26,
		/// <summary>
		/// Valid : 
		/// </summary>
		[EnumTextValue("Valid")]
		[ColumnEnum("Valid", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		Valid = 27,
		/// <summary>
		/// EmailFormat : 
		/// </summary>
		[EnumTextValue("EmailFormat")]
		[ColumnEnum("EmailFormat", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		EmailFormat = 28,
		/// <summary>
		/// LastLogon : 
		/// </summary>
		[EnumTextValue("LastLogon")]
		[ColumnEnum("LastLogon", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastLogon = 29,
		/// <summary>
		/// DateOfBirth : 
		/// </summary>
		[EnumTextValue("DateOfBirth")]
		[ColumnEnum("DateOfBirth", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		DateOfBirth = 30,
		/// <summary>
		/// Gender : 
		/// </summary>
		[EnumTextValue("Gender")]
		[ColumnEnum("Gender", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 1)]
		Gender = 31,
		/// <summary>
		/// Tags : 
		/// </summary>
		[EnumTextValue("Tags")]
		[ColumnEnum("Tags", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		Tags = 32,
		/// <summary>
		/// Validated : 
		/// </summary>
		[EnumTextValue("Validated")]
		[ColumnEnum("Validated", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		Validated = 33,
		/// <summary>
		/// ValidateGuid : 
		/// </summary>
		[EnumTextValue("ValidateGUID")]
		[ColumnEnum("ValidateGUID", typeof(System.Guid), System.Data.DbType.Guid, false, false, true)]
		ValidateGuid = 34,
		/// <summary>
		/// MemberUrlExtension : 
		/// </summary>
		[EnumTextValue("MemberURLExtension")]
		[ColumnEnum("MemberURLExtension", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		MemberUrlExtension = 35,
		/// <summary>
		/// WebsiteUrl : 
		/// </summary>
		[EnumTextValue("WebsiteURL")]
		[ColumnEnum("WebsiteURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		WebsiteUrl = 36,
		/// <summary>
		/// AvailabilityId : 
		/// </summary>
		[EnumTextValue("AvailabilityID")]
		[ColumnEnum("AvailabilityID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		AvailabilityId = 37,
		/// <summary>
		/// AvailabilityFromDate : 
		/// </summary>
		[EnumTextValue("AvailabilityFromDate")]
		[ColumnEnum("AvailabilityFromDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		AvailabilityFromDate = 38,
		/// <summary>
		/// MySpaceHeading : 
		/// </summary>
		[EnumTextValue("MySpaceHeading")]
		[ColumnEnum("MySpaceHeading", typeof(System.String), System.Data.DbType.String, false, false, true)]
		MySpaceHeading = 39,
		/// <summary>
		/// MySpaceContent : 
		/// </summary>
		[EnumTextValue("MySpaceContent")]
		[ColumnEnum("MySpaceContent", typeof(System.String), System.Data.DbType.String, false, false, true)]
		MySpaceContent = 40,
		/// <summary>
		/// UrlReferrer : 
		/// </summary>
		[EnumTextValue("URLReferrer")]
		[ColumnEnum("URLReferrer", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		UrlReferrer = 41,
		/// <summary>
		/// RequiredPasswordChange : 
		/// </summary>
		[EnumTextValue("RequiredPasswordChange")]
		[ColumnEnum("RequiredPasswordChange", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		RequiredPasswordChange = 42,
		/// <summary>
		/// PreferredJobTitle : 
		/// </summary>
		[EnumTextValue("PreferredJobTitle")]
		[ColumnEnum("PreferredJobTitle", typeof(System.String), System.Data.DbType.String, false, false, true, 512)]
		PreferredJobTitle = 43,
		/// <summary>
		/// PreferredAvailability : 
		/// </summary>
		[EnumTextValue("PreferredAvailability")]
		[ColumnEnum("PreferredAvailability", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		PreferredAvailability = 44,
		/// <summary>
		/// PreferredAvailabilityType : 
		/// </summary>
		[EnumTextValue("PreferredAvailabilityType")]
		[ColumnEnum("PreferredAvailabilityType", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		PreferredAvailabilityType = 45,
		/// <summary>
		/// PreferredSalaryFrom : 
		/// </summary>
		[EnumTextValue("PreferredSalaryFrom")]
		[ColumnEnum("PreferredSalaryFrom", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		PreferredSalaryFrom = 46,
		/// <summary>
		/// PreferredSalaryTo : 
		/// </summary>
		[EnumTextValue("PreferredSalaryTo")]
		[ColumnEnum("PreferredSalaryTo", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		PreferredSalaryTo = 47,
		/// <summary>
		/// CurrentSalaryFrom : 
		/// </summary>
		[EnumTextValue("CurrentSalaryFrom")]
		[ColumnEnum("CurrentSalaryFrom", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		CurrentSalaryFrom = 48,
		/// <summary>
		/// CurrentSalaryTo : 
		/// </summary>
		[EnumTextValue("CurrentSalaryTo")]
		[ColumnEnum("CurrentSalaryTo", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		CurrentSalaryTo = 49,
		/// <summary>
		/// LookingFor : 
		/// </summary>
		[EnumTextValue("LookingFor")]
		[ColumnEnum("LookingFor", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		LookingFor = 50,
		/// <summary>
		/// Experience : 
		/// </summary>
		[EnumTextValue("Experience")]
		[ColumnEnum("Experience", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Experience = 51,
		/// <summary>
		/// Skills : 
		/// </summary>
		[EnumTextValue("Skills")]
		[ColumnEnum("Skills", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Skills = 52,
		/// <summary>
		/// Reasons : 
		/// </summary>
		[EnumTextValue("Reasons")]
		[ColumnEnum("Reasons", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Reasons = 53,
		/// <summary>
		/// Comments : 
		/// </summary>
		[EnumTextValue("Comments")]
		[ColumnEnum("Comments", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Comments = 54,
		/// <summary>
		/// ProfileType : 
		/// </summary>
		[EnumTextValue("ProfileType")]
		[ColumnEnum("ProfileType", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ProfileType = 55,
		/// <summary>
		/// EducationId : 
		/// </summary>
		[EnumTextValue("EducationID")]
		[ColumnEnum("EducationID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		EducationId = 56,
		/// <summary>
		/// SearchField : 
		/// </summary>
		[EnumTextValue("SearchField")]
		[ColumnEnum("SearchField", typeof(System.String), System.Data.DbType.String, false, false, true)]
		SearchField = 57,
		/// <summary>
		/// RegisteredDate : 
		/// </summary>
		[EnumTextValue("RegisteredDate")]
		[ColumnEnum("RegisteredDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		RegisteredDate = 58,
		/// <summary>
		/// States : 
		/// </summary>
		[EnumTextValue("States")]
		[ColumnEnum("States", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		States = 59,
		/// <summary>
		/// Suburb : 
		/// </summary>
		[EnumTextValue("Suburb")]
		[ColumnEnum("Suburb", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		Suburb = 60,
		/// <summary>
		/// PostCode : 
		/// </summary>
		[EnumTextValue("PostCode")]
		[ColumnEnum("PostCode", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		PostCode = 61,
		/// <summary>
		/// ProfilePicture : 
		/// </summary>
		[EnumTextValue("ProfilePicture")]
		[ColumnEnum("ProfilePicture", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ProfilePicture = 62,
		/// <summary>
		/// ShortBio : 
		/// </summary>
		[EnumTextValue("ShortBio")]
		[ColumnEnum("ShortBio", typeof(System.String), System.Data.DbType.String, false, false, true)]
		ShortBio = 63,
		/// <summary>
		/// WorkTypeId : 
		/// </summary>
		[EnumTextValue("WorkTypeID")]
		[ColumnEnum("WorkTypeID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		WorkTypeId = 64,
		/// <summary>
		/// Memberships : 
		/// </summary>
		[EnumTextValue("Memberships")]
		[ColumnEnum("Memberships", typeof(System.String), System.Data.DbType.String, false, false, true, 512)]
		Memberships = 65,
		/// <summary>
		/// MemberStatusId : 
		/// </summary>
		[EnumTextValue("MemberStatusID")]
		[ColumnEnum("MemberStatusID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MemberStatusId = 66,
		/// <summary>
		/// LinkedInAccessToken : 
		/// </summary>
		[EnumTextValue("LinkedInAccessToken")]
		[ColumnEnum("LinkedInAccessToken", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		LinkedInAccessToken = 67,
		/// <summary>
		/// ExternalMemberId : 
		/// </summary>
		[EnumTextValue("ExternalMemberID")]
		[ColumnEnum("ExternalMemberID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ExternalMemberId = 68,
		/// <summary>
		/// PassportNo : 
		/// </summary>
		[EnumTextValue("PassportNo")]
		[ColumnEnum("PassportNo", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		PassportNo = 69,
		/// <summary>
		/// MailingAddress1 : 
		/// </summary>
		[EnumTextValue("MailingAddress1")]
		[ColumnEnum("MailingAddress1", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		MailingAddress1 = 70,
		/// <summary>
		/// MailingAddress2 : 
		/// </summary>
		[EnumTextValue("MailingAddress2")]
		[ColumnEnum("MailingAddress2", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		MailingAddress2 = 71,
		/// <summary>
		/// MailingStates : 
		/// </summary>
		[EnumTextValue("MailingStates")]
		[ColumnEnum("MailingStates", typeof(System.String), System.Data.DbType.String, false, false, true, 1020)]
		MailingStates = 72,
		/// <summary>
		/// MailingSuburb : 
		/// </summary>
		[EnumTextValue("MailingSuburb")]
		[ColumnEnum("MailingSuburb", typeof(System.String), System.Data.DbType.String, false, false, true, 1020)]
		MailingSuburb = 73,
		/// <summary>
		/// MailingPostCode : 
		/// </summary>
		[EnumTextValue("MailingPostCode")]
		[ColumnEnum("MailingPostCode", typeof(System.String), System.Data.DbType.String, false, false, true, 1020)]
		MailingPostCode = 74,
		/// <summary>
		/// MailingCountryId : 
		/// </summary>
		[EnumTextValue("MailingCountryID")]
		[ColumnEnum("MailingCountryID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MailingCountryId = 75,
		/// <summary>
		/// CountryName : 
		/// </summary>
		[EnumTextValue("CountryName")]
		[ColumnEnum("CountryName", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		CountryName = 76,
		/// <summary>
		/// MailingCountryName : 
		/// </summary>
		[EnumTextValue("MailingCountryName")]
		[ColumnEnum("MailingCountryName", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		MailingCountryName = 77,
		/// <summary>
		/// LoginAttempts : 
		/// </summary>
		[EnumTextValue("LoginAttempts")]
		[ColumnEnum("LoginAttempts", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		LoginAttempts = 78,
		/// <summary>
		/// LastAttemptDate : 
		/// </summary>
		[EnumTextValue("LastAttemptDate")]
		[ColumnEnum("LastAttemptDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastAttemptDate = 79,
		/// <summary>
		/// Status : 
		/// </summary>
		[EnumTextValue("Status")]
		[ColumnEnum("Status", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Status = 80,
		/// <summary>
		/// LastTermsAndConditionsDate : 
		/// </summary>
		[EnumTextValue("LastTermsAndConditionsDate")]
		[ColumnEnum("LastTermsAndConditionsDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastTermsAndConditionsDate = 81,
		/// <summary>
		/// DefaultLanguageId : 
		/// </summary>
		[EnumTextValue("DefaultLanguageId")]
		[ColumnEnum("DefaultLanguageId", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		DefaultLanguageId = 82,
		/// <summary>
		/// ReferringSiteId : 
		/// </summary>
		[EnumTextValue("ReferringSiteID")]
		[ColumnEnum("ReferringSiteID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ReferringSiteId = 83,
		/// <summary>
		/// MultiLingualFirstName : 
		/// </summary>
		[EnumTextValue("MultiLingualFirstName")]
		[ColumnEnum("MultiLingualFirstName", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		MultiLingualFirstName = 84,
		/// <summary>
		/// MultiLingualSurame : 
		/// </summary>
		[EnumTextValue("MultiLingualSurame")]
		[ColumnEnum("MultiLingualSurame", typeof(System.String), System.Data.DbType.String, false, false, true, 510)]
		MultiLingualSurame = 85,
		/// <summary>
		/// SecondaryEmail : 
		/// </summary>
		[EnumTextValue("SecondaryEmail")]
		[ColumnEnum("SecondaryEmail", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		SecondaryEmail = 86,
		/// <summary>
		/// CandidateData : 
		/// </summary>
		[EnumTextValue("CandidateData")]
		[ColumnEnum("CandidateData", typeof(System.String), System.Data.DbType.String, false, false, true)]
		CandidateData = 87,
		/// <summary>
		/// EligibleToWorkIn : 
		/// </summary>
		[EnumTextValue("EligibleToWorkIn")]
		[ColumnEnum("EligibleToWorkIn", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		EligibleToWorkIn = 88,
		/// <summary>
		/// ReferenceUponRequest : 
		/// </summary>
		[EnumTextValue("ReferenceUponRequest")]
		[ColumnEnum("ReferenceUponRequest", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		ReferenceUponRequest = 89,
		/// <summary>
		/// PreferredLine : 
		/// </summary>
		[EnumTextValue("PreferredLine")]
		[ColumnEnum("PreferredLine", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		PreferredLine = 90,
		/// <summary>
		/// VideoUrl : 
		/// </summary>
		[EnumTextValue("VideoURL")]
		[ColumnEnum("VideoURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		VideoUrl = 91,
		/// <summary>
		/// ProfileDataXml : 
		/// </summary>
		[EnumTextValue("ProfileDataXML")]
		[ColumnEnum("ProfileDataXML", typeof(System.String), System.Data.DbType.String, false, false, true)]
		ProfileDataXml = 92,
		/// <summary>
		/// LastProfileSubmittedDate : 
		/// </summary>
		[EnumTextValue("LastProfileSubmittedDate")]
		[ColumnEnum("LastProfileSubmittedDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastProfileSubmittedDate = 93
	}//End enum

	#endregion MembersColumn Enum

} // end namespace

@using JXTPosterTransform.Website.Models
@using JXTPosterTransform.Library.Common;
@model List<ClientDisplayModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string requestStatus = Request["status"];
}
<div class="row">
    <h1 class="page-header">
        Client Listing</h1>
    <a href="/client/edit" class="btn btn-default pull-right">+ Create New Client Account</a>
    <p>
        Expand using&nbsp;<i class="fa fa-plus fa-large"></i>&nbsp;to view setups for the
        client.</p>
</div>

<div>
    <h4>
        Filter By</h4>
    <form id="filterForm" class="form-inline" method="get" action="/clientsetup">
    <div class="form-group">
        <label>
            Status</label>
        <select class="form-control" name="status" onchange="$('#filterForm').submit();">
            <option value="null">Not Selected</option>
            @foreach (PTCommonEnums.Client.Valid c in ViewBag.StatusList)
            {
                <option value="@c" @(new MvcHtmlString(requestStatus == c.ToString() ? @"selected=""selected""" : string.Empty))>@c</option>
            }
        </select>
    </div>
    </form>
</div>
<table class="table table-striped table-bordered table-hover dataTable no-footer">
    <thead>
        <tr>
            <th>
            </th>
            <th>
                ClientID
            </th>
            <th>
                Name
            </th>
            <th>
                SiteID
            </th>
            <th>
                Status
            </th>
            <th>
                Last Modified
            </th>
            <th>
                Actions
            </th>
            <th>
                Mappings
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (ClientDisplayModel c in Model)
        {
            <tr class="clientRow">
                <td>
                    <a href="javascript:void(0)" id="setupClick@(c.clientID)" onclick="ClientSetupGet(this, @c.clientID)">
                        <i class="fa fa-plus fa-large"></i></a>
                </td>
                <td>@c.clientID
                </td>
                <td>@c.name
                </td>
                <td>@c.siteID
                </td>
                <td>@c.valid.ToString()
                </td>
                <td>@(string.Format("{0:dd-MMM-yyyy}", c.lastModifiedDate))
                </td>
                <td>
                    <a href="/client/edit/@c.clientID">Edit</a> <a href="/clientsetup/edit?clientID=@c.clientID">
                        Create Setup</a>
                </td>
                <td>
                    @if (c.hasClientSetups)
                    {
                        <a href="/mappings/countrylocarea/@c.clientID">CLA</a> <a href="/mappings/professionrole/@c.clientID">
                            PR</a> <a href="/mappings/worktype/@c.clientID">WT</a> @*<a href="/mappings/salarytype/@c.clientID">ST</a> *@
                    }
                    else
                    {
                        <i>At least 1 setup is required</i>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="pagination pull-right">
    <ul>
        @{
            Pager pager = ViewBag.Pager;

            string preparedeURL = Request.Url.AbsolutePath + "?";

            if (Request.QueryString.Count > 0)
            {
                bool hasQuery = false;
                List<string> keyValues = new List<string>();
                foreach (String key in Request.QueryString.AllKeys)
                {
                    if (key.ToLower() != "page")
                    {
                        keyValues.Add(key + "=" + Request.QueryString[key]);
                        hasQuery = true;
                    }
                }

                preparedeURL += String.Join("&", keyValues);

                if (hasQuery)
                {
                    preparedeURL += "&";
                }
            }


            if (pager.HasPreviousPage)
            {
            <li @(new MvcHtmlString(pager.CurrentPageIndex == pager.FirstPageIndex ? @"class='active'" : string.Empty))>
                <a href="@(preparedeURL)page=@(pager.FirstPageIndex.ToString())">&lt;&lt;</a>
            </li>
            <li @(new MvcHtmlString(pager.CurrentPageIndex == pager.PreviousPageIndex ? @"class='active'" : string.Empty))>
                <a href="@(preparedeURL)page=@(pager.PreviousPageIndex.ToString())">&lt;</a>
            </li>
            }

            foreach (int page in ViewBag.Pager)
            {
            <li @(new MvcHtmlString(pager.CurrentPageIndex == page ? @"class='active'" : string.Empty))>
                <a href="@(preparedeURL)page=@(page.ToString())">@page.ToString()</a> </li>
                
            }

            if (pager.HasNextPage)
            {
            <li @(new MvcHtmlString(pager.CurrentPageIndex == pager.NextPageIndex ? @"class='active'" : string.Empty))>
                <a href="@(preparedeURL)page=@(pager.NextPageIndex.ToString())">&gt;</a> </li>
            <li @(new MvcHtmlString(pager.CurrentPageIndex == pager.LastPageIndex ? @"class='active'" : string.Empty))>
                <a href="@(preparedeURL)page=@(pager.LastPageIndex.ToString())">&gt;&gt;</a>
            </li>
            }
        }
    </ul>
</div>
@section Scripts
{
    <script type="text/javascript">

            $(document).ready(function () {
                @if (Request["clientID"] != null)
                {
                    <text>
                        $("#setupClick@(Request["clientID"])").click();
                    </text>
                }
            });

        function ClientSetupGet(caller, clientID) {
            var closestClientRow = $(caller).closest(".clientRow");

            //clean the old display first
            $(".setupsRow").remove();

            var loadingTR = $("<tr class='setupsRow'></tr>");
            $(loadingTR).append("<td></td><td colspan='7'><i class='fa fa-refresh fa-spin fa-3x'></i></td></tr>");

            $(closestClientRow).after(loadingTR);

            $.get("/clientsetup/clientsetupsget?clientID=" + clientID, function (data) {

                $(loadingTR).empty();

                var newTable = $("<table class='table table-striped'></table>");
                $(newTable).append("<thead><tr><th>SetupID</th><th>Name</th><th>Type</th><th>Timeslot</th><th>AdvertiserID</th><th>Actions</th><th>Mappings</th></tr></thead>");

                var newTableBody = $("<tbody></tbody>");
                $.each(data, function (idx, value) {

                    var newTR = $("<tr></tr>");
                    $(newTR).append("<td>" + value.setupID + "</td>");
                    $(newTR).append("<td>" + value.setupName + "</td>");
                    $(newTR).append("<td>" + value.setupTypeText + "</td>");
                    $(newTR).append("<td>" + value.timeslot + "</td>");
                    $(newTR).append("<td>" + value.advertiserID + "</td>");
                    $(newTR).append("<td><a href='/clientsetup/edit/" + value.setupID + "'>Edit</a> <a href='/logs/listing?clientID=" + clientID + "&setupID=" + value.setupID + "'>Logs</a></td>");
                    $(newTR).append("<td><a href='/mappings/jobtemplate/" + clientID + "/" + value.setupID + "'>JT</a> <a href='/mappings/templatelogo/" + clientID + "/" + value.setupID + "'>JTL</a></td>");

                    $(newTableBody).append(newTR);

                });
                $(newTable).append(newTableBody);
                $(loadingTR).empty().append("<td></td>");

                var finalTD = $("<td colspan='7'></td>");
                $(finalTD).append(newTable);

                $(loadingTR).append(finalTD);


            });

        }

    </script>
}

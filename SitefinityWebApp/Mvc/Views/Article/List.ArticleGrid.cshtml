@model Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Models.DynamicContentListViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Libraries.Model;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.RelatedData;
@using JXTNext.Sitefinity.Media.Mvc.Helpers;
<div class="o-articleList o-articleList--grid @Model.CssClass">
    @foreach (var item in Model.Items)
    {
        var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);
        var featureImage = new Image();
        // Get the feature image
        if (item.Fields.Images != null)
        {
            featureImage = item.DataItem.GetRelatedItems<Image>("Images").FirstOrDefault();
        }
        var author = String.Empty;
        if (item.Fields.ArticleAuthor != null)
        {
            author = item.Fields.ArticleAuthor.Identifier;
        }
        <article class="o-articleListItem" @Html.InlineEditingAttributes(Model.ProviderName, Model.ContentType.FullName, (Guid)item.Fields.Id)>
            <a href="@navigateUrl" class="o-articleList__overlayLink"></a>

            @*Start feature image*@
            @if (featureImage != null)
            {
                <div class="o-articleListItem__col">
                    @Html.ImgTag(featureImage, null, "art-grid").WithCssClass("o-articleListItem__featuredImageImg")
                </div>
            }
            @*End feature image*@
            <div class="o-articleListItem__col o-articleListItem__col--content">
                <h3 class="o-articleListItem__title" @Html.InlineEditingFieldAttributes("Title", "ShortText")>
                    @item.Fields.Title
                </h3>

                <div class="o-articleListItem__descr">@item.Fields.Description</div>
                <div class="o-articleListItem__bottom">
                    @*Start category list*@
                    @if (item.Fields.Category != null)
                    {
                        var categories = item.GetHierarchicalTaxons("Category");
                        if (categories.Count > 0)
                        {
                            <ul class="o-articleListItem__bottomCategoriesList">
                                @foreach (var taxon in categories)
                                {
                                    <li class="o-articleListItem__bottomCategoriesListItem">
                                        @* Need to sort out category links *@
                                        @*<a href="#" class="o-categories__item">@taxon.Title.ToString()</a>*@
                                        <span class="o-categories__item">@taxon.Title.ToString()</span>
                                    </li>
                                }
                            </ul>
                        }
                    }
                    @*End category list*@
                    <ul class="o-articleListItem__bottomArticleInfo">
                        <li class="o-articleListItem__bottomArticleInfoItem">
                            <span class="o-item-info__date-text u-show-for-sr">@Html.Resource("Published", "JxtAuthoringResources")</span>
                            <time class="o-item-info__date" datetime="@item.GetDateTime("PublicationDate", "s")">@item.GetDateTime("PublicationDate", "MMMM d, yyyy")</time>
                        </li>
                        @if (!string.IsNullOrWhiteSpace(author))
                        {
                            <li class="o-articleListItem__bottomArticleInfoItem"><span class="o-articleListItem__bottomArticleInfoItemTxt">@Html.Resource("By", "JxtAuthoringResources")</span> <span class="o-articleListItem__bottomArticleInfoItemTxt">@author</span></li>
                        }
                    </ul>
                </div>
            </div>
        </article>
    }
    @if (Model.ShowPager)
    {
        @Html.Action("Index", "ContentPager", new
        {
            currentPage = Model.CurrentPage,
                        totalPagesCount = Model.TotalPagesCount.Value,
                        redirectUrlTemplate = ViewBag.RedirectPageUrlTemplate
        })
    }
</div>
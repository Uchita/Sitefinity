@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel

@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Media.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Media.Mvc.Models.ImageGallery;
@using Telerik.Sitefinity.Modules.Pages;

@Html.StyleSheet(Url.WidgetContent("assets/magnific/magnific-popup.css"), "head", true)
@Html.Script(Url.WidgetContent("assets/magnific/jquery.magnific-popup.min.js"), "bottom", true)
@Html.Script(Url.WidgetContent("Mvc/Scripts/ImageGallery/overlay-gallery.js"), "bottom", true)

<div class="o-imagegallery o-imagegallery--overlay @Model.CssClass">
  <ul class="o-imagegallery__imagelist" aria-label="@Html.Resource("ImageGallery")" role="list">
    @{int itemIndex = 0;}
    @foreach (var item in Model.Items)
    {
        var thumbnailViewModel = (ThumbnailViewModel)item;
        <li class="o-imagegallery__imagelistitem" role="listitem">
            <a class="o-imagegallery__imagelistlink"
               href="@(thumbnailViewModel.MediaUrl)"
               title="@item.Fields.Title"
               aria-label="@string.Format(Html.Resource("OpenInModalDialog"), item.Fields.Title)">
                <img class="o-imagegallery__imagelistimg" src="@(thumbnailViewModel.ThumbnailUrl)"
                     data-detail-url="@HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix, itemIndex)"
                     alt="@item.Fields.AlternativeText"
                     @Html.GetWidthAttributeIfExists(thumbnailViewModel.Width)
                     @Html.GetHeightAttributeIfExists(thumbnailViewModel.Height) @Html.GetDetailsImageWidthAttributeIfExists(thumbnailViewModel.DetailsImageWidth) />
            </a>
        </li>
        itemIndex++;
    }
  </ul>
</div>

@if (Model.ShowPager)
{
    @Html.Action("Index", "ContentPager", new
       {
           currentPage = Model.CurrentPage,
           totalPagesCount = Model.TotalPagesCount.Value,
           redirectUrlTemplate = ViewBag.RedirectPageUrlTemplate
       })
}

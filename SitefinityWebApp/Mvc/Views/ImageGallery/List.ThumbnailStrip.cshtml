@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentListViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using System.Web.Script.Serialization;
@using Telerik.Sitefinity.Frontend.Media.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Media.Mvc.Models.ImageGallery;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Services;
@using System.Linq;

@*Add scripts and stylesheets*@
@Html.Script(Url.WidgetContent("Mvc/Scripts/ImageGallery/thumbnail-strip.js"), "bottom", true)

@{
    bool hasItems = Model.Items.Count() > 0;
    bool isBackendDesignMode = SystemManager.IsDesignMode && !SystemManager.IsPreviewMode;
    dynamic firstItem = null;

    if (hasItems && isBackendDesignMode)
    {
        firstItem = Model.Items.FirstOrDefault();
    }

    ThumbnailViewModel thumbnailViewModel = (ThumbnailViewModel)firstItem;
}

<div class="o-imagegallery o-imagegallery--strip" aria-label="@Html.Resource("ImageGallery")">

    @if (hasItems)
    {
        if (isBackendDesignMode)
        {
            <h2 class="o-imagegallery__hdg">@firstItem.DataItem.Title</h2>

            <p class="o-imagegallery__desc">@firstItem.DataItem.Description</p>

            <div><span class="o-imagegallery__count">1</span> of @Model.Items.Count()</div>

            <p class="o-imagegallery__selecteditem">
                <a href="javascript:void(0)" class='o-imagegallery-prev' title="@Html.Resource("GoToPreviousImage")"><span class="carousel-control-prev-icon" aria-hidden="true"></span></a>
                <a href="javascript:void(0)" class='o-imagegallery-next' title="@Html.Resource("GoToNextImage")"><span class="carousel-control-next-icon" aria-hidden="true"></span></a>
                <img class="o-imagegallery__selecteditemimg" src="@(thumbnailViewModel.MediaUrl)" title="@firstItem.DataItem.Title" alt="@firstItem.DataItem.AlternativeText"
                     @Html.GetWidthAttributeIfExists(thumbnailViewModel.Width)
                     @Html.GetHeightAttributeIfExists(thumbnailViewModel.Height) />

            </p>
        }
        else
        {
            <h2 class="o-imagegallery__hdg" aria-live="polite" aria-atomic="true"></h2>

            <p class="o-imagegallery__desc" aria-live="polite" aria-atomic="true"></p>

            <div aria-live="polite" aria-atomic="true"><span class="o-imagegallery__count"></span> of @Model.Items.Count()</div>

            <div class="o-imagegallery__selecteditem">
                <nav role="navigation" aria-label="@Html.Resource("PreviousNextImage")" class="o-imagegallery__navigation">
                    <a href="javascript:void(0)" class="o-imagegallery__navigationprev" title="@Html.Resource("GoToPreviousImage")"><span class="carousel-control-prev-icon" aria-hidden="true"></span></a>
                    <a href="javascript:void(0)" class="o-imagegallery__navigationnext" title="@Html.Resource("GoToNextImage")"><span class="carousel-control-next-icon" aria-hidden="true"></span></a>
                </nav>
                <img />
            </div>
        }
    }



    <ul class="o-imagegallery__imagelist" role="list">
        <li class="o-imagegallery__imagelistitem" role="listitem">
            @{int itemIndex = 0;}
            @foreach (var item in Model.Items)
            {
                var itemViewModel = (ThumbnailViewModel)item;

                <a class="o-imagegallery__imagelistlink" href="javascript:void(0)" title="@item.Fields.Title" data-item="@Html.GetSerializedImage(item)" data-detail-url="@HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix, itemIndex)">
                    <img class="o-imagegallery__imagelistimg" src="@(itemViewModel.ThumbnailUrl)" alt="@item.Fields.AlternativeText"
                         @Html.GetWidthAttributeIfExists(itemViewModel.Width)
                         @Html.GetHeightAttributeIfExists(itemViewModel.Height) />
                </a>
                itemIndex++;
            }
        </li>
    </ul>
</div>
@if (Model.ShowPager)
{
    @Html.Action("Index", "ContentPager", new
       {
           currentPage = Model.CurrentPage,
           totalPagesCount = Model.TotalPagesCount.Value,
           redirectUrlTemplate = ViewBag.RedirectPageUrlTemplate
       })
}

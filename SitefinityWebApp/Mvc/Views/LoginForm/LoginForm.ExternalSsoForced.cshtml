@model Telerik.Sitefinity.Frontend.Identity.Mvc.Models.LoginForm.LoginFormViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Security;
@using JXTNext.Sitefinity.Utilities;

@* 
    This template is used when you want to force the use of an External SSO such as Azure AD.  
*@

@Html.Script(ScriptRef.JQuery, "top", false)

@if (SecurityManager.GetCurrentUserId() == Guid.Empty)
{
    if (Model.ExternalProviders.Count() != 1)
    {
        <div class="alert alert-danger" role="alert">
            Either none or more than 1 external security providers are configured. Please consult the website administrator.
        </div>
    }
    else
    {
        string uniqueId = StringHelper.GenerateShortUniqueId();
        string providerName = Model.ExternalProviders.First().Key;
        @Html.ActionLink(Html.Resource("LoginFormLogInButton"), "LoginExternalProvider", new { model = providerName }, new { @class = "btn btn-primary btn--external-sso", id = uniqueId })
        @* We don't want this page in session history so use window.location.replace() - this can be changed to window.location.href if desired *@
        <script>
            var url = $('@String.Format("#{0}", @uniqueId)').attr('href');
            window.location.replace(url);
        </script>
    }
}
else
{
    <div class="o-login-form__logged-in-text" role="alert">
        <p>@Html.Resource("AlreadyLoggedIn")</p>
        <hr>
        <a class="btn btn-primary" href="@Model.RedirectUrlAfterLogin" role="button">@Html.Resource("ChangePasswordDefaultContinueButtonText", "ErrorMessages")</a>
    </div>
}
@model Telerik.Sitefinity.Frontend.Search.Mvc.Models.ISearchBoxModel

@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;

@{
    var searchTextBoxId = Guid.NewGuid();
    var searchButtonId = Guid.NewGuid();
}

<div class="@(!String.IsNullOrEmpty(Model.CssClass) ? Model.CssClass : "") form-inline">
    <div class="o-search-box @(!SystemManager.IsDesignMode ? "js-search-box" : "")" role="search">
        <div class="search-box-wrapper">
            <input type="search"
                   title="@Html.Resource("SearchInput")"
                   placeholder="@Model.BackgroundHint"
                   id="@searchTextBoxId"
                   class="search-box-input"
                   value="@(ViewBag.SearchQuery)"
                   aria-autocomplete="both"
                   aria-describedby="@Html.UniqueId("SearchInfo")" />
        </div>

        <div class="search-box-button-trigger">
            <em class="fas fa-search"></em>
        </div>

        <span id="@Html.UniqueId("SearchInfo")" aria-hidden="true" hidden>
            When autocomplete results are available use up and down arrows to review and enter to select.
        </span>
    </div>

    <input type="hidden" data-sf-role="resultsUrl" value="@(Model.ResultsUrl)" />
    <input type="hidden" data-sf-role="indexCatalogue" value="@(Model.IndexCatalogue)" />
    <input type="hidden" data-sf-role="wordsMode" value="@(Model.WordsMode.ToString())" />
    <input type="hidden" data-sf-role="disableSuggestions" value="@(Model.DisableSuggestions ? ("true") : ("false"))" />
    <input type="hidden" data-sf-role="minSuggestionLength" value="@(Model.MinSuggestionLength)" />
    <input type="hidden" data-sf-role="suggestionFields" value="@(Model.SuggestionFields)" />
    <input type="hidden" data-sf-role="language" value="@(Model.Language)" />
    <input type="hidden" data-sf-role="suggestionsRoute" value="@(Model.SuggestionsRoute)" />
    <input type="hidden" data-sf-role="searchTextBoxId" value="@("#" + searchTextBoxId.ToString())" />
    <input type="hidden" data-sf-role="searchButtonId" value="@("#" + searchButtonId.ToString())" />
</div>

@* The inline editing functionality is loading jQuery too. *@

@Html.Script(ScriptRef.JQueryUI, "head", true)

@Html.Script(Url.WidgetContent("Mvc/Scripts/SearchBox/search-box.js"), "bottom", true)
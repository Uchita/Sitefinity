@model dynamic
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers

<div>
    Your search resulted in: <span style="color: mediumvioletred;font-weight: bold;">@ViewBag.TotalCount</span> position(s)
</div>

<div>
    <select id="sortOrder" class="form-control">
        <option selected="selected" value="">@Html.Resource("SortByRecent", "JobSearchResultsResources")</option>
        <option value="Old">@Html.Resource("SortByOldest", "JobSearchResultsResources")</option>
        <option value="AZ">@Html.Resource("SortByAlphaAZ", "JobSearchResultsResources")</option>
        <option value="ZA">@Html.Resource("SortByAlphaZA", "JobSearchResultsResources")</option>
        <option value="SalaryHighToLow">@Html.Resource("SortBySalHighToLow", "JobSearchResultsResources")</option>
        <option value="SalaryLowToHigh">@Html.Resource("SortBySalLowToHigh", "JobSearchResultsResources")</option>
    </select>
</div>

<div>
    <div id="listView"></div>
    <div id="pager" class="k-pager-wrap k-widget k-floatwrap" data-role="]">
        <ul class="k-pager-numbers k-reset"></ul>
    </div>
</div>

<script type="text/x-kendo-template" id="template">
    <div>
        <a href="@ViewBag.JobDetailsPageUrl?jobId=#:JobID#">#:Title#</a>
        <p>#:Description#</p>
    </div>
</script>


<script type="text/javascript">

     @{
          var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
          var json = serializer.Serialize(Model);
      }

    var model = @Html.Raw(json);
    var isDesignMode = @Html.Raw(Json.Encode(@SystemManager.IsDesignMode));

    if (model != null && model != "undefined" && !isDesignMode) {
        var pageSize = @ViewBag.PageSize;
        var totalCount = @ViewBag.TotalCount;
        var PageNumber = 0;
        var dataSource;

        $("#sortOrder").val('@ViewBag.SortOrder');
        bindJobs(PageNumber);
        bindJobsPages();

        $("#sortOrder").change(function () {
            bindJobs(PageNumber);
        });

    function bindJobsPages()
    {
        highestPage = totalCount / pageSize;
        highestPage = Math.ceil(totalCount / pageSize);
      
        if (highestPage > 1) {
            var lis = '';
            for (var i = 1; i <= highestPage; i++) {
                lis += '<li><a tabindex="-1" href="#" onclick="pageChange(this);" class="k-link" data-page="' + i + '">' + i + '</a></li>';
            }
            $('#pager ul').html(lis);
        }
    };

        function bindJobs(PageNumber) {

           var parm = { jobRequest: @Html.Raw(Json.Encode(@ViewBag.Request)), PageNumber: PageNumber };
            var urlPath = $(location).attr('pathname') + "/GetSearchResults";
            
            $.ajax({
                type: 'POST',
                cache: false,
                url: urlPath,
                data: parm,
                dataType: 'Json',
                success: function (response) {
                    var jobs = JSON.parse(response);
                     dataSource = new kendo.data.DataSource({
                        data: jobs,
                        total: totalCount,
                    });

                    var sorttext = getSortOrder();
                    var token = sorttext.split(':');

                    dataSource.sort({ field: token[0], dir: token[1] });

                    $("#listView").kendoListView({
                        dataSource: dataSource,
                        template: kendo.template($("#template").html()),

                    });
                },
                error: function (response) {
                    console.log('error response: '+response);
                }
            });
        };

        function pageChange(pageObj) {
           var currPageNumber = $(pageObj).attr('data-page') - 1;
            if (currPageNumber != PageNumber) {
                PageNumber = currPageNumber;
                bindJobs(PageNumber);
            }
        };

        function getSortOrder() {
            var sortValue = $("#sortOrder").val();
            switch (sortValue) {
                case 'Old':
                    return 'DatePosted:desc';
                    break;
                case 'AZ':
                    return 'Title:asc';
                    break;
                case 'ZA':
                    return 'Title:desc';
                    break;
                case 'SalaryHighToLow':
                    return 'SalaryLowerBand:desc';
                    break;
                case 'SalaryLowToHigh':
                    return 'SalaryLowerBand:asc';
                    break;
                default:
                    return 'DatePosted:asc';
                    break;
            }
        };
    }

</script>

<style>
    #listView {
        padding: 10px 5px;
        margin-bottom: -1px;
        min-height: 510px;
        /* Avoid cutout if font or line is bigger */
        font: inherit;
    }

    .product {
        float: left;
        position: relative;
        width: 111px;
        height: 170px;
        margin: 0 5px;
        padding: 0;
    }

        .product img {
            width: 110px;
            height: 110px;
        }

        .product h3 {
            margin: 0;
            padding: 3px 5px 0 0;
            max-width: 96px;
            overflow: hidden;
            line-height: 1.1em;
            font-size: .9em;
            font-weight: normal;
            text-transform: uppercase;
            color: #999;
        }

        .product p {
            visibility: hidden;
        }

        .product:hover p {
            visibility: visible;
            position: absolute;
            width: 110px;
            height: 110px;
            top: 0;
            margin: 0;
            padding: 0;
            line-height: 110px;
            vertical-align: middle;
            text-align: center;
            color: #fff;
            background-color: rgba(0,0,0,0.75);
            transition: background .2s linear, color .2s linear;
            -moz-transition: background .2s linear, color .2s linear;
            -webkit-transition: background .2s linear, color .2s linear;
            -o-transition: background .2s linear, color .2s linear;
        }

    .k-listview:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
</style>
﻿@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel
@using System.Collections;
@using System.Linq;
@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Localization;
@using Telerik.Sitefinity.Model;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Pages.Model;
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Security.Model;
@using Telerik.Sitefinity.Taxonomies;
@using Telerik.Sitefinity.Taxonomies.Model;
@using Telerik.OpenAccess;
@using Telerik.Sitefinity.Web;
@using Telerik.Sitefinity.DynamicModules;
@using Telerik.Sitefinity.Utilities.TypeConverters;
@using Telerik.Sitefinity.GenericContent.Model;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using SitefinityWebApp.Helpers;
@using Telerik.Sitefinity.DynamicModules.Model;
@using Telerik.Sitefinity.Modules.Libraries;
@using Telerik.Sitefinity.RelatedData;
@using Telerik.Sitefinity.Libraries.Model;
@*Common JXT build functions*@
@using JXTNext.Sitefinity.Common.Helpers;
@{
    List<string> filterValues = new List<string>();
    var articleIds = Model.Item.Fields.articles;
    var authorName = "Hudson";
    foreach (var taxonItem in articleIds)
    {
        Guid articleID = new Guid(taxonItem.ToString());
        var taxonManager = TaxonomyManager.GetManager();
        var taxon = taxonManager.GetTaxa<HierarchicalTaxon>().Where(t => t.Id == articleID).ToList().FirstOrDefault();
        filterValues.Add(taxon.Title);
    }
}
<div class="col blog-detail-col">

    <h3 class="posted-by">
        By
        @if (!string.IsNullOrEmpty(Model.Item.Fields.AuthorName))
        {
            authorName = Model.Item.Fields.AuthorName;
        }
        @authorName
    </h3>

    <p class="posted-date">
        @Model.Item.GetDateTime("PublicationDate", "MMM d, yyyy")
        @*@Html.CommentsCount(string.Empty, @Model.Item.DataItem)*@
    </p>

    <h2 class="blog-title">@Model.Item.Fields.Title</h2>

    <div @Html.InlineEditingFieldAttributes("Content", "LongText")><p>@Html.HtmlSanitize((string)Model.Item.Fields.Content)</p></div>



    @{var imageurl = ""; }
    @foreach (var relatedItem in Model.Item.Fields.HeaderImage)
    {
        imageurl = (string)relatedItem.Fields.ItemDefaultUrl;
    }

    <div class="row">
        <div class="col-12 mb-4">
            <div class="cta-bg blogimg">
                <img src="@imageurl" />
            </div>
        </div>
    </div>

    @{
        if (Model.EnableSocialSharing)
        {
            var item = Model.Item.DataItem as Telerik.Sitefinity.Model.IHasTitle;
            @Html.SocialShareOptions(item);
        }
    }

    <div @Html.InlineEditingFieldAttributes("Content", "LongText")>@Html.HtmlSanitize((string)Model.Item.Fields.Content)</div>

    @Html.CommentsList(@Model.Item.DataItem)
</div>
<style>

    body .parallax-mirror .parallax-slider {
        top: -28%;
    }
</style>
@model Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Models.DynamicContentListViewModel

@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.RelatedData
@using System;
@using Newtonsoft.Json;
@using Telerik.Sitefinity.DynamicModules;
@using Telerik.Sitefinity.DynamicModules.Model;

@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Security.Model;
@using Telerik.Sitefinity.Taxonomies;
@using Telerik.Sitefinity.Taxonomies.Model;
@using Telerik.Sitefinity.Model;
@using Telerik.OpenAccess;
@using Telerik.Sitefinity.Web;

@*Needed for custom thumbnail*@
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Modules.Libraries;


<div class="@Model.CssClass">
    <ul class="list-unstyled list-featured-articles">
        @foreach (var item in Model.Items)
        {
            var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);

            <li>
                <div class="featured-article">

                    @if (item.Fields.articles != null)
                    {
                        List<string> filterValues = new List<string>();
                        var articleIds = item.Fields.articles;
                        foreach (var taxonItem in articleIds)
                        {
                            Guid articleID = new Guid(taxonItem.ToString());
                            var taxonManager = TaxonomyManager.GetManager();
                            var taxon = taxonManager.GetTaxa<HierarchicalTaxon>().Where(t => t.Id == articleID).ToList().FirstOrDefault();
                            filterValues.Add(taxon.Title);
                        }
                        <div class="text-muted">
                            @(string.Join(", ", filterValues))
                        </div>
                    }

                    <h3>
                        <a href="@navigateUrl">

                            @Html.HtmlSanitize((string)item.Fields.Title)
                        </a>
                    </h3>
                    <div>@Html.HtmlSanitize((string)item.Fields.Summary)</div>

                    <a class="btn btn-more" href="@navigateUrl"></a>
                </div>

                @if (item.Fields.HeaderImage != null)
                {
                    <div class="featured-article-image"><img alt="@item.Fields.HeaderImage.Fields.Title" src="@MediaContentExtensions.ResolveThumbnailUrl(item.Fields.HeaderImage.DataItem, "thumbartic")" /></div>
                }

            </li>

        }
    </ul>

</div>
@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel

@using System.Collections;
@using System.Linq;
@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Libraries.Model;
@using Telerik.Sitefinity.Localization;
@using Telerik.Sitefinity.Model;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Pages.Model;
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Web;
@using HeyRed.MarkdownSharp;

@{
    var node = SiteMapBase.GetActualCurrentNode();
    var currentUrl = node.Url;

    Markdown mark = new Markdown();

    string summary = mark.Transform(Model.Item.Fields.Summary);
}
<div class="grid-x grid-padding-x">
    <div class="cell medium-8">
        <nav aria-label="You are here:" role="navigation">
            <ul class="breadcrumbs ">
                <li><a href="/">Home</a></li>
                <li><a href="/jobs">Jobs</a></li>
                <li>
                    <span class="show-for-sr">Current: </span> @Model.Item.Fields.Title
                </li>
            </ul>
        </nav>
    </div>
    <div class="cell medium-4"><a href="#" class="button secondary expanded">Back to results</a></div>
</div>
<div class="pos_detail grid-x grid-padding-x @Model.CssClass" @Html.InlineEditingAttributes(Model.ProviderName, Model.ContentType.FullName, (Guid)Model.Item.Fields.Id)>
    <div class="cell medium-8">
        <article class="pos_detail">
            <header>
                <h1 @Html.InlineEditingFieldAttributes("Title", "ShortText")>
                    @Model.Item.Fields.Title
                </h1>
            </header>
            <section class="pos_detail-info">
                <dl>
                    <dt>Location:</dt>
                    <dd>
                        @if (Model.Item.Fields.locations != null)
                        {
                            if (Model.Item.GetHierarchicalTaxon("locations") != null)
                            {
                                var locTaxon = @Model.Item.GetHierarchicalTaxon("locations");

                                <span>@locTaxon.Title</span>
                            }
                        }
                    </dd>
                    <dt>Work type:</dt>
                    <dd>
                        @if (Model.Item.Fields.worktypes != null)
                        {
                            <span @Html.InlineEditingFieldAttributes("worktypes", "FlatTaxon")>
                                @if (Model.Item.GetFlatTaxon("worktypes") != null)
                {
                                    @Model.Item.GetFlatTaxon("worktypes").Title.ToString();
                }
                            </span>
                        }
                    </dd>
                    <dt>Salary range:</dt>
                    <dd>
                        @if (Model.Item.Fields.SalaryLow != null)
                        {
                            <span>@Model.Item.Fields.SalaryLow</span>
                        } to
                        @if (Model.Item.Fields.SalaryHigh != null)
                        {
                            <span>@Model.Item.Fields.SalaryHigh</span>
                        }
                    </dd>
                    @Html.Raw(summary)
                </dl>
            </section>
            <section class="pos_detail-desc">
                @*Start Description field*@
                <div @Html.InlineEditingFieldAttributes("Description", "LongText")>@Html.Raw(Model.Item.Fields.Description)</div>
                @*End Description field*@
            </section>
            @*Start Reference field*@
            <div>
                <strong> Reference :</strong>

                <span @Html.InlineEditingFieldAttributes("Reference", "ShortText")>@Model.Item.Fields.Reference</span>
            </div>
            @*End Reference field*@
        </article>
    </div>
    <div class="cell medium-4">
        <a href="#" class="button large expanded">Apply now</a>
        <div>
            <strong> Address :</strong>

            <div>
                @if (!string.IsNullOrEmpty(Model.Item.Fields.Address.CountryCode))
            {
                    <address>
                        @Model.Item.GetAddressString("Address", "#=Street# #=City# #=State# #=Country#")
                    </address>
                }
            </div>
            <div>
                @if (Model.Item.Fields.Address.Latitude != null || Model.Item.Fields.Address.Longitude != null)
            {
                    <div class="addressMapWrp">
                        <input class="addressValueInput" type="hidden" value='@Model.Item.SerializeToJson("Address")' />
                        <div class="mapContainer" style="width:100%; height:200px"></div>
                    </div>
                }
            </div>
            @{
                if (Model.EnableSocialSharing)
                {
                    var item = Model.Item.DataItem as Telerik.Sitefinity.Model.IHasTitle;
                    @Html.SocialShareOptions(item);
                }
            }
        </div>

        @if (FieldExtensions.IsApiKeyValid())
        {
            @Html.Script(ScriptRef.JQuery, "top", false)
            @Html.Script("http://maps.googleapis.com/maps/api/js?key=" + FieldExtensions.GetApiKey() + "&sensor=false", "top", false)
            @Html.Script(Url.EmbeddedResource("Telerik.Sitefinity.Resources.Reference", "Telerik.Sitefinity.Resources.Scripts.jquery.ui.map.js"), "top", false)
            @Html.Script(Url.WidgetContent("WidgetTemplates/Fields/Scripts/address-field.js", "Telerik.Sitefinity.Frontend.DynamicContent"), "bottom", false)
        }
    </div>
    @*
        @Model.Item.GetDateTime("PublicationDate", "MMM d, yyyy, HH:mm tt")
        @Html.CommentsCount("", @Model.Item.DataItem)
        <div @Html.InlineEditingFieldAttributes("SeoDescription", "LongText")>@Html.Raw(Model.Item.Fields.SeoDescription)</div>
        <div @Html.InlineEditingFieldAttributes("SeoKeywords", "LongText")>@Html.Raw(Model.Item.Fields.SeoKeywords)</div>
    *@

</div>
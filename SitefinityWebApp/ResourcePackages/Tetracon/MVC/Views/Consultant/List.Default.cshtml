@model Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Models.DynamicContentListViewModel

@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Modules.Libraries;


        @foreach (var item in Model.Items)
        {
            var navigateUrl = HyperLinkHelpers.GetDetailPageUrl(item, ViewBag.DetailsPageId, ViewBag.OpenInSamePage, Model.UrlKeyPrefix);

            var OfficeLocationName = "";
            var OfficeLocationUrl = "";

            var imageThumbUrl = "";

            if (item.Fields.Office != null)
            {
                if (item.Fields.Office.GetType().ToString() == "Telerik.Sitefinity.Frontend.Mvc.Models.ItemViewModel")
                {
                    OfficeLocationName = Html.HtmlSanitize((string)item.Fields.Office.Fields.Name).ToString();
                    OfficeLocationUrl = item.Fields.Office.Fields.UrlName.ToString();
                }
                else
                {
                    List<string> OfficeLocationNameList = new List<string>();
                    List<string> OfficeLocationUrlList = new List<string>();

                    foreach (var office in item.Fields.Office)
                    {
                        if (!OfficeLocationNameList.Contains((string)office.Fields.Name))
                        {
                            OfficeLocationNameList.Add((string)office.Fields.Name);
                            OfficeLocationUrlList.Add(office.Fields.UrlName.ToString());
                        }
                    }

                    OfficeLocationName = string.Join(", ", OfficeLocationNameList.ToArray());
                    OfficeLocationUrl = string.Join(",", OfficeLocationUrlList.ToArray());
                }
            }

			<div class="contact-consultant row">
				
				@if (item.Fields.Pic != null)
                {
                    imageThumbUrl = MediaContentExtensions.ResolveThumbnailUrl(item.Fields.Pic.DataItem, "thumb350");
                }
                else
                {
                    imageThumbUrl = "/ResourcePackages/Hudson/assets/dist/images/placeholder-image.jpg";
                }

                <div class="col-md-6"><a class="contact-consultant-image" href="@navigateUrl">
                    <img src="@imageThumbUrl" alt="@item.Fields.ConsultantName" />
                    <div class="contact-image-rollover"><div class="display-table"><div class="display-cell">View Profile</div></div></div></a>
				</div>

                <div class="col-md-6">
                    <div class="contact-consultant-info">
                    <div class="color-highlight contact-consultant-name">@Html.HtmlSanitize((string)item.Fields.ConsultantName)</div>
                    @if (item.Fields.Office != null)
                    {
                    <div class="contact-consultant-position">@Html.HtmlSanitize((string)item.Fields.Position), @OfficeLocationName</div>
                    }
                    else
                    {
                        <div class="contact-consultant-position">@Html.HtmlSanitize((string)item.Fields.Position)</div>
                    }

                    @if (!string.IsNullOrWhiteSpace(@item.Fields.Email)
                    && !string.IsNullOrWhiteSpace(@item.Fields.PhoneNumber)
                    && !string.IsNullOrWhiteSpace(@item.Fields.LinkedInProfileUrl))
                    {
                        <div class="contact-consultant-contacts">
                            @if (!string.IsNullOrWhiteSpace(@item.Fields.Email))
                            {
                                <em class="far fa-envelope"></em>@item.Fields.Email<br />
                            }

                            @if (!string.IsNullOrWhiteSpace(@item.Fields.PhoneNumber))
                            {
                                <em class="fas fa-phone"></em> @item.Fields.PhoneNumber<br />
                            }

                            @if (!string.IsNullOrWhiteSpace(@item.Fields.LinkedInProfileUrl))
                            {
                                <a href="@item.Fields.LinkedInProfileUrl"><em class="fab fa-linkedin-in"></em></a>@item.Fields.LinkedInProfileName
                            }
                        </div>
                    }
                    <a class="btn btn-primary" href="@navigateUrl">Contact me</a>
                </div>
				</div>
				
			</div>
        }
   





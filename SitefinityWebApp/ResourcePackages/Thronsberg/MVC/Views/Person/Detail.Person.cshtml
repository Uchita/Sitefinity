@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel

@using System.Linq;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Libraries.Model;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.RelatedData;
@using Telerik.Sitefinity.Configuration;
@using Telerik.Sitefinity.DynamicModules.Model;
@using JXTNext.Sitefinity.Media.Mvc.Helpers;
@{
    var resolveAsAbsoluteUrl = Config.Get<SystemConfig>().SiteUrlSettings.GenerateAbsoluteUrls;

    Model.CssClass = string.Format("c-person--{0} {1}", Model.Item.Fields.UrlName, Model.CssClass).Trim();
    var address = string.Empty;

    var profileImage = new Image();
    if (Model.Item.Fields.Images != null)
    {
        var images = Model.Item.DataItem.GetRelatedItems<Image>("Images").Take(2);

        // take the second image if available if not the first.
        profileImage = images.Count() > 1 ? images.Skip(1).FirstOrDefault() : images.FirstOrDefault();
    }
    var locationItems = Model.Item.DataItem.GetRelatedItems<DynamicContent>("Locations");
}
<article class="c-person @Model.CssClass" @Html.InlineEditingAttributes(Model.ProviderName, Model.ContentType.FullName, (Guid)Model.Item.Fields.Id)>
    <div class="cell medium-8 small-order-2">
        <header class="c-person__hdr">
            <h1 class="c-person__name" @Html.InlineEditingFieldAttributes("Name", "ShortText")>
                @Model.Item.Fields.Name
            </h1>
            <h2 class="c-person__position" @Html.InlineEditingFieldAttributes("Position", "ShortText")>
                @Model.Item.Fields.Position
            </h2>
        </header>
        @*If in inline editing mode display descrption field so it can be edited. If description field is used within the detail view remove the if below. *@
        @if (SystemManager.IsInlineEditingMode)
        {
            <div class="c-person__desc" @Html.InlineEditingFieldAttributes("Description", "LongText")>@Html.HtmlSanitize((string)Model.Item.Fields.Description)</div>
        }
        @*End Description field*@

        @*Start Content field*@
        <section class="c-person__profile">
            <div class="c-person__content" @Html.InlineEditingFieldAttributes("Content", "LongText")>
                @Html.HtmlSanitize((string)Model.Item.Fields.Content)
            </div>
            <ul class="o-contact-info">
                @if (Model.Item.Fields.EmailAddress != null && !string.IsNullOrWhiteSpace(Model.Item.Fields.EmailAddress))
                {
                    <li class="o-contact-info__item">
                        <span class="o-contact-info__txt u-show-for-sr">@Html.Resource("Email", "JxtAuthoringResources"):</span>
                        <a class="o-contact-info__lnk o-contact-info__lnk--email" target="_blank" href="@string.Format("mailto:{0}", Model.Item.Fields.EmailAddress)" @Html.InlineEditingFieldAttributes("EmailAddress", "ShortText")>@Model.Item.Fields.EmailAddress</a>
                    </li>
                }
                @if (Model.Item.Fields.LinkedInProfileName != null && !string.IsNullOrWhiteSpace(Model.Item.Fields.LinkedInProfileName))
                {
                    <li class="o-contact-info__item">
                        <span class="o-contact-info__txt u-show-for-sr">@Html.Resource("LinkedIn", "JxtAuthoringResources"):</span>
                        <a class="o-contact-info__lnk o-contact-info__lnk--linkedin" target="_blank" href="@Model.Item.Fields.LinkedInProfileName" @Html.InlineEditingFieldAttributes("LinkedInProfileName", "ShortText")>
                            <img src="@Url.Content("~/ResourcePackages/Thronsberg/dist/assets/img/linkedin.svg")" alt="LinkedIn" class="o-icon-img" title="@Model.Item.Fields.Name on LinkedIn" />
                        </a>
                    </li>
                }
            </ul>
        </section>
        @*End Content field*@
    </div>
    @*Start primary image - remember to create a thumbnail profile*@
    @if (profileImage != null)
    {
        <div class="c-person__profile-img-wrp cell medium-4 small-order-1 medium-order-2">
            @Html.ImgTag(profileImage, (string)Model.Item.Fields.Name, "pers-det").WithCssClass("c-person__profile-img")
        </div>
    }
    @*End Images field*@

    <section class="c-person__comments">
        @Html.CommentsList(@Model.Item.DataItem)
    </section>
</article>
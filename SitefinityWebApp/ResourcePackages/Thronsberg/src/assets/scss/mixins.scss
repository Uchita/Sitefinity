@mixin headings($from: 1, $to: 6){
    @for $i from $from through $to{
      h#{$i}{
        @content
      }
    }
}

@mixin headings-all(){
  h1, h2, h3, h4, h5, h6,
  .h1, .h2, .h3, .h4, .h5, .h6 {
      @content
  }
  // @include headings-sizes-ms();
}

@mixin headings-sizes-ms() {
  h1, .h1 {font-size: ms(4)}
  h2, .h2 {font-size: ms(3)}
  h3, .h3 {font-size: ms(2)}
  h4, .h4 {font-size: ms(1)}
  h5, .h5 {font-size: ms(0)}
  h6, .h6 {font-size: ms(-1)}
}

// Hides text in an element so you can see the background.
//
// The direction indicates how the text should be moved out of view.
//
// See `$hide-text-direction` for more information and to set this globally
// for your application.
@mixin hide-text($direction: $hide-text-direction) {
  @if $direction == left {
    $approximate-em-value: 12px / 1em;
    $wider-than-any-screen: -9999em;
    text-indent: $wider-than-any-screen * $approximate-em-value;
    overflow: hidden;
    text-align: left;
  } @else {
    // slightly wider than the box prevents issues with inline-block elements
    text-indent: 110%;
    white-space: nowrap;
    overflow: hidden;
  }
}

// Hides text in an element by squishing the text into oblivion.
// Use this if you need to hide text contained in an inline element
// but still have it read by a screen reader.
@mixin squish-text {
  font: 0/0 serif;
  text-shadow: none;
  color: transparent;
}

@mixin vertically-center-text {
    @include flex;
    @include flex-direction(column);
    @include flex-align(center,null);
}
@model SitefinityWebApp.Mvc.Models.MultiCard.MultiCardViewModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;

@Html.StyleSheet(Url.WidgetContent("assets/css/bootstrap.min.css"), "head",false)
@Html.StyleSheet(Url.WidgetContent("assets/css/bootstrap-theme.min.css"), "head", false)
@Html.StyleSheet(Url.WidgetContent("assets/css/mc-styles.css"), "head", false)

<div class="mc-icons-wrapper multicard container-fluid @Model.CssClass" style="background-color: @Model.BackgroundColor!important">

    @if (!string.IsNullOrEmpty(Model.GroupHeader))
    {
        <div class="row content-padding">
            <div class="col-md-12">
                <h2 class="heading">@Model.GroupHeader</h2>
            </div>
        </div>
    }

    <div class="row content-padding">
        @for (int i = 0; i < Model.Cards.Count; i++)
        {
            string itemClass = i == 0 ? "col-md-2 col-md-offset-1" : "col-md-2";

        <div class="@itemClass">

            @if (!string.IsNullOrEmpty(@Model.Cards[i].SelectedSizeUrl))
            {
                if (i == (Model.Cards.Count - 1))
                {
                    <div class="last-icon-height">
                        <img class="icons" src="@Model.Cards[i].SelectedSizeUrl" title="@Model.Cards[i].ImageTitle" alt="@Model.Cards[i].ImageAlternativeText">
                    </div>
                }
                else
                {
                    <div class="icon-border">
                        <img class="icons" src="@Model.Cards[i].SelectedSizeUrl" title="@Model.Cards[i].ImageTitle" alt="@Model.Cards[i].ImageAlternativeText">
                    </div>
                }

            }

            <p class="content">@Model.Cards[i].ActionName</p>

        </div>
        }
    </div>

    @if (!string.IsNullOrEmpty(Model.GroupActionName) && !string.IsNullOrEmpty(Model.GroupActionUrl))
    {
        <div class="row content-padding">
            <div class="col-md-4 col-md-offset-4">
                <a class="btn btn-lg action-btn" href="@Html.UrlSanitize(Model.GroupActionUrl)" role="button">
                    <span class="action-text">@Model.GroupActionName</span>
                </a>
            </div>
        </div>
    }
</div>
